#include "il2cpp-config.h"

#ifndef _MSC_VER
# include <alloca.h>
#else
# include <malloc.h>
#endif


#include <cstring>
#include <string.h>
#include <stdio.h>
#include <cmath>
#include <limits>
#include <assert.h>
#include <stdint.h>

#include "codegen/il2cpp-codegen.h"
#include "il2cpp-object-internals.h"

template <typename T1, typename T2>
struct VirtActionInvoker2
{
	typedef void (*Action)(void*, T1, T2, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeObject* obj, T1 p1, T2 p2)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_virtual_invoke_data(slot, obj);
		((Action)invokeData.methodPtr)(obj, p1, p2, invokeData.method);
	}
};
template <typename T1, typename T2, typename T3>
struct VirtActionInvoker3
{
	typedef void (*Action)(void*, T1, T2, T3, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeObject* obj, T1 p1, T2 p2, T3 p3)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_virtual_invoke_data(slot, obj);
		((Action)invokeData.methodPtr)(obj, p1, p2, p3, invokeData.method);
	}
};
template <typename R>
struct VirtFuncInvoker0
{
	typedef R (*Func)(void*, const RuntimeMethod*);

	static inline R Invoke (Il2CppMethodSlot slot, RuntimeObject* obj)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_virtual_invoke_data(slot, obj);
		return ((Func)invokeData.methodPtr)(obj, invokeData.method);
	}
};
template <typename T1>
struct VirtActionInvoker1
{
	typedef void (*Action)(void*, T1, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeObject* obj, T1 p1)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_virtual_invoke_data(slot, obj);
		((Action)invokeData.methodPtr)(obj, p1, invokeData.method);
	}
};
struct VirtActionInvoker0
{
	typedef void (*Action)(void*, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeObject* obj)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_virtual_invoke_data(slot, obj);
		((Action)invokeData.methodPtr)(obj, invokeData.method);
	}
};
template <typename T1, typename T2, typename T3, typename T4>
struct VirtActionInvoker4
{
	typedef void (*Action)(void*, T1, T2, T3, T4, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_virtual_invoke_data(slot, obj);
		((Action)invokeData.methodPtr)(obj, p1, p2, p3, p4, invokeData.method);
	}
};
template <typename T1, typename T2>
struct GenericVirtActionInvoker2
{
	typedef void (*Action)(void*, T1, T2, const RuntimeMethod*);

	static inline void Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1, T2 p2)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_virtual_invoke_data(method, obj, &invokeData);
		((Action)invokeData.methodPtr)(obj, p1, p2, invokeData.method);
	}
};
template <typename T1, typename T2, typename T3>
struct GenericVirtActionInvoker3
{
	typedef void (*Action)(void*, T1, T2, T3, const RuntimeMethod*);

	static inline void Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1, T2 p2, T3 p3)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_virtual_invoke_data(method, obj, &invokeData);
		((Action)invokeData.methodPtr)(obj, p1, p2, p3, invokeData.method);
	}
};
template <typename T1>
struct GenericVirtActionInvoker1
{
	typedef void (*Action)(void*, T1, const RuntimeMethod*);

	static inline void Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_virtual_invoke_data(method, obj, &invokeData);
		((Action)invokeData.methodPtr)(obj, p1, invokeData.method);
	}
};
template <typename T1, typename T2, typename T3, typename T4>
struct GenericVirtActionInvoker4
{
	typedef void (*Action)(void*, T1, T2, T3, T4, const RuntimeMethod*);

	static inline void Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_virtual_invoke_data(method, obj, &invokeData);
		((Action)invokeData.methodPtr)(obj, p1, p2, p3, p4, invokeData.method);
	}
};
struct GenericVirtActionInvoker0
{
	typedef void (*Action)(void*, const RuntimeMethod*);

	static inline void Invoke (const RuntimeMethod* method, RuntimeObject* obj)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_virtual_invoke_data(method, obj, &invokeData);
		((Action)invokeData.methodPtr)(obj, invokeData.method);
	}
};
template <typename T1, typename T2>
struct InterfaceActionInvoker2
{
	typedef void (*Action)(void*, T1, T2, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeClass* declaringInterface, RuntimeObject* obj, T1 p1, T2 p2)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_interface_invoke_data(slot, obj, declaringInterface);
		((Action)invokeData.methodPtr)(obj, p1, p2, invokeData.method);
	}
};
template <typename T1, typename T2, typename T3>
struct InterfaceActionInvoker3
{
	typedef void (*Action)(void*, T1, T2, T3, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeClass* declaringInterface, RuntimeObject* obj, T1 p1, T2 p2, T3 p3)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_interface_invoke_data(slot, obj, declaringInterface);
		((Action)invokeData.methodPtr)(obj, p1, p2, p3, invokeData.method);
	}
};
template <typename T1>
struct InterfaceActionInvoker1
{
	typedef void (*Action)(void*, T1, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeClass* declaringInterface, RuntimeObject* obj, T1 p1)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_interface_invoke_data(slot, obj, declaringInterface);
		((Action)invokeData.methodPtr)(obj, p1, invokeData.method);
	}
};
template <typename T1, typename T2, typename T3, typename T4>
struct InterfaceActionInvoker4
{
	typedef void (*Action)(void*, T1, T2, T3, T4, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeClass* declaringInterface, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_interface_invoke_data(slot, obj, declaringInterface);
		((Action)invokeData.methodPtr)(obj, p1, p2, p3, p4, invokeData.method);
	}
};
struct InterfaceActionInvoker0
{
	typedef void (*Action)(void*, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeClass* declaringInterface, RuntimeObject* obj)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_interface_invoke_data(slot, obj, declaringInterface);
		((Action)invokeData.methodPtr)(obj, invokeData.method);
	}
};
template <typename T1, typename T2>
struct GenericInterfaceActionInvoker2
{
	typedef void (*Action)(void*, T1, T2, const RuntimeMethod*);

	static inline void Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1, T2 p2)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_interface_invoke_data(method, obj, &invokeData);
		((Action)invokeData.methodPtr)(obj, p1, p2, invokeData.method);
	}
};
template <typename T1, typename T2, typename T3>
struct GenericInterfaceActionInvoker3
{
	typedef void (*Action)(void*, T1, T2, T3, const RuntimeMethod*);

	static inline void Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1, T2 p2, T3 p3)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_interface_invoke_data(method, obj, &invokeData);
		((Action)invokeData.methodPtr)(obj, p1, p2, p3, invokeData.method);
	}
};
template <typename T1>
struct GenericInterfaceActionInvoker1
{
	typedef void (*Action)(void*, T1, const RuntimeMethod*);

	static inline void Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_interface_invoke_data(method, obj, &invokeData);
		((Action)invokeData.methodPtr)(obj, p1, invokeData.method);
	}
};
template <typename T1, typename T2, typename T3, typename T4>
struct GenericInterfaceActionInvoker4
{
	typedef void (*Action)(void*, T1, T2, T3, T4, const RuntimeMethod*);

	static inline void Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_interface_invoke_data(method, obj, &invokeData);
		((Action)invokeData.methodPtr)(obj, p1, p2, p3, p4, invokeData.method);
	}
};
struct GenericInterfaceActionInvoker0
{
	typedef void (*Action)(void*, const RuntimeMethod*);

	static inline void Invoke (const RuntimeMethod* method, RuntimeObject* obj)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_interface_invoke_data(method, obj, &invokeData);
		((Action)invokeData.methodPtr)(obj, invokeData.method);
	}
};

// SteamVR_Utils/RigidTransform[]
struct RigidTransformU5BU5D_tC98EB3576009E5D825D0D43671A65D32A2449ECC;
// System.AsyncCallback
struct AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4;
// System.Boolean[]
struct BooleanU5BU5D_t192C7579715690E25BD5EFED47F3E0FC9DCB2040;
// System.Byte[]
struct ByteU5BU5D_tD06FDBE8142446525DF1C40351D523A228373821;
// System.Char[]
struct CharU5BU5D_t4CC6ABF0AD71BEC97E3C2F1E9C5677E46D3A75C2;
// System.Collections.Generic.Dictionary`2<System.Int32,System.Globalization.CultureInfo>
struct Dictionary_2_tC88A56872F7C79DBB9582D4F3FC22ED5D8E0B98B;
// System.Collections.Generic.Dictionary`2<System.String,System.Globalization.CultureInfo>
struct Dictionary_2_tBA5388DBB42BF620266F9A48E8B859BBBB224E25;
// System.Collections.Generic.List`1<System.Int32>
struct List_1_tE1526161A558A17A39A8B69D8EEF3801393B6226;
// System.Delegate
struct Delegate_t;
// System.DelegateData
struct DelegateData_t1BF9F691B56DAE5F8C28C5E084FDE94F15F27BBE;
// System.Delegate[]
struct DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86;
// System.Globalization.Calendar
struct Calendar_tF55A785ACD277504CF0D2F2C6AD56F76C6E91BD5;
// System.Globalization.CompareInfo
struct CompareInfo_tB9A071DBC11AC00AF2EA2066D0C2AE1DCB1865D1;
// System.Globalization.CultureData
struct CultureData_tF43B080FFA6EB278F4F289BCDA3FB74B6C208ECD;
// System.Globalization.CultureInfo
struct CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F;
// System.Globalization.DateTimeFormatInfo
struct DateTimeFormatInfo_tF4BB3AA482C2F772D2A9022F78BF8727830FAF5F;
// System.Globalization.NumberFormatInfo
struct NumberFormatInfo_tFDF57037EBC5BC833D0A53EF0327B805994860A8;
// System.Globalization.TextInfo
struct TextInfo_t5F1E697CB6A7E5EC80F0DC3A968B9B4A70C291D8;
// System.IAsyncResult
struct IAsyncResult_t8E194308510B375B42432981AE5E7488C458D598;
// System.Int32[]
struct Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83;
// System.Reflection.Binder
struct Binder_t4D5CB06963501D32847C057B57157D6DC49CA759;
// System.Reflection.MemberFilter
struct MemberFilter_t25C1BD92C42BE94426E300787C13C452CB89B381;
// System.Reflection.MethodInfo
struct MethodInfo_t;
// System.Single[]
struct SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5;
// System.String
struct String_t;
// System.String[]
struct StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E;
// System.Text.StringBuilder
struct StringBuilder_t;
// System.Type
struct Type_t;
// System.Type[]
struct TypeU5BU5D_t7FE623A666B49176DE123306221193E888A12F5F;
// System.Void
struct Void_t22962CB4C05B1D89B55A6E1139F0E87A90987017;
// UnityEngine.Quaternion[]
struct QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3;
// UnityEngine.Transform
struct Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA;
// UnityEngine.Vector3[]
struct Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28;
// Valve.VR.CVRCompositor
struct CVRCompositor_t0316216254FC5BC5562B6EFA273B82DDB77BB282;
// Valve.VR.CVRInput
struct CVRInput_t8458E224B9D7EFD4A5B102EAA06F8F365A25A53A;
// Valve.VR.CVROverlay
struct CVROverlay_tB2A34B1ABB5A269D91C8B5E5BC9D73C6FF6F8C97;
// Valve.VR.CVRSystem
struct CVRSystem_t1030A1811964E8FA2273D18C6E87C90ABF85624A;
// Valve.VR.EVRInputStringBits[]
struct EVRInputStringBitsU5BU5D_t6940A5B40972263CCCE9DFDBA05F69BA9DD7B52C;
// Valve.VR.IVRCompositor/_CanRenderScene
struct _CanRenderScene_t16F551BADB55D7F930B6509B204D97A79561A666;
// Valve.VR.IVRCompositor/_ClearLastSubmittedFrame
struct _ClearLastSubmittedFrame_t0ECCEC53139DA7FB06708174457B58CB45243229;
// Valve.VR.IVRCompositor/_ClearSkyboxOverride
struct _ClearSkyboxOverride_t67B0279CD96E9B5827D3B1F0738445C3A030BA5F;
// Valve.VR.IVRCompositor/_ClearStageOverride
struct _ClearStageOverride_t8CB8CCCD950482A8BBD0613E01DD6EAE087F4BCE;
// Valve.VR.IVRCompositor/_CompositorBringToFront
struct _CompositorBringToFront_t5343D37B1101FA91138DC0DCD5FBD3A5F59B2B1E;
// Valve.VR.IVRCompositor/_CompositorDumpImages
struct _CompositorDumpImages_t72EC96F53BAE526F747D8A57989C1DA08035DD43;
// Valve.VR.IVRCompositor/_CompositorGoToBack
struct _CompositorGoToBack_tB9DB8D1D9AAB81EE6207C7913090ADD6495801AA;
// Valve.VR.IVRCompositor/_CompositorQuit
struct _CompositorQuit_t18ED3360737B93C153359B4740A94BAC1544C752;
// Valve.VR.IVRCompositor/_FadeGrid
struct _FadeGrid_t34BDB8CC19DB79643BB8C7F78EDF8591D5FB3D64;
// Valve.VR.IVRCompositor/_FadeToColor
struct _FadeToColor_tCC4B0521289553A4A0AFEF9FE512D8FCA8BB9202;
// Valve.VR.IVRCompositor/_ForceInterleavedReprojectionOn
struct _ForceInterleavedReprojectionOn_tFE845BC19FFB70A32F2CEBE69A730314E4F10241;
// Valve.VR.IVRCompositor/_ForceReconnectProcess
struct _ForceReconnectProcess_t42AAAFE45346087068EB9BCE4D8AB2D6591AC8B0;
// Valve.VR.IVRCompositor/_GetCompositorBenchmarkResults
struct _GetCompositorBenchmarkResults_tDE8A4E8B8ECC2579DE9D98E80C916695F1AC1597;
// Valve.VR.IVRCompositor/_GetCumulativeStats
struct _GetCumulativeStats_tA0CBF977CA6D77007BF3A811E8B6A6A66164A521;
// Valve.VR.IVRCompositor/_GetCurrentFadeColor
struct _GetCurrentFadeColor_t343E335FB53D02F361AC604B6BAF25F3D8415408;
// Valve.VR.IVRCompositor/_GetCurrentGridAlpha
struct _GetCurrentGridAlpha_tCD27A87A08B3BC2217FFA6594EE4BB6D6BF47168;
// Valve.VR.IVRCompositor/_GetCurrentSceneFocusProcess
struct _GetCurrentSceneFocusProcess_t6421A3BC4B38C84F358F6074A3D3083DA382020F;
// Valve.VR.IVRCompositor/_GetFrameTimeRemaining
struct _GetFrameTimeRemaining_t16772D3C0E808D2B3CF0E7DC54E70DA170377937;
// Valve.VR.IVRCompositor/_GetFrameTiming
struct _GetFrameTiming_t7831BA87E11BC4C73429D9B3E350F01EAC8269CD;
// Valve.VR.IVRCompositor/_GetFrameTimings
struct _GetFrameTimings_t57EC12DA46CAE1F6F6B76D4A27D350B1CD415D42;
// Valve.VR.IVRCompositor/_GetLastFrameRenderer
struct _GetLastFrameRenderer_tB18D1C5D91FD3CE71BD6E8C72EA50E970201EDDD;
// Valve.VR.IVRCompositor/_GetLastPoseForTrackedDeviceIndex
struct _GetLastPoseForTrackedDeviceIndex_t35111C732E55B4AA3F3BA3C029EE64634999014C;
// Valve.VR.IVRCompositor/_GetLastPosePredictionIDs
struct _GetLastPosePredictionIDs_t61F707C1CE5B627C4AE0D6EC12434130369E8EFD;
// Valve.VR.IVRCompositor/_GetLastPoses
struct _GetLastPoses_t95337A7DB72F11B41ED8C02251C777AEB5E9E2FD;
// Valve.VR.IVRCompositor/_GetMirrorTextureD3D11
struct _GetMirrorTextureD3D11_t381C14BA597ED97A9A9828F42D013A009A4DF4A4;
// Valve.VR.IVRCompositor/_GetMirrorTextureGL
struct _GetMirrorTextureGL_tA06AABF32A6143F3C5B44A80CA9EC1A298EE8C9F;
// Valve.VR.IVRCompositor/_GetPosesForFrame
struct _GetPosesForFrame_t35A566A4D0F1F0E8A29F8C54E081833CC6762869;
// Valve.VR.IVRCompositor/_GetTrackingSpace
struct _GetTrackingSpace_tA79B4C912BD02AA0EDD83FC57FAE73E46E5B882D;
// Valve.VR.IVRCompositor/_GetVulkanDeviceExtensionsRequired
struct _GetVulkanDeviceExtensionsRequired_t51FAF6EABE2B349E9BD987303D4757E80C0B3246;
// Valve.VR.IVRCompositor/_GetVulkanInstanceExtensionsRequired
struct _GetVulkanInstanceExtensionsRequired_t7A4FE11C16D2F9E9DA48671D5A1D78B2A41AA1DE;
// Valve.VR.IVRCompositor/_HideMirrorWindow
struct _HideMirrorWindow_t9C709E267F93B42371E75EABB26432E4E2B48410;
// Valve.VR.IVRCompositor/_IsCurrentSceneFocusAppLoading
struct _IsCurrentSceneFocusAppLoading_tCE8C42B715A680594786619F24B2ACC74E4B5C96;
// Valve.VR.IVRCompositor/_IsFullscreen
struct _IsFullscreen_t2BFAAACCFEB1F40A52B7B16899A85C757F233B0C;
// Valve.VR.IVRCompositor/_IsMirrorWindowVisible
struct _IsMirrorWindowVisible_tB080895D09F4C11C79F65D88DEB0D0759D8C0E4E;
// Valve.VR.IVRCompositor/_IsMotionSmoothingEnabled
struct _IsMotionSmoothingEnabled_tA0D2F0F53194E7D2156308200B6E269DFE0C69BC;
// Valve.VR.IVRCompositor/_IsMotionSmoothingSupported
struct _IsMotionSmoothingSupported_t95F452FA6D78FC58EF2148C3B174A67BE61C58FC;
// Valve.VR.IVRCompositor/_LockGLSharedTextureForAccess
struct _LockGLSharedTextureForAccess_tA2603FA2A992EED1C5C02BC975E85A0F659339AE;
// Valve.VR.IVRCompositor/_PostPresentHandoff
struct _PostPresentHandoff_t314F84869CA64790F35314666051FB1631337010;
// Valve.VR.IVRCompositor/_ReleaseMirrorTextureD3D11
struct _ReleaseMirrorTextureD3D11_t6E374E0BEC9B8E9F88EC0EDE8E41AB43A8D138F9;
// Valve.VR.IVRCompositor/_ReleaseSharedGLTexture
struct _ReleaseSharedGLTexture_t2E539F5AE30C1CCC23E51738272DF8A53E8AD5B0;
// Valve.VR.IVRCompositor/_SetExplicitTimingMode
struct _SetExplicitTimingMode_tAB84BFAEAA600D952778064AC2B7AFA8A3F7261E;
// Valve.VR.IVRCompositor/_SetSkyboxOverride
struct _SetSkyboxOverride_t66FE495E1F260400F1EFF1743C445A340E278822;
// Valve.VR.IVRCompositor/_SetStageOverride_Async
struct _SetStageOverride_Async_t1F2528FEE64B4CA46F0F73E39AB7A4FB7E67E379;
// Valve.VR.IVRCompositor/_SetTrackingSpace
struct _SetTrackingSpace_t348CBF365645621C0BC888EBBE94D3BE6687DD58;
// Valve.VR.IVRCompositor/_ShouldAppRenderWithLowResources
struct _ShouldAppRenderWithLowResources_tCB09B8D3E65DB6C46E6464963BC62B94E7F661D6;
// Valve.VR.IVRCompositor/_ShowMirrorWindow
struct _ShowMirrorWindow_t668E6432F0ED9F63EA038C6EBE76BA9D3672392D;
// Valve.VR.IVRCompositor/_Submit
struct _Submit_t60BC4FDEEF9EE5F00E0F4D15007CBE6C74B5EB44;
// Valve.VR.IVRCompositor/_SubmitExplicitTimingData
struct _SubmitExplicitTimingData_t5F40045D9F79D25080663F842E12D8777295014E;
// Valve.VR.IVRCompositor/_SuspendRendering
struct _SuspendRendering_tC9EA4D458AE7DEFEB96CD6F28EA74C2D97CB080C;
// Valve.VR.IVRCompositor/_UnlockGLSharedTextureForAccess
struct _UnlockGLSharedTextureForAccess_tD4D376FA10FDD78116934904862757CE3821494A;
// Valve.VR.IVRCompositor/_WaitGetPoses
struct _WaitGetPoses_t8FBB49D540A4521220D3D00976C2B89F0415F63D;
// Valve.VR.IVRInput/_DecompressSkeletalBoneData
struct _DecompressSkeletalBoneData_t86826E0E71A97AF27926A5FE729C40C044950EE3;
// Valve.VR.IVRInput/_GetActionBindingInfo
struct _GetActionBindingInfo_tAD1F4388BDBC6CD3B6917F8D34FDE4ED50FA0B90;
// Valve.VR.IVRInput/_GetActionHandle
struct _GetActionHandle_t9C54E9BD4B323756EBF1D339267D700FA0906E5A;
// Valve.VR.IVRInput/_GetActionOrigins
struct _GetActionOrigins_t5981F544757263645A0785945D160DB872AC4004;
// Valve.VR.IVRInput/_GetActionSetHandle
struct _GetActionSetHandle_t4F02E7BE5C89495C2A943127AD665873707ACF70;
// Valve.VR.IVRInput/_GetAnalogActionData
struct _GetAnalogActionData_t88A7E8F1E39FA928BA36ECC4CAF00F64EA5B2370;
// Valve.VR.IVRInput/_GetBindingVariant
struct _GetBindingVariant_tC5BBC7614163DE88B1552CFD849C1345C15B42DD;
// Valve.VR.IVRInput/_GetBoneCount
struct _GetBoneCount_t7278256B408FB9AE18A09FEB867224E0FB3F96C0;
// Valve.VR.IVRInput/_GetBoneHierarchy
struct _GetBoneHierarchy_t7833B26BF9F3BBC545A1F18AE3A0E8CDACDB7EA3;
// Valve.VR.IVRInput/_GetBoneName
struct _GetBoneName_tEA5C9719CFA7C9E207EB6BD21F6BE20471BAF32F;
// Valve.VR.IVRInput/_GetComponentStateForBinding
struct _GetComponentStateForBinding_t3CCC4BE573D9C8CD899FE4A5931C0A6D4BEF90C9;
// Valve.VR.IVRInput/_GetDigitalActionData
struct _GetDigitalActionData_t0DD2C2253E330F04FC502E187EAA386A2E9E37B7;
// Valve.VR.IVRInput/_GetDominantHand
struct _GetDominantHand_t2FDB8C04198FFEFB65B5D7C2B3D43AE51BFB00E8;
// Valve.VR.IVRInput/_GetInputSourceHandle
struct _GetInputSourceHandle_t5E01A35961AD0A942C4CE91C75FD9AE5D6973E3D;
// Valve.VR.IVRInput/_GetOriginLocalizedName
struct _GetOriginLocalizedName_tE07610E77B523E126544A7832EECC551E2FD3021;
// Valve.VR.IVRInput/_GetOriginTrackedDeviceInfo
struct _GetOriginTrackedDeviceInfo_t435DE06C2EE2B7705EE9AA94D172E3405305EBAA;
// Valve.VR.IVRInput/_GetPoseActionDataForNextFrame
struct _GetPoseActionDataForNextFrame_t00494DFAEA855A0ADF9E551FAA418F58F4B66592;
// Valve.VR.IVRInput/_GetPoseActionDataRelativeToNow
struct _GetPoseActionDataRelativeToNow_t7F4F266EC331D8691677E7BC70E59558EE01F931;
// Valve.VR.IVRInput/_GetSkeletalActionData
struct _GetSkeletalActionData_t9216D0ABD8AC09499C70B1BB93F57D968E634615;
// Valve.VR.IVRInput/_GetSkeletalBoneData
struct _GetSkeletalBoneData_t1FD6A4A117DC2B8F302E4A22FE6544160C1253B6;
// Valve.VR.IVRInput/_GetSkeletalBoneDataCompressed
struct _GetSkeletalBoneDataCompressed_t8167E3331CDA6F777C1729C8B59F8A85D50FEAB6;
// Valve.VR.IVRInput/_GetSkeletalReferenceTransforms
struct _GetSkeletalReferenceTransforms_t389D7C3A88063A2108EE1C283E8585C877D5201F;
// Valve.VR.IVRInput/_GetSkeletalSummaryData
struct _GetSkeletalSummaryData_t28D43F5B957A917DA6B72169AB095ADB9F30B036;
// Valve.VR.IVRInput/_GetSkeletalTrackingLevel
struct _GetSkeletalTrackingLevel_tAB43C3631928CF708BD976C9470913B77FB57192;
// Valve.VR.IVRInput/_IsUsingLegacyInput
struct _IsUsingLegacyInput_t612314BBE7397C3BB14BE0083435E0DB35EE29B0;
// Valve.VR.IVRInput/_OpenBindingUI
struct _OpenBindingUI_tEB5276251C8845C26545C483C744740F583EF786;
// Valve.VR.IVRInput/_SetActionManifestPath
struct _SetActionManifestPath_t914810D32405649AEF373C90F80D1E8CEE10A049;
// Valve.VR.IVRInput/_SetDominantHand
struct _SetDominantHand_t17970B7D36348973B20C9E3068637D27D2AC5CAE;
// Valve.VR.IVRInput/_ShowActionOrigins
struct _ShowActionOrigins_t13C88E34BE1267273FA0856B00B4925C3CC92104;
// Valve.VR.IVRInput/_ShowBindingsForActionSet
struct _ShowBindingsForActionSet_tD09336526A875B6A29BC7E9EA9FF1CBD5DE24F4E;
// Valve.VR.IVRInput/_TriggerHapticVibrationAction
struct _TriggerHapticVibrationAction_tB60CF22CEAEFCF00E9931AC7794926A72FBA6BD7;
// Valve.VR.IVRInput/_UpdateActionState
struct _UpdateActionState_t6857C1DBCCBEEAFC0DA66FC28413D59734A7E0AA;
// Valve.VR.SteamVR
struct SteamVR_tE14648C0E73A16927B96F72915B425561B0D057F;
// Valve.VR.SteamVR_Action
struct SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734;
// Valve.VR.SteamVR_ActionSet
struct SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6;
// Valve.VR.SteamVR_ActionSet_Data
struct SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529;
// Valve.VR.SteamVR_Action_Boolean
struct SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20;
// Valve.VR.SteamVR_Action_Boolean/ActiveChangeHandler
struct ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884;
// Valve.VR.SteamVR_Action_Boolean/ChangeHandler
struct ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0;
// Valve.VR.SteamVR_Action_Boolean/StateDownHandler
struct StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464;
// Valve.VR.SteamVR_Action_Boolean/StateHandler
struct StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA;
// Valve.VR.SteamVR_Action_Boolean/StateUpHandler
struct StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8;
// Valve.VR.SteamVR_Action_Boolean/UpdateHandler
struct UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B;
// Valve.VR.SteamVR_Action_Boolean_Source
struct SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB;
// Valve.VR.SteamVR_Action_Boolean_Source[]
struct SteamVR_Action_Boolean_SourceU5BU5D_t3A16242B388E28FE4156180DB154A107EF5A8B1D;
// Valve.VR.SteamVR_Action_Boolean_Source_Map
struct SteamVR_Action_Boolean_Source_Map_tF5558AC3C11798E60DC5152DD2FB5E835D79AA3B;
// Valve.VR.SteamVR_Action_In_Source
struct SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB;
// Valve.VR.SteamVR_Action_In_Source_Map`1<System.Object>
struct SteamVR_Action_In_Source_Map_1_tE23DCA7E159C6009D8EE8C1BB585F7939266D2C4;
// Valve.VR.SteamVR_Action_In_Source_Map`1<Valve.VR.SteamVR_Action_Boolean_Source>
struct SteamVR_Action_In_Source_Map_1_t462A62AFB6CF3E08F3D5A481212A290F3FEB5FFE;
// Valve.VR.SteamVR_Action_In_Source_Map`1<Valve.VR.SteamVR_Action_Single_Source>
struct SteamVR_Action_In_Source_Map_1_t2C53C7DDA5E7BECE6E12D3EE7BFAB2ADF8781741;
// Valve.VR.SteamVR_Action_In`2<System.Object,System.Object>
struct SteamVR_Action_In_2_t6581D04BE16752D2B9D8A37860D18FCB02755CA0;
// Valve.VR.SteamVR_Action_In`2<Valve.VR.SteamVR_Action_Single_Source_Map,Valve.VR.SteamVR_Action_Single_Source>
struct SteamVR_Action_In_2_t518EEA73CD833B39D557DDB94804313377E0FE02;
// Valve.VR.SteamVR_Action_In`2<Valve.VR.SteamVR_Action_Vector2_Source_Map,Valve.VR.SteamVR_Action_Vector2_Source>
struct SteamVR_Action_In_2_t4260173E99094920C69878272DE55CE93D5D5A9C;
// Valve.VR.SteamVR_Action_Out_Source
struct SteamVR_Action_Out_Source_t6BAB7CAA13DB2A871A892C09BFF55378A6D327D6;
// Valve.VR.SteamVR_Action_Pose
struct SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C;
// Valve.VR.SteamVR_Action_Pose/ActiveChangeHandler
struct ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E;
// Valve.VR.SteamVR_Action_Pose/ChangeHandler
struct ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE;
// Valve.VR.SteamVR_Action_Pose/DeviceConnectedChangeHandler
struct DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9;
// Valve.VR.SteamVR_Action_Pose/TrackingChangeHandler
struct TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914;
// Valve.VR.SteamVR_Action_Pose/UpdateHandler
struct UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1;
// Valve.VR.SteamVR_Action_Pose/ValidPoseChangeHandler
struct ValidPoseChangeHandler_t1D487A0B0E2FB0D02C72EF5365E81BCD3E33B41A;
// Valve.VR.SteamVR_Action_Pose_Base`2<System.Object,System.Object>
struct SteamVR_Action_Pose_Base_2_t243A518FFFF5F7018B4C37F5EE6AA104F20ABB3C;
// Valve.VR.SteamVR_Action_Pose_Base`2<Valve.VR.SteamVR_Action_Pose_Source_Map`1<Valve.VR.SteamVR_Action_Pose_Source>,Valve.VR.SteamVR_Action_Pose_Source>
struct SteamVR_Action_Pose_Base_2_tBAE9134F2B018AC078BAF24A2A5197F0A976D59A;
// Valve.VR.SteamVR_Action_Pose_Base`2<Valve.VR.SteamVR_Action_Skeleton_Source_Map,Valve.VR.SteamVR_Action_Skeleton_Source>
struct SteamVR_Action_Pose_Base_2_tCF260D4E08F45DC042B3B5B7B7A2F6B84880C2C2;
// Valve.VR.SteamVR_Action_Pose_Source
struct SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27;
// Valve.VR.SteamVR_Action_Pose_Source[]
struct SteamVR_Action_Pose_SourceU5BU5D_t22552112660E2C6809DF49AE76F3B6C3DF47DA18;
// Valve.VR.SteamVR_Action_Pose_Source_Map`1<System.Object>
struct SteamVR_Action_Pose_Source_Map_1_t8B8C4568BBAB9035BBC38B347ADCF1969560FDC9;
// Valve.VR.SteamVR_Action_Pose_Source_Map`1<Valve.VR.SteamVR_Action_Pose_Source>
struct SteamVR_Action_Pose_Source_Map_1_t191C12A385C6BE9645B171973AA0141ECCBA76A9;
// Valve.VR.SteamVR_Action_Pose_Source_Map`1<Valve.VR.SteamVR_Action_Skeleton_Source>
struct SteamVR_Action_Pose_Source_Map_1_t62FCD50EDE24217AD6FAFADAC23DA65555B7A125;
// Valve.VR.SteamVR_Action_Single
struct SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81;
// Valve.VR.SteamVR_Action_Single/ActiveChangeHandler
struct ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE;
// Valve.VR.SteamVR_Action_Single/AxisHandler
struct AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843;
// Valve.VR.SteamVR_Action_Single/ChangeHandler
struct ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED;
// Valve.VR.SteamVR_Action_Single/UpdateHandler
struct UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D;
// Valve.VR.SteamVR_Action_Single_Source
struct SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F;
// Valve.VR.SteamVR_Action_Single_Source[]
struct SteamVR_Action_Single_SourceU5BU5D_t5C412D6C07F76DC7C2B627B5C442ED002CDEB277;
// Valve.VR.SteamVR_Action_Single_Source_Map
struct SteamVR_Action_Single_Source_Map_tBD46D15F4FCB5A4B6BDA2B1FE96035D4DDBDBA37;
// Valve.VR.SteamVR_Action_Skeleton
struct SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504;
// Valve.VR.SteamVR_Action_Skeleton/ActiveChangeHandler
struct ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4;
// Valve.VR.SteamVR_Action_Skeleton/ChangeHandler
struct ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7;
// Valve.VR.SteamVR_Action_Skeleton/DeviceConnectedChangeHandler
struct DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592;
// Valve.VR.SteamVR_Action_Skeleton/TrackingChangeHandler
struct TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4;
// Valve.VR.SteamVR_Action_Skeleton/UpdateHandler
struct UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046;
// Valve.VR.SteamVR_Action_Skeleton/ValidPoseChangeHandler
struct ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7;
// Valve.VR.SteamVR_Action_Skeleton_Source
struct SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72;
// Valve.VR.SteamVR_Action_Skeleton_Source[]
struct SteamVR_Action_Skeleton_SourceU5BU5D_tD7F80DE17D413EA1E866B222C9A63AEBFF0CE5D4;
// Valve.VR.SteamVR_Action_Skeleton_Source_Map
struct SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB;
// Valve.VR.SteamVR_Action_Source
struct SteamVR_Action_Source_t9D7428CDE39924074518EE6233D9A4FAB0C33CB0;
// Valve.VR.SteamVR_Action_Source_Map
struct SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17;
// Valve.VR.SteamVR_Action_Source_Map`1<System.Object>
struct SteamVR_Action_Source_Map_1_tF6CD4E2DA9FBD867B5F22D6A040FC06A0BFE5CCA;
// Valve.VR.SteamVR_Action_Source_Map`1<Valve.VR.SteamVR_Action_Pose_Source>
struct SteamVR_Action_Source_Map_1_t4A3528A78F542534FFD6E6F281FB9A8905078A20;
// Valve.VR.SteamVR_Action_Source_Map`1<Valve.VR.SteamVR_Action_Single_Source>
struct SteamVR_Action_Source_Map_1_t35C427C8B75EF289976D4DB641CA212F073FB0A1;
// Valve.VR.SteamVR_Action_Source_Map`1<Valve.VR.SteamVR_Action_Skeleton_Source>
struct SteamVR_Action_Source_Map_1_t27BBF2BA23BB14D6B7B203EF8ABFEF3D68E13AB1;
// Valve.VR.SteamVR_Action_Source_Map`1<Valve.VR.SteamVR_Action_Vector2_Source>
struct SteamVR_Action_Source_Map_1_tE12722D4173E7C4230CAF8EE7E30368AA130B899;
// Valve.VR.SteamVR_Action_Vector2
struct SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37;
// Valve.VR.SteamVR_Action_Vector2/ActiveChangeHandler
struct ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2;
// Valve.VR.SteamVR_Action_Vector2/AxisHandler
struct AxisHandler_t97FB692AF5465040A2929AB663941933E3567689;
// Valve.VR.SteamVR_Action_Vector2/ChangeHandler
struct ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6;
// Valve.VR.SteamVR_Action_Vector2/UpdateHandler
struct UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177;
// Valve.VR.SteamVR_Action_Vector2_Source
struct SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1;
// Valve.VR.SteamVR_Action_Vector2_Source[]
struct SteamVR_Action_Vector2_SourceU5BU5D_t7FCBB6318B7E6C02575D1D2F50CA74FE49CCB359;
// Valve.VR.SteamVR_Action_Vector2_Source_Map
struct SteamVR_Action_Vector2_Source_Map_tA43BF0AE8C89C3094C8375D1A82AE8676DA218D3;
// Valve.VR.SteamVR_Action`2<System.Object,System.Object>
struct SteamVR_Action_2_t67EA892F0F7F8FCEB40A807AEF2569E6E8BA4B41;
// Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Pose_Source_Map`1<Valve.VR.SteamVR_Action_Pose_Source>,Valve.VR.SteamVR_Action_Pose_Source>
struct SteamVR_Action_2_tDED2DB9236CA9398BCDCB18DB8DDA3DB1D98FBAC;
// Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Single_Source_Map,Valve.VR.SteamVR_Action_Single_Source>
struct SteamVR_Action_2_t6C5A72BCD96947140E949B195C2578D4AE46E170;
// Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Skeleton_Source_Map,Valve.VR.SteamVR_Action_Skeleton_Source>
struct SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D;
// Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Vector2_Source_Map,Valve.VR.SteamVR_Action_Vector2_Source>
struct SteamVR_Action_2_t83C041411A0CA61D62EE3A4F510D83333D049258;
// Valve.VR.SteamVR_Input_Sources[]
struct SteamVR_Input_SourcesU5BU5D_t735048547A8599BA461FE16B1BC029194E1F184A;
// Valve.VR.SteamVR_Settings
struct SteamVR_Settings_t64E5B6E42EEDC6ACB51C476970EF3AA6270E555C;
// Valve.VR.SteamVR_Skeleton_FingerIndexEnum[]
struct SteamVR_Skeleton_FingerIndexEnumU5BU5D_t972F21E674536524E0BFB5F382CFD0ACA1714DB7;
// Valve.VR.SteamVR_Skeleton_FingerSplayIndexEnum[]
struct SteamVR_Skeleton_FingerSplayIndexEnumU5BU5D_t92DED5924CD2E6B494B9ABD5961F9BC65373A81B;
// Valve.VR.VRBoneTransform_t[]
struct VRBoneTransform_tU5BU5D_tB5FDD0831D295612D4381D2F2D8805367FAF83F8;
// Valve.VR.VRTextureBounds_t[]
struct VRTextureBounds_tU5BU5D_t66A6DF52C6400F7EED32DBE6C22BDEF5968E361A;

IL2CPP_EXTERN_C RuntimeClass* ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* AxisHandler_t97FB692AF5465040A2929AB663941933E3567689_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Boolean_tB53F6830F670160873277339AA58F15CAED4399C_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* ETrackingResult_tEF8D233780E244B87AFAECDB107A82C77C666E9D_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* EVRInputError_tE4C895A0D1F18C0024F5C180FF3962B056DA8A71_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* EVRInputStringBitsU5BU5D_t6940A5B40972263CCCE9DFDBA05F69BA9DD7B52C_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Marshal_tC795CE9CC2FFBA41EDB1AC1C0FEC04607DFA8A40_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Mathf_tFBDE6467D269BFE410605C7D806FD9991D4A89CB_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* OpenVR_t89189C917B539750153B18DDDCB4F7D9C8EF004D_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* RigidTransformU5BU5D_tC98EB3576009E5D825D0D43671A65D32A2449ECC_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* SteamVR_Input_Source_tAFDB40851F8E134E08DD2DD0BC1C1770705E81D0_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* SteamVR_Input_Sources_tCE41AA589FB3B9516BDE0DFABDCB4AAEA29528F7_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* SteamVR_Input_tCE4A1EC6C51592CB9DCD7B860984CB2C4DD937BF_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* SteamVR_Skeleton_FingerIndexes_t23102EBBB267071AC40CD07242EE4C746DC7F020_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* SteamVR_Skeleton_FingerSplayIndexes_t0141FA1AFC8CF87E917B728EEBBA9186F26D3246_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* SteamVR_tE14648C0E73A16927B96F72915B425561B0D057F_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* StringBuilder_t_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Type_t_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* VRBoneTransform_tU5BU5D_tB5FDD0831D295612D4381D2F2D8805367FAF83F8_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* ValidPoseChangeHandler_t1D487A0B0E2FB0D02C72EF5365E81BCD3E33B41A_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C String_t* _stringLiteral1085AA8DD5D0232F772D5CA5EA871BBE2F761FB0;
IL2CPP_EXTERN_C String_t* _stringLiteral1315AF0D095A22997AA7C177E47A3203C2139E1F;
IL2CPP_EXTERN_C String_t* _stringLiteral18B39452A606090B97AA8D84240CC83BE3E5D62B;
IL2CPP_EXTERN_C String_t* _stringLiteral258E23932207BA363BB8C0D5C6F463CBDBE1EFC5;
IL2CPP_EXTERN_C String_t* _stringLiteral29F677B20F6C547FF7CEF8CAE9CF922165E48458;
IL2CPP_EXTERN_C String_t* _stringLiteral3A7CDEF52D3DE29B65F025A01642173D5069CE13;
IL2CPP_EXTERN_C String_t* _stringLiteral3C1DAA6957F3D30C74E902B0E1239020BD2032EB;
IL2CPP_EXTERN_C String_t* _stringLiteral465EC1A5848524F5DC24880091A15CDE065E1E7E;
IL2CPP_EXTERN_C String_t* _stringLiteral5D84EB9E92DC661A577D3ADFBA33F1D74C56B13F;
IL2CPP_EXTERN_C String_t* _stringLiteral6FCA55CA3C828A46BFE96A10E69F572B61CE540C;
IL2CPP_EXTERN_C String_t* _stringLiteral7025DBCB2822E392650101D811F717F7B853C54B;
IL2CPP_EXTERN_C String_t* _stringLiteral74FBFA22F0AC7FDD2F060A9187A8A74078A10F16;
IL2CPP_EXTERN_C String_t* _stringLiteral82053ECBCAD6503F26FE33F5976A1604F67CDD45;
IL2CPP_EXTERN_C String_t* _stringLiteral86E8370248F8FE7578E8A312953CA12AE864509D;
IL2CPP_EXTERN_C String_t* _stringLiteral89D0E943F4CBF79958E13F52A770E6F67C06F387;
IL2CPP_EXTERN_C String_t* _stringLiteral8F81A123645902E7859F319F49E4414C0F77D44E;
IL2CPP_EXTERN_C String_t* _stringLiteral973389CC7163D5EF9A40BE4685E4E55B5CBBC66F;
IL2CPP_EXTERN_C String_t* _stringLiteralA581B1C5D87FE35AA6548BD80922C973CF753D73;
IL2CPP_EXTERN_C String_t* _stringLiteralA98667A476D022EB9B2CF25800415760BE586401;
IL2CPP_EXTERN_C String_t* _stringLiteralAC897ED588F0446677581414C46F231807AB2556;
IL2CPP_EXTERN_C String_t* _stringLiteralAD66C391DC6C51CA381EB74E3DAFDAF54D01F3C2;
IL2CPP_EXTERN_C String_t* _stringLiteralBF36B31510F1F60267BB121C5485B7F7FC7D7D59;
IL2CPP_EXTERN_C String_t* _stringLiteralE6D56E05F32996CA7E5AE21BC90D49044C0BF356;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_2_InitAfterDeserialize_m6328CD572A94DA88CD2DF7764B1C54660D864650_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_2_InitAfterDeserialize_mE728FED0E8C00D51AC4197B832D5566ED4AC6B5C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_2_InitAfterDeserialize_mE9F8DD45DF03F3256906560CBC27CF8758868081_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_2_InitAfterDeserialize_mF196A84C3451B66EB3C0442338565F96747D1BDD_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_In_2__ctor_m41F7AFC75B6446B69288BD50077908E1AF71C61A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_In_2__ctor_mC337EE2FE20E16CE0DE3BC0FB61364B227330B64_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_In_Source_Map_1__ctor_mB4256E2B87538A069DBF22BF7DE6095CD4948CC1_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_In_Source_Map_1__ctor_mB77B525B66B2B2D0584C98822837286DF43B701B_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Pose_Base_2_SetUniverseOrigin_m570ADC7EF0A55D9FFC6FF570D10F5ED7A096820F_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Pose_Base_2_UpdateTransform_mA2326B217389FE7C35FA7067EC5CB94B949791CD_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Pose_Base_2__ctor_m24086345D5295A3360CF25DCB9922CA2CC4ECF61_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Pose_Base_2__ctor_mBF2AF97C3EAEABACA97070B5DBFD7FBD6426161E_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Pose_Source_Map_1__ctor_m01AFE5DB1C492BA28D7FDCC30F55DF0575D12510_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Source_Map_1_get_Item_m303FDBA93004D8CE7E49B6F079D27B5CB7AC9B72_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Source_Map_1_get_Item_mE9FAF259F6EB506E78790EDB4F2AF6FF68569986_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeType* InputAnalogActionData_t_t6C7615BD7F4223A4ADA9268DDF501D09B3C808CA_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* InputDigitalActionData_t_t4A01C92AC860229A4C521ED827FD4FC4508A822C_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* InputPoseActionData_t_tC282FD2CB85805431D2F23AF9C032BAD99683111_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* InputSkeletalActionData_t_tD41850247EEE1858231B43C4B3EC2B5617140C26_0_0_0_var;
IL2CPP_EXTERN_C const uint32_t ActiveChangeHandler_BeginInvoke_m840BDF45AD7CB0AD33349E89ED6AA1A9402998BD_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ActiveChangeHandler_BeginInvoke_m8BA8582E8229FBEBD3D4EA1F30EF9D848C8CD8A1_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ActiveChangeHandler_BeginInvoke_mAE3B1385B2D13895DA61F41F44F316C1ECC3C209_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ActiveChangeHandler_BeginInvoke_mD881C5A9D64A5B3F346FED4892B1BA5E19D94190_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t AxisHandler_BeginInvoke_m4FE79547E75F92C873C63002FE5EB08EBC37E2C2_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t AxisHandler_BeginInvoke_m913569F028FDA434D71050BCC20C82B54526B472_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ChangeHandler_BeginInvoke_m64CE8AD95AFF7D63BB705D05EE591FD010443899_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ChangeHandler_BeginInvoke_mB16F9AF55D593D093C99E610BF8193036D318499_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ChangeHandler_BeginInvoke_mE21DBC72B4F883A5B3CD1CA55D2322E5773DE447_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t DeviceConnectedChangeHandler_BeginInvoke_m209513DF91AD3196C36A63A497FF6E8225010C5F_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t DeviceConnectedChangeHandler_BeginInvoke_m7182D36F4B940AD9BE37D71E2A18587607F31041_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Boolean_Source_Initialize_m8DF0180598B4C73242B9BAF109C363D372597D9F_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Boolean_Source_Map__ctor_m402029D21ECB00F66F925BF91E03C207E9DC4061_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Boolean_Source_Preinitialize_m9B4DCBB919985EE24F1B42069D7E119130756CC5_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Boolean_Source_RemoveAllListeners_m246ACB62D2C08DACC7E6C589F68944ABE0566280_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Boolean_Source_UpdateValue_mE169B77441B8F8CB86C6D07D7EB748A2737F4298_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Boolean_Source__cctor_mFCEDCDBC2C17CD45E898C6815A54F8B8887A6864_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Boolean_Source__ctor_mF54B2E2C7D20A53F67F83FE7E2DDA8594C3F5D8D_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Boolean_Source_add_onActiveBindingChange_mECD5FA4A7530B1E098CE3FFADA9699CBD31637BE_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Boolean_Source_add_onActiveChange_mF3028B133711F7F5445E2E954FAE2040FE7BEA5B_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Boolean_Source_add_onChange_m14AB5553E5BEE97154D1ACE90FF20DFDEDED40E7_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Boolean_Source_add_onStateDown_m134E6EC8C9B791AA70682D015A0975D4DEA78149_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Boolean_Source_add_onStateUp_m12CDC2DD35ED4AC1CCD9C42AB149576D195B31C1_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Boolean_Source_add_onState_m9F952DE795F0A1BC8F161BE03F877894EA973823_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Boolean_Source_add_onUpdate_m43D27C8A8B7DFC39F24F31768AC83B87F380AA98_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Boolean_Source_remove_onActiveBindingChange_mCBEAAADB6F7073EC8FDBCB332FC25B39912D1132_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Boolean_Source_remove_onActiveChange_mEEA2329DF99E658C7EBCA6670F68FA72A1993564_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Boolean_Source_remove_onChange_mC157DE7645416252EEC96DFEECBC80CE7294CDED_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Boolean_Source_remove_onStateDown_m69EDBBEE11F60CD90D69A36C2146CD3532EA504F_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Boolean_Source_remove_onStateUp_mA8DFD7672CA1FBA47512E22F6A5E8CA357FCFCB8_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Boolean_Source_remove_onState_mE7577EF4670E0BB1EC939B92D024E29C825AD60E_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Boolean_Source_remove_onUpdate_mAC0DFDB074F54D52DFE402808FB2235809562B85_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_In_Source_GetLocalizedOriginPart_mE7B291A4EA395AD6127DE314E7B1194270C491D7_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_In_Source_GetLocalizedOrigin_m0ED5D7025677DF464116DCCD7EC3871D8719DC26_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_In_Source_Initialize_m40F600EDA6712166E32A98C5905420F6F2DC2001_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_In_Source_UpdateOriginTrackedDeviceInfo_mF7505A7AB2C40628D28A09255C14AC74E5C386C0_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_In_Source__cctor_mC0CABE2C708C0BB459C3CF2260382898F14EBA81_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_In_Source_get_activeDevice_m889780B67CDEDA524D6D5B264228DF2598AC3ED7_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_AddOnActiveChangeListener_m8478A795612076542B73500EBFDFA5D9E7D40376_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_AddOnChangeListener_mE0CD7931B509EECE6987B7FE6D5CFABBFE92C756_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_AddOnDeviceConnectedChanged_m036FF5AFE7CEFFADDAB364C74805EB258B032AF2_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_AddOnTrackingChanged_m5099C28D8428F47C64B8A35022AACB6657AE8704_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_AddOnUpdateListener_mACE077D77A3952509CD813A00DB3F4D1DDE78C18_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_AddOnValidPoseChanged_m571C4066CBBF6E1BD1711E89D0C944D7C8D7044F_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_RemoveAllListeners_m63323402C737B82C29820B0E7489C69C94AC5B0A_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_RemoveOnActiveChangeListener_m540C3DD61D691B2D852E73B728D4A9BC1D28155E_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_RemoveOnChangeListener_mE3746E0808A4E1713DC7C4C4A0D83BFDDA6189EE_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_RemoveOnDeviceConnectedChanged_mE91E5D3EDA07BB7108322354DC4910EDC7DA8818_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_RemoveOnTrackingChanged_mA44878BEC23BE913CA4F4D1AC60F465F2B4A7428_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_RemoveOnUpdateListener_m061F84B6D110F36E34AA9AE0C1C439229F090AF2_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_RemoveOnValidPoseChanged_mCD7BBDB8BC0CDD3933B813C224B08DABFE2CE1FE_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_SetTrackingUniverseOrigin_mB6C8C0D15AF0C30A8E36EDDB4BB96E15AA771926_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_Source_GetChanged_mE8C7EA7519C1AA58C1B772041E738D0E2396AC4F_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_Source_GetPoseAtTimeOffset_mB6CC830F3A16661AADD4A98BBA70E69ED8C98480_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_Source_GetVelocitiesAtTimeOffset_m2FB2A8F8F97750A6CAD390348AAE8E9DF94B9B69_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_Source_Initialize_m36604AB0F3E49250F5761A885B005CB8CEE2DBD1_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_Source_Preinitialize_mF8A86BF078F169380E7A1C75DA6C20B49380AE9B_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_Source_RemoveAllListeners_m07850B9C3B46C5E52AA8D2FF80B15C09E7901B9C_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_Source_UpdateValue_mC4B5455237B6CD71DD565F71267D8EB3AE3681F0_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_Source__cctor_m44C76531AEEB39E153C3ACC82277C93A9F5E2650_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_Source__ctor_mF1DE2EFD35F9F2DE84EFAEE2308E35D274D93C6E_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_Source_add_onActiveBindingChange_m3FD39BFF599A4AF5014F2EEC7D595AF9D2EF33E2_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_Source_add_onActiveChange_mBA4F89F86236E399A9FABBA6AB7BE9AFDD5E3FAA_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_Source_add_onChange_m86F9A8C49AAB74EFBED5F82F2BD450687C529567_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_Source_add_onDeviceConnectedChanged_m26FF6E86E0FC25279D9DF124C3A00DA48AA22C6C_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_Source_add_onTrackingChanged_m916FC64B7E280897083BF516B0A2B10BC4034499_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_Source_add_onUpdate_mD30D3D18C58E9FD060B58868A4D66478C06FCADD_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_Source_add_onValidPoseChanged_m3A2F8586C49174C0E6E2D338A8C8D523848BB156_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_Source_remove_onActiveBindingChange_m0D0CAD39C7DE6CF2F11E94DC745FE84C863543E0_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_Source_remove_onActiveChange_m8F91AE91CFF61C2B5D4B496A28827C3A416169B4_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_Source_remove_onChange_mB962374F5363148A48D573F22C5E1B385411E27F_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_Source_remove_onDeviceConnectedChanged_mC9B0E9333A8B27427E1197B77C6D287FD2C687F5_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_Source_remove_onTrackingChanged_m664E1FD884A6B739CF4BCAD82EE1168E234B0AAF_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_Source_remove_onUpdate_m600E90F3012E310B2178CB34B8E3C3A35380A579_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_Source_remove_onValidPoseChanged_mD755CC0727CEA9CCE5BC937BA6D2B2458E47EA62_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_UnityEngine_ISerializationCallbackReceiver_OnAfterDeserialize_m542B66C859252C963099DD155209573883795E1D_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose__ctor_m9464B0D35BD8034B23824E25C08534F2285C1EE4_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_add_onActiveBindingChange_m1083C095268CA42B96BD150DB1B5E2B3D438506B_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_add_onActiveChange_m5BE66990FFC6EA6107FE836333BA254B0522F722_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_add_onChange_m997D5080D5BE5893E9B4B4CB8196EEDF5A9C7068_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_add_onDeviceConnectedChanged_mC46C2DAB4A7CD3F7D956A6D0BA0337F2DB1C0E06_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_add_onTrackingChanged_m1799E771CBED8F83129BE5FD39C9E3638F7174D8_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_add_onUpdate_mB4F30C8838622CFDE925590ABDDB5F2C9844E226_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_add_onValidPoseChanged_m43553E9E3C5618194CF9E162AAAAE0389413AF7C_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_remove_onActiveBindingChange_m68150CC2EDBF222450D7B6206A5E850B359AE23F_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_remove_onActiveChange_mA3D8719F745F20FBECCACABC20E5C5936085BE8D_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_remove_onChange_m7AB5B45656A97E587B2D196A847CCED49EFAA562_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_remove_onDeviceConnectedChanged_m852BA417954EF0DCD5B45B0FE020DBAAD5DFB50D_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_remove_onTrackingChanged_mB2B162B58F8F00ACDAC09C6EDBCEC68DCB4CC364_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_remove_onUpdate_mEE34A9454F2B6F79A1DACFC96E049B02523F05EA_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_remove_onValidPoseChanged_mF17EB0A0FB465A75B75EAD280657BDFAF075DD96_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Single_AddOnActiveBindingChangeListener_mB7CB581B0D4FAF87AE6BF8B11B21A681BA1FD38D_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Single_AddOnActiveChangeListener_m5B1C1690BE86EB2B261BB42DE8D06ECE4037CFBE_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Single_AddOnAxisListener_mDC8E857CE06E2E56AF430C0DA494261B84080712_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Single_AddOnChangeListener_m7576F4BA39BACF3830CB5B61A66885570DEFDD14_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Single_AddOnUpdateListener_m7FFE46EEBFF0E97F275AA1BA945E757FC67D4D8E_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Single_GetAxisDelta_mEE91A98FFD9F6DD3E571B23AE98D8CE0A519499E_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Single_GetAxis_m38BBC5069E57681D2416DCD674CCD8174AF48014_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Single_GetLastAxisDelta_mF6DC101084D2C6688BA68D73A16822E7A65E86CB_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Single_GetLastAxis_m23C84AFD00C95E729CD5B3AF5783A6ED5E124F63_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Single_RemoveAllListeners_m74BF913FA38100D5FE1F65CB66A95A9ED4D681D6_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Single_RemoveOnActiveBindingChangeListener_m82094ADF9218003298FB165C9513EA1104B15153_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Single_RemoveOnActiveChangeListener_m8784E8A54DBA77FBD4FFFB977AD6EAB03FAB55E5_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Single_RemoveOnAxisListener_m5041ABB1425990602C409CE8A70889D1A649951F_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Single_RemoveOnChangeListener_m29B1C454A213754C06A1F273D099AA3F7D1055DB_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Single_RemoveOnUpdateListener_mF657D750181A53DD651F4F30AE4A928CD64E5A60_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Single_Source_Initialize_m53DE9E58518352759683719B8B9E0311F7F73CB5_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Single_Source_Map__ctor_m5230AC179899A005416BDED17CA57813E46D3095_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Single_Source_Preinitialize_m1769FF988DBF9A4937DE8932081DD660DF809EE9_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Single_Source_RemoveAllListeners_m23CB655786F09E0A2FB8273527639C90768AF2D8_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Single_Source_UpdateValue_m342A203285338EFB358A2140A2EC386A0E651825_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Single_Source__cctor_m4C91DF7DBD2F5909F49FC503C53D230CC4D6214E_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Single_Source__ctor_m6C2E2412DF45BCFEF410B2D60E41727F39C20EAE_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Single_Source_add_onActiveBindingChange_mBC814F86ED29A7728BD85E8C212603D05F4FD282_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Single_Source_add_onActiveChange_mB2A4804575E6862178A504A34B087ADCC989D383_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Single_Source_add_onAxis_m61631AE5B07E5BA034D52ED44590597E6A13AC24_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Single_Source_add_onChange_m293210E1B8395F5C75302844AF1B4AE74DD2F3A8_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Single_Source_add_onUpdate_m5598F5E0ABEB41135E942BD9590CA88A5E89A167_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Single_Source_remove_onActiveBindingChange_mE912C712F7759127954B79BD2D501387E3AD0DFD_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Single_Source_remove_onActiveChange_mBE7196AA119D8715900D8D6F01D96E60801EF7E7_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Single_Source_remove_onAxis_m75F1ECD8DFD59FAFE831C580F22F1E2A0039D742_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Single_Source_remove_onChange_m416E274F58D3F80F3E2AC77BC933E1D1F8BBDECD_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Single_Source_remove_onUpdate_mB6B6416FED4DA773EFB6D97EE7E6C9ED8F4CA16C_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Single_UnityEngine_ISerializationCallbackReceiver_OnAfterDeserialize_mA3FB9F54BAB9C46D112D75070AB415712072E106_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Single__ctor_m54397AD53667A6A5F802AD03B0AE9FD5B8576EAA_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Single_add_onActiveBindingChange_m68FC0D2B9886A5B085973A35BE71083F0F89F2C8_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Single_add_onActiveChange_m313983387066E4AEB9EE56226D918580918D29B4_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Single_add_onAxis_m93232285C0B461E71935EDAA96839809879CEB7F_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Single_add_onChange_mECD8985BBEB55C32B356FCD43A4FE50EDD2470BB_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Single_add_onUpdate_m279978627CDEC1A2D24D7FFF8744184921486C5E_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Single_get_axis_m52D0C27D2C42B7BE3518D54AB092863143B95214_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Single_get_delta_m158F016351CC276BEA667F77A1FD5AC6A8E69B8B_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Single_get_lastAxis_mDBBC59BDFC504DDCE1CDAD0CEB2AE7374C0733E7_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Single_get_lastDelta_m55BD651C44A90063AFED28254EA27A8A69AA9422_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Single_remove_onActiveBindingChange_mCD7C3632A01FFA6039315EB7AAE0AF2775126519_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Single_remove_onActiveChange_m05301F4079CAB13041B7E8117DFCA8B8BB8281BA_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Single_remove_onAxis_mD089192E4070BD76C175B6F93E8D6DA41015FA01_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Single_remove_onChange_m7044963CD35787CC64871FED9EEC3867399C4193_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Single_remove_onUpdate_m08F81B2DFFA8F719CBBA64BDE85E6B556DBD0BA4_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_AddOnActiveChangeListener_m968F5A067EEF273C13B96DA27DA642DC6A66B7C2_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_AddOnChangeListener_m015ECED2A9A19D9CB71C6EFC04BF7D1AD88D9290_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_AddOnDeviceConnectedChanged_m3F6920BBAA979A2A0EDB59218966A88E6668CA14_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_AddOnTrackingChanged_m402EAA963427FA4B649E5CD85AD98003FF7AE894_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_AddOnUpdateListener_mF20419DDD629D27354EF32069FE666DBF37C1883_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_AddOnValidPoseChanged_m0B6DFA419BB885643B320E96B7B878EBE921B39B_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_GetActive_m1090332A342CFB41EB88E6BA50BBF8C696743A69_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_GetAngularVelocity_mFC20208B5BBBA5BA921F1541BFBD1126A2850946_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_GetBoneCount_mD2B27CC695DB970DE6F2FE9F57747306854185FC_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_GetBoneHierarchy_m7D18FB8905FF1D89946B28716C590188E1F6FC10_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_GetBoneName_mEA597D8F1EF33A996E2E155F72D403299BD01303_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_GetBonePositions_m3255642E4D3CFB08DC2AE68FEA234FD6BBCCD138_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_GetBoneRotations_mC23759032EEAB4D83EC4A90A7A438EA436291C78_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_GetDeviceIsConnected_m2EFB10F62BBFDDCA14A353A0BFEA9DE26BFEDB72_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_GetFingerCurl_mC08596A16D1F47B97BFC0DC8D9089F761751C1A6_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_GetFingerCurls_m2C47FBB4DDBD822E30CDE306DB8C42EC1FB263EC_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_GetFingerSplays_mF382477166C698F55CD9295969DCB4CCC3E50358_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_GetLastAngularVelocity_m0F6189A5D1B1F5400F4725891F1B7FB6B6A724BD_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_GetLastBonePositions_mE1AA5295248A42DA26F2BA67C7995CDE65111CD4_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_GetLastBoneRotations_mA7A7CBCB0B61367EBB09C9970C85A174877AF694_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_GetLastDeviceIsConnected_mDE11523435C378EA5D5CDFD18DA2E613A7B3C84A_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_GetLastFingerCurl_mEB8760CBAD65388E4ECCD999150C3D6287171762_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_GetLastFingerCurls_m837D08CB5F33E924DD18D57A5336BB79C1F11E8E_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_GetLastFingerSplays_mDE773B4D09E1BD573E61E51F68DBD2C539F7A5E6_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_GetLastLocalPosition_m47A225F07BE521AE0BCE352D6D9DC51EB1D3C367_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_GetLastLocalRotation_m99CAC6CCFA012EAA3DEF73BA8DC2B781E6F95542_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_GetLastPoseIsValid_m59F5349322FB99412B3D1169B6529CBC47045464_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_GetLastSplay_mD9365C49755E9D59DBB8F2F9F42EBFA2EAC6DFD5_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_GetLastTrackingResult_mDBFAC087C635E4347DC745BFB4DB19F7D02496E1_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_GetLastVelocity_m578B56041101A994C9D60A31B9F360B7E0C63AAF_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_GetLocalPosition_mB9C362EEA9A30E590A62D20B986A94C98AA1FAD5_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_GetLocalRotation_m917F58C641A69D3E71DC1F48AF8B2EE2A8C143D2_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_GetLocalizedName_mF07AA355A8428E17B01D29C04A8EE5BD26F7BAFE_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_GetPoseAtTimeOffset_m180DEFDDB1EBE9F66B1E68EA11C534AE1F963844_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_GetPoseIsValid_m99410844A085C144FE9679FF756ADC2B0D030B74_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_GetReferenceTransforms_mF0608EEEF82F4263849BAF18074F2109F340F437_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_GetSkeletalTrackingLevel_m506F568104A97D2AF710929EEF208A8552F263EC_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_GetSplay_m66C049355DEC070185248558C8532BA370F5B14F_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_GetTrackingResult_m5BB423D6684C4A314D1D0B1E3FC27CEA96BF033B_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_GetVelocitiesAtTimeOffset_mA16A4DD85A3A182D61A4FBAA4FC09417857D6CC2_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_GetVelocity_m9E1BECFF847AF4E2FB1AEF786886D9A1A5F42E38_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_RemoveAllListeners_mE49DBB0C5B7D2533D419168DA403C151602E632B_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_RemoveOnActiveChangeListener_m5EEB8B05019E4FA1D263D5298C7BED8CC507AB70_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_RemoveOnChangeListener_mB2F9897205C80AF6D1559591895B282C44FD5EBE_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_RemoveOnDeviceConnectedChanged_mA18F4C31F9CFC1776A1AAC396D3C1119A628C9F7_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_RemoveOnTrackingChanged_m84311EDF54C6CF314A1458A5E9F5770D0F03CD80_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_RemoveOnUpdateListener_m22D3BD60FDA20067C6BA839C23D845E6D8435CBC_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_RemoveOnValidPoseChanged_mF9850F2CF5D7E5BB5227391356781343755A1A1A_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_SetRangeOfMotion_mB0FD356FCF72B2D9C3356B048E3C0C59A3E1BD0A_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_SetSkeletalTransformSpace_m9AF712F1EE4C4C5873469F8B2FA021B51808FDFE_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_Source_GetBoneCount_m3049CC9D5CB2C3913C467D136B8C6A9CDAAC8148_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_Source_GetBoneHierarchy_mC62033C6184EC1DDE31051D1F167683E8D842445_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_Source_GetBoneName_m464D8D3413D7782356433F03C854B062E0080488_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_Source_GetReferenceTransforms_m81B42FB78EE3A685B9B88FD3083F07971B5EA156_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_Source_GetSkeletalTrackingLevel_mFDDD94CFD727E816757BEF9129ADCC8996495018_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_Source_Initialize_mD90DB98AC67B0E6CCCC98FCC5D0BC9FE9F575E0E_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_Source_Map__ctor_m94EBD8B1E2B39C473A26A199467C31E19BB0875E_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_Source_Preinitialize_m47C2874B5006B62A17DF399E7851585E7AB8ACB5_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_Source_RemoveAllListeners_m1C7F648E9F2D3A92AE51329453DB463BA1DB7C0A_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_Source_UpdateSkeletalSummaryData_m5649DAF4900617BF2B608028C8382A7A22A1F41E_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_Source_UpdateValue_m4CC3C0F03604C6D5866D0F2D173B3D0E37FCD321_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_Source__cctor_m37A7364F8A5DFA7EEDE4BF41168A4C3EFE848C7A_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_Source__ctor_m93B62239D040E4627952B767DE40BCC4FDBB7E58_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_Source_add_onActiveBindingChange_mBA9217A7856EEA2B9346304FF33C00F3D35E381D_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_Source_add_onActiveChange_m24B7A7690655124BE37A0854C004BBD11BCBB83A_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_Source_add_onChange_m51211C4C14EDFC3532F9E4E205AE05A33C33B853_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_Source_add_onDeviceConnectedChanged_m6AF65BCB16CBA635F075BFE3D42A85C1164FBC3C_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_Source_add_onTrackingChanged_mE82310A9D0C5662FEC30C6BBCA210B4448D954F8_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_Source_add_onUpdate_mB78DAAB24C69C5E8AFB4AAD7BD5207D3F1A4FE61_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_Source_add_onValidPoseChanged_m1E9DD56A71BF38267F5BD279BAA9B378842512AE_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_Source_remove_onActiveBindingChange_m928BE406E004801B903336174AD71858077B4C31_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_Source_remove_onActiveChange_mBFD27080A2A3F94F22EB62EBD7C2680D21CF0C40_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_Source_remove_onChange_m6ACA4D17F3A943BB1AA96322576AA634DE0D8A0B_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_Source_remove_onDeviceConnectedChanged_m77B3EE4ABFF7936EC6951485DCD048DBEE1562BB_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_Source_remove_onTrackingChanged_m40D169DABA55145AB54EF10974905C05237D2CA6_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_Source_remove_onUpdate_m628C295EBD7F127757F7A4EB9CBD5563BF36C4B9_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_Source_remove_onValidPoseChanged_mEE5E18D3BE29BAA782313154AFB6EAC448899DDE_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_UnityEngine_ISerializationCallbackReceiver_OnAfterDeserialize_mD478BABEFF9FCACC6B15E5540EEB66A8F7B4B545_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_UpdateTransform_mF3D00D161725EB90B155367C2485D7D092FF7650_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_UpdateValueWithoutEvents_m80B8E2671A00A7299A9E0FEF4010A8D87B01A782_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_UpdateValue_mE62B79C272C41DD238C9CA81CEF61DF2B877217F_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton__cctor_m0A753A149C76699E9C1789D16079474F9935338E_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton__ctor_mE6AACBF536160DEB2EF9E0D179D7E92A652D1AAC_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_add_onActiveBindingChange_m8D5A4BC261C88609DCE5DC6C6ACA319CF096AE3F_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_add_onActiveChange_m40D17716AE011C3C546D9311644DBD3FB039CD2A_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_add_onChange_m12A9C8A760977D5F6A2B691B27F130DDF53AC3D3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_add_onDeviceConnectedChanged_m2FD37E10C687951C71A4A79F55C2A0AB37599130_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_add_onTrackingChanged_mB96616276E5D48F8D8B4FDDC7EB5FDDBB05EC51F_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_add_onUpdate_m89B6922E93039BB28782F32834DA94C7BCD71B93_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_add_onValidPoseChanged_m8A1E87644531826367E6DE4A764001078158B278_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_get_bonePositions_m0CA06F68C8E3D40036C298CE992C74A79C7DA80B_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_get_boneRotations_m3FF8C259CBA6EF38DF309362206C2871EB754A4E_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_get_fingerCurls_m3543777AFAE62C3BDA5BD87296938A0A35968571_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_get_fingerSplays_m9832D47FA8272304A06D1EA2D5983C6A0335C727_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_get_indexCurl_mD40CFB5149D41DB9D401BA6316815F76D18E0862_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_get_indexMiddleSplay_mCEF74F281F6E5AA8CEB2B6C38C4521E6A5504CD3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_get_lastBonePositions_m5BB686C5104B6A2CC970239A84B0DD48EED00005_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_get_lastBoneRotations_m116F9E698A5C9DF460DD49FBEAB7580913027F9A_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_get_lastFingerCurls_m5845169E9581C6D1C559916C9FE6B0D3BD88F569_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_get_lastFingerSplays_m1E58D2AB027C4777F5CF744CB81DA5D20AAE272B_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_get_lastIndexCurl_mCB8D286E38817E71154F868F20D34781520D2342_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_get_lastIndexMiddleSplay_m537358EC0290F43CF54E6D59908B747203917385_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_get_lastMiddleCurl_mC6A14E91B4ACA78451639E2A12A0236CB8D4355A_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_get_lastMiddleRingSplay_mC7DEA2B768D213209132AC1104490CE3A03225FF_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_get_lastPinkyCurl_mCDDB123CC3232A31CDEA442F98F1CD266DFB9473_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_get_lastRingCurl_m49EEA025CDB4F42177A323C4669EE312C2EA104C_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_get_lastRingPinkySplay_mFE5B99D86267CAE5489CC5E38E519A9B703130EA_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_get_lastThumbCurl_mA1ADB215014FA9B424CBE9C69873CF3F0C09178F_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_get_lastThumbIndexSplay_mAA1B4AB36A8AE75C12693D14E837471F029582D7_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_get_middleCurl_m62D5CADF36971682033F53297E0BCCAE2F9291A6_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_get_middleRingSplay_mBBA68EE0F20B15BE029B99BF161B6EF769D7D8B1_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_get_onlyUpdateSummaryData_m57BB2B0F924B60931DB89E6519BD6D5DDC004366_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_get_pinkyCurl_m64F91EE4141BACF0FB606F58E150CCD42ED15685_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_get_poseChanged_mF300E3B9442ECA6F8E85323A6273F2D2BEDE7EBA_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_get_rangeOfMotion_m164E7E3524A4E441911795109FF3C8A713FE2F8B_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_get_ringCurl_m772FE608FCBB514FFB5AC088EB6A8562E76EE96B_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_get_ringPinkySplay_mE8F0CDC0FEF2E9B5574DE4052C71992CE0C056E3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_get_skeletalTrackingLevel_mB93F6FEB223A4694998A515C3F9527AFF46EF44E_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_get_skeletalTransformSpace_m609F4EBCC946B2013DF3781F78AF5EEBEF0BB4BD_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_get_summaryDataType_m623171EDFBF7215BCD7536B87E88905D92821B6E_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_get_thumbCurl_m1BD464F774C52E7239B4B82F4E56084F4CC1A8CC_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_get_thumbIndexSplay_mE7F58F6BB1309EEB6BAF6048DCEF95FD7CDB7F7F_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_remove_onActiveBindingChange_m848BD10A1A87309B1DF4069572CE76F5F239F466_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_remove_onActiveChange_m339C2BDD69B4C1D1B1B7FFCA026A61BACEFD7189_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_remove_onChange_mDA1FBCD9AF09E3137213E323678DB53BA516C55F_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_remove_onDeviceConnectedChanged_m6FBB5C7942C93C9C82500CD1A245E867B5D9BEEF_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_remove_onTrackingChanged_mD222AA9F12ADA54BAE92CF73C3F29AB76394B216_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_remove_onUpdate_m0E36BACC29D6E1A0EDD1D71A7A8FCACB8AD9BE12_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_remove_onValidPoseChanged_mE939F9AB63558D460288EB13C9AB8BA094CE5EAA_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_set_onlyUpdateSummaryData_mBE77FD96B7AE53E0FA0679F6C3F88016BF0643ED_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_set_rangeOfMotion_mE9FC966C95EE20AEF5689640E39EE9856ADD0E5A_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_set_skeletalTransformSpace_m4ED1658D08275F082D2DB094A2A9C4083A70CE86_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Skeleton_set_summaryDataType_m85AD270664D25F20C965A5329F0EB80F0F8C64DA_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Source_Initialize_m2F3A973A4338854E06EA51D28CA96DAB1E5D29C9_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Source_Map_GetActionDirection_mA48BA216E276F882C863341B7197E590B6471119_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Source_Map_Initialize_m026286BBD5EDFADDDD6493E5E6B632914BDD7384_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Source_Map_PreInitialize_m92B10A3664CE21397144BE519EB0F549E43DAE5F_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Source_Map__cctor_mA2B070AE1F0DA7660630C182FFE245986C0CF8DF_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector2_AddOnActiveBindingChangeListener_m782C7E1662D5992F1FC16F8AE5277261C8CF190A_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector2_AddOnActiveChangeListener_mB482EE4DEBAFBA46414DEBBC39ED9AC8FC7F3690_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector2_AddOnAxisListener_m41DCCC8C19E06128A5587638761C43B0F3DE54D3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector2_AddOnChangeListener_m64A46A34B927694B2F168690057D360C05CB482A_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector2_AddOnUpdateListener_m44C545B1A2FFCBF62436D4573D2933241EE5C02F_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector2_GetAxisDelta_m28C52C9103D70A67727BE8BA93551C07951670B0_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector2_GetAxis_m8A479C238CC933D200B7011F525F49CF84C42BC2_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector2_GetLastAxisDelta_mFB4F219149889D017084BD189D659164E91E90C6_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector2_GetLastAxis_m4B679A6140787156C4E740F9A68D03D919111484_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector2_RemoveAllListeners_m49919B1004E61AA9B3F681AD68E0FA3AF8E5DAB5_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector2_RemoveOnActiveBindingChangeListener_m3136E04858B1362DC1D5D51CE1FA27DF160A89E1_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector2_RemoveOnActiveChangeListener_m46F423A97CF4BB520CDB40A179E5971C977B7F0B_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector2_RemoveOnAxisListener_m5DA6BC281F67A62D6396C9C22181A1AAD96925BC_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector2_RemoveOnChangeListener_m0365B74847AF715BC567B7896894340AAF36CD9A_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector2_RemoveOnUpdateListener_m72B61CC091D476EB3C4BAC150E9F2A15C3F0C7CD_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector2_Source_Initialize_m90A49D5DF367619ED0E44D8BBA576C462EA60BE5_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector2_Source_Preinitialize_m39F0990901BECE7D2D6DB17C641DD2E3568446A7_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector2_Source_RemoveAllListeners_m0564DE9124B7CBF7D9B6002104B86394AB98C479_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector2_Source_UpdateValue_mEEAE61A19D6A526B51C6C58470E2C4138E622F70_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector2_Source__cctor_m109983A3B5698EF03E84DA7A388D3D5A48234297_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector2_Source__ctor_mA8DA34CDBF8615AE3F8B90FF052847F729723380_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector2_Source_add_onActiveBindingChange_m20A8F56D533537F5F8A266864F0D28DB6975ECA9_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector2_Source_add_onActiveChange_mF1C9AA7D52BB851FC037A050CA2E477248691A7E_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector2_Source_add_onAxis_mDB5D5F366F588EC53B657FE1E8E76AD98D31FE92_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector2_Source_add_onChange_m6C1A0066B7F15BFA3348848BFC482FE665B0649E_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector2_Source_add_onUpdate_m9172BD3EC7BDD734F533EC8BDF91C1D2F1B3D94D_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector2_Source_remove_onActiveBindingChange_m061B7C87671943E15EACAA99CC379C3C335702D5_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector2_Source_remove_onActiveChange_m59715CB9C8767EEA397A11B60489B7A7767462CF_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector2_Source_remove_onAxis_m0C77619D89CD25BCD1475F3E1FF3F40B112D0E8B_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector2_Source_remove_onChange_m4A6174FB66AC722D2DDA3F70045A3AE0B7578C13_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector2_Source_remove_onUpdate_m54A0BCD658A033B1D95FEAA48FCA4165F8E33CD3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector2_UnityEngine_ISerializationCallbackReceiver_OnAfterDeserialize_mCC1A059E602FABC67D24682DD3533CBC66564596_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector2__ctor_mD1E4556AF2B0DFA3D91AD96685F317978593D46C_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector2_add_onActiveBindingChange_m963BB4FE60F0CDE3896183F29151E51F079A24A7_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector2_add_onActiveChange_m9EA2FF019B7968EB2BA9BF053F590FD97F20EE92_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector2_add_onAxis_mD6AD44E8467900BFC690827ACC860F9BDC6213C6_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector2_add_onChange_m2E54BCC55EB640613E93BD19303BE637F65A92E2_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector2_add_onUpdate_mCA2F84092B776F04C0FA3E8461B5DADA42E43906_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector2_get_axis_mE421CADA54F41607E4F071B793BD5C55171812FB_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector2_get_delta_m368E3DEDCCE873F323FCB9B85C72103971A2B1E9_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector2_get_lastAxis_m746D1B31C63B141A97FBD0F4138D703FC5F9DEF0_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector2_get_lastDelta_mDDAC2B9F3DB61F8B1015F22B61CDD9591FEEEDD7_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector2_remove_onActiveBindingChange_m7500E9F9BDA0A03ACEEB0B9D181748D4BAF775D7_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector2_remove_onActiveChange_mAEC443E675E12BF7B828ABBC60434149D960F1A7_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector2_remove_onAxis_mD9B1611CF8ABF8163817BF48CAF68C8F9184687F_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector2_remove_onChange_m77DB5FCCDE335AD1CA8C3C2AF3C40837EC43F1F0_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Vector2_remove_onUpdate_m4BD84B90D18629BEB3A1280A09F3A0D5D8515465_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t TrackingChangeHandler_BeginInvoke_m5FA958FD035B70AD17F6510053509600700104E4_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t TrackingChangeHandler_BeginInvoke_m955DC601FB9B8E845AC3A16FE5FCFDB84C2305B6_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t UpdateHandler_BeginInvoke_m430BFA9B9645814C843942491046D82BA9A54A84_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t UpdateHandler_BeginInvoke_m64FF27DC0A666F058A491BA34AFE54460466D6CE_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t UpdateHandler_BeginInvoke_m6C9F24AA0EB98146E7D8306F52FF2A69DC4273A6_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t UpdateHandler_BeginInvoke_mCCFCDD791936AD878CAC7259D08D91E020CA5636_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ValidPoseChangeHandler_BeginInvoke_m630A2F9E244998060CC71348CEA35E8537E47DE5_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ValidPoseChangeHandler_BeginInvoke_m7FAF6DF123DCFADD1A78D6A2B271FDE962EA1C63_MetadataUsageId;
struct CultureData_tF43B080FFA6EB278F4F289BCDA3FB74B6C208ECD_marshaled_com;
struct CultureData_tF43B080FFA6EB278F4F289BCDA3FB74B6C208ECD_marshaled_pinvoke;
struct CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F_marshaled_com;
struct CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F_marshaled_pinvoke;
struct Delegate_t_marshaled_com;
struct Delegate_t_marshaled_pinvoke;

struct RigidTransformU5BU5D_tC98EB3576009E5D825D0D43671A65D32A2449ECC;
struct DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86;
struct Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83;
struct SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5;
struct StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E;
struct QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3;
struct Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28;
struct EVRInputStringBitsU5BU5D_t6940A5B40972263CCCE9DFDBA05F69BA9DD7B52C;
struct SteamVR_Action_Skeleton_SourceU5BU5D_tD7F80DE17D413EA1E866B222C9A63AEBFF0CE5D4;
struct SteamVR_Input_SourcesU5BU5D_t735048547A8599BA461FE16B1BC029194E1F184A;
struct SteamVR_Skeleton_FingerIndexEnumU5BU5D_t972F21E674536524E0BFB5F382CFD0ACA1714DB7;
struct SteamVR_Skeleton_FingerSplayIndexEnumU5BU5D_t92DED5924CD2E6B494B9ABD5961F9BC65373A81B;
struct VRBoneTransform_tU5BU5D_tB5FDD0831D295612D4381D2F2D8805367FAF83F8;

IL2CPP_EXTERN_C_BEGIN
IL2CPP_EXTERN_C_END

#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// System.Object

struct Il2CppArrayBounds;

// System.Array


// System.Globalization.CultureInfo
struct CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F  : public RuntimeObject
{
public:
	// System.Boolean System.Globalization.CultureInfo::m_isReadOnly
	bool ___m_isReadOnly_3;
	// System.Int32 System.Globalization.CultureInfo::cultureID
	int32_t ___cultureID_4;
	// System.Int32 System.Globalization.CultureInfo::parent_lcid
	int32_t ___parent_lcid_5;
	// System.Int32 System.Globalization.CultureInfo::datetime_index
	int32_t ___datetime_index_6;
	// System.Int32 System.Globalization.CultureInfo::number_index
	int32_t ___number_index_7;
	// System.Int32 System.Globalization.CultureInfo::default_calendar_type
	int32_t ___default_calendar_type_8;
	// System.Boolean System.Globalization.CultureInfo::m_useUserOverride
	bool ___m_useUserOverride_9;
	// System.Globalization.NumberFormatInfo modreq(System.Runtime.CompilerServices.IsVolatile) System.Globalization.CultureInfo::numInfo
	NumberFormatInfo_tFDF57037EBC5BC833D0A53EF0327B805994860A8 * ___numInfo_10;
	// System.Globalization.DateTimeFormatInfo modreq(System.Runtime.CompilerServices.IsVolatile) System.Globalization.CultureInfo::dateTimeInfo
	DateTimeFormatInfo_tF4BB3AA482C2F772D2A9022F78BF8727830FAF5F * ___dateTimeInfo_11;
	// System.Globalization.TextInfo modreq(System.Runtime.CompilerServices.IsVolatile) System.Globalization.CultureInfo::textInfo
	TextInfo_t5F1E697CB6A7E5EC80F0DC3A968B9B4A70C291D8 * ___textInfo_12;
	// System.String System.Globalization.CultureInfo::m_name
	String_t* ___m_name_13;
	// System.String System.Globalization.CultureInfo::englishname
	String_t* ___englishname_14;
	// System.String System.Globalization.CultureInfo::nativename
	String_t* ___nativename_15;
	// System.String System.Globalization.CultureInfo::iso3lang
	String_t* ___iso3lang_16;
	// System.String System.Globalization.CultureInfo::iso2lang
	String_t* ___iso2lang_17;
	// System.String System.Globalization.CultureInfo::win3lang
	String_t* ___win3lang_18;
	// System.String System.Globalization.CultureInfo::territory
	String_t* ___territory_19;
	// System.String[] System.Globalization.CultureInfo::native_calendar_names
	StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* ___native_calendar_names_20;
	// System.Globalization.CompareInfo modreq(System.Runtime.CompilerServices.IsVolatile) System.Globalization.CultureInfo::compareInfo
	CompareInfo_tB9A071DBC11AC00AF2EA2066D0C2AE1DCB1865D1 * ___compareInfo_21;
	// System.Void* System.Globalization.CultureInfo::textinfo_data
	void* ___textinfo_data_22;
	// System.Int32 System.Globalization.CultureInfo::m_dataItem
	int32_t ___m_dataItem_23;
	// System.Globalization.Calendar System.Globalization.CultureInfo::calendar
	Calendar_tF55A785ACD277504CF0D2F2C6AD56F76C6E91BD5 * ___calendar_24;
	// System.Globalization.CultureInfo System.Globalization.CultureInfo::parent_culture
	CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F * ___parent_culture_25;
	// System.Boolean System.Globalization.CultureInfo::constructed
	bool ___constructed_26;
	// System.Byte[] System.Globalization.CultureInfo::cached_serialized_form
	ByteU5BU5D_tD06FDBE8142446525DF1C40351D523A228373821* ___cached_serialized_form_27;
	// System.Globalization.CultureData System.Globalization.CultureInfo::m_cultureData
	CultureData_tF43B080FFA6EB278F4F289BCDA3FB74B6C208ECD * ___m_cultureData_28;
	// System.Boolean System.Globalization.CultureInfo::m_isInherited
	bool ___m_isInherited_29;

public:
	inline static int32_t get_offset_of_m_isReadOnly_3() { return static_cast<int32_t>(offsetof(CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F, ___m_isReadOnly_3)); }
	inline bool get_m_isReadOnly_3() const { return ___m_isReadOnly_3; }
	inline bool* get_address_of_m_isReadOnly_3() { return &___m_isReadOnly_3; }
	inline void set_m_isReadOnly_3(bool value)
	{
		___m_isReadOnly_3 = value;
	}

	inline static int32_t get_offset_of_cultureID_4() { return static_cast<int32_t>(offsetof(CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F, ___cultureID_4)); }
	inline int32_t get_cultureID_4() const { return ___cultureID_4; }
	inline int32_t* get_address_of_cultureID_4() { return &___cultureID_4; }
	inline void set_cultureID_4(int32_t value)
	{
		___cultureID_4 = value;
	}

	inline static int32_t get_offset_of_parent_lcid_5() { return static_cast<int32_t>(offsetof(CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F, ___parent_lcid_5)); }
	inline int32_t get_parent_lcid_5() const { return ___parent_lcid_5; }
	inline int32_t* get_address_of_parent_lcid_5() { return &___parent_lcid_5; }
	inline void set_parent_lcid_5(int32_t value)
	{
		___parent_lcid_5 = value;
	}

	inline static int32_t get_offset_of_datetime_index_6() { return static_cast<int32_t>(offsetof(CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F, ___datetime_index_6)); }
	inline int32_t get_datetime_index_6() const { return ___datetime_index_6; }
	inline int32_t* get_address_of_datetime_index_6() { return &___datetime_index_6; }
	inline void set_datetime_index_6(int32_t value)
	{
		___datetime_index_6 = value;
	}

	inline static int32_t get_offset_of_number_index_7() { return static_cast<int32_t>(offsetof(CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F, ___number_index_7)); }
	inline int32_t get_number_index_7() const { return ___number_index_7; }
	inline int32_t* get_address_of_number_index_7() { return &___number_index_7; }
	inline void set_number_index_7(int32_t value)
	{
		___number_index_7 = value;
	}

	inline static int32_t get_offset_of_default_calendar_type_8() { return static_cast<int32_t>(offsetof(CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F, ___default_calendar_type_8)); }
	inline int32_t get_default_calendar_type_8() const { return ___default_calendar_type_8; }
	inline int32_t* get_address_of_default_calendar_type_8() { return &___default_calendar_type_8; }
	inline void set_default_calendar_type_8(int32_t value)
	{
		___default_calendar_type_8 = value;
	}

	inline static int32_t get_offset_of_m_useUserOverride_9() { return static_cast<int32_t>(offsetof(CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F, ___m_useUserOverride_9)); }
	inline bool get_m_useUserOverride_9() const { return ___m_useUserOverride_9; }
	inline bool* get_address_of_m_useUserOverride_9() { return &___m_useUserOverride_9; }
	inline void set_m_useUserOverride_9(bool value)
	{
		___m_useUserOverride_9 = value;
	}

	inline static int32_t get_offset_of_numInfo_10() { return static_cast<int32_t>(offsetof(CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F, ___numInfo_10)); }
	inline NumberFormatInfo_tFDF57037EBC5BC833D0A53EF0327B805994860A8 * get_numInfo_10() const { return ___numInfo_10; }
	inline NumberFormatInfo_tFDF57037EBC5BC833D0A53EF0327B805994860A8 ** get_address_of_numInfo_10() { return &___numInfo_10; }
	inline void set_numInfo_10(NumberFormatInfo_tFDF57037EBC5BC833D0A53EF0327B805994860A8 * value)
	{
		___numInfo_10 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___numInfo_10), (void*)value);
	}

	inline static int32_t get_offset_of_dateTimeInfo_11() { return static_cast<int32_t>(offsetof(CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F, ___dateTimeInfo_11)); }
	inline DateTimeFormatInfo_tF4BB3AA482C2F772D2A9022F78BF8727830FAF5F * get_dateTimeInfo_11() const { return ___dateTimeInfo_11; }
	inline DateTimeFormatInfo_tF4BB3AA482C2F772D2A9022F78BF8727830FAF5F ** get_address_of_dateTimeInfo_11() { return &___dateTimeInfo_11; }
	inline void set_dateTimeInfo_11(DateTimeFormatInfo_tF4BB3AA482C2F772D2A9022F78BF8727830FAF5F * value)
	{
		___dateTimeInfo_11 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___dateTimeInfo_11), (void*)value);
	}

	inline static int32_t get_offset_of_textInfo_12() { return static_cast<int32_t>(offsetof(CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F, ___textInfo_12)); }
	inline TextInfo_t5F1E697CB6A7E5EC80F0DC3A968B9B4A70C291D8 * get_textInfo_12() const { return ___textInfo_12; }
	inline TextInfo_t5F1E697CB6A7E5EC80F0DC3A968B9B4A70C291D8 ** get_address_of_textInfo_12() { return &___textInfo_12; }
	inline void set_textInfo_12(TextInfo_t5F1E697CB6A7E5EC80F0DC3A968B9B4A70C291D8 * value)
	{
		___textInfo_12 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___textInfo_12), (void*)value);
	}

	inline static int32_t get_offset_of_m_name_13() { return static_cast<int32_t>(offsetof(CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F, ___m_name_13)); }
	inline String_t* get_m_name_13() const { return ___m_name_13; }
	inline String_t** get_address_of_m_name_13() { return &___m_name_13; }
	inline void set_m_name_13(String_t* value)
	{
		___m_name_13 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_name_13), (void*)value);
	}

	inline static int32_t get_offset_of_englishname_14() { return static_cast<int32_t>(offsetof(CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F, ___englishname_14)); }
	inline String_t* get_englishname_14() const { return ___englishname_14; }
	inline String_t** get_address_of_englishname_14() { return &___englishname_14; }
	inline void set_englishname_14(String_t* value)
	{
		___englishname_14 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___englishname_14), (void*)value);
	}

	inline static int32_t get_offset_of_nativename_15() { return static_cast<int32_t>(offsetof(CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F, ___nativename_15)); }
	inline String_t* get_nativename_15() const { return ___nativename_15; }
	inline String_t** get_address_of_nativename_15() { return &___nativename_15; }
	inline void set_nativename_15(String_t* value)
	{
		___nativename_15 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___nativename_15), (void*)value);
	}

	inline static int32_t get_offset_of_iso3lang_16() { return static_cast<int32_t>(offsetof(CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F, ___iso3lang_16)); }
	inline String_t* get_iso3lang_16() const { return ___iso3lang_16; }
	inline String_t** get_address_of_iso3lang_16() { return &___iso3lang_16; }
	inline void set_iso3lang_16(String_t* value)
	{
		___iso3lang_16 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___iso3lang_16), (void*)value);
	}

	inline static int32_t get_offset_of_iso2lang_17() { return static_cast<int32_t>(offsetof(CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F, ___iso2lang_17)); }
	inline String_t* get_iso2lang_17() const { return ___iso2lang_17; }
	inline String_t** get_address_of_iso2lang_17() { return &___iso2lang_17; }
	inline void set_iso2lang_17(String_t* value)
	{
		___iso2lang_17 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___iso2lang_17), (void*)value);
	}

	inline static int32_t get_offset_of_win3lang_18() { return static_cast<int32_t>(offsetof(CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F, ___win3lang_18)); }
	inline String_t* get_win3lang_18() const { return ___win3lang_18; }
	inline String_t** get_address_of_win3lang_18() { return &___win3lang_18; }
	inline void set_win3lang_18(String_t* value)
	{
		___win3lang_18 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___win3lang_18), (void*)value);
	}

	inline static int32_t get_offset_of_territory_19() { return static_cast<int32_t>(offsetof(CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F, ___territory_19)); }
	inline String_t* get_territory_19() const { return ___territory_19; }
	inline String_t** get_address_of_territory_19() { return &___territory_19; }
	inline void set_territory_19(String_t* value)
	{
		___territory_19 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___territory_19), (void*)value);
	}

	inline static int32_t get_offset_of_native_calendar_names_20() { return static_cast<int32_t>(offsetof(CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F, ___native_calendar_names_20)); }
	inline StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* get_native_calendar_names_20() const { return ___native_calendar_names_20; }
	inline StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E** get_address_of_native_calendar_names_20() { return &___native_calendar_names_20; }
	inline void set_native_calendar_names_20(StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* value)
	{
		___native_calendar_names_20 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___native_calendar_names_20), (void*)value);
	}

	inline static int32_t get_offset_of_compareInfo_21() { return static_cast<int32_t>(offsetof(CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F, ___compareInfo_21)); }
	inline CompareInfo_tB9A071DBC11AC00AF2EA2066D0C2AE1DCB1865D1 * get_compareInfo_21() const { return ___compareInfo_21; }
	inline CompareInfo_tB9A071DBC11AC00AF2EA2066D0C2AE1DCB1865D1 ** get_address_of_compareInfo_21() { return &___compareInfo_21; }
	inline void set_compareInfo_21(CompareInfo_tB9A071DBC11AC00AF2EA2066D0C2AE1DCB1865D1 * value)
	{
		___compareInfo_21 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___compareInfo_21), (void*)value);
	}

	inline static int32_t get_offset_of_textinfo_data_22() { return static_cast<int32_t>(offsetof(CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F, ___textinfo_data_22)); }
	inline void* get_textinfo_data_22() const { return ___textinfo_data_22; }
	inline void** get_address_of_textinfo_data_22() { return &___textinfo_data_22; }
	inline void set_textinfo_data_22(void* value)
	{
		___textinfo_data_22 = value;
	}

	inline static int32_t get_offset_of_m_dataItem_23() { return static_cast<int32_t>(offsetof(CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F, ___m_dataItem_23)); }
	inline int32_t get_m_dataItem_23() const { return ___m_dataItem_23; }
	inline int32_t* get_address_of_m_dataItem_23() { return &___m_dataItem_23; }
	inline void set_m_dataItem_23(int32_t value)
	{
		___m_dataItem_23 = value;
	}

	inline static int32_t get_offset_of_calendar_24() { return static_cast<int32_t>(offsetof(CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F, ___calendar_24)); }
	inline Calendar_tF55A785ACD277504CF0D2F2C6AD56F76C6E91BD5 * get_calendar_24() const { return ___calendar_24; }
	inline Calendar_tF55A785ACD277504CF0D2F2C6AD56F76C6E91BD5 ** get_address_of_calendar_24() { return &___calendar_24; }
	inline void set_calendar_24(Calendar_tF55A785ACD277504CF0D2F2C6AD56F76C6E91BD5 * value)
	{
		___calendar_24 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___calendar_24), (void*)value);
	}

	inline static int32_t get_offset_of_parent_culture_25() { return static_cast<int32_t>(offsetof(CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F, ___parent_culture_25)); }
	inline CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F * get_parent_culture_25() const { return ___parent_culture_25; }
	inline CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F ** get_address_of_parent_culture_25() { return &___parent_culture_25; }
	inline void set_parent_culture_25(CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F * value)
	{
		___parent_culture_25 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___parent_culture_25), (void*)value);
	}

	inline static int32_t get_offset_of_constructed_26() { return static_cast<int32_t>(offsetof(CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F, ___constructed_26)); }
	inline bool get_constructed_26() const { return ___constructed_26; }
	inline bool* get_address_of_constructed_26() { return &___constructed_26; }
	inline void set_constructed_26(bool value)
	{
		___constructed_26 = value;
	}

	inline static int32_t get_offset_of_cached_serialized_form_27() { return static_cast<int32_t>(offsetof(CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F, ___cached_serialized_form_27)); }
	inline ByteU5BU5D_tD06FDBE8142446525DF1C40351D523A228373821* get_cached_serialized_form_27() const { return ___cached_serialized_form_27; }
	inline ByteU5BU5D_tD06FDBE8142446525DF1C40351D523A228373821** get_address_of_cached_serialized_form_27() { return &___cached_serialized_form_27; }
	inline void set_cached_serialized_form_27(ByteU5BU5D_tD06FDBE8142446525DF1C40351D523A228373821* value)
	{
		___cached_serialized_form_27 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___cached_serialized_form_27), (void*)value);
	}

	inline static int32_t get_offset_of_m_cultureData_28() { return static_cast<int32_t>(offsetof(CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F, ___m_cultureData_28)); }
	inline CultureData_tF43B080FFA6EB278F4F289BCDA3FB74B6C208ECD * get_m_cultureData_28() const { return ___m_cultureData_28; }
	inline CultureData_tF43B080FFA6EB278F4F289BCDA3FB74B6C208ECD ** get_address_of_m_cultureData_28() { return &___m_cultureData_28; }
	inline void set_m_cultureData_28(CultureData_tF43B080FFA6EB278F4F289BCDA3FB74B6C208ECD * value)
	{
		___m_cultureData_28 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_cultureData_28), (void*)value);
	}

	inline static int32_t get_offset_of_m_isInherited_29() { return static_cast<int32_t>(offsetof(CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F, ___m_isInherited_29)); }
	inline bool get_m_isInherited_29() const { return ___m_isInherited_29; }
	inline bool* get_address_of_m_isInherited_29() { return &___m_isInherited_29; }
	inline void set_m_isInherited_29(bool value)
	{
		___m_isInherited_29 = value;
	}
};

struct CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F_StaticFields
{
public:
	// System.Globalization.CultureInfo modreq(System.Runtime.CompilerServices.IsVolatile) System.Globalization.CultureInfo::invariant_culture_info
	CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F * ___invariant_culture_info_0;
	// System.Object System.Globalization.CultureInfo::shared_table_lock
	RuntimeObject * ___shared_table_lock_1;
	// System.Globalization.CultureInfo System.Globalization.CultureInfo::default_current_culture
	CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F * ___default_current_culture_2;
	// System.Globalization.CultureInfo modreq(System.Runtime.CompilerServices.IsVolatile) System.Globalization.CultureInfo::s_DefaultThreadCurrentUICulture
	CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F * ___s_DefaultThreadCurrentUICulture_33;
	// System.Globalization.CultureInfo modreq(System.Runtime.CompilerServices.IsVolatile) System.Globalization.CultureInfo::s_DefaultThreadCurrentCulture
	CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F * ___s_DefaultThreadCurrentCulture_34;
	// System.Collections.Generic.Dictionary`2<System.Int32,System.Globalization.CultureInfo> System.Globalization.CultureInfo::shared_by_number
	Dictionary_2_tC88A56872F7C79DBB9582D4F3FC22ED5D8E0B98B * ___shared_by_number_35;
	// System.Collections.Generic.Dictionary`2<System.String,System.Globalization.CultureInfo> System.Globalization.CultureInfo::shared_by_name
	Dictionary_2_tBA5388DBB42BF620266F9A48E8B859BBBB224E25 * ___shared_by_name_36;
	// System.Boolean System.Globalization.CultureInfo::IsTaiwanSku
	bool ___IsTaiwanSku_37;

public:
	inline static int32_t get_offset_of_invariant_culture_info_0() { return static_cast<int32_t>(offsetof(CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F_StaticFields, ___invariant_culture_info_0)); }
	inline CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F * get_invariant_culture_info_0() const { return ___invariant_culture_info_0; }
	inline CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F ** get_address_of_invariant_culture_info_0() { return &___invariant_culture_info_0; }
	inline void set_invariant_culture_info_0(CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F * value)
	{
		___invariant_culture_info_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___invariant_culture_info_0), (void*)value);
	}

	inline static int32_t get_offset_of_shared_table_lock_1() { return static_cast<int32_t>(offsetof(CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F_StaticFields, ___shared_table_lock_1)); }
	inline RuntimeObject * get_shared_table_lock_1() const { return ___shared_table_lock_1; }
	inline RuntimeObject ** get_address_of_shared_table_lock_1() { return &___shared_table_lock_1; }
	inline void set_shared_table_lock_1(RuntimeObject * value)
	{
		___shared_table_lock_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___shared_table_lock_1), (void*)value);
	}

	inline static int32_t get_offset_of_default_current_culture_2() { return static_cast<int32_t>(offsetof(CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F_StaticFields, ___default_current_culture_2)); }
	inline CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F * get_default_current_culture_2() const { return ___default_current_culture_2; }
	inline CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F ** get_address_of_default_current_culture_2() { return &___default_current_culture_2; }
	inline void set_default_current_culture_2(CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F * value)
	{
		___default_current_culture_2 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___default_current_culture_2), (void*)value);
	}

	inline static int32_t get_offset_of_s_DefaultThreadCurrentUICulture_33() { return static_cast<int32_t>(offsetof(CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F_StaticFields, ___s_DefaultThreadCurrentUICulture_33)); }
	inline CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F * get_s_DefaultThreadCurrentUICulture_33() const { return ___s_DefaultThreadCurrentUICulture_33; }
	inline CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F ** get_address_of_s_DefaultThreadCurrentUICulture_33() { return &___s_DefaultThreadCurrentUICulture_33; }
	inline void set_s_DefaultThreadCurrentUICulture_33(CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F * value)
	{
		___s_DefaultThreadCurrentUICulture_33 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___s_DefaultThreadCurrentUICulture_33), (void*)value);
	}

	inline static int32_t get_offset_of_s_DefaultThreadCurrentCulture_34() { return static_cast<int32_t>(offsetof(CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F_StaticFields, ___s_DefaultThreadCurrentCulture_34)); }
	inline CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F * get_s_DefaultThreadCurrentCulture_34() const { return ___s_DefaultThreadCurrentCulture_34; }
	inline CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F ** get_address_of_s_DefaultThreadCurrentCulture_34() { return &___s_DefaultThreadCurrentCulture_34; }
	inline void set_s_DefaultThreadCurrentCulture_34(CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F * value)
	{
		___s_DefaultThreadCurrentCulture_34 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___s_DefaultThreadCurrentCulture_34), (void*)value);
	}

	inline static int32_t get_offset_of_shared_by_number_35() { return static_cast<int32_t>(offsetof(CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F_StaticFields, ___shared_by_number_35)); }
	inline Dictionary_2_tC88A56872F7C79DBB9582D4F3FC22ED5D8E0B98B * get_shared_by_number_35() const { return ___shared_by_number_35; }
	inline Dictionary_2_tC88A56872F7C79DBB9582D4F3FC22ED5D8E0B98B ** get_address_of_shared_by_number_35() { return &___shared_by_number_35; }
	inline void set_shared_by_number_35(Dictionary_2_tC88A56872F7C79DBB9582D4F3FC22ED5D8E0B98B * value)
	{
		___shared_by_number_35 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___shared_by_number_35), (void*)value);
	}

	inline static int32_t get_offset_of_shared_by_name_36() { return static_cast<int32_t>(offsetof(CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F_StaticFields, ___shared_by_name_36)); }
	inline Dictionary_2_tBA5388DBB42BF620266F9A48E8B859BBBB224E25 * get_shared_by_name_36() const { return ___shared_by_name_36; }
	inline Dictionary_2_tBA5388DBB42BF620266F9A48E8B859BBBB224E25 ** get_address_of_shared_by_name_36() { return &___shared_by_name_36; }
	inline void set_shared_by_name_36(Dictionary_2_tBA5388DBB42BF620266F9A48E8B859BBBB224E25 * value)
	{
		___shared_by_name_36 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___shared_by_name_36), (void*)value);
	}

	inline static int32_t get_offset_of_IsTaiwanSku_37() { return static_cast<int32_t>(offsetof(CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F_StaticFields, ___IsTaiwanSku_37)); }
	inline bool get_IsTaiwanSku_37() const { return ___IsTaiwanSku_37; }
	inline bool* get_address_of_IsTaiwanSku_37() { return &___IsTaiwanSku_37; }
	inline void set_IsTaiwanSku_37(bool value)
	{
		___IsTaiwanSku_37 = value;
	}
};

// Native definition for P/Invoke marshalling of System.Globalization.CultureInfo
struct CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F_marshaled_pinvoke
{
	int32_t ___m_isReadOnly_3;
	int32_t ___cultureID_4;
	int32_t ___parent_lcid_5;
	int32_t ___datetime_index_6;
	int32_t ___number_index_7;
	int32_t ___default_calendar_type_8;
	int32_t ___m_useUserOverride_9;
	NumberFormatInfo_tFDF57037EBC5BC833D0A53EF0327B805994860A8 * ___numInfo_10;
	DateTimeFormatInfo_tF4BB3AA482C2F772D2A9022F78BF8727830FAF5F * ___dateTimeInfo_11;
	TextInfo_t5F1E697CB6A7E5EC80F0DC3A968B9B4A70C291D8 * ___textInfo_12;
	char* ___m_name_13;
	char* ___englishname_14;
	char* ___nativename_15;
	char* ___iso3lang_16;
	char* ___iso2lang_17;
	char* ___win3lang_18;
	char* ___territory_19;
	char** ___native_calendar_names_20;
	CompareInfo_tB9A071DBC11AC00AF2EA2066D0C2AE1DCB1865D1 * ___compareInfo_21;
	void* ___textinfo_data_22;
	int32_t ___m_dataItem_23;
	Calendar_tF55A785ACD277504CF0D2F2C6AD56F76C6E91BD5 * ___calendar_24;
	CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F_marshaled_pinvoke* ___parent_culture_25;
	int32_t ___constructed_26;
	Il2CppSafeArray/*NONE*/* ___cached_serialized_form_27;
	CultureData_tF43B080FFA6EB278F4F289BCDA3FB74B6C208ECD_marshaled_pinvoke* ___m_cultureData_28;
	int32_t ___m_isInherited_29;
};
// Native definition for COM marshalling of System.Globalization.CultureInfo
struct CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F_marshaled_com
{
	int32_t ___m_isReadOnly_3;
	int32_t ___cultureID_4;
	int32_t ___parent_lcid_5;
	int32_t ___datetime_index_6;
	int32_t ___number_index_7;
	int32_t ___default_calendar_type_8;
	int32_t ___m_useUserOverride_9;
	NumberFormatInfo_tFDF57037EBC5BC833D0A53EF0327B805994860A8 * ___numInfo_10;
	DateTimeFormatInfo_tF4BB3AA482C2F772D2A9022F78BF8727830FAF5F * ___dateTimeInfo_11;
	TextInfo_t5F1E697CB6A7E5EC80F0DC3A968B9B4A70C291D8 * ___textInfo_12;
	Il2CppChar* ___m_name_13;
	Il2CppChar* ___englishname_14;
	Il2CppChar* ___nativename_15;
	Il2CppChar* ___iso3lang_16;
	Il2CppChar* ___iso2lang_17;
	Il2CppChar* ___win3lang_18;
	Il2CppChar* ___territory_19;
	Il2CppChar** ___native_calendar_names_20;
	CompareInfo_tB9A071DBC11AC00AF2EA2066D0C2AE1DCB1865D1 * ___compareInfo_21;
	void* ___textinfo_data_22;
	int32_t ___m_dataItem_23;
	Calendar_tF55A785ACD277504CF0D2F2C6AD56F76C6E91BD5 * ___calendar_24;
	CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F_marshaled_com* ___parent_culture_25;
	int32_t ___constructed_26;
	Il2CppSafeArray/*NONE*/* ___cached_serialized_form_27;
	CultureData_tF43B080FFA6EB278F4F289BCDA3FB74B6C208ECD_marshaled_com* ___m_cultureData_28;
	int32_t ___m_isInherited_29;
};

// System.Reflection.MemberInfo
struct MemberInfo_t  : public RuntimeObject
{
public:

public:
};


// System.String
struct String_t  : public RuntimeObject
{
public:
	// System.Int32 System.String::m_stringLength
	int32_t ___m_stringLength_0;
	// System.Char System.String::m_firstChar
	Il2CppChar ___m_firstChar_1;

public:
	inline static int32_t get_offset_of_m_stringLength_0() { return static_cast<int32_t>(offsetof(String_t, ___m_stringLength_0)); }
	inline int32_t get_m_stringLength_0() const { return ___m_stringLength_0; }
	inline int32_t* get_address_of_m_stringLength_0() { return &___m_stringLength_0; }
	inline void set_m_stringLength_0(int32_t value)
	{
		___m_stringLength_0 = value;
	}

	inline static int32_t get_offset_of_m_firstChar_1() { return static_cast<int32_t>(offsetof(String_t, ___m_firstChar_1)); }
	inline Il2CppChar get_m_firstChar_1() const { return ___m_firstChar_1; }
	inline Il2CppChar* get_address_of_m_firstChar_1() { return &___m_firstChar_1; }
	inline void set_m_firstChar_1(Il2CppChar value)
	{
		___m_firstChar_1 = value;
	}
};

struct String_t_StaticFields
{
public:
	// System.String System.String::Empty
	String_t* ___Empty_5;

public:
	inline static int32_t get_offset_of_Empty_5() { return static_cast<int32_t>(offsetof(String_t_StaticFields, ___Empty_5)); }
	inline String_t* get_Empty_5() const { return ___Empty_5; }
	inline String_t** get_address_of_Empty_5() { return &___Empty_5; }
	inline void set_Empty_5(String_t* value)
	{
		___Empty_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___Empty_5), (void*)value);
	}
};


// System.Text.StringBuilder
struct StringBuilder_t  : public RuntimeObject
{
public:
	// System.Char[] System.Text.StringBuilder::m_ChunkChars
	CharU5BU5D_t4CC6ABF0AD71BEC97E3C2F1E9C5677E46D3A75C2* ___m_ChunkChars_0;
	// System.Text.StringBuilder System.Text.StringBuilder::m_ChunkPrevious
	StringBuilder_t * ___m_ChunkPrevious_1;
	// System.Int32 System.Text.StringBuilder::m_ChunkLength
	int32_t ___m_ChunkLength_2;
	// System.Int32 System.Text.StringBuilder::m_ChunkOffset
	int32_t ___m_ChunkOffset_3;
	// System.Int32 System.Text.StringBuilder::m_MaxCapacity
	int32_t ___m_MaxCapacity_4;

public:
	inline static int32_t get_offset_of_m_ChunkChars_0() { return static_cast<int32_t>(offsetof(StringBuilder_t, ___m_ChunkChars_0)); }
	inline CharU5BU5D_t4CC6ABF0AD71BEC97E3C2F1E9C5677E46D3A75C2* get_m_ChunkChars_0() const { return ___m_ChunkChars_0; }
	inline CharU5BU5D_t4CC6ABF0AD71BEC97E3C2F1E9C5677E46D3A75C2** get_address_of_m_ChunkChars_0() { return &___m_ChunkChars_0; }
	inline void set_m_ChunkChars_0(CharU5BU5D_t4CC6ABF0AD71BEC97E3C2F1E9C5677E46D3A75C2* value)
	{
		___m_ChunkChars_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_ChunkChars_0), (void*)value);
	}

	inline static int32_t get_offset_of_m_ChunkPrevious_1() { return static_cast<int32_t>(offsetof(StringBuilder_t, ___m_ChunkPrevious_1)); }
	inline StringBuilder_t * get_m_ChunkPrevious_1() const { return ___m_ChunkPrevious_1; }
	inline StringBuilder_t ** get_address_of_m_ChunkPrevious_1() { return &___m_ChunkPrevious_1; }
	inline void set_m_ChunkPrevious_1(StringBuilder_t * value)
	{
		___m_ChunkPrevious_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_ChunkPrevious_1), (void*)value);
	}

	inline static int32_t get_offset_of_m_ChunkLength_2() { return static_cast<int32_t>(offsetof(StringBuilder_t, ___m_ChunkLength_2)); }
	inline int32_t get_m_ChunkLength_2() const { return ___m_ChunkLength_2; }
	inline int32_t* get_address_of_m_ChunkLength_2() { return &___m_ChunkLength_2; }
	inline void set_m_ChunkLength_2(int32_t value)
	{
		___m_ChunkLength_2 = value;
	}

	inline static int32_t get_offset_of_m_ChunkOffset_3() { return static_cast<int32_t>(offsetof(StringBuilder_t, ___m_ChunkOffset_3)); }
	inline int32_t get_m_ChunkOffset_3() const { return ___m_ChunkOffset_3; }
	inline int32_t* get_address_of_m_ChunkOffset_3() { return &___m_ChunkOffset_3; }
	inline void set_m_ChunkOffset_3(int32_t value)
	{
		___m_ChunkOffset_3 = value;
	}

	inline static int32_t get_offset_of_m_MaxCapacity_4() { return static_cast<int32_t>(offsetof(StringBuilder_t, ___m_MaxCapacity_4)); }
	inline int32_t get_m_MaxCapacity_4() const { return ___m_MaxCapacity_4; }
	inline int32_t* get_address_of_m_MaxCapacity_4() { return &___m_MaxCapacity_4; }
	inline void set_m_MaxCapacity_4(int32_t value)
	{
		___m_MaxCapacity_4 = value;
	}
};


// System.ValueType
struct ValueType_t4D0C27076F7C36E76190FB3328E232BCB1CD1FFF  : public RuntimeObject
{
public:

public:
};

// Native definition for P/Invoke marshalling of System.ValueType
struct ValueType_t4D0C27076F7C36E76190FB3328E232BCB1CD1FFF_marshaled_pinvoke
{
};
// Native definition for COM marshalling of System.ValueType
struct ValueType_t4D0C27076F7C36E76190FB3328E232BCB1CD1FFF_marshaled_com
{
};

// Valve.VR.SteamVR_Action
struct SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734  : public RuntimeObject
{
public:
	// System.String Valve.VR.SteamVR_Action::actionPath
	String_t* ___actionPath_0;
	// System.Boolean Valve.VR.SteamVR_Action::needsReinit
	bool ___needsReinit_1;
	// System.String Valve.VR.SteamVR_Action::cachedShortName
	String_t* ___cachedShortName_3;

public:
	inline static int32_t get_offset_of_actionPath_0() { return static_cast<int32_t>(offsetof(SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734, ___actionPath_0)); }
	inline String_t* get_actionPath_0() const { return ___actionPath_0; }
	inline String_t** get_address_of_actionPath_0() { return &___actionPath_0; }
	inline void set_actionPath_0(String_t* value)
	{
		___actionPath_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___actionPath_0), (void*)value);
	}

	inline static int32_t get_offset_of_needsReinit_1() { return static_cast<int32_t>(offsetof(SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734, ___needsReinit_1)); }
	inline bool get_needsReinit_1() const { return ___needsReinit_1; }
	inline bool* get_address_of_needsReinit_1() { return &___needsReinit_1; }
	inline void set_needsReinit_1(bool value)
	{
		___needsReinit_1 = value;
	}

	inline static int32_t get_offset_of_cachedShortName_3() { return static_cast<int32_t>(offsetof(SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734, ___cachedShortName_3)); }
	inline String_t* get_cachedShortName_3() const { return ___cachedShortName_3; }
	inline String_t** get_address_of_cachedShortName_3() { return &___cachedShortName_3; }
	inline void set_cachedShortName_3(String_t* value)
	{
		___cachedShortName_3 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___cachedShortName_3), (void*)value);
	}
};

struct SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734_StaticFields
{
public:
	// System.Boolean Valve.VR.SteamVR_Action::startUpdatingSourceOnAccess
	bool ___startUpdatingSourceOnAccess_2;

public:
	inline static int32_t get_offset_of_startUpdatingSourceOnAccess_2() { return static_cast<int32_t>(offsetof(SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734_StaticFields, ___startUpdatingSourceOnAccess_2)); }
	inline bool get_startUpdatingSourceOnAccess_2() const { return ___startUpdatingSourceOnAccess_2; }
	inline bool* get_address_of_startUpdatingSourceOnAccess_2() { return &___startUpdatingSourceOnAccess_2; }
	inline void set_startUpdatingSourceOnAccess_2(bool value)
	{
		___startUpdatingSourceOnAccess_2 = value;
	}
};


// Valve.VR.SteamVR_ActionSet
struct SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6  : public RuntimeObject
{
public:
	// System.String Valve.VR.SteamVR_ActionSet::actionSetPath
	String_t* ___actionSetPath_0;
	// Valve.VR.SteamVR_ActionSet_Data Valve.VR.SteamVR_ActionSet::setData
	SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529 * ___setData_1;
	// System.Boolean Valve.VR.SteamVR_ActionSet::initialized
	bool ___initialized_2;

public:
	inline static int32_t get_offset_of_actionSetPath_0() { return static_cast<int32_t>(offsetof(SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6, ___actionSetPath_0)); }
	inline String_t* get_actionSetPath_0() const { return ___actionSetPath_0; }
	inline String_t** get_address_of_actionSetPath_0() { return &___actionSetPath_0; }
	inline void set_actionSetPath_0(String_t* value)
	{
		___actionSetPath_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___actionSetPath_0), (void*)value);
	}

	inline static int32_t get_offset_of_setData_1() { return static_cast<int32_t>(offsetof(SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6, ___setData_1)); }
	inline SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529 * get_setData_1() const { return ___setData_1; }
	inline SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529 ** get_address_of_setData_1() { return &___setData_1; }
	inline void set_setData_1(SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529 * value)
	{
		___setData_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___setData_1), (void*)value);
	}

	inline static int32_t get_offset_of_initialized_2() { return static_cast<int32_t>(offsetof(SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6, ___initialized_2)); }
	inline bool get_initialized_2() const { return ___initialized_2; }
	inline bool* get_address_of_initialized_2() { return &___initialized_2; }
	inline void set_initialized_2(bool value)
	{
		___initialized_2 = value;
	}
};


// Valve.VR.SteamVR_Skeleton_FingerIndexes
struct SteamVR_Skeleton_FingerIndexes_t23102EBBB267071AC40CD07242EE4C746DC7F020  : public RuntimeObject
{
public:

public:
};

struct SteamVR_Skeleton_FingerIndexes_t23102EBBB267071AC40CD07242EE4C746DC7F020_StaticFields
{
public:
	// Valve.VR.SteamVR_Skeleton_FingerIndexEnum[] Valve.VR.SteamVR_Skeleton_FingerIndexes::enumArray
	SteamVR_Skeleton_FingerIndexEnumU5BU5D_t972F21E674536524E0BFB5F382CFD0ACA1714DB7* ___enumArray_5;

public:
	inline static int32_t get_offset_of_enumArray_5() { return static_cast<int32_t>(offsetof(SteamVR_Skeleton_FingerIndexes_t23102EBBB267071AC40CD07242EE4C746DC7F020_StaticFields, ___enumArray_5)); }
	inline SteamVR_Skeleton_FingerIndexEnumU5BU5D_t972F21E674536524E0BFB5F382CFD0ACA1714DB7* get_enumArray_5() const { return ___enumArray_5; }
	inline SteamVR_Skeleton_FingerIndexEnumU5BU5D_t972F21E674536524E0BFB5F382CFD0ACA1714DB7** get_address_of_enumArray_5() { return &___enumArray_5; }
	inline void set_enumArray_5(SteamVR_Skeleton_FingerIndexEnumU5BU5D_t972F21E674536524E0BFB5F382CFD0ACA1714DB7* value)
	{
		___enumArray_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___enumArray_5), (void*)value);
	}
};


// Valve.VR.SteamVR_Skeleton_FingerSplayIndexes
struct SteamVR_Skeleton_FingerSplayIndexes_t0141FA1AFC8CF87E917B728EEBBA9186F26D3246  : public RuntimeObject
{
public:

public:
};

struct SteamVR_Skeleton_FingerSplayIndexes_t0141FA1AFC8CF87E917B728EEBBA9186F26D3246_StaticFields
{
public:
	// Valve.VR.SteamVR_Skeleton_FingerSplayIndexEnum[] Valve.VR.SteamVR_Skeleton_FingerSplayIndexes::enumArray
	SteamVR_Skeleton_FingerSplayIndexEnumU5BU5D_t92DED5924CD2E6B494B9ABD5961F9BC65373A81B* ___enumArray_4;

public:
	inline static int32_t get_offset_of_enumArray_4() { return static_cast<int32_t>(offsetof(SteamVR_Skeleton_FingerSplayIndexes_t0141FA1AFC8CF87E917B728EEBBA9186F26D3246_StaticFields, ___enumArray_4)); }
	inline SteamVR_Skeleton_FingerSplayIndexEnumU5BU5D_t92DED5924CD2E6B494B9ABD5961F9BC65373A81B* get_enumArray_4() const { return ___enumArray_4; }
	inline SteamVR_Skeleton_FingerSplayIndexEnumU5BU5D_t92DED5924CD2E6B494B9ABD5961F9BC65373A81B** get_address_of_enumArray_4() { return &___enumArray_4; }
	inline void set_enumArray_4(SteamVR_Skeleton_FingerSplayIndexEnumU5BU5D_t92DED5924CD2E6B494B9ABD5961F9BC65373A81B* value)
	{
		___enumArray_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___enumArray_4), (void*)value);
	}
};


// System.Boolean
struct Boolean_tB53F6830F670160873277339AA58F15CAED4399C 
{
public:
	// System.Boolean System.Boolean::m_value
	bool ___m_value_0;

public:
	inline static int32_t get_offset_of_m_value_0() { return static_cast<int32_t>(offsetof(Boolean_tB53F6830F670160873277339AA58F15CAED4399C, ___m_value_0)); }
	inline bool get_m_value_0() const { return ___m_value_0; }
	inline bool* get_address_of_m_value_0() { return &___m_value_0; }
	inline void set_m_value_0(bool value)
	{
		___m_value_0 = value;
	}
};

struct Boolean_tB53F6830F670160873277339AA58F15CAED4399C_StaticFields
{
public:
	// System.String System.Boolean::TrueString
	String_t* ___TrueString_5;
	// System.String System.Boolean::FalseString
	String_t* ___FalseString_6;

public:
	inline static int32_t get_offset_of_TrueString_5() { return static_cast<int32_t>(offsetof(Boolean_tB53F6830F670160873277339AA58F15CAED4399C_StaticFields, ___TrueString_5)); }
	inline String_t* get_TrueString_5() const { return ___TrueString_5; }
	inline String_t** get_address_of_TrueString_5() { return &___TrueString_5; }
	inline void set_TrueString_5(String_t* value)
	{
		___TrueString_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___TrueString_5), (void*)value);
	}

	inline static int32_t get_offset_of_FalseString_6() { return static_cast<int32_t>(offsetof(Boolean_tB53F6830F670160873277339AA58F15CAED4399C_StaticFields, ___FalseString_6)); }
	inline String_t* get_FalseString_6() const { return ___FalseString_6; }
	inline String_t** get_address_of_FalseString_6() { return &___FalseString_6; }
	inline void set_FalseString_6(String_t* value)
	{
		___FalseString_6 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___FalseString_6), (void*)value);
	}
};


// System.Char
struct Char_tBF22D9FC341BE970735250BB6FF1A4A92BBA58B9 
{
public:
	// System.Char System.Char::m_value
	Il2CppChar ___m_value_0;

public:
	inline static int32_t get_offset_of_m_value_0() { return static_cast<int32_t>(offsetof(Char_tBF22D9FC341BE970735250BB6FF1A4A92BBA58B9, ___m_value_0)); }
	inline Il2CppChar get_m_value_0() const { return ___m_value_0; }
	inline Il2CppChar* get_address_of_m_value_0() { return &___m_value_0; }
	inline void set_m_value_0(Il2CppChar value)
	{
		___m_value_0 = value;
	}
};

struct Char_tBF22D9FC341BE970735250BB6FF1A4A92BBA58B9_StaticFields
{
public:
	// System.Byte[] System.Char::categoryForLatin1
	ByteU5BU5D_tD06FDBE8142446525DF1C40351D523A228373821* ___categoryForLatin1_3;

public:
	inline static int32_t get_offset_of_categoryForLatin1_3() { return static_cast<int32_t>(offsetof(Char_tBF22D9FC341BE970735250BB6FF1A4A92BBA58B9_StaticFields, ___categoryForLatin1_3)); }
	inline ByteU5BU5D_tD06FDBE8142446525DF1C40351D523A228373821* get_categoryForLatin1_3() const { return ___categoryForLatin1_3; }
	inline ByteU5BU5D_tD06FDBE8142446525DF1C40351D523A228373821** get_address_of_categoryForLatin1_3() { return &___categoryForLatin1_3; }
	inline void set_categoryForLatin1_3(ByteU5BU5D_tD06FDBE8142446525DF1C40351D523A228373821* value)
	{
		___categoryForLatin1_3 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___categoryForLatin1_3), (void*)value);
	}
};


// System.Enum
struct Enum_t2AF27C02B8653AE29442467390005ABC74D8F521  : public ValueType_t4D0C27076F7C36E76190FB3328E232BCB1CD1FFF
{
public:

public:
};

struct Enum_t2AF27C02B8653AE29442467390005ABC74D8F521_StaticFields
{
public:
	// System.Char[] System.Enum::enumSeperatorCharArray
	CharU5BU5D_t4CC6ABF0AD71BEC97E3C2F1E9C5677E46D3A75C2* ___enumSeperatorCharArray_0;

public:
	inline static int32_t get_offset_of_enumSeperatorCharArray_0() { return static_cast<int32_t>(offsetof(Enum_t2AF27C02B8653AE29442467390005ABC74D8F521_StaticFields, ___enumSeperatorCharArray_0)); }
	inline CharU5BU5D_t4CC6ABF0AD71BEC97E3C2F1E9C5677E46D3A75C2* get_enumSeperatorCharArray_0() const { return ___enumSeperatorCharArray_0; }
	inline CharU5BU5D_t4CC6ABF0AD71BEC97E3C2F1E9C5677E46D3A75C2** get_address_of_enumSeperatorCharArray_0() { return &___enumSeperatorCharArray_0; }
	inline void set_enumSeperatorCharArray_0(CharU5BU5D_t4CC6ABF0AD71BEC97E3C2F1E9C5677E46D3A75C2* value)
	{
		___enumSeperatorCharArray_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___enumSeperatorCharArray_0), (void*)value);
	}
};

// Native definition for P/Invoke marshalling of System.Enum
struct Enum_t2AF27C02B8653AE29442467390005ABC74D8F521_marshaled_pinvoke
{
};
// Native definition for COM marshalling of System.Enum
struct Enum_t2AF27C02B8653AE29442467390005ABC74D8F521_marshaled_com
{
};

// System.Int32
struct Int32_t585191389E07734F19F3156FF88FB3EF4800D102 
{
public:
	// System.Int32 System.Int32::m_value
	int32_t ___m_value_0;

public:
	inline static int32_t get_offset_of_m_value_0() { return static_cast<int32_t>(offsetof(Int32_t585191389E07734F19F3156FF88FB3EF4800D102, ___m_value_0)); }
	inline int32_t get_m_value_0() const { return ___m_value_0; }
	inline int32_t* get_address_of_m_value_0() { return &___m_value_0; }
	inline void set_m_value_0(int32_t value)
	{
		___m_value_0 = value;
	}
};


// System.IntPtr
struct IntPtr_t 
{
public:
	// System.Void* System.IntPtr::m_value
	void* ___m_value_0;

public:
	inline static int32_t get_offset_of_m_value_0() { return static_cast<int32_t>(offsetof(IntPtr_t, ___m_value_0)); }
	inline void* get_m_value_0() const { return ___m_value_0; }
	inline void** get_address_of_m_value_0() { return &___m_value_0; }
	inline void set_m_value_0(void* value)
	{
		___m_value_0 = value;
	}
};

struct IntPtr_t_StaticFields
{
public:
	// System.IntPtr System.IntPtr::Zero
	intptr_t ___Zero_1;

public:
	inline static int32_t get_offset_of_Zero_1() { return static_cast<int32_t>(offsetof(IntPtr_t_StaticFields, ___Zero_1)); }
	inline intptr_t get_Zero_1() const { return ___Zero_1; }
	inline intptr_t* get_address_of_Zero_1() { return &___Zero_1; }
	inline void set_Zero_1(intptr_t value)
	{
		___Zero_1 = value;
	}
};


// System.Single
struct Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1 
{
public:
	// System.Single System.Single::m_value
	float ___m_value_0;

public:
	inline static int32_t get_offset_of_m_value_0() { return static_cast<int32_t>(offsetof(Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1, ___m_value_0)); }
	inline float get_m_value_0() const { return ___m_value_0; }
	inline float* get_address_of_m_value_0() { return &___m_value_0; }
	inline void set_m_value_0(float value)
	{
		___m_value_0 = value;
	}
};


// System.UInt32
struct UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B 
{
public:
	// System.UInt32 System.UInt32::m_value
	uint32_t ___m_value_0;

public:
	inline static int32_t get_offset_of_m_value_0() { return static_cast<int32_t>(offsetof(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B, ___m_value_0)); }
	inline uint32_t get_m_value_0() const { return ___m_value_0; }
	inline uint32_t* get_address_of_m_value_0() { return &___m_value_0; }
	inline void set_m_value_0(uint32_t value)
	{
		___m_value_0 = value;
	}
};


// System.UInt64
struct UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E 
{
public:
	// System.UInt64 System.UInt64::m_value
	uint64_t ___m_value_0;

public:
	inline static int32_t get_offset_of_m_value_0() { return static_cast<int32_t>(offsetof(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E, ___m_value_0)); }
	inline uint64_t get_m_value_0() const { return ___m_value_0; }
	inline uint64_t* get_address_of_m_value_0() { return &___m_value_0; }
	inline void set_m_value_0(uint64_t value)
	{
		___m_value_0 = value;
	}
};


// System.Void
struct Void_t22962CB4C05B1D89B55A6E1139F0E87A90987017 
{
public:
	union
	{
		struct
		{
		};
		uint8_t Void_t22962CB4C05B1D89B55A6E1139F0E87A90987017__padding[1];
	};

public:
};


// UnityEngine.Mathf
struct Mathf_tFBDE6467D269BFE410605C7D806FD9991D4A89CB 
{
public:
	union
	{
		struct
		{
		};
		uint8_t Mathf_tFBDE6467D269BFE410605C7D806FD9991D4A89CB__padding[1];
	};

public:
};

struct Mathf_tFBDE6467D269BFE410605C7D806FD9991D4A89CB_StaticFields
{
public:
	// System.Single UnityEngine.Mathf::Epsilon
	float ___Epsilon_0;

public:
	inline static int32_t get_offset_of_Epsilon_0() { return static_cast<int32_t>(offsetof(Mathf_tFBDE6467D269BFE410605C7D806FD9991D4A89CB_StaticFields, ___Epsilon_0)); }
	inline float get_Epsilon_0() const { return ___Epsilon_0; }
	inline float* get_address_of_Epsilon_0() { return &___Epsilon_0; }
	inline void set_Epsilon_0(float value)
	{
		___Epsilon_0 = value;
	}
};


// UnityEngine.Quaternion
struct Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 
{
public:
	// System.Single UnityEngine.Quaternion::x
	float ___x_0;
	// System.Single UnityEngine.Quaternion::y
	float ___y_1;
	// System.Single UnityEngine.Quaternion::z
	float ___z_2;
	// System.Single UnityEngine.Quaternion::w
	float ___w_3;

public:
	inline static int32_t get_offset_of_x_0() { return static_cast<int32_t>(offsetof(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357, ___x_0)); }
	inline float get_x_0() const { return ___x_0; }
	inline float* get_address_of_x_0() { return &___x_0; }
	inline void set_x_0(float value)
	{
		___x_0 = value;
	}

	inline static int32_t get_offset_of_y_1() { return static_cast<int32_t>(offsetof(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357, ___y_1)); }
	inline float get_y_1() const { return ___y_1; }
	inline float* get_address_of_y_1() { return &___y_1; }
	inline void set_y_1(float value)
	{
		___y_1 = value;
	}

	inline static int32_t get_offset_of_z_2() { return static_cast<int32_t>(offsetof(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357, ___z_2)); }
	inline float get_z_2() const { return ___z_2; }
	inline float* get_address_of_z_2() { return &___z_2; }
	inline void set_z_2(float value)
	{
		___z_2 = value;
	}

	inline static int32_t get_offset_of_w_3() { return static_cast<int32_t>(offsetof(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357, ___w_3)); }
	inline float get_w_3() const { return ___w_3; }
	inline float* get_address_of_w_3() { return &___w_3; }
	inline void set_w_3(float value)
	{
		___w_3 = value;
	}
};

struct Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357_StaticFields
{
public:
	// UnityEngine.Quaternion UnityEngine.Quaternion::identityQuaternion
	Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___identityQuaternion_4;

public:
	inline static int32_t get_offset_of_identityQuaternion_4() { return static_cast<int32_t>(offsetof(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357_StaticFields, ___identityQuaternion_4)); }
	inline Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  get_identityQuaternion_4() const { return ___identityQuaternion_4; }
	inline Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 * get_address_of_identityQuaternion_4() { return &___identityQuaternion_4; }
	inline void set_identityQuaternion_4(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  value)
	{
		___identityQuaternion_4 = value;
	}
};


// UnityEngine.Vector2
struct Vector2_tA85D2DD88578276CA8A8796756458277E72D073D 
{
public:
	// System.Single UnityEngine.Vector2::x
	float ___x_0;
	// System.Single UnityEngine.Vector2::y
	float ___y_1;

public:
	inline static int32_t get_offset_of_x_0() { return static_cast<int32_t>(offsetof(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D, ___x_0)); }
	inline float get_x_0() const { return ___x_0; }
	inline float* get_address_of_x_0() { return &___x_0; }
	inline void set_x_0(float value)
	{
		___x_0 = value;
	}

	inline static int32_t get_offset_of_y_1() { return static_cast<int32_t>(offsetof(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D, ___y_1)); }
	inline float get_y_1() const { return ___y_1; }
	inline float* get_address_of_y_1() { return &___y_1; }
	inline void set_y_1(float value)
	{
		___y_1 = value;
	}
};

struct Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_StaticFields
{
public:
	// UnityEngine.Vector2 UnityEngine.Vector2::zeroVector
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___zeroVector_2;
	// UnityEngine.Vector2 UnityEngine.Vector2::oneVector
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___oneVector_3;
	// UnityEngine.Vector2 UnityEngine.Vector2::upVector
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___upVector_4;
	// UnityEngine.Vector2 UnityEngine.Vector2::downVector
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___downVector_5;
	// UnityEngine.Vector2 UnityEngine.Vector2::leftVector
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___leftVector_6;
	// UnityEngine.Vector2 UnityEngine.Vector2::rightVector
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___rightVector_7;
	// UnityEngine.Vector2 UnityEngine.Vector2::positiveInfinityVector
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___positiveInfinityVector_8;
	// UnityEngine.Vector2 UnityEngine.Vector2::negativeInfinityVector
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___negativeInfinityVector_9;

public:
	inline static int32_t get_offset_of_zeroVector_2() { return static_cast<int32_t>(offsetof(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_StaticFields, ___zeroVector_2)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_zeroVector_2() const { return ___zeroVector_2; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_zeroVector_2() { return &___zeroVector_2; }
	inline void set_zeroVector_2(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___zeroVector_2 = value;
	}

	inline static int32_t get_offset_of_oneVector_3() { return static_cast<int32_t>(offsetof(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_StaticFields, ___oneVector_3)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_oneVector_3() const { return ___oneVector_3; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_oneVector_3() { return &___oneVector_3; }
	inline void set_oneVector_3(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___oneVector_3 = value;
	}

	inline static int32_t get_offset_of_upVector_4() { return static_cast<int32_t>(offsetof(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_StaticFields, ___upVector_4)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_upVector_4() const { return ___upVector_4; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_upVector_4() { return &___upVector_4; }
	inline void set_upVector_4(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___upVector_4 = value;
	}

	inline static int32_t get_offset_of_downVector_5() { return static_cast<int32_t>(offsetof(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_StaticFields, ___downVector_5)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_downVector_5() const { return ___downVector_5; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_downVector_5() { return &___downVector_5; }
	inline void set_downVector_5(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___downVector_5 = value;
	}

	inline static int32_t get_offset_of_leftVector_6() { return static_cast<int32_t>(offsetof(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_StaticFields, ___leftVector_6)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_leftVector_6() const { return ___leftVector_6; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_leftVector_6() { return &___leftVector_6; }
	inline void set_leftVector_6(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___leftVector_6 = value;
	}

	inline static int32_t get_offset_of_rightVector_7() { return static_cast<int32_t>(offsetof(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_StaticFields, ___rightVector_7)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_rightVector_7() const { return ___rightVector_7; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_rightVector_7() { return &___rightVector_7; }
	inline void set_rightVector_7(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___rightVector_7 = value;
	}

	inline static int32_t get_offset_of_positiveInfinityVector_8() { return static_cast<int32_t>(offsetof(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_StaticFields, ___positiveInfinityVector_8)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_positiveInfinityVector_8() const { return ___positiveInfinityVector_8; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_positiveInfinityVector_8() { return &___positiveInfinityVector_8; }
	inline void set_positiveInfinityVector_8(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___positiveInfinityVector_8 = value;
	}

	inline static int32_t get_offset_of_negativeInfinityVector_9() { return static_cast<int32_t>(offsetof(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_StaticFields, ___negativeInfinityVector_9)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_negativeInfinityVector_9() const { return ___negativeInfinityVector_9; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_negativeInfinityVector_9() { return &___negativeInfinityVector_9; }
	inline void set_negativeInfinityVector_9(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___negativeInfinityVector_9 = value;
	}
};


// UnityEngine.Vector3
struct Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 
{
public:
	// System.Single UnityEngine.Vector3::x
	float ___x_2;
	// System.Single UnityEngine.Vector3::y
	float ___y_3;
	// System.Single UnityEngine.Vector3::z
	float ___z_4;

public:
	inline static int32_t get_offset_of_x_2() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720, ___x_2)); }
	inline float get_x_2() const { return ___x_2; }
	inline float* get_address_of_x_2() { return &___x_2; }
	inline void set_x_2(float value)
	{
		___x_2 = value;
	}

	inline static int32_t get_offset_of_y_3() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720, ___y_3)); }
	inline float get_y_3() const { return ___y_3; }
	inline float* get_address_of_y_3() { return &___y_3; }
	inline void set_y_3(float value)
	{
		___y_3 = value;
	}

	inline static int32_t get_offset_of_z_4() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720, ___z_4)); }
	inline float get_z_4() const { return ___z_4; }
	inline float* get_address_of_z_4() { return &___z_4; }
	inline void set_z_4(float value)
	{
		___z_4 = value;
	}
};

struct Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_StaticFields
{
public:
	// UnityEngine.Vector3 UnityEngine.Vector3::zeroVector
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___zeroVector_5;
	// UnityEngine.Vector3 UnityEngine.Vector3::oneVector
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___oneVector_6;
	// UnityEngine.Vector3 UnityEngine.Vector3::upVector
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___upVector_7;
	// UnityEngine.Vector3 UnityEngine.Vector3::downVector
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___downVector_8;
	// UnityEngine.Vector3 UnityEngine.Vector3::leftVector
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___leftVector_9;
	// UnityEngine.Vector3 UnityEngine.Vector3::rightVector
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___rightVector_10;
	// UnityEngine.Vector3 UnityEngine.Vector3::forwardVector
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___forwardVector_11;
	// UnityEngine.Vector3 UnityEngine.Vector3::backVector
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___backVector_12;
	// UnityEngine.Vector3 UnityEngine.Vector3::positiveInfinityVector
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___positiveInfinityVector_13;
	// UnityEngine.Vector3 UnityEngine.Vector3::negativeInfinityVector
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___negativeInfinityVector_14;

public:
	inline static int32_t get_offset_of_zeroVector_5() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_StaticFields, ___zeroVector_5)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_zeroVector_5() const { return ___zeroVector_5; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_zeroVector_5() { return &___zeroVector_5; }
	inline void set_zeroVector_5(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___zeroVector_5 = value;
	}

	inline static int32_t get_offset_of_oneVector_6() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_StaticFields, ___oneVector_6)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_oneVector_6() const { return ___oneVector_6; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_oneVector_6() { return &___oneVector_6; }
	inline void set_oneVector_6(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___oneVector_6 = value;
	}

	inline static int32_t get_offset_of_upVector_7() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_StaticFields, ___upVector_7)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_upVector_7() const { return ___upVector_7; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_upVector_7() { return &___upVector_7; }
	inline void set_upVector_7(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___upVector_7 = value;
	}

	inline static int32_t get_offset_of_downVector_8() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_StaticFields, ___downVector_8)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_downVector_8() const { return ___downVector_8; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_downVector_8() { return &___downVector_8; }
	inline void set_downVector_8(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___downVector_8 = value;
	}

	inline static int32_t get_offset_of_leftVector_9() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_StaticFields, ___leftVector_9)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_leftVector_9() const { return ___leftVector_9; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_leftVector_9() { return &___leftVector_9; }
	inline void set_leftVector_9(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___leftVector_9 = value;
	}

	inline static int32_t get_offset_of_rightVector_10() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_StaticFields, ___rightVector_10)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_rightVector_10() const { return ___rightVector_10; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_rightVector_10() { return &___rightVector_10; }
	inline void set_rightVector_10(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___rightVector_10 = value;
	}

	inline static int32_t get_offset_of_forwardVector_11() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_StaticFields, ___forwardVector_11)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_forwardVector_11() const { return ___forwardVector_11; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_forwardVector_11() { return &___forwardVector_11; }
	inline void set_forwardVector_11(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___forwardVector_11 = value;
	}

	inline static int32_t get_offset_of_backVector_12() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_StaticFields, ___backVector_12)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_backVector_12() const { return ___backVector_12; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_backVector_12() { return &___backVector_12; }
	inline void set_backVector_12(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___backVector_12 = value;
	}

	inline static int32_t get_offset_of_positiveInfinityVector_13() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_StaticFields, ___positiveInfinityVector_13)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_positiveInfinityVector_13() const { return ___positiveInfinityVector_13; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_positiveInfinityVector_13() { return &___positiveInfinityVector_13; }
	inline void set_positiveInfinityVector_13(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___positiveInfinityVector_13 = value;
	}

	inline static int32_t get_offset_of_negativeInfinityVector_14() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_StaticFields, ___negativeInfinityVector_14)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_negativeInfinityVector_14() const { return ___negativeInfinityVector_14; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_negativeInfinityVector_14() { return &___negativeInfinityVector_14; }
	inline void set_negativeInfinityVector_14(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___negativeInfinityVector_14 = value;
	}
};


// Valve.VR.HmdMatrix34_t
struct HmdMatrix34_t_tAD83D388E6173A848E1FE39121EE1BB9FE7F6305 
{
public:
	// System.Single Valve.VR.HmdMatrix34_t::m0
	float ___m0_0;
	// System.Single Valve.VR.HmdMatrix34_t::m1
	float ___m1_1;
	// System.Single Valve.VR.HmdMatrix34_t::m2
	float ___m2_2;
	// System.Single Valve.VR.HmdMatrix34_t::m3
	float ___m3_3;
	// System.Single Valve.VR.HmdMatrix34_t::m4
	float ___m4_4;
	// System.Single Valve.VR.HmdMatrix34_t::m5
	float ___m5_5;
	// System.Single Valve.VR.HmdMatrix34_t::m6
	float ___m6_6;
	// System.Single Valve.VR.HmdMatrix34_t::m7
	float ___m7_7;
	// System.Single Valve.VR.HmdMatrix34_t::m8
	float ___m8_8;
	// System.Single Valve.VR.HmdMatrix34_t::m9
	float ___m9_9;
	// System.Single Valve.VR.HmdMatrix34_t::m10
	float ___m10_10;
	// System.Single Valve.VR.HmdMatrix34_t::m11
	float ___m11_11;

public:
	inline static int32_t get_offset_of_m0_0() { return static_cast<int32_t>(offsetof(HmdMatrix34_t_tAD83D388E6173A848E1FE39121EE1BB9FE7F6305, ___m0_0)); }
	inline float get_m0_0() const { return ___m0_0; }
	inline float* get_address_of_m0_0() { return &___m0_0; }
	inline void set_m0_0(float value)
	{
		___m0_0 = value;
	}

	inline static int32_t get_offset_of_m1_1() { return static_cast<int32_t>(offsetof(HmdMatrix34_t_tAD83D388E6173A848E1FE39121EE1BB9FE7F6305, ___m1_1)); }
	inline float get_m1_1() const { return ___m1_1; }
	inline float* get_address_of_m1_1() { return &___m1_1; }
	inline void set_m1_1(float value)
	{
		___m1_1 = value;
	}

	inline static int32_t get_offset_of_m2_2() { return static_cast<int32_t>(offsetof(HmdMatrix34_t_tAD83D388E6173A848E1FE39121EE1BB9FE7F6305, ___m2_2)); }
	inline float get_m2_2() const { return ___m2_2; }
	inline float* get_address_of_m2_2() { return &___m2_2; }
	inline void set_m2_2(float value)
	{
		___m2_2 = value;
	}

	inline static int32_t get_offset_of_m3_3() { return static_cast<int32_t>(offsetof(HmdMatrix34_t_tAD83D388E6173A848E1FE39121EE1BB9FE7F6305, ___m3_3)); }
	inline float get_m3_3() const { return ___m3_3; }
	inline float* get_address_of_m3_3() { return &___m3_3; }
	inline void set_m3_3(float value)
	{
		___m3_3 = value;
	}

	inline static int32_t get_offset_of_m4_4() { return static_cast<int32_t>(offsetof(HmdMatrix34_t_tAD83D388E6173A848E1FE39121EE1BB9FE7F6305, ___m4_4)); }
	inline float get_m4_4() const { return ___m4_4; }
	inline float* get_address_of_m4_4() { return &___m4_4; }
	inline void set_m4_4(float value)
	{
		___m4_4 = value;
	}

	inline static int32_t get_offset_of_m5_5() { return static_cast<int32_t>(offsetof(HmdMatrix34_t_tAD83D388E6173A848E1FE39121EE1BB9FE7F6305, ___m5_5)); }
	inline float get_m5_5() const { return ___m5_5; }
	inline float* get_address_of_m5_5() { return &___m5_5; }
	inline void set_m5_5(float value)
	{
		___m5_5 = value;
	}

	inline static int32_t get_offset_of_m6_6() { return static_cast<int32_t>(offsetof(HmdMatrix34_t_tAD83D388E6173A848E1FE39121EE1BB9FE7F6305, ___m6_6)); }
	inline float get_m6_6() const { return ___m6_6; }
	inline float* get_address_of_m6_6() { return &___m6_6; }
	inline void set_m6_6(float value)
	{
		___m6_6 = value;
	}

	inline static int32_t get_offset_of_m7_7() { return static_cast<int32_t>(offsetof(HmdMatrix34_t_tAD83D388E6173A848E1FE39121EE1BB9FE7F6305, ___m7_7)); }
	inline float get_m7_7() const { return ___m7_7; }
	inline float* get_address_of_m7_7() { return &___m7_7; }
	inline void set_m7_7(float value)
	{
		___m7_7 = value;
	}

	inline static int32_t get_offset_of_m8_8() { return static_cast<int32_t>(offsetof(HmdMatrix34_t_tAD83D388E6173A848E1FE39121EE1BB9FE7F6305, ___m8_8)); }
	inline float get_m8_8() const { return ___m8_8; }
	inline float* get_address_of_m8_8() { return &___m8_8; }
	inline void set_m8_8(float value)
	{
		___m8_8 = value;
	}

	inline static int32_t get_offset_of_m9_9() { return static_cast<int32_t>(offsetof(HmdMatrix34_t_tAD83D388E6173A848E1FE39121EE1BB9FE7F6305, ___m9_9)); }
	inline float get_m9_9() const { return ___m9_9; }
	inline float* get_address_of_m9_9() { return &___m9_9; }
	inline void set_m9_9(float value)
	{
		___m9_9 = value;
	}

	inline static int32_t get_offset_of_m10_10() { return static_cast<int32_t>(offsetof(HmdMatrix34_t_tAD83D388E6173A848E1FE39121EE1BB9FE7F6305, ___m10_10)); }
	inline float get_m10_10() const { return ___m10_10; }
	inline float* get_address_of_m10_10() { return &___m10_10; }
	inline void set_m10_10(float value)
	{
		___m10_10 = value;
	}

	inline static int32_t get_offset_of_m11_11() { return static_cast<int32_t>(offsetof(HmdMatrix34_t_tAD83D388E6173A848E1FE39121EE1BB9FE7F6305, ___m11_11)); }
	inline float get_m11_11() const { return ___m11_11; }
	inline float* get_address_of_m11_11() { return &___m11_11; }
	inline void set_m11_11(float value)
	{
		___m11_11 = value;
	}
};


// Valve.VR.HmdQuaternionf_t
struct HmdQuaternionf_t_tCE0ACBA93E70AA544844617F487F6A634A9E4A70 
{
public:
	// System.Single Valve.VR.HmdQuaternionf_t::w
	float ___w_0;
	// System.Single Valve.VR.HmdQuaternionf_t::x
	float ___x_1;
	// System.Single Valve.VR.HmdQuaternionf_t::y
	float ___y_2;
	// System.Single Valve.VR.HmdQuaternionf_t::z
	float ___z_3;

public:
	inline static int32_t get_offset_of_w_0() { return static_cast<int32_t>(offsetof(HmdQuaternionf_t_tCE0ACBA93E70AA544844617F487F6A634A9E4A70, ___w_0)); }
	inline float get_w_0() const { return ___w_0; }
	inline float* get_address_of_w_0() { return &___w_0; }
	inline void set_w_0(float value)
	{
		___w_0 = value;
	}

	inline static int32_t get_offset_of_x_1() { return static_cast<int32_t>(offsetof(HmdQuaternionf_t_tCE0ACBA93E70AA544844617F487F6A634A9E4A70, ___x_1)); }
	inline float get_x_1() const { return ___x_1; }
	inline float* get_address_of_x_1() { return &___x_1; }
	inline void set_x_1(float value)
	{
		___x_1 = value;
	}

	inline static int32_t get_offset_of_y_2() { return static_cast<int32_t>(offsetof(HmdQuaternionf_t_tCE0ACBA93E70AA544844617F487F6A634A9E4A70, ___y_2)); }
	inline float get_y_2() const { return ___y_2; }
	inline float* get_address_of_y_2() { return &___y_2; }
	inline void set_y_2(float value)
	{
		___y_2 = value;
	}

	inline static int32_t get_offset_of_z_3() { return static_cast<int32_t>(offsetof(HmdQuaternionf_t_tCE0ACBA93E70AA544844617F487F6A634A9E4A70, ___z_3)); }
	inline float get_z_3() const { return ___z_3; }
	inline float* get_address_of_z_3() { return &___z_3; }
	inline void set_z_3(float value)
	{
		___z_3 = value;
	}
};


// Valve.VR.HmdVector3_t
struct HmdVector3_t_tEFA290D649DE2E28E5863ED6F09C667A0492FCF3 
{
public:
	// System.Single Valve.VR.HmdVector3_t::v0
	float ___v0_0;
	// System.Single Valve.VR.HmdVector3_t::v1
	float ___v1_1;
	// System.Single Valve.VR.HmdVector3_t::v2
	float ___v2_2;

public:
	inline static int32_t get_offset_of_v0_0() { return static_cast<int32_t>(offsetof(HmdVector3_t_tEFA290D649DE2E28E5863ED6F09C667A0492FCF3, ___v0_0)); }
	inline float get_v0_0() const { return ___v0_0; }
	inline float* get_address_of_v0_0() { return &___v0_0; }
	inline void set_v0_0(float value)
	{
		___v0_0 = value;
	}

	inline static int32_t get_offset_of_v1_1() { return static_cast<int32_t>(offsetof(HmdVector3_t_tEFA290D649DE2E28E5863ED6F09C667A0492FCF3, ___v1_1)); }
	inline float get_v1_1() const { return ___v1_1; }
	inline float* get_address_of_v1_1() { return &___v1_1; }
	inline void set_v1_1(float value)
	{
		___v1_1 = value;
	}

	inline static int32_t get_offset_of_v2_2() { return static_cast<int32_t>(offsetof(HmdVector3_t_tEFA290D649DE2E28E5863ED6F09C667A0492FCF3, ___v2_2)); }
	inline float get_v2_2() const { return ___v2_2; }
	inline float* get_address_of_v2_2() { return &___v2_2; }
	inline void set_v2_2(float value)
	{
		___v2_2 = value;
	}
};


// Valve.VR.HmdVector4_t
struct HmdVector4_t_tBA2A305DD2E705FAAC9CC5D2FD13B64202A381F3 
{
public:
	// System.Single Valve.VR.HmdVector4_t::v0
	float ___v0_0;
	// System.Single Valve.VR.HmdVector4_t::v1
	float ___v1_1;
	// System.Single Valve.VR.HmdVector4_t::v2
	float ___v2_2;
	// System.Single Valve.VR.HmdVector4_t::v3
	float ___v3_3;

public:
	inline static int32_t get_offset_of_v0_0() { return static_cast<int32_t>(offsetof(HmdVector4_t_tBA2A305DD2E705FAAC9CC5D2FD13B64202A381F3, ___v0_0)); }
	inline float get_v0_0() const { return ___v0_0; }
	inline float* get_address_of_v0_0() { return &___v0_0; }
	inline void set_v0_0(float value)
	{
		___v0_0 = value;
	}

	inline static int32_t get_offset_of_v1_1() { return static_cast<int32_t>(offsetof(HmdVector4_t_tBA2A305DD2E705FAAC9CC5D2FD13B64202A381F3, ___v1_1)); }
	inline float get_v1_1() const { return ___v1_1; }
	inline float* get_address_of_v1_1() { return &___v1_1; }
	inline void set_v1_1(float value)
	{
		___v1_1 = value;
	}

	inline static int32_t get_offset_of_v2_2() { return static_cast<int32_t>(offsetof(HmdVector4_t_tBA2A305DD2E705FAAC9CC5D2FD13B64202A381F3, ___v2_2)); }
	inline float get_v2_2() const { return ___v2_2; }
	inline float* get_address_of_v2_2() { return &___v2_2; }
	inline void set_v2_2(float value)
	{
		___v2_2 = value;
	}

	inline static int32_t get_offset_of_v3_3() { return static_cast<int32_t>(offsetof(HmdVector4_t_tBA2A305DD2E705FAAC9CC5D2FD13B64202A381F3, ___v3_3)); }
	inline float get_v3_3() const { return ___v3_3; }
	inline float* get_address_of_v3_3() { return &___v3_3; }
	inline void set_v3_3(float value)
	{
		___v3_3 = value;
	}
};


// Valve.VR.IVRCompositor
struct IVRCompositor_tD41C86F469DDC1A52B62E22B3B31DD5FFE5EB890 
{
public:
	// Valve.VR.IVRCompositor/_SetTrackingSpace Valve.VR.IVRCompositor::SetTrackingSpace
	_SetTrackingSpace_t348CBF365645621C0BC888EBBE94D3BE6687DD58 * ___SetTrackingSpace_0;
	// Valve.VR.IVRCompositor/_GetTrackingSpace Valve.VR.IVRCompositor::GetTrackingSpace
	_GetTrackingSpace_tA79B4C912BD02AA0EDD83FC57FAE73E46E5B882D * ___GetTrackingSpace_1;
	// Valve.VR.IVRCompositor/_WaitGetPoses Valve.VR.IVRCompositor::WaitGetPoses
	_WaitGetPoses_t8FBB49D540A4521220D3D00976C2B89F0415F63D * ___WaitGetPoses_2;
	// Valve.VR.IVRCompositor/_GetLastPoses Valve.VR.IVRCompositor::GetLastPoses
	_GetLastPoses_t95337A7DB72F11B41ED8C02251C777AEB5E9E2FD * ___GetLastPoses_3;
	// Valve.VR.IVRCompositor/_GetLastPoseForTrackedDeviceIndex Valve.VR.IVRCompositor::GetLastPoseForTrackedDeviceIndex
	_GetLastPoseForTrackedDeviceIndex_t35111C732E55B4AA3F3BA3C029EE64634999014C * ___GetLastPoseForTrackedDeviceIndex_4;
	// Valve.VR.IVRCompositor/_Submit Valve.VR.IVRCompositor::Submit
	_Submit_t60BC4FDEEF9EE5F00E0F4D15007CBE6C74B5EB44 * ___Submit_5;
	// Valve.VR.IVRCompositor/_ClearLastSubmittedFrame Valve.VR.IVRCompositor::ClearLastSubmittedFrame
	_ClearLastSubmittedFrame_t0ECCEC53139DA7FB06708174457B58CB45243229 * ___ClearLastSubmittedFrame_6;
	// Valve.VR.IVRCompositor/_PostPresentHandoff Valve.VR.IVRCompositor::PostPresentHandoff
	_PostPresentHandoff_t314F84869CA64790F35314666051FB1631337010 * ___PostPresentHandoff_7;
	// Valve.VR.IVRCompositor/_GetFrameTiming Valve.VR.IVRCompositor::GetFrameTiming
	_GetFrameTiming_t7831BA87E11BC4C73429D9B3E350F01EAC8269CD * ___GetFrameTiming_8;
	// Valve.VR.IVRCompositor/_GetFrameTimings Valve.VR.IVRCompositor::GetFrameTimings
	_GetFrameTimings_t57EC12DA46CAE1F6F6B76D4A27D350B1CD415D42 * ___GetFrameTimings_9;
	// Valve.VR.IVRCompositor/_GetFrameTimeRemaining Valve.VR.IVRCompositor::GetFrameTimeRemaining
	_GetFrameTimeRemaining_t16772D3C0E808D2B3CF0E7DC54E70DA170377937 * ___GetFrameTimeRemaining_10;
	// Valve.VR.IVRCompositor/_GetCumulativeStats Valve.VR.IVRCompositor::GetCumulativeStats
	_GetCumulativeStats_tA0CBF977CA6D77007BF3A811E8B6A6A66164A521 * ___GetCumulativeStats_11;
	// Valve.VR.IVRCompositor/_FadeToColor Valve.VR.IVRCompositor::FadeToColor
	_FadeToColor_tCC4B0521289553A4A0AFEF9FE512D8FCA8BB9202 * ___FadeToColor_12;
	// Valve.VR.IVRCompositor/_GetCurrentFadeColor Valve.VR.IVRCompositor::GetCurrentFadeColor
	_GetCurrentFadeColor_t343E335FB53D02F361AC604B6BAF25F3D8415408 * ___GetCurrentFadeColor_13;
	// Valve.VR.IVRCompositor/_FadeGrid Valve.VR.IVRCompositor::FadeGrid
	_FadeGrid_t34BDB8CC19DB79643BB8C7F78EDF8591D5FB3D64 * ___FadeGrid_14;
	// Valve.VR.IVRCompositor/_GetCurrentGridAlpha Valve.VR.IVRCompositor::GetCurrentGridAlpha
	_GetCurrentGridAlpha_tCD27A87A08B3BC2217FFA6594EE4BB6D6BF47168 * ___GetCurrentGridAlpha_15;
	// Valve.VR.IVRCompositor/_SetSkyboxOverride Valve.VR.IVRCompositor::SetSkyboxOverride
	_SetSkyboxOverride_t66FE495E1F260400F1EFF1743C445A340E278822 * ___SetSkyboxOverride_16;
	// Valve.VR.IVRCompositor/_ClearSkyboxOverride Valve.VR.IVRCompositor::ClearSkyboxOverride
	_ClearSkyboxOverride_t67B0279CD96E9B5827D3B1F0738445C3A030BA5F * ___ClearSkyboxOverride_17;
	// Valve.VR.IVRCompositor/_CompositorBringToFront Valve.VR.IVRCompositor::CompositorBringToFront
	_CompositorBringToFront_t5343D37B1101FA91138DC0DCD5FBD3A5F59B2B1E * ___CompositorBringToFront_18;
	// Valve.VR.IVRCompositor/_CompositorGoToBack Valve.VR.IVRCompositor::CompositorGoToBack
	_CompositorGoToBack_tB9DB8D1D9AAB81EE6207C7913090ADD6495801AA * ___CompositorGoToBack_19;
	// Valve.VR.IVRCompositor/_CompositorQuit Valve.VR.IVRCompositor::CompositorQuit
	_CompositorQuit_t18ED3360737B93C153359B4740A94BAC1544C752 * ___CompositorQuit_20;
	// Valve.VR.IVRCompositor/_IsFullscreen Valve.VR.IVRCompositor::IsFullscreen
	_IsFullscreen_t2BFAAACCFEB1F40A52B7B16899A85C757F233B0C * ___IsFullscreen_21;
	// Valve.VR.IVRCompositor/_GetCurrentSceneFocusProcess Valve.VR.IVRCompositor::GetCurrentSceneFocusProcess
	_GetCurrentSceneFocusProcess_t6421A3BC4B38C84F358F6074A3D3083DA382020F * ___GetCurrentSceneFocusProcess_22;
	// Valve.VR.IVRCompositor/_GetLastFrameRenderer Valve.VR.IVRCompositor::GetLastFrameRenderer
	_GetLastFrameRenderer_tB18D1C5D91FD3CE71BD6E8C72EA50E970201EDDD * ___GetLastFrameRenderer_23;
	// Valve.VR.IVRCompositor/_CanRenderScene Valve.VR.IVRCompositor::CanRenderScene
	_CanRenderScene_t16F551BADB55D7F930B6509B204D97A79561A666 * ___CanRenderScene_24;
	// Valve.VR.IVRCompositor/_ShowMirrorWindow Valve.VR.IVRCompositor::ShowMirrorWindow
	_ShowMirrorWindow_t668E6432F0ED9F63EA038C6EBE76BA9D3672392D * ___ShowMirrorWindow_25;
	// Valve.VR.IVRCompositor/_HideMirrorWindow Valve.VR.IVRCompositor::HideMirrorWindow
	_HideMirrorWindow_t9C709E267F93B42371E75EABB26432E4E2B48410 * ___HideMirrorWindow_26;
	// Valve.VR.IVRCompositor/_IsMirrorWindowVisible Valve.VR.IVRCompositor::IsMirrorWindowVisible
	_IsMirrorWindowVisible_tB080895D09F4C11C79F65D88DEB0D0759D8C0E4E * ___IsMirrorWindowVisible_27;
	// Valve.VR.IVRCompositor/_CompositorDumpImages Valve.VR.IVRCompositor::CompositorDumpImages
	_CompositorDumpImages_t72EC96F53BAE526F747D8A57989C1DA08035DD43 * ___CompositorDumpImages_28;
	// Valve.VR.IVRCompositor/_ShouldAppRenderWithLowResources Valve.VR.IVRCompositor::ShouldAppRenderWithLowResources
	_ShouldAppRenderWithLowResources_tCB09B8D3E65DB6C46E6464963BC62B94E7F661D6 * ___ShouldAppRenderWithLowResources_29;
	// Valve.VR.IVRCompositor/_ForceInterleavedReprojectionOn Valve.VR.IVRCompositor::ForceInterleavedReprojectionOn
	_ForceInterleavedReprojectionOn_tFE845BC19FFB70A32F2CEBE69A730314E4F10241 * ___ForceInterleavedReprojectionOn_30;
	// Valve.VR.IVRCompositor/_ForceReconnectProcess Valve.VR.IVRCompositor::ForceReconnectProcess
	_ForceReconnectProcess_t42AAAFE45346087068EB9BCE4D8AB2D6591AC8B0 * ___ForceReconnectProcess_31;
	// Valve.VR.IVRCompositor/_SuspendRendering Valve.VR.IVRCompositor::SuspendRendering
	_SuspendRendering_tC9EA4D458AE7DEFEB96CD6F28EA74C2D97CB080C * ___SuspendRendering_32;
	// Valve.VR.IVRCompositor/_GetMirrorTextureD3D11 Valve.VR.IVRCompositor::GetMirrorTextureD3D11
	_GetMirrorTextureD3D11_t381C14BA597ED97A9A9828F42D013A009A4DF4A4 * ___GetMirrorTextureD3D11_33;
	// Valve.VR.IVRCompositor/_ReleaseMirrorTextureD3D11 Valve.VR.IVRCompositor::ReleaseMirrorTextureD3D11
	_ReleaseMirrorTextureD3D11_t6E374E0BEC9B8E9F88EC0EDE8E41AB43A8D138F9 * ___ReleaseMirrorTextureD3D11_34;
	// Valve.VR.IVRCompositor/_GetMirrorTextureGL Valve.VR.IVRCompositor::GetMirrorTextureGL
	_GetMirrorTextureGL_tA06AABF32A6143F3C5B44A80CA9EC1A298EE8C9F * ___GetMirrorTextureGL_35;
	// Valve.VR.IVRCompositor/_ReleaseSharedGLTexture Valve.VR.IVRCompositor::ReleaseSharedGLTexture
	_ReleaseSharedGLTexture_t2E539F5AE30C1CCC23E51738272DF8A53E8AD5B0 * ___ReleaseSharedGLTexture_36;
	// Valve.VR.IVRCompositor/_LockGLSharedTextureForAccess Valve.VR.IVRCompositor::LockGLSharedTextureForAccess
	_LockGLSharedTextureForAccess_tA2603FA2A992EED1C5C02BC975E85A0F659339AE * ___LockGLSharedTextureForAccess_37;
	// Valve.VR.IVRCompositor/_UnlockGLSharedTextureForAccess Valve.VR.IVRCompositor::UnlockGLSharedTextureForAccess
	_UnlockGLSharedTextureForAccess_tD4D376FA10FDD78116934904862757CE3821494A * ___UnlockGLSharedTextureForAccess_38;
	// Valve.VR.IVRCompositor/_GetVulkanInstanceExtensionsRequired Valve.VR.IVRCompositor::GetVulkanInstanceExtensionsRequired
	_GetVulkanInstanceExtensionsRequired_t7A4FE11C16D2F9E9DA48671D5A1D78B2A41AA1DE * ___GetVulkanInstanceExtensionsRequired_39;
	// Valve.VR.IVRCompositor/_GetVulkanDeviceExtensionsRequired Valve.VR.IVRCompositor::GetVulkanDeviceExtensionsRequired
	_GetVulkanDeviceExtensionsRequired_t51FAF6EABE2B349E9BD987303D4757E80C0B3246 * ___GetVulkanDeviceExtensionsRequired_40;
	// Valve.VR.IVRCompositor/_SetExplicitTimingMode Valve.VR.IVRCompositor::SetExplicitTimingMode
	_SetExplicitTimingMode_tAB84BFAEAA600D952778064AC2B7AFA8A3F7261E * ___SetExplicitTimingMode_41;
	// Valve.VR.IVRCompositor/_SubmitExplicitTimingData Valve.VR.IVRCompositor::SubmitExplicitTimingData
	_SubmitExplicitTimingData_t5F40045D9F79D25080663F842E12D8777295014E * ___SubmitExplicitTimingData_42;
	// Valve.VR.IVRCompositor/_IsMotionSmoothingEnabled Valve.VR.IVRCompositor::IsMotionSmoothingEnabled
	_IsMotionSmoothingEnabled_tA0D2F0F53194E7D2156308200B6E269DFE0C69BC * ___IsMotionSmoothingEnabled_43;
	// Valve.VR.IVRCompositor/_IsMotionSmoothingSupported Valve.VR.IVRCompositor::IsMotionSmoothingSupported
	_IsMotionSmoothingSupported_t95F452FA6D78FC58EF2148C3B174A67BE61C58FC * ___IsMotionSmoothingSupported_44;
	// Valve.VR.IVRCompositor/_IsCurrentSceneFocusAppLoading Valve.VR.IVRCompositor::IsCurrentSceneFocusAppLoading
	_IsCurrentSceneFocusAppLoading_tCE8C42B715A680594786619F24B2ACC74E4B5C96 * ___IsCurrentSceneFocusAppLoading_45;
	// Valve.VR.IVRCompositor/_SetStageOverride_Async Valve.VR.IVRCompositor::SetStageOverride_Async
	_SetStageOverride_Async_t1F2528FEE64B4CA46F0F73E39AB7A4FB7E67E379 * ___SetStageOverride_Async_46;
	// Valve.VR.IVRCompositor/_ClearStageOverride Valve.VR.IVRCompositor::ClearStageOverride
	_ClearStageOverride_t8CB8CCCD950482A8BBD0613E01DD6EAE087F4BCE * ___ClearStageOverride_47;
	// Valve.VR.IVRCompositor/_GetCompositorBenchmarkResults Valve.VR.IVRCompositor::GetCompositorBenchmarkResults
	_GetCompositorBenchmarkResults_tDE8A4E8B8ECC2579DE9D98E80C916695F1AC1597 * ___GetCompositorBenchmarkResults_48;
	// Valve.VR.IVRCompositor/_GetLastPosePredictionIDs Valve.VR.IVRCompositor::GetLastPosePredictionIDs
	_GetLastPosePredictionIDs_t61F707C1CE5B627C4AE0D6EC12434130369E8EFD * ___GetLastPosePredictionIDs_49;
	// Valve.VR.IVRCompositor/_GetPosesForFrame Valve.VR.IVRCompositor::GetPosesForFrame
	_GetPosesForFrame_t35A566A4D0F1F0E8A29F8C54E081833CC6762869 * ___GetPosesForFrame_50;

public:
	inline static int32_t get_offset_of_SetTrackingSpace_0() { return static_cast<int32_t>(offsetof(IVRCompositor_tD41C86F469DDC1A52B62E22B3B31DD5FFE5EB890, ___SetTrackingSpace_0)); }
	inline _SetTrackingSpace_t348CBF365645621C0BC888EBBE94D3BE6687DD58 * get_SetTrackingSpace_0() const { return ___SetTrackingSpace_0; }
	inline _SetTrackingSpace_t348CBF365645621C0BC888EBBE94D3BE6687DD58 ** get_address_of_SetTrackingSpace_0() { return &___SetTrackingSpace_0; }
	inline void set_SetTrackingSpace_0(_SetTrackingSpace_t348CBF365645621C0BC888EBBE94D3BE6687DD58 * value)
	{
		___SetTrackingSpace_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___SetTrackingSpace_0), (void*)value);
	}

	inline static int32_t get_offset_of_GetTrackingSpace_1() { return static_cast<int32_t>(offsetof(IVRCompositor_tD41C86F469DDC1A52B62E22B3B31DD5FFE5EB890, ___GetTrackingSpace_1)); }
	inline _GetTrackingSpace_tA79B4C912BD02AA0EDD83FC57FAE73E46E5B882D * get_GetTrackingSpace_1() const { return ___GetTrackingSpace_1; }
	inline _GetTrackingSpace_tA79B4C912BD02AA0EDD83FC57FAE73E46E5B882D ** get_address_of_GetTrackingSpace_1() { return &___GetTrackingSpace_1; }
	inline void set_GetTrackingSpace_1(_GetTrackingSpace_tA79B4C912BD02AA0EDD83FC57FAE73E46E5B882D * value)
	{
		___GetTrackingSpace_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetTrackingSpace_1), (void*)value);
	}

	inline static int32_t get_offset_of_WaitGetPoses_2() { return static_cast<int32_t>(offsetof(IVRCompositor_tD41C86F469DDC1A52B62E22B3B31DD5FFE5EB890, ___WaitGetPoses_2)); }
	inline _WaitGetPoses_t8FBB49D540A4521220D3D00976C2B89F0415F63D * get_WaitGetPoses_2() const { return ___WaitGetPoses_2; }
	inline _WaitGetPoses_t8FBB49D540A4521220D3D00976C2B89F0415F63D ** get_address_of_WaitGetPoses_2() { return &___WaitGetPoses_2; }
	inline void set_WaitGetPoses_2(_WaitGetPoses_t8FBB49D540A4521220D3D00976C2B89F0415F63D * value)
	{
		___WaitGetPoses_2 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___WaitGetPoses_2), (void*)value);
	}

	inline static int32_t get_offset_of_GetLastPoses_3() { return static_cast<int32_t>(offsetof(IVRCompositor_tD41C86F469DDC1A52B62E22B3B31DD5FFE5EB890, ___GetLastPoses_3)); }
	inline _GetLastPoses_t95337A7DB72F11B41ED8C02251C777AEB5E9E2FD * get_GetLastPoses_3() const { return ___GetLastPoses_3; }
	inline _GetLastPoses_t95337A7DB72F11B41ED8C02251C777AEB5E9E2FD ** get_address_of_GetLastPoses_3() { return &___GetLastPoses_3; }
	inline void set_GetLastPoses_3(_GetLastPoses_t95337A7DB72F11B41ED8C02251C777AEB5E9E2FD * value)
	{
		___GetLastPoses_3 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetLastPoses_3), (void*)value);
	}

	inline static int32_t get_offset_of_GetLastPoseForTrackedDeviceIndex_4() { return static_cast<int32_t>(offsetof(IVRCompositor_tD41C86F469DDC1A52B62E22B3B31DD5FFE5EB890, ___GetLastPoseForTrackedDeviceIndex_4)); }
	inline _GetLastPoseForTrackedDeviceIndex_t35111C732E55B4AA3F3BA3C029EE64634999014C * get_GetLastPoseForTrackedDeviceIndex_4() const { return ___GetLastPoseForTrackedDeviceIndex_4; }
	inline _GetLastPoseForTrackedDeviceIndex_t35111C732E55B4AA3F3BA3C029EE64634999014C ** get_address_of_GetLastPoseForTrackedDeviceIndex_4() { return &___GetLastPoseForTrackedDeviceIndex_4; }
	inline void set_GetLastPoseForTrackedDeviceIndex_4(_GetLastPoseForTrackedDeviceIndex_t35111C732E55B4AA3F3BA3C029EE64634999014C * value)
	{
		___GetLastPoseForTrackedDeviceIndex_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetLastPoseForTrackedDeviceIndex_4), (void*)value);
	}

	inline static int32_t get_offset_of_Submit_5() { return static_cast<int32_t>(offsetof(IVRCompositor_tD41C86F469DDC1A52B62E22B3B31DD5FFE5EB890, ___Submit_5)); }
	inline _Submit_t60BC4FDEEF9EE5F00E0F4D15007CBE6C74B5EB44 * get_Submit_5() const { return ___Submit_5; }
	inline _Submit_t60BC4FDEEF9EE5F00E0F4D15007CBE6C74B5EB44 ** get_address_of_Submit_5() { return &___Submit_5; }
	inline void set_Submit_5(_Submit_t60BC4FDEEF9EE5F00E0F4D15007CBE6C74B5EB44 * value)
	{
		___Submit_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___Submit_5), (void*)value);
	}

	inline static int32_t get_offset_of_ClearLastSubmittedFrame_6() { return static_cast<int32_t>(offsetof(IVRCompositor_tD41C86F469DDC1A52B62E22B3B31DD5FFE5EB890, ___ClearLastSubmittedFrame_6)); }
	inline _ClearLastSubmittedFrame_t0ECCEC53139DA7FB06708174457B58CB45243229 * get_ClearLastSubmittedFrame_6() const { return ___ClearLastSubmittedFrame_6; }
	inline _ClearLastSubmittedFrame_t0ECCEC53139DA7FB06708174457B58CB45243229 ** get_address_of_ClearLastSubmittedFrame_6() { return &___ClearLastSubmittedFrame_6; }
	inline void set_ClearLastSubmittedFrame_6(_ClearLastSubmittedFrame_t0ECCEC53139DA7FB06708174457B58CB45243229 * value)
	{
		___ClearLastSubmittedFrame_6 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___ClearLastSubmittedFrame_6), (void*)value);
	}

	inline static int32_t get_offset_of_PostPresentHandoff_7() { return static_cast<int32_t>(offsetof(IVRCompositor_tD41C86F469DDC1A52B62E22B3B31DD5FFE5EB890, ___PostPresentHandoff_7)); }
	inline _PostPresentHandoff_t314F84869CA64790F35314666051FB1631337010 * get_PostPresentHandoff_7() const { return ___PostPresentHandoff_7; }
	inline _PostPresentHandoff_t314F84869CA64790F35314666051FB1631337010 ** get_address_of_PostPresentHandoff_7() { return &___PostPresentHandoff_7; }
	inline void set_PostPresentHandoff_7(_PostPresentHandoff_t314F84869CA64790F35314666051FB1631337010 * value)
	{
		___PostPresentHandoff_7 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___PostPresentHandoff_7), (void*)value);
	}

	inline static int32_t get_offset_of_GetFrameTiming_8() { return static_cast<int32_t>(offsetof(IVRCompositor_tD41C86F469DDC1A52B62E22B3B31DD5FFE5EB890, ___GetFrameTiming_8)); }
	inline _GetFrameTiming_t7831BA87E11BC4C73429D9B3E350F01EAC8269CD * get_GetFrameTiming_8() const { return ___GetFrameTiming_8; }
	inline _GetFrameTiming_t7831BA87E11BC4C73429D9B3E350F01EAC8269CD ** get_address_of_GetFrameTiming_8() { return &___GetFrameTiming_8; }
	inline void set_GetFrameTiming_8(_GetFrameTiming_t7831BA87E11BC4C73429D9B3E350F01EAC8269CD * value)
	{
		___GetFrameTiming_8 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetFrameTiming_8), (void*)value);
	}

	inline static int32_t get_offset_of_GetFrameTimings_9() { return static_cast<int32_t>(offsetof(IVRCompositor_tD41C86F469DDC1A52B62E22B3B31DD5FFE5EB890, ___GetFrameTimings_9)); }
	inline _GetFrameTimings_t57EC12DA46CAE1F6F6B76D4A27D350B1CD415D42 * get_GetFrameTimings_9() const { return ___GetFrameTimings_9; }
	inline _GetFrameTimings_t57EC12DA46CAE1F6F6B76D4A27D350B1CD415D42 ** get_address_of_GetFrameTimings_9() { return &___GetFrameTimings_9; }
	inline void set_GetFrameTimings_9(_GetFrameTimings_t57EC12DA46CAE1F6F6B76D4A27D350B1CD415D42 * value)
	{
		___GetFrameTimings_9 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetFrameTimings_9), (void*)value);
	}

	inline static int32_t get_offset_of_GetFrameTimeRemaining_10() { return static_cast<int32_t>(offsetof(IVRCompositor_tD41C86F469DDC1A52B62E22B3B31DD5FFE5EB890, ___GetFrameTimeRemaining_10)); }
	inline _GetFrameTimeRemaining_t16772D3C0E808D2B3CF0E7DC54E70DA170377937 * get_GetFrameTimeRemaining_10() const { return ___GetFrameTimeRemaining_10; }
	inline _GetFrameTimeRemaining_t16772D3C0E808D2B3CF0E7DC54E70DA170377937 ** get_address_of_GetFrameTimeRemaining_10() { return &___GetFrameTimeRemaining_10; }
	inline void set_GetFrameTimeRemaining_10(_GetFrameTimeRemaining_t16772D3C0E808D2B3CF0E7DC54E70DA170377937 * value)
	{
		___GetFrameTimeRemaining_10 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetFrameTimeRemaining_10), (void*)value);
	}

	inline static int32_t get_offset_of_GetCumulativeStats_11() { return static_cast<int32_t>(offsetof(IVRCompositor_tD41C86F469DDC1A52B62E22B3B31DD5FFE5EB890, ___GetCumulativeStats_11)); }
	inline _GetCumulativeStats_tA0CBF977CA6D77007BF3A811E8B6A6A66164A521 * get_GetCumulativeStats_11() const { return ___GetCumulativeStats_11; }
	inline _GetCumulativeStats_tA0CBF977CA6D77007BF3A811E8B6A6A66164A521 ** get_address_of_GetCumulativeStats_11() { return &___GetCumulativeStats_11; }
	inline void set_GetCumulativeStats_11(_GetCumulativeStats_tA0CBF977CA6D77007BF3A811E8B6A6A66164A521 * value)
	{
		___GetCumulativeStats_11 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetCumulativeStats_11), (void*)value);
	}

	inline static int32_t get_offset_of_FadeToColor_12() { return static_cast<int32_t>(offsetof(IVRCompositor_tD41C86F469DDC1A52B62E22B3B31DD5FFE5EB890, ___FadeToColor_12)); }
	inline _FadeToColor_tCC4B0521289553A4A0AFEF9FE512D8FCA8BB9202 * get_FadeToColor_12() const { return ___FadeToColor_12; }
	inline _FadeToColor_tCC4B0521289553A4A0AFEF9FE512D8FCA8BB9202 ** get_address_of_FadeToColor_12() { return &___FadeToColor_12; }
	inline void set_FadeToColor_12(_FadeToColor_tCC4B0521289553A4A0AFEF9FE512D8FCA8BB9202 * value)
	{
		___FadeToColor_12 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___FadeToColor_12), (void*)value);
	}

	inline static int32_t get_offset_of_GetCurrentFadeColor_13() { return static_cast<int32_t>(offsetof(IVRCompositor_tD41C86F469DDC1A52B62E22B3B31DD5FFE5EB890, ___GetCurrentFadeColor_13)); }
	inline _GetCurrentFadeColor_t343E335FB53D02F361AC604B6BAF25F3D8415408 * get_GetCurrentFadeColor_13() const { return ___GetCurrentFadeColor_13; }
	inline _GetCurrentFadeColor_t343E335FB53D02F361AC604B6BAF25F3D8415408 ** get_address_of_GetCurrentFadeColor_13() { return &___GetCurrentFadeColor_13; }
	inline void set_GetCurrentFadeColor_13(_GetCurrentFadeColor_t343E335FB53D02F361AC604B6BAF25F3D8415408 * value)
	{
		___GetCurrentFadeColor_13 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetCurrentFadeColor_13), (void*)value);
	}

	inline static int32_t get_offset_of_FadeGrid_14() { return static_cast<int32_t>(offsetof(IVRCompositor_tD41C86F469DDC1A52B62E22B3B31DD5FFE5EB890, ___FadeGrid_14)); }
	inline _FadeGrid_t34BDB8CC19DB79643BB8C7F78EDF8591D5FB3D64 * get_FadeGrid_14() const { return ___FadeGrid_14; }
	inline _FadeGrid_t34BDB8CC19DB79643BB8C7F78EDF8591D5FB3D64 ** get_address_of_FadeGrid_14() { return &___FadeGrid_14; }
	inline void set_FadeGrid_14(_FadeGrid_t34BDB8CC19DB79643BB8C7F78EDF8591D5FB3D64 * value)
	{
		___FadeGrid_14 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___FadeGrid_14), (void*)value);
	}

	inline static int32_t get_offset_of_GetCurrentGridAlpha_15() { return static_cast<int32_t>(offsetof(IVRCompositor_tD41C86F469DDC1A52B62E22B3B31DD5FFE5EB890, ___GetCurrentGridAlpha_15)); }
	inline _GetCurrentGridAlpha_tCD27A87A08B3BC2217FFA6594EE4BB6D6BF47168 * get_GetCurrentGridAlpha_15() const { return ___GetCurrentGridAlpha_15; }
	inline _GetCurrentGridAlpha_tCD27A87A08B3BC2217FFA6594EE4BB6D6BF47168 ** get_address_of_GetCurrentGridAlpha_15() { return &___GetCurrentGridAlpha_15; }
	inline void set_GetCurrentGridAlpha_15(_GetCurrentGridAlpha_tCD27A87A08B3BC2217FFA6594EE4BB6D6BF47168 * value)
	{
		___GetCurrentGridAlpha_15 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetCurrentGridAlpha_15), (void*)value);
	}

	inline static int32_t get_offset_of_SetSkyboxOverride_16() { return static_cast<int32_t>(offsetof(IVRCompositor_tD41C86F469DDC1A52B62E22B3B31DD5FFE5EB890, ___SetSkyboxOverride_16)); }
	inline _SetSkyboxOverride_t66FE495E1F260400F1EFF1743C445A340E278822 * get_SetSkyboxOverride_16() const { return ___SetSkyboxOverride_16; }
	inline _SetSkyboxOverride_t66FE495E1F260400F1EFF1743C445A340E278822 ** get_address_of_SetSkyboxOverride_16() { return &___SetSkyboxOverride_16; }
	inline void set_SetSkyboxOverride_16(_SetSkyboxOverride_t66FE495E1F260400F1EFF1743C445A340E278822 * value)
	{
		___SetSkyboxOverride_16 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___SetSkyboxOverride_16), (void*)value);
	}

	inline static int32_t get_offset_of_ClearSkyboxOverride_17() { return static_cast<int32_t>(offsetof(IVRCompositor_tD41C86F469DDC1A52B62E22B3B31DD5FFE5EB890, ___ClearSkyboxOverride_17)); }
	inline _ClearSkyboxOverride_t67B0279CD96E9B5827D3B1F0738445C3A030BA5F * get_ClearSkyboxOverride_17() const { return ___ClearSkyboxOverride_17; }
	inline _ClearSkyboxOverride_t67B0279CD96E9B5827D3B1F0738445C3A030BA5F ** get_address_of_ClearSkyboxOverride_17() { return &___ClearSkyboxOverride_17; }
	inline void set_ClearSkyboxOverride_17(_ClearSkyboxOverride_t67B0279CD96E9B5827D3B1F0738445C3A030BA5F * value)
	{
		___ClearSkyboxOverride_17 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___ClearSkyboxOverride_17), (void*)value);
	}

	inline static int32_t get_offset_of_CompositorBringToFront_18() { return static_cast<int32_t>(offsetof(IVRCompositor_tD41C86F469DDC1A52B62E22B3B31DD5FFE5EB890, ___CompositorBringToFront_18)); }
	inline _CompositorBringToFront_t5343D37B1101FA91138DC0DCD5FBD3A5F59B2B1E * get_CompositorBringToFront_18() const { return ___CompositorBringToFront_18; }
	inline _CompositorBringToFront_t5343D37B1101FA91138DC0DCD5FBD3A5F59B2B1E ** get_address_of_CompositorBringToFront_18() { return &___CompositorBringToFront_18; }
	inline void set_CompositorBringToFront_18(_CompositorBringToFront_t5343D37B1101FA91138DC0DCD5FBD3A5F59B2B1E * value)
	{
		___CompositorBringToFront_18 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___CompositorBringToFront_18), (void*)value);
	}

	inline static int32_t get_offset_of_CompositorGoToBack_19() { return static_cast<int32_t>(offsetof(IVRCompositor_tD41C86F469DDC1A52B62E22B3B31DD5FFE5EB890, ___CompositorGoToBack_19)); }
	inline _CompositorGoToBack_tB9DB8D1D9AAB81EE6207C7913090ADD6495801AA * get_CompositorGoToBack_19() const { return ___CompositorGoToBack_19; }
	inline _CompositorGoToBack_tB9DB8D1D9AAB81EE6207C7913090ADD6495801AA ** get_address_of_CompositorGoToBack_19() { return &___CompositorGoToBack_19; }
	inline void set_CompositorGoToBack_19(_CompositorGoToBack_tB9DB8D1D9AAB81EE6207C7913090ADD6495801AA * value)
	{
		___CompositorGoToBack_19 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___CompositorGoToBack_19), (void*)value);
	}

	inline static int32_t get_offset_of_CompositorQuit_20() { return static_cast<int32_t>(offsetof(IVRCompositor_tD41C86F469DDC1A52B62E22B3B31DD5FFE5EB890, ___CompositorQuit_20)); }
	inline _CompositorQuit_t18ED3360737B93C153359B4740A94BAC1544C752 * get_CompositorQuit_20() const { return ___CompositorQuit_20; }
	inline _CompositorQuit_t18ED3360737B93C153359B4740A94BAC1544C752 ** get_address_of_CompositorQuit_20() { return &___CompositorQuit_20; }
	inline void set_CompositorQuit_20(_CompositorQuit_t18ED3360737B93C153359B4740A94BAC1544C752 * value)
	{
		___CompositorQuit_20 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___CompositorQuit_20), (void*)value);
	}

	inline static int32_t get_offset_of_IsFullscreen_21() { return static_cast<int32_t>(offsetof(IVRCompositor_tD41C86F469DDC1A52B62E22B3B31DD5FFE5EB890, ___IsFullscreen_21)); }
	inline _IsFullscreen_t2BFAAACCFEB1F40A52B7B16899A85C757F233B0C * get_IsFullscreen_21() const { return ___IsFullscreen_21; }
	inline _IsFullscreen_t2BFAAACCFEB1F40A52B7B16899A85C757F233B0C ** get_address_of_IsFullscreen_21() { return &___IsFullscreen_21; }
	inline void set_IsFullscreen_21(_IsFullscreen_t2BFAAACCFEB1F40A52B7B16899A85C757F233B0C * value)
	{
		___IsFullscreen_21 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___IsFullscreen_21), (void*)value);
	}

	inline static int32_t get_offset_of_GetCurrentSceneFocusProcess_22() { return static_cast<int32_t>(offsetof(IVRCompositor_tD41C86F469DDC1A52B62E22B3B31DD5FFE5EB890, ___GetCurrentSceneFocusProcess_22)); }
	inline _GetCurrentSceneFocusProcess_t6421A3BC4B38C84F358F6074A3D3083DA382020F * get_GetCurrentSceneFocusProcess_22() const { return ___GetCurrentSceneFocusProcess_22; }
	inline _GetCurrentSceneFocusProcess_t6421A3BC4B38C84F358F6074A3D3083DA382020F ** get_address_of_GetCurrentSceneFocusProcess_22() { return &___GetCurrentSceneFocusProcess_22; }
	inline void set_GetCurrentSceneFocusProcess_22(_GetCurrentSceneFocusProcess_t6421A3BC4B38C84F358F6074A3D3083DA382020F * value)
	{
		___GetCurrentSceneFocusProcess_22 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetCurrentSceneFocusProcess_22), (void*)value);
	}

	inline static int32_t get_offset_of_GetLastFrameRenderer_23() { return static_cast<int32_t>(offsetof(IVRCompositor_tD41C86F469DDC1A52B62E22B3B31DD5FFE5EB890, ___GetLastFrameRenderer_23)); }
	inline _GetLastFrameRenderer_tB18D1C5D91FD3CE71BD6E8C72EA50E970201EDDD * get_GetLastFrameRenderer_23() const { return ___GetLastFrameRenderer_23; }
	inline _GetLastFrameRenderer_tB18D1C5D91FD3CE71BD6E8C72EA50E970201EDDD ** get_address_of_GetLastFrameRenderer_23() { return &___GetLastFrameRenderer_23; }
	inline void set_GetLastFrameRenderer_23(_GetLastFrameRenderer_tB18D1C5D91FD3CE71BD6E8C72EA50E970201EDDD * value)
	{
		___GetLastFrameRenderer_23 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetLastFrameRenderer_23), (void*)value);
	}

	inline static int32_t get_offset_of_CanRenderScene_24() { return static_cast<int32_t>(offsetof(IVRCompositor_tD41C86F469DDC1A52B62E22B3B31DD5FFE5EB890, ___CanRenderScene_24)); }
	inline _CanRenderScene_t16F551BADB55D7F930B6509B204D97A79561A666 * get_CanRenderScene_24() const { return ___CanRenderScene_24; }
	inline _CanRenderScene_t16F551BADB55D7F930B6509B204D97A79561A666 ** get_address_of_CanRenderScene_24() { return &___CanRenderScene_24; }
	inline void set_CanRenderScene_24(_CanRenderScene_t16F551BADB55D7F930B6509B204D97A79561A666 * value)
	{
		___CanRenderScene_24 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___CanRenderScene_24), (void*)value);
	}

	inline static int32_t get_offset_of_ShowMirrorWindow_25() { return static_cast<int32_t>(offsetof(IVRCompositor_tD41C86F469DDC1A52B62E22B3B31DD5FFE5EB890, ___ShowMirrorWindow_25)); }
	inline _ShowMirrorWindow_t668E6432F0ED9F63EA038C6EBE76BA9D3672392D * get_ShowMirrorWindow_25() const { return ___ShowMirrorWindow_25; }
	inline _ShowMirrorWindow_t668E6432F0ED9F63EA038C6EBE76BA9D3672392D ** get_address_of_ShowMirrorWindow_25() { return &___ShowMirrorWindow_25; }
	inline void set_ShowMirrorWindow_25(_ShowMirrorWindow_t668E6432F0ED9F63EA038C6EBE76BA9D3672392D * value)
	{
		___ShowMirrorWindow_25 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___ShowMirrorWindow_25), (void*)value);
	}

	inline static int32_t get_offset_of_HideMirrorWindow_26() { return static_cast<int32_t>(offsetof(IVRCompositor_tD41C86F469DDC1A52B62E22B3B31DD5FFE5EB890, ___HideMirrorWindow_26)); }
	inline _HideMirrorWindow_t9C709E267F93B42371E75EABB26432E4E2B48410 * get_HideMirrorWindow_26() const { return ___HideMirrorWindow_26; }
	inline _HideMirrorWindow_t9C709E267F93B42371E75EABB26432E4E2B48410 ** get_address_of_HideMirrorWindow_26() { return &___HideMirrorWindow_26; }
	inline void set_HideMirrorWindow_26(_HideMirrorWindow_t9C709E267F93B42371E75EABB26432E4E2B48410 * value)
	{
		___HideMirrorWindow_26 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___HideMirrorWindow_26), (void*)value);
	}

	inline static int32_t get_offset_of_IsMirrorWindowVisible_27() { return static_cast<int32_t>(offsetof(IVRCompositor_tD41C86F469DDC1A52B62E22B3B31DD5FFE5EB890, ___IsMirrorWindowVisible_27)); }
	inline _IsMirrorWindowVisible_tB080895D09F4C11C79F65D88DEB0D0759D8C0E4E * get_IsMirrorWindowVisible_27() const { return ___IsMirrorWindowVisible_27; }
	inline _IsMirrorWindowVisible_tB080895D09F4C11C79F65D88DEB0D0759D8C0E4E ** get_address_of_IsMirrorWindowVisible_27() { return &___IsMirrorWindowVisible_27; }
	inline void set_IsMirrorWindowVisible_27(_IsMirrorWindowVisible_tB080895D09F4C11C79F65D88DEB0D0759D8C0E4E * value)
	{
		___IsMirrorWindowVisible_27 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___IsMirrorWindowVisible_27), (void*)value);
	}

	inline static int32_t get_offset_of_CompositorDumpImages_28() { return static_cast<int32_t>(offsetof(IVRCompositor_tD41C86F469DDC1A52B62E22B3B31DD5FFE5EB890, ___CompositorDumpImages_28)); }
	inline _CompositorDumpImages_t72EC96F53BAE526F747D8A57989C1DA08035DD43 * get_CompositorDumpImages_28() const { return ___CompositorDumpImages_28; }
	inline _CompositorDumpImages_t72EC96F53BAE526F747D8A57989C1DA08035DD43 ** get_address_of_CompositorDumpImages_28() { return &___CompositorDumpImages_28; }
	inline void set_CompositorDumpImages_28(_CompositorDumpImages_t72EC96F53BAE526F747D8A57989C1DA08035DD43 * value)
	{
		___CompositorDumpImages_28 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___CompositorDumpImages_28), (void*)value);
	}

	inline static int32_t get_offset_of_ShouldAppRenderWithLowResources_29() { return static_cast<int32_t>(offsetof(IVRCompositor_tD41C86F469DDC1A52B62E22B3B31DD5FFE5EB890, ___ShouldAppRenderWithLowResources_29)); }
	inline _ShouldAppRenderWithLowResources_tCB09B8D3E65DB6C46E6464963BC62B94E7F661D6 * get_ShouldAppRenderWithLowResources_29() const { return ___ShouldAppRenderWithLowResources_29; }
	inline _ShouldAppRenderWithLowResources_tCB09B8D3E65DB6C46E6464963BC62B94E7F661D6 ** get_address_of_ShouldAppRenderWithLowResources_29() { return &___ShouldAppRenderWithLowResources_29; }
	inline void set_ShouldAppRenderWithLowResources_29(_ShouldAppRenderWithLowResources_tCB09B8D3E65DB6C46E6464963BC62B94E7F661D6 * value)
	{
		___ShouldAppRenderWithLowResources_29 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___ShouldAppRenderWithLowResources_29), (void*)value);
	}

	inline static int32_t get_offset_of_ForceInterleavedReprojectionOn_30() { return static_cast<int32_t>(offsetof(IVRCompositor_tD41C86F469DDC1A52B62E22B3B31DD5FFE5EB890, ___ForceInterleavedReprojectionOn_30)); }
	inline _ForceInterleavedReprojectionOn_tFE845BC19FFB70A32F2CEBE69A730314E4F10241 * get_ForceInterleavedReprojectionOn_30() const { return ___ForceInterleavedReprojectionOn_30; }
	inline _ForceInterleavedReprojectionOn_tFE845BC19FFB70A32F2CEBE69A730314E4F10241 ** get_address_of_ForceInterleavedReprojectionOn_30() { return &___ForceInterleavedReprojectionOn_30; }
	inline void set_ForceInterleavedReprojectionOn_30(_ForceInterleavedReprojectionOn_tFE845BC19FFB70A32F2CEBE69A730314E4F10241 * value)
	{
		___ForceInterleavedReprojectionOn_30 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___ForceInterleavedReprojectionOn_30), (void*)value);
	}

	inline static int32_t get_offset_of_ForceReconnectProcess_31() { return static_cast<int32_t>(offsetof(IVRCompositor_tD41C86F469DDC1A52B62E22B3B31DD5FFE5EB890, ___ForceReconnectProcess_31)); }
	inline _ForceReconnectProcess_t42AAAFE45346087068EB9BCE4D8AB2D6591AC8B0 * get_ForceReconnectProcess_31() const { return ___ForceReconnectProcess_31; }
	inline _ForceReconnectProcess_t42AAAFE45346087068EB9BCE4D8AB2D6591AC8B0 ** get_address_of_ForceReconnectProcess_31() { return &___ForceReconnectProcess_31; }
	inline void set_ForceReconnectProcess_31(_ForceReconnectProcess_t42AAAFE45346087068EB9BCE4D8AB2D6591AC8B0 * value)
	{
		___ForceReconnectProcess_31 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___ForceReconnectProcess_31), (void*)value);
	}

	inline static int32_t get_offset_of_SuspendRendering_32() { return static_cast<int32_t>(offsetof(IVRCompositor_tD41C86F469DDC1A52B62E22B3B31DD5FFE5EB890, ___SuspendRendering_32)); }
	inline _SuspendRendering_tC9EA4D458AE7DEFEB96CD6F28EA74C2D97CB080C * get_SuspendRendering_32() const { return ___SuspendRendering_32; }
	inline _SuspendRendering_tC9EA4D458AE7DEFEB96CD6F28EA74C2D97CB080C ** get_address_of_SuspendRendering_32() { return &___SuspendRendering_32; }
	inline void set_SuspendRendering_32(_SuspendRendering_tC9EA4D458AE7DEFEB96CD6F28EA74C2D97CB080C * value)
	{
		___SuspendRendering_32 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___SuspendRendering_32), (void*)value);
	}

	inline static int32_t get_offset_of_GetMirrorTextureD3D11_33() { return static_cast<int32_t>(offsetof(IVRCompositor_tD41C86F469DDC1A52B62E22B3B31DD5FFE5EB890, ___GetMirrorTextureD3D11_33)); }
	inline _GetMirrorTextureD3D11_t381C14BA597ED97A9A9828F42D013A009A4DF4A4 * get_GetMirrorTextureD3D11_33() const { return ___GetMirrorTextureD3D11_33; }
	inline _GetMirrorTextureD3D11_t381C14BA597ED97A9A9828F42D013A009A4DF4A4 ** get_address_of_GetMirrorTextureD3D11_33() { return &___GetMirrorTextureD3D11_33; }
	inline void set_GetMirrorTextureD3D11_33(_GetMirrorTextureD3D11_t381C14BA597ED97A9A9828F42D013A009A4DF4A4 * value)
	{
		___GetMirrorTextureD3D11_33 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetMirrorTextureD3D11_33), (void*)value);
	}

	inline static int32_t get_offset_of_ReleaseMirrorTextureD3D11_34() { return static_cast<int32_t>(offsetof(IVRCompositor_tD41C86F469DDC1A52B62E22B3B31DD5FFE5EB890, ___ReleaseMirrorTextureD3D11_34)); }
	inline _ReleaseMirrorTextureD3D11_t6E374E0BEC9B8E9F88EC0EDE8E41AB43A8D138F9 * get_ReleaseMirrorTextureD3D11_34() const { return ___ReleaseMirrorTextureD3D11_34; }
	inline _ReleaseMirrorTextureD3D11_t6E374E0BEC9B8E9F88EC0EDE8E41AB43A8D138F9 ** get_address_of_ReleaseMirrorTextureD3D11_34() { return &___ReleaseMirrorTextureD3D11_34; }
	inline void set_ReleaseMirrorTextureD3D11_34(_ReleaseMirrorTextureD3D11_t6E374E0BEC9B8E9F88EC0EDE8E41AB43A8D138F9 * value)
	{
		___ReleaseMirrorTextureD3D11_34 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___ReleaseMirrorTextureD3D11_34), (void*)value);
	}

	inline static int32_t get_offset_of_GetMirrorTextureGL_35() { return static_cast<int32_t>(offsetof(IVRCompositor_tD41C86F469DDC1A52B62E22B3B31DD5FFE5EB890, ___GetMirrorTextureGL_35)); }
	inline _GetMirrorTextureGL_tA06AABF32A6143F3C5B44A80CA9EC1A298EE8C9F * get_GetMirrorTextureGL_35() const { return ___GetMirrorTextureGL_35; }
	inline _GetMirrorTextureGL_tA06AABF32A6143F3C5B44A80CA9EC1A298EE8C9F ** get_address_of_GetMirrorTextureGL_35() { return &___GetMirrorTextureGL_35; }
	inline void set_GetMirrorTextureGL_35(_GetMirrorTextureGL_tA06AABF32A6143F3C5B44A80CA9EC1A298EE8C9F * value)
	{
		___GetMirrorTextureGL_35 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetMirrorTextureGL_35), (void*)value);
	}

	inline static int32_t get_offset_of_ReleaseSharedGLTexture_36() { return static_cast<int32_t>(offsetof(IVRCompositor_tD41C86F469DDC1A52B62E22B3B31DD5FFE5EB890, ___ReleaseSharedGLTexture_36)); }
	inline _ReleaseSharedGLTexture_t2E539F5AE30C1CCC23E51738272DF8A53E8AD5B0 * get_ReleaseSharedGLTexture_36() const { return ___ReleaseSharedGLTexture_36; }
	inline _ReleaseSharedGLTexture_t2E539F5AE30C1CCC23E51738272DF8A53E8AD5B0 ** get_address_of_ReleaseSharedGLTexture_36() { return &___ReleaseSharedGLTexture_36; }
	inline void set_ReleaseSharedGLTexture_36(_ReleaseSharedGLTexture_t2E539F5AE30C1CCC23E51738272DF8A53E8AD5B0 * value)
	{
		___ReleaseSharedGLTexture_36 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___ReleaseSharedGLTexture_36), (void*)value);
	}

	inline static int32_t get_offset_of_LockGLSharedTextureForAccess_37() { return static_cast<int32_t>(offsetof(IVRCompositor_tD41C86F469DDC1A52B62E22B3B31DD5FFE5EB890, ___LockGLSharedTextureForAccess_37)); }
	inline _LockGLSharedTextureForAccess_tA2603FA2A992EED1C5C02BC975E85A0F659339AE * get_LockGLSharedTextureForAccess_37() const { return ___LockGLSharedTextureForAccess_37; }
	inline _LockGLSharedTextureForAccess_tA2603FA2A992EED1C5C02BC975E85A0F659339AE ** get_address_of_LockGLSharedTextureForAccess_37() { return &___LockGLSharedTextureForAccess_37; }
	inline void set_LockGLSharedTextureForAccess_37(_LockGLSharedTextureForAccess_tA2603FA2A992EED1C5C02BC975E85A0F659339AE * value)
	{
		___LockGLSharedTextureForAccess_37 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___LockGLSharedTextureForAccess_37), (void*)value);
	}

	inline static int32_t get_offset_of_UnlockGLSharedTextureForAccess_38() { return static_cast<int32_t>(offsetof(IVRCompositor_tD41C86F469DDC1A52B62E22B3B31DD5FFE5EB890, ___UnlockGLSharedTextureForAccess_38)); }
	inline _UnlockGLSharedTextureForAccess_tD4D376FA10FDD78116934904862757CE3821494A * get_UnlockGLSharedTextureForAccess_38() const { return ___UnlockGLSharedTextureForAccess_38; }
	inline _UnlockGLSharedTextureForAccess_tD4D376FA10FDD78116934904862757CE3821494A ** get_address_of_UnlockGLSharedTextureForAccess_38() { return &___UnlockGLSharedTextureForAccess_38; }
	inline void set_UnlockGLSharedTextureForAccess_38(_UnlockGLSharedTextureForAccess_tD4D376FA10FDD78116934904862757CE3821494A * value)
	{
		___UnlockGLSharedTextureForAccess_38 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___UnlockGLSharedTextureForAccess_38), (void*)value);
	}

	inline static int32_t get_offset_of_GetVulkanInstanceExtensionsRequired_39() { return static_cast<int32_t>(offsetof(IVRCompositor_tD41C86F469DDC1A52B62E22B3B31DD5FFE5EB890, ___GetVulkanInstanceExtensionsRequired_39)); }
	inline _GetVulkanInstanceExtensionsRequired_t7A4FE11C16D2F9E9DA48671D5A1D78B2A41AA1DE * get_GetVulkanInstanceExtensionsRequired_39() const { return ___GetVulkanInstanceExtensionsRequired_39; }
	inline _GetVulkanInstanceExtensionsRequired_t7A4FE11C16D2F9E9DA48671D5A1D78B2A41AA1DE ** get_address_of_GetVulkanInstanceExtensionsRequired_39() { return &___GetVulkanInstanceExtensionsRequired_39; }
	inline void set_GetVulkanInstanceExtensionsRequired_39(_GetVulkanInstanceExtensionsRequired_t7A4FE11C16D2F9E9DA48671D5A1D78B2A41AA1DE * value)
	{
		___GetVulkanInstanceExtensionsRequired_39 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetVulkanInstanceExtensionsRequired_39), (void*)value);
	}

	inline static int32_t get_offset_of_GetVulkanDeviceExtensionsRequired_40() { return static_cast<int32_t>(offsetof(IVRCompositor_tD41C86F469DDC1A52B62E22B3B31DD5FFE5EB890, ___GetVulkanDeviceExtensionsRequired_40)); }
	inline _GetVulkanDeviceExtensionsRequired_t51FAF6EABE2B349E9BD987303D4757E80C0B3246 * get_GetVulkanDeviceExtensionsRequired_40() const { return ___GetVulkanDeviceExtensionsRequired_40; }
	inline _GetVulkanDeviceExtensionsRequired_t51FAF6EABE2B349E9BD987303D4757E80C0B3246 ** get_address_of_GetVulkanDeviceExtensionsRequired_40() { return &___GetVulkanDeviceExtensionsRequired_40; }
	inline void set_GetVulkanDeviceExtensionsRequired_40(_GetVulkanDeviceExtensionsRequired_t51FAF6EABE2B349E9BD987303D4757E80C0B3246 * value)
	{
		___GetVulkanDeviceExtensionsRequired_40 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetVulkanDeviceExtensionsRequired_40), (void*)value);
	}

	inline static int32_t get_offset_of_SetExplicitTimingMode_41() { return static_cast<int32_t>(offsetof(IVRCompositor_tD41C86F469DDC1A52B62E22B3B31DD5FFE5EB890, ___SetExplicitTimingMode_41)); }
	inline _SetExplicitTimingMode_tAB84BFAEAA600D952778064AC2B7AFA8A3F7261E * get_SetExplicitTimingMode_41() const { return ___SetExplicitTimingMode_41; }
	inline _SetExplicitTimingMode_tAB84BFAEAA600D952778064AC2B7AFA8A3F7261E ** get_address_of_SetExplicitTimingMode_41() { return &___SetExplicitTimingMode_41; }
	inline void set_SetExplicitTimingMode_41(_SetExplicitTimingMode_tAB84BFAEAA600D952778064AC2B7AFA8A3F7261E * value)
	{
		___SetExplicitTimingMode_41 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___SetExplicitTimingMode_41), (void*)value);
	}

	inline static int32_t get_offset_of_SubmitExplicitTimingData_42() { return static_cast<int32_t>(offsetof(IVRCompositor_tD41C86F469DDC1A52B62E22B3B31DD5FFE5EB890, ___SubmitExplicitTimingData_42)); }
	inline _SubmitExplicitTimingData_t5F40045D9F79D25080663F842E12D8777295014E * get_SubmitExplicitTimingData_42() const { return ___SubmitExplicitTimingData_42; }
	inline _SubmitExplicitTimingData_t5F40045D9F79D25080663F842E12D8777295014E ** get_address_of_SubmitExplicitTimingData_42() { return &___SubmitExplicitTimingData_42; }
	inline void set_SubmitExplicitTimingData_42(_SubmitExplicitTimingData_t5F40045D9F79D25080663F842E12D8777295014E * value)
	{
		___SubmitExplicitTimingData_42 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___SubmitExplicitTimingData_42), (void*)value);
	}

	inline static int32_t get_offset_of_IsMotionSmoothingEnabled_43() { return static_cast<int32_t>(offsetof(IVRCompositor_tD41C86F469DDC1A52B62E22B3B31DD5FFE5EB890, ___IsMotionSmoothingEnabled_43)); }
	inline _IsMotionSmoothingEnabled_tA0D2F0F53194E7D2156308200B6E269DFE0C69BC * get_IsMotionSmoothingEnabled_43() const { return ___IsMotionSmoothingEnabled_43; }
	inline _IsMotionSmoothingEnabled_tA0D2F0F53194E7D2156308200B6E269DFE0C69BC ** get_address_of_IsMotionSmoothingEnabled_43() { return &___IsMotionSmoothingEnabled_43; }
	inline void set_IsMotionSmoothingEnabled_43(_IsMotionSmoothingEnabled_tA0D2F0F53194E7D2156308200B6E269DFE0C69BC * value)
	{
		___IsMotionSmoothingEnabled_43 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___IsMotionSmoothingEnabled_43), (void*)value);
	}

	inline static int32_t get_offset_of_IsMotionSmoothingSupported_44() { return static_cast<int32_t>(offsetof(IVRCompositor_tD41C86F469DDC1A52B62E22B3B31DD5FFE5EB890, ___IsMotionSmoothingSupported_44)); }
	inline _IsMotionSmoothingSupported_t95F452FA6D78FC58EF2148C3B174A67BE61C58FC * get_IsMotionSmoothingSupported_44() const { return ___IsMotionSmoothingSupported_44; }
	inline _IsMotionSmoothingSupported_t95F452FA6D78FC58EF2148C3B174A67BE61C58FC ** get_address_of_IsMotionSmoothingSupported_44() { return &___IsMotionSmoothingSupported_44; }
	inline void set_IsMotionSmoothingSupported_44(_IsMotionSmoothingSupported_t95F452FA6D78FC58EF2148C3B174A67BE61C58FC * value)
	{
		___IsMotionSmoothingSupported_44 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___IsMotionSmoothingSupported_44), (void*)value);
	}

	inline static int32_t get_offset_of_IsCurrentSceneFocusAppLoading_45() { return static_cast<int32_t>(offsetof(IVRCompositor_tD41C86F469DDC1A52B62E22B3B31DD5FFE5EB890, ___IsCurrentSceneFocusAppLoading_45)); }
	inline _IsCurrentSceneFocusAppLoading_tCE8C42B715A680594786619F24B2ACC74E4B5C96 * get_IsCurrentSceneFocusAppLoading_45() const { return ___IsCurrentSceneFocusAppLoading_45; }
	inline _IsCurrentSceneFocusAppLoading_tCE8C42B715A680594786619F24B2ACC74E4B5C96 ** get_address_of_IsCurrentSceneFocusAppLoading_45() { return &___IsCurrentSceneFocusAppLoading_45; }
	inline void set_IsCurrentSceneFocusAppLoading_45(_IsCurrentSceneFocusAppLoading_tCE8C42B715A680594786619F24B2ACC74E4B5C96 * value)
	{
		___IsCurrentSceneFocusAppLoading_45 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___IsCurrentSceneFocusAppLoading_45), (void*)value);
	}

	inline static int32_t get_offset_of_SetStageOverride_Async_46() { return static_cast<int32_t>(offsetof(IVRCompositor_tD41C86F469DDC1A52B62E22B3B31DD5FFE5EB890, ___SetStageOverride_Async_46)); }
	inline _SetStageOverride_Async_t1F2528FEE64B4CA46F0F73E39AB7A4FB7E67E379 * get_SetStageOverride_Async_46() const { return ___SetStageOverride_Async_46; }
	inline _SetStageOverride_Async_t1F2528FEE64B4CA46F0F73E39AB7A4FB7E67E379 ** get_address_of_SetStageOverride_Async_46() { return &___SetStageOverride_Async_46; }
	inline void set_SetStageOverride_Async_46(_SetStageOverride_Async_t1F2528FEE64B4CA46F0F73E39AB7A4FB7E67E379 * value)
	{
		___SetStageOverride_Async_46 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___SetStageOverride_Async_46), (void*)value);
	}

	inline static int32_t get_offset_of_ClearStageOverride_47() { return static_cast<int32_t>(offsetof(IVRCompositor_tD41C86F469DDC1A52B62E22B3B31DD5FFE5EB890, ___ClearStageOverride_47)); }
	inline _ClearStageOverride_t8CB8CCCD950482A8BBD0613E01DD6EAE087F4BCE * get_ClearStageOverride_47() const { return ___ClearStageOverride_47; }
	inline _ClearStageOverride_t8CB8CCCD950482A8BBD0613E01DD6EAE087F4BCE ** get_address_of_ClearStageOverride_47() { return &___ClearStageOverride_47; }
	inline void set_ClearStageOverride_47(_ClearStageOverride_t8CB8CCCD950482A8BBD0613E01DD6EAE087F4BCE * value)
	{
		___ClearStageOverride_47 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___ClearStageOverride_47), (void*)value);
	}

	inline static int32_t get_offset_of_GetCompositorBenchmarkResults_48() { return static_cast<int32_t>(offsetof(IVRCompositor_tD41C86F469DDC1A52B62E22B3B31DD5FFE5EB890, ___GetCompositorBenchmarkResults_48)); }
	inline _GetCompositorBenchmarkResults_tDE8A4E8B8ECC2579DE9D98E80C916695F1AC1597 * get_GetCompositorBenchmarkResults_48() const { return ___GetCompositorBenchmarkResults_48; }
	inline _GetCompositorBenchmarkResults_tDE8A4E8B8ECC2579DE9D98E80C916695F1AC1597 ** get_address_of_GetCompositorBenchmarkResults_48() { return &___GetCompositorBenchmarkResults_48; }
	inline void set_GetCompositorBenchmarkResults_48(_GetCompositorBenchmarkResults_tDE8A4E8B8ECC2579DE9D98E80C916695F1AC1597 * value)
	{
		___GetCompositorBenchmarkResults_48 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetCompositorBenchmarkResults_48), (void*)value);
	}

	inline static int32_t get_offset_of_GetLastPosePredictionIDs_49() { return static_cast<int32_t>(offsetof(IVRCompositor_tD41C86F469DDC1A52B62E22B3B31DD5FFE5EB890, ___GetLastPosePredictionIDs_49)); }
	inline _GetLastPosePredictionIDs_t61F707C1CE5B627C4AE0D6EC12434130369E8EFD * get_GetLastPosePredictionIDs_49() const { return ___GetLastPosePredictionIDs_49; }
	inline _GetLastPosePredictionIDs_t61F707C1CE5B627C4AE0D6EC12434130369E8EFD ** get_address_of_GetLastPosePredictionIDs_49() { return &___GetLastPosePredictionIDs_49; }
	inline void set_GetLastPosePredictionIDs_49(_GetLastPosePredictionIDs_t61F707C1CE5B627C4AE0D6EC12434130369E8EFD * value)
	{
		___GetLastPosePredictionIDs_49 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetLastPosePredictionIDs_49), (void*)value);
	}

	inline static int32_t get_offset_of_GetPosesForFrame_50() { return static_cast<int32_t>(offsetof(IVRCompositor_tD41C86F469DDC1A52B62E22B3B31DD5FFE5EB890, ___GetPosesForFrame_50)); }
	inline _GetPosesForFrame_t35A566A4D0F1F0E8A29F8C54E081833CC6762869 * get_GetPosesForFrame_50() const { return ___GetPosesForFrame_50; }
	inline _GetPosesForFrame_t35A566A4D0F1F0E8A29F8C54E081833CC6762869 ** get_address_of_GetPosesForFrame_50() { return &___GetPosesForFrame_50; }
	inline void set_GetPosesForFrame_50(_GetPosesForFrame_t35A566A4D0F1F0E8A29F8C54E081833CC6762869 * value)
	{
		___GetPosesForFrame_50 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetPosesForFrame_50), (void*)value);
	}
};

// Native definition for P/Invoke marshalling of Valve.VR.IVRCompositor
struct IVRCompositor_tD41C86F469DDC1A52B62E22B3B31DD5FFE5EB890_marshaled_pinvoke
{
	Il2CppMethodPointer ___SetTrackingSpace_0;
	Il2CppMethodPointer ___GetTrackingSpace_1;
	Il2CppMethodPointer ___WaitGetPoses_2;
	Il2CppMethodPointer ___GetLastPoses_3;
	Il2CppMethodPointer ___GetLastPoseForTrackedDeviceIndex_4;
	Il2CppMethodPointer ___Submit_5;
	Il2CppMethodPointer ___ClearLastSubmittedFrame_6;
	Il2CppMethodPointer ___PostPresentHandoff_7;
	Il2CppMethodPointer ___GetFrameTiming_8;
	Il2CppMethodPointer ___GetFrameTimings_9;
	Il2CppMethodPointer ___GetFrameTimeRemaining_10;
	Il2CppMethodPointer ___GetCumulativeStats_11;
	Il2CppMethodPointer ___FadeToColor_12;
	Il2CppMethodPointer ___GetCurrentFadeColor_13;
	Il2CppMethodPointer ___FadeGrid_14;
	Il2CppMethodPointer ___GetCurrentGridAlpha_15;
	Il2CppMethodPointer ___SetSkyboxOverride_16;
	Il2CppMethodPointer ___ClearSkyboxOverride_17;
	Il2CppMethodPointer ___CompositorBringToFront_18;
	Il2CppMethodPointer ___CompositorGoToBack_19;
	Il2CppMethodPointer ___CompositorQuit_20;
	Il2CppMethodPointer ___IsFullscreen_21;
	Il2CppMethodPointer ___GetCurrentSceneFocusProcess_22;
	Il2CppMethodPointer ___GetLastFrameRenderer_23;
	Il2CppMethodPointer ___CanRenderScene_24;
	Il2CppMethodPointer ___ShowMirrorWindow_25;
	Il2CppMethodPointer ___HideMirrorWindow_26;
	Il2CppMethodPointer ___IsMirrorWindowVisible_27;
	Il2CppMethodPointer ___CompositorDumpImages_28;
	Il2CppMethodPointer ___ShouldAppRenderWithLowResources_29;
	Il2CppMethodPointer ___ForceInterleavedReprojectionOn_30;
	Il2CppMethodPointer ___ForceReconnectProcess_31;
	Il2CppMethodPointer ___SuspendRendering_32;
	Il2CppMethodPointer ___GetMirrorTextureD3D11_33;
	Il2CppMethodPointer ___ReleaseMirrorTextureD3D11_34;
	Il2CppMethodPointer ___GetMirrorTextureGL_35;
	Il2CppMethodPointer ___ReleaseSharedGLTexture_36;
	Il2CppMethodPointer ___LockGLSharedTextureForAccess_37;
	Il2CppMethodPointer ___UnlockGLSharedTextureForAccess_38;
	Il2CppMethodPointer ___GetVulkanInstanceExtensionsRequired_39;
	Il2CppMethodPointer ___GetVulkanDeviceExtensionsRequired_40;
	Il2CppMethodPointer ___SetExplicitTimingMode_41;
	Il2CppMethodPointer ___SubmitExplicitTimingData_42;
	Il2CppMethodPointer ___IsMotionSmoothingEnabled_43;
	Il2CppMethodPointer ___IsMotionSmoothingSupported_44;
	Il2CppMethodPointer ___IsCurrentSceneFocusAppLoading_45;
	Il2CppMethodPointer ___SetStageOverride_Async_46;
	Il2CppMethodPointer ___ClearStageOverride_47;
	Il2CppMethodPointer ___GetCompositorBenchmarkResults_48;
	Il2CppMethodPointer ___GetLastPosePredictionIDs_49;
	Il2CppMethodPointer ___GetPosesForFrame_50;
};
// Native definition for COM marshalling of Valve.VR.IVRCompositor
struct IVRCompositor_tD41C86F469DDC1A52B62E22B3B31DD5FFE5EB890_marshaled_com
{
	Il2CppMethodPointer ___SetTrackingSpace_0;
	Il2CppMethodPointer ___GetTrackingSpace_1;
	Il2CppMethodPointer ___WaitGetPoses_2;
	Il2CppMethodPointer ___GetLastPoses_3;
	Il2CppMethodPointer ___GetLastPoseForTrackedDeviceIndex_4;
	Il2CppMethodPointer ___Submit_5;
	Il2CppMethodPointer ___ClearLastSubmittedFrame_6;
	Il2CppMethodPointer ___PostPresentHandoff_7;
	Il2CppMethodPointer ___GetFrameTiming_8;
	Il2CppMethodPointer ___GetFrameTimings_9;
	Il2CppMethodPointer ___GetFrameTimeRemaining_10;
	Il2CppMethodPointer ___GetCumulativeStats_11;
	Il2CppMethodPointer ___FadeToColor_12;
	Il2CppMethodPointer ___GetCurrentFadeColor_13;
	Il2CppMethodPointer ___FadeGrid_14;
	Il2CppMethodPointer ___GetCurrentGridAlpha_15;
	Il2CppMethodPointer ___SetSkyboxOverride_16;
	Il2CppMethodPointer ___ClearSkyboxOverride_17;
	Il2CppMethodPointer ___CompositorBringToFront_18;
	Il2CppMethodPointer ___CompositorGoToBack_19;
	Il2CppMethodPointer ___CompositorQuit_20;
	Il2CppMethodPointer ___IsFullscreen_21;
	Il2CppMethodPointer ___GetCurrentSceneFocusProcess_22;
	Il2CppMethodPointer ___GetLastFrameRenderer_23;
	Il2CppMethodPointer ___CanRenderScene_24;
	Il2CppMethodPointer ___ShowMirrorWindow_25;
	Il2CppMethodPointer ___HideMirrorWindow_26;
	Il2CppMethodPointer ___IsMirrorWindowVisible_27;
	Il2CppMethodPointer ___CompositorDumpImages_28;
	Il2CppMethodPointer ___ShouldAppRenderWithLowResources_29;
	Il2CppMethodPointer ___ForceInterleavedReprojectionOn_30;
	Il2CppMethodPointer ___ForceReconnectProcess_31;
	Il2CppMethodPointer ___SuspendRendering_32;
	Il2CppMethodPointer ___GetMirrorTextureD3D11_33;
	Il2CppMethodPointer ___ReleaseMirrorTextureD3D11_34;
	Il2CppMethodPointer ___GetMirrorTextureGL_35;
	Il2CppMethodPointer ___ReleaseSharedGLTexture_36;
	Il2CppMethodPointer ___LockGLSharedTextureForAccess_37;
	Il2CppMethodPointer ___UnlockGLSharedTextureForAccess_38;
	Il2CppMethodPointer ___GetVulkanInstanceExtensionsRequired_39;
	Il2CppMethodPointer ___GetVulkanDeviceExtensionsRequired_40;
	Il2CppMethodPointer ___SetExplicitTimingMode_41;
	Il2CppMethodPointer ___SubmitExplicitTimingData_42;
	Il2CppMethodPointer ___IsMotionSmoothingEnabled_43;
	Il2CppMethodPointer ___IsMotionSmoothingSupported_44;
	Il2CppMethodPointer ___IsCurrentSceneFocusAppLoading_45;
	Il2CppMethodPointer ___SetStageOverride_Async_46;
	Il2CppMethodPointer ___ClearStageOverride_47;
	Il2CppMethodPointer ___GetCompositorBenchmarkResults_48;
	Il2CppMethodPointer ___GetLastPosePredictionIDs_49;
	Il2CppMethodPointer ___GetPosesForFrame_50;
};

// Valve.VR.IVRInput
struct IVRInput_t4B3561EE68C72A22D3EBAA3858E3B5E34B841D5F 
{
public:
	// Valve.VR.IVRInput/_SetActionManifestPath Valve.VR.IVRInput::SetActionManifestPath
	_SetActionManifestPath_t914810D32405649AEF373C90F80D1E8CEE10A049 * ___SetActionManifestPath_0;
	// Valve.VR.IVRInput/_GetActionSetHandle Valve.VR.IVRInput::GetActionSetHandle
	_GetActionSetHandle_t4F02E7BE5C89495C2A943127AD665873707ACF70 * ___GetActionSetHandle_1;
	// Valve.VR.IVRInput/_GetActionHandle Valve.VR.IVRInput::GetActionHandle
	_GetActionHandle_t9C54E9BD4B323756EBF1D339267D700FA0906E5A * ___GetActionHandle_2;
	// Valve.VR.IVRInput/_GetInputSourceHandle Valve.VR.IVRInput::GetInputSourceHandle
	_GetInputSourceHandle_t5E01A35961AD0A942C4CE91C75FD9AE5D6973E3D * ___GetInputSourceHandle_3;
	// Valve.VR.IVRInput/_UpdateActionState Valve.VR.IVRInput::UpdateActionState
	_UpdateActionState_t6857C1DBCCBEEAFC0DA66FC28413D59734A7E0AA * ___UpdateActionState_4;
	// Valve.VR.IVRInput/_GetDigitalActionData Valve.VR.IVRInput::GetDigitalActionData
	_GetDigitalActionData_t0DD2C2253E330F04FC502E187EAA386A2E9E37B7 * ___GetDigitalActionData_5;
	// Valve.VR.IVRInput/_GetAnalogActionData Valve.VR.IVRInput::GetAnalogActionData
	_GetAnalogActionData_t88A7E8F1E39FA928BA36ECC4CAF00F64EA5B2370 * ___GetAnalogActionData_6;
	// Valve.VR.IVRInput/_GetPoseActionDataRelativeToNow Valve.VR.IVRInput::GetPoseActionDataRelativeToNow
	_GetPoseActionDataRelativeToNow_t7F4F266EC331D8691677E7BC70E59558EE01F931 * ___GetPoseActionDataRelativeToNow_7;
	// Valve.VR.IVRInput/_GetPoseActionDataForNextFrame Valve.VR.IVRInput::GetPoseActionDataForNextFrame
	_GetPoseActionDataForNextFrame_t00494DFAEA855A0ADF9E551FAA418F58F4B66592 * ___GetPoseActionDataForNextFrame_8;
	// Valve.VR.IVRInput/_GetSkeletalActionData Valve.VR.IVRInput::GetSkeletalActionData
	_GetSkeletalActionData_t9216D0ABD8AC09499C70B1BB93F57D968E634615 * ___GetSkeletalActionData_9;
	// Valve.VR.IVRInput/_GetDominantHand Valve.VR.IVRInput::GetDominantHand
	_GetDominantHand_t2FDB8C04198FFEFB65B5D7C2B3D43AE51BFB00E8 * ___GetDominantHand_10;
	// Valve.VR.IVRInput/_SetDominantHand Valve.VR.IVRInput::SetDominantHand
	_SetDominantHand_t17970B7D36348973B20C9E3068637D27D2AC5CAE * ___SetDominantHand_11;
	// Valve.VR.IVRInput/_GetBoneCount Valve.VR.IVRInput::GetBoneCount
	_GetBoneCount_t7278256B408FB9AE18A09FEB867224E0FB3F96C0 * ___GetBoneCount_12;
	// Valve.VR.IVRInput/_GetBoneHierarchy Valve.VR.IVRInput::GetBoneHierarchy
	_GetBoneHierarchy_t7833B26BF9F3BBC545A1F18AE3A0E8CDACDB7EA3 * ___GetBoneHierarchy_13;
	// Valve.VR.IVRInput/_GetBoneName Valve.VR.IVRInput::GetBoneName
	_GetBoneName_tEA5C9719CFA7C9E207EB6BD21F6BE20471BAF32F * ___GetBoneName_14;
	// Valve.VR.IVRInput/_GetSkeletalReferenceTransforms Valve.VR.IVRInput::GetSkeletalReferenceTransforms
	_GetSkeletalReferenceTransforms_t389D7C3A88063A2108EE1C283E8585C877D5201F * ___GetSkeletalReferenceTransforms_15;
	// Valve.VR.IVRInput/_GetSkeletalTrackingLevel Valve.VR.IVRInput::GetSkeletalTrackingLevel
	_GetSkeletalTrackingLevel_tAB43C3631928CF708BD976C9470913B77FB57192 * ___GetSkeletalTrackingLevel_16;
	// Valve.VR.IVRInput/_GetSkeletalBoneData Valve.VR.IVRInput::GetSkeletalBoneData
	_GetSkeletalBoneData_t1FD6A4A117DC2B8F302E4A22FE6544160C1253B6 * ___GetSkeletalBoneData_17;
	// Valve.VR.IVRInput/_GetSkeletalSummaryData Valve.VR.IVRInput::GetSkeletalSummaryData
	_GetSkeletalSummaryData_t28D43F5B957A917DA6B72169AB095ADB9F30B036 * ___GetSkeletalSummaryData_18;
	// Valve.VR.IVRInput/_GetSkeletalBoneDataCompressed Valve.VR.IVRInput::GetSkeletalBoneDataCompressed
	_GetSkeletalBoneDataCompressed_t8167E3331CDA6F777C1729C8B59F8A85D50FEAB6 * ___GetSkeletalBoneDataCompressed_19;
	// Valve.VR.IVRInput/_DecompressSkeletalBoneData Valve.VR.IVRInput::DecompressSkeletalBoneData
	_DecompressSkeletalBoneData_t86826E0E71A97AF27926A5FE729C40C044950EE3 * ___DecompressSkeletalBoneData_20;
	// Valve.VR.IVRInput/_TriggerHapticVibrationAction Valve.VR.IVRInput::TriggerHapticVibrationAction
	_TriggerHapticVibrationAction_tB60CF22CEAEFCF00E9931AC7794926A72FBA6BD7 * ___TriggerHapticVibrationAction_21;
	// Valve.VR.IVRInput/_GetActionOrigins Valve.VR.IVRInput::GetActionOrigins
	_GetActionOrigins_t5981F544757263645A0785945D160DB872AC4004 * ___GetActionOrigins_22;
	// Valve.VR.IVRInput/_GetOriginLocalizedName Valve.VR.IVRInput::GetOriginLocalizedName
	_GetOriginLocalizedName_tE07610E77B523E126544A7832EECC551E2FD3021 * ___GetOriginLocalizedName_23;
	// Valve.VR.IVRInput/_GetOriginTrackedDeviceInfo Valve.VR.IVRInput::GetOriginTrackedDeviceInfo
	_GetOriginTrackedDeviceInfo_t435DE06C2EE2B7705EE9AA94D172E3405305EBAA * ___GetOriginTrackedDeviceInfo_24;
	// Valve.VR.IVRInput/_GetActionBindingInfo Valve.VR.IVRInput::GetActionBindingInfo
	_GetActionBindingInfo_tAD1F4388BDBC6CD3B6917F8D34FDE4ED50FA0B90 * ___GetActionBindingInfo_25;
	// Valve.VR.IVRInput/_ShowActionOrigins Valve.VR.IVRInput::ShowActionOrigins
	_ShowActionOrigins_t13C88E34BE1267273FA0856B00B4925C3CC92104 * ___ShowActionOrigins_26;
	// Valve.VR.IVRInput/_ShowBindingsForActionSet Valve.VR.IVRInput::ShowBindingsForActionSet
	_ShowBindingsForActionSet_tD09336526A875B6A29BC7E9EA9FF1CBD5DE24F4E * ___ShowBindingsForActionSet_27;
	// Valve.VR.IVRInput/_GetComponentStateForBinding Valve.VR.IVRInput::GetComponentStateForBinding
	_GetComponentStateForBinding_t3CCC4BE573D9C8CD899FE4A5931C0A6D4BEF90C9 * ___GetComponentStateForBinding_28;
	// Valve.VR.IVRInput/_IsUsingLegacyInput Valve.VR.IVRInput::IsUsingLegacyInput
	_IsUsingLegacyInput_t612314BBE7397C3BB14BE0083435E0DB35EE29B0 * ___IsUsingLegacyInput_29;
	// Valve.VR.IVRInput/_OpenBindingUI Valve.VR.IVRInput::OpenBindingUI
	_OpenBindingUI_tEB5276251C8845C26545C483C744740F583EF786 * ___OpenBindingUI_30;
	// Valve.VR.IVRInput/_GetBindingVariant Valve.VR.IVRInput::GetBindingVariant
	_GetBindingVariant_tC5BBC7614163DE88B1552CFD849C1345C15B42DD * ___GetBindingVariant_31;

public:
	inline static int32_t get_offset_of_SetActionManifestPath_0() { return static_cast<int32_t>(offsetof(IVRInput_t4B3561EE68C72A22D3EBAA3858E3B5E34B841D5F, ___SetActionManifestPath_0)); }
	inline _SetActionManifestPath_t914810D32405649AEF373C90F80D1E8CEE10A049 * get_SetActionManifestPath_0() const { return ___SetActionManifestPath_0; }
	inline _SetActionManifestPath_t914810D32405649AEF373C90F80D1E8CEE10A049 ** get_address_of_SetActionManifestPath_0() { return &___SetActionManifestPath_0; }
	inline void set_SetActionManifestPath_0(_SetActionManifestPath_t914810D32405649AEF373C90F80D1E8CEE10A049 * value)
	{
		___SetActionManifestPath_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___SetActionManifestPath_0), (void*)value);
	}

	inline static int32_t get_offset_of_GetActionSetHandle_1() { return static_cast<int32_t>(offsetof(IVRInput_t4B3561EE68C72A22D3EBAA3858E3B5E34B841D5F, ___GetActionSetHandle_1)); }
	inline _GetActionSetHandle_t4F02E7BE5C89495C2A943127AD665873707ACF70 * get_GetActionSetHandle_1() const { return ___GetActionSetHandle_1; }
	inline _GetActionSetHandle_t4F02E7BE5C89495C2A943127AD665873707ACF70 ** get_address_of_GetActionSetHandle_1() { return &___GetActionSetHandle_1; }
	inline void set_GetActionSetHandle_1(_GetActionSetHandle_t4F02E7BE5C89495C2A943127AD665873707ACF70 * value)
	{
		___GetActionSetHandle_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetActionSetHandle_1), (void*)value);
	}

	inline static int32_t get_offset_of_GetActionHandle_2() { return static_cast<int32_t>(offsetof(IVRInput_t4B3561EE68C72A22D3EBAA3858E3B5E34B841D5F, ___GetActionHandle_2)); }
	inline _GetActionHandle_t9C54E9BD4B323756EBF1D339267D700FA0906E5A * get_GetActionHandle_2() const { return ___GetActionHandle_2; }
	inline _GetActionHandle_t9C54E9BD4B323756EBF1D339267D700FA0906E5A ** get_address_of_GetActionHandle_2() { return &___GetActionHandle_2; }
	inline void set_GetActionHandle_2(_GetActionHandle_t9C54E9BD4B323756EBF1D339267D700FA0906E5A * value)
	{
		___GetActionHandle_2 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetActionHandle_2), (void*)value);
	}

	inline static int32_t get_offset_of_GetInputSourceHandle_3() { return static_cast<int32_t>(offsetof(IVRInput_t4B3561EE68C72A22D3EBAA3858E3B5E34B841D5F, ___GetInputSourceHandle_3)); }
	inline _GetInputSourceHandle_t5E01A35961AD0A942C4CE91C75FD9AE5D6973E3D * get_GetInputSourceHandle_3() const { return ___GetInputSourceHandle_3; }
	inline _GetInputSourceHandle_t5E01A35961AD0A942C4CE91C75FD9AE5D6973E3D ** get_address_of_GetInputSourceHandle_3() { return &___GetInputSourceHandle_3; }
	inline void set_GetInputSourceHandle_3(_GetInputSourceHandle_t5E01A35961AD0A942C4CE91C75FD9AE5D6973E3D * value)
	{
		___GetInputSourceHandle_3 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetInputSourceHandle_3), (void*)value);
	}

	inline static int32_t get_offset_of_UpdateActionState_4() { return static_cast<int32_t>(offsetof(IVRInput_t4B3561EE68C72A22D3EBAA3858E3B5E34B841D5F, ___UpdateActionState_4)); }
	inline _UpdateActionState_t6857C1DBCCBEEAFC0DA66FC28413D59734A7E0AA * get_UpdateActionState_4() const { return ___UpdateActionState_4; }
	inline _UpdateActionState_t6857C1DBCCBEEAFC0DA66FC28413D59734A7E0AA ** get_address_of_UpdateActionState_4() { return &___UpdateActionState_4; }
	inline void set_UpdateActionState_4(_UpdateActionState_t6857C1DBCCBEEAFC0DA66FC28413D59734A7E0AA * value)
	{
		___UpdateActionState_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___UpdateActionState_4), (void*)value);
	}

	inline static int32_t get_offset_of_GetDigitalActionData_5() { return static_cast<int32_t>(offsetof(IVRInput_t4B3561EE68C72A22D3EBAA3858E3B5E34B841D5F, ___GetDigitalActionData_5)); }
	inline _GetDigitalActionData_t0DD2C2253E330F04FC502E187EAA386A2E9E37B7 * get_GetDigitalActionData_5() const { return ___GetDigitalActionData_5; }
	inline _GetDigitalActionData_t0DD2C2253E330F04FC502E187EAA386A2E9E37B7 ** get_address_of_GetDigitalActionData_5() { return &___GetDigitalActionData_5; }
	inline void set_GetDigitalActionData_5(_GetDigitalActionData_t0DD2C2253E330F04FC502E187EAA386A2E9E37B7 * value)
	{
		___GetDigitalActionData_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetDigitalActionData_5), (void*)value);
	}

	inline static int32_t get_offset_of_GetAnalogActionData_6() { return static_cast<int32_t>(offsetof(IVRInput_t4B3561EE68C72A22D3EBAA3858E3B5E34B841D5F, ___GetAnalogActionData_6)); }
	inline _GetAnalogActionData_t88A7E8F1E39FA928BA36ECC4CAF00F64EA5B2370 * get_GetAnalogActionData_6() const { return ___GetAnalogActionData_6; }
	inline _GetAnalogActionData_t88A7E8F1E39FA928BA36ECC4CAF00F64EA5B2370 ** get_address_of_GetAnalogActionData_6() { return &___GetAnalogActionData_6; }
	inline void set_GetAnalogActionData_6(_GetAnalogActionData_t88A7E8F1E39FA928BA36ECC4CAF00F64EA5B2370 * value)
	{
		___GetAnalogActionData_6 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetAnalogActionData_6), (void*)value);
	}

	inline static int32_t get_offset_of_GetPoseActionDataRelativeToNow_7() { return static_cast<int32_t>(offsetof(IVRInput_t4B3561EE68C72A22D3EBAA3858E3B5E34B841D5F, ___GetPoseActionDataRelativeToNow_7)); }
	inline _GetPoseActionDataRelativeToNow_t7F4F266EC331D8691677E7BC70E59558EE01F931 * get_GetPoseActionDataRelativeToNow_7() const { return ___GetPoseActionDataRelativeToNow_7; }
	inline _GetPoseActionDataRelativeToNow_t7F4F266EC331D8691677E7BC70E59558EE01F931 ** get_address_of_GetPoseActionDataRelativeToNow_7() { return &___GetPoseActionDataRelativeToNow_7; }
	inline void set_GetPoseActionDataRelativeToNow_7(_GetPoseActionDataRelativeToNow_t7F4F266EC331D8691677E7BC70E59558EE01F931 * value)
	{
		___GetPoseActionDataRelativeToNow_7 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetPoseActionDataRelativeToNow_7), (void*)value);
	}

	inline static int32_t get_offset_of_GetPoseActionDataForNextFrame_8() { return static_cast<int32_t>(offsetof(IVRInput_t4B3561EE68C72A22D3EBAA3858E3B5E34B841D5F, ___GetPoseActionDataForNextFrame_8)); }
	inline _GetPoseActionDataForNextFrame_t00494DFAEA855A0ADF9E551FAA418F58F4B66592 * get_GetPoseActionDataForNextFrame_8() const { return ___GetPoseActionDataForNextFrame_8; }
	inline _GetPoseActionDataForNextFrame_t00494DFAEA855A0ADF9E551FAA418F58F4B66592 ** get_address_of_GetPoseActionDataForNextFrame_8() { return &___GetPoseActionDataForNextFrame_8; }
	inline void set_GetPoseActionDataForNextFrame_8(_GetPoseActionDataForNextFrame_t00494DFAEA855A0ADF9E551FAA418F58F4B66592 * value)
	{
		___GetPoseActionDataForNextFrame_8 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetPoseActionDataForNextFrame_8), (void*)value);
	}

	inline static int32_t get_offset_of_GetSkeletalActionData_9() { return static_cast<int32_t>(offsetof(IVRInput_t4B3561EE68C72A22D3EBAA3858E3B5E34B841D5F, ___GetSkeletalActionData_9)); }
	inline _GetSkeletalActionData_t9216D0ABD8AC09499C70B1BB93F57D968E634615 * get_GetSkeletalActionData_9() const { return ___GetSkeletalActionData_9; }
	inline _GetSkeletalActionData_t9216D0ABD8AC09499C70B1BB93F57D968E634615 ** get_address_of_GetSkeletalActionData_9() { return &___GetSkeletalActionData_9; }
	inline void set_GetSkeletalActionData_9(_GetSkeletalActionData_t9216D0ABD8AC09499C70B1BB93F57D968E634615 * value)
	{
		___GetSkeletalActionData_9 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetSkeletalActionData_9), (void*)value);
	}

	inline static int32_t get_offset_of_GetDominantHand_10() { return static_cast<int32_t>(offsetof(IVRInput_t4B3561EE68C72A22D3EBAA3858E3B5E34B841D5F, ___GetDominantHand_10)); }
	inline _GetDominantHand_t2FDB8C04198FFEFB65B5D7C2B3D43AE51BFB00E8 * get_GetDominantHand_10() const { return ___GetDominantHand_10; }
	inline _GetDominantHand_t2FDB8C04198FFEFB65B5D7C2B3D43AE51BFB00E8 ** get_address_of_GetDominantHand_10() { return &___GetDominantHand_10; }
	inline void set_GetDominantHand_10(_GetDominantHand_t2FDB8C04198FFEFB65B5D7C2B3D43AE51BFB00E8 * value)
	{
		___GetDominantHand_10 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetDominantHand_10), (void*)value);
	}

	inline static int32_t get_offset_of_SetDominantHand_11() { return static_cast<int32_t>(offsetof(IVRInput_t4B3561EE68C72A22D3EBAA3858E3B5E34B841D5F, ___SetDominantHand_11)); }
	inline _SetDominantHand_t17970B7D36348973B20C9E3068637D27D2AC5CAE * get_SetDominantHand_11() const { return ___SetDominantHand_11; }
	inline _SetDominantHand_t17970B7D36348973B20C9E3068637D27D2AC5CAE ** get_address_of_SetDominantHand_11() { return &___SetDominantHand_11; }
	inline void set_SetDominantHand_11(_SetDominantHand_t17970B7D36348973B20C9E3068637D27D2AC5CAE * value)
	{
		___SetDominantHand_11 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___SetDominantHand_11), (void*)value);
	}

	inline static int32_t get_offset_of_GetBoneCount_12() { return static_cast<int32_t>(offsetof(IVRInput_t4B3561EE68C72A22D3EBAA3858E3B5E34B841D5F, ___GetBoneCount_12)); }
	inline _GetBoneCount_t7278256B408FB9AE18A09FEB867224E0FB3F96C0 * get_GetBoneCount_12() const { return ___GetBoneCount_12; }
	inline _GetBoneCount_t7278256B408FB9AE18A09FEB867224E0FB3F96C0 ** get_address_of_GetBoneCount_12() { return &___GetBoneCount_12; }
	inline void set_GetBoneCount_12(_GetBoneCount_t7278256B408FB9AE18A09FEB867224E0FB3F96C0 * value)
	{
		___GetBoneCount_12 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetBoneCount_12), (void*)value);
	}

	inline static int32_t get_offset_of_GetBoneHierarchy_13() { return static_cast<int32_t>(offsetof(IVRInput_t4B3561EE68C72A22D3EBAA3858E3B5E34B841D5F, ___GetBoneHierarchy_13)); }
	inline _GetBoneHierarchy_t7833B26BF9F3BBC545A1F18AE3A0E8CDACDB7EA3 * get_GetBoneHierarchy_13() const { return ___GetBoneHierarchy_13; }
	inline _GetBoneHierarchy_t7833B26BF9F3BBC545A1F18AE3A0E8CDACDB7EA3 ** get_address_of_GetBoneHierarchy_13() { return &___GetBoneHierarchy_13; }
	inline void set_GetBoneHierarchy_13(_GetBoneHierarchy_t7833B26BF9F3BBC545A1F18AE3A0E8CDACDB7EA3 * value)
	{
		___GetBoneHierarchy_13 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetBoneHierarchy_13), (void*)value);
	}

	inline static int32_t get_offset_of_GetBoneName_14() { return static_cast<int32_t>(offsetof(IVRInput_t4B3561EE68C72A22D3EBAA3858E3B5E34B841D5F, ___GetBoneName_14)); }
	inline _GetBoneName_tEA5C9719CFA7C9E207EB6BD21F6BE20471BAF32F * get_GetBoneName_14() const { return ___GetBoneName_14; }
	inline _GetBoneName_tEA5C9719CFA7C9E207EB6BD21F6BE20471BAF32F ** get_address_of_GetBoneName_14() { return &___GetBoneName_14; }
	inline void set_GetBoneName_14(_GetBoneName_tEA5C9719CFA7C9E207EB6BD21F6BE20471BAF32F * value)
	{
		___GetBoneName_14 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetBoneName_14), (void*)value);
	}

	inline static int32_t get_offset_of_GetSkeletalReferenceTransforms_15() { return static_cast<int32_t>(offsetof(IVRInput_t4B3561EE68C72A22D3EBAA3858E3B5E34B841D5F, ___GetSkeletalReferenceTransforms_15)); }
	inline _GetSkeletalReferenceTransforms_t389D7C3A88063A2108EE1C283E8585C877D5201F * get_GetSkeletalReferenceTransforms_15() const { return ___GetSkeletalReferenceTransforms_15; }
	inline _GetSkeletalReferenceTransforms_t389D7C3A88063A2108EE1C283E8585C877D5201F ** get_address_of_GetSkeletalReferenceTransforms_15() { return &___GetSkeletalReferenceTransforms_15; }
	inline void set_GetSkeletalReferenceTransforms_15(_GetSkeletalReferenceTransforms_t389D7C3A88063A2108EE1C283E8585C877D5201F * value)
	{
		___GetSkeletalReferenceTransforms_15 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetSkeletalReferenceTransforms_15), (void*)value);
	}

	inline static int32_t get_offset_of_GetSkeletalTrackingLevel_16() { return static_cast<int32_t>(offsetof(IVRInput_t4B3561EE68C72A22D3EBAA3858E3B5E34B841D5F, ___GetSkeletalTrackingLevel_16)); }
	inline _GetSkeletalTrackingLevel_tAB43C3631928CF708BD976C9470913B77FB57192 * get_GetSkeletalTrackingLevel_16() const { return ___GetSkeletalTrackingLevel_16; }
	inline _GetSkeletalTrackingLevel_tAB43C3631928CF708BD976C9470913B77FB57192 ** get_address_of_GetSkeletalTrackingLevel_16() { return &___GetSkeletalTrackingLevel_16; }
	inline void set_GetSkeletalTrackingLevel_16(_GetSkeletalTrackingLevel_tAB43C3631928CF708BD976C9470913B77FB57192 * value)
	{
		___GetSkeletalTrackingLevel_16 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetSkeletalTrackingLevel_16), (void*)value);
	}

	inline static int32_t get_offset_of_GetSkeletalBoneData_17() { return static_cast<int32_t>(offsetof(IVRInput_t4B3561EE68C72A22D3EBAA3858E3B5E34B841D5F, ___GetSkeletalBoneData_17)); }
	inline _GetSkeletalBoneData_t1FD6A4A117DC2B8F302E4A22FE6544160C1253B6 * get_GetSkeletalBoneData_17() const { return ___GetSkeletalBoneData_17; }
	inline _GetSkeletalBoneData_t1FD6A4A117DC2B8F302E4A22FE6544160C1253B6 ** get_address_of_GetSkeletalBoneData_17() { return &___GetSkeletalBoneData_17; }
	inline void set_GetSkeletalBoneData_17(_GetSkeletalBoneData_t1FD6A4A117DC2B8F302E4A22FE6544160C1253B6 * value)
	{
		___GetSkeletalBoneData_17 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetSkeletalBoneData_17), (void*)value);
	}

	inline static int32_t get_offset_of_GetSkeletalSummaryData_18() { return static_cast<int32_t>(offsetof(IVRInput_t4B3561EE68C72A22D3EBAA3858E3B5E34B841D5F, ___GetSkeletalSummaryData_18)); }
	inline _GetSkeletalSummaryData_t28D43F5B957A917DA6B72169AB095ADB9F30B036 * get_GetSkeletalSummaryData_18() const { return ___GetSkeletalSummaryData_18; }
	inline _GetSkeletalSummaryData_t28D43F5B957A917DA6B72169AB095ADB9F30B036 ** get_address_of_GetSkeletalSummaryData_18() { return &___GetSkeletalSummaryData_18; }
	inline void set_GetSkeletalSummaryData_18(_GetSkeletalSummaryData_t28D43F5B957A917DA6B72169AB095ADB9F30B036 * value)
	{
		___GetSkeletalSummaryData_18 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetSkeletalSummaryData_18), (void*)value);
	}

	inline static int32_t get_offset_of_GetSkeletalBoneDataCompressed_19() { return static_cast<int32_t>(offsetof(IVRInput_t4B3561EE68C72A22D3EBAA3858E3B5E34B841D5F, ___GetSkeletalBoneDataCompressed_19)); }
	inline _GetSkeletalBoneDataCompressed_t8167E3331CDA6F777C1729C8B59F8A85D50FEAB6 * get_GetSkeletalBoneDataCompressed_19() const { return ___GetSkeletalBoneDataCompressed_19; }
	inline _GetSkeletalBoneDataCompressed_t8167E3331CDA6F777C1729C8B59F8A85D50FEAB6 ** get_address_of_GetSkeletalBoneDataCompressed_19() { return &___GetSkeletalBoneDataCompressed_19; }
	inline void set_GetSkeletalBoneDataCompressed_19(_GetSkeletalBoneDataCompressed_t8167E3331CDA6F777C1729C8B59F8A85D50FEAB6 * value)
	{
		___GetSkeletalBoneDataCompressed_19 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetSkeletalBoneDataCompressed_19), (void*)value);
	}

	inline static int32_t get_offset_of_DecompressSkeletalBoneData_20() { return static_cast<int32_t>(offsetof(IVRInput_t4B3561EE68C72A22D3EBAA3858E3B5E34B841D5F, ___DecompressSkeletalBoneData_20)); }
	inline _DecompressSkeletalBoneData_t86826E0E71A97AF27926A5FE729C40C044950EE3 * get_DecompressSkeletalBoneData_20() const { return ___DecompressSkeletalBoneData_20; }
	inline _DecompressSkeletalBoneData_t86826E0E71A97AF27926A5FE729C40C044950EE3 ** get_address_of_DecompressSkeletalBoneData_20() { return &___DecompressSkeletalBoneData_20; }
	inline void set_DecompressSkeletalBoneData_20(_DecompressSkeletalBoneData_t86826E0E71A97AF27926A5FE729C40C044950EE3 * value)
	{
		___DecompressSkeletalBoneData_20 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___DecompressSkeletalBoneData_20), (void*)value);
	}

	inline static int32_t get_offset_of_TriggerHapticVibrationAction_21() { return static_cast<int32_t>(offsetof(IVRInput_t4B3561EE68C72A22D3EBAA3858E3B5E34B841D5F, ___TriggerHapticVibrationAction_21)); }
	inline _TriggerHapticVibrationAction_tB60CF22CEAEFCF00E9931AC7794926A72FBA6BD7 * get_TriggerHapticVibrationAction_21() const { return ___TriggerHapticVibrationAction_21; }
	inline _TriggerHapticVibrationAction_tB60CF22CEAEFCF00E9931AC7794926A72FBA6BD7 ** get_address_of_TriggerHapticVibrationAction_21() { return &___TriggerHapticVibrationAction_21; }
	inline void set_TriggerHapticVibrationAction_21(_TriggerHapticVibrationAction_tB60CF22CEAEFCF00E9931AC7794926A72FBA6BD7 * value)
	{
		___TriggerHapticVibrationAction_21 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___TriggerHapticVibrationAction_21), (void*)value);
	}

	inline static int32_t get_offset_of_GetActionOrigins_22() { return static_cast<int32_t>(offsetof(IVRInput_t4B3561EE68C72A22D3EBAA3858E3B5E34B841D5F, ___GetActionOrigins_22)); }
	inline _GetActionOrigins_t5981F544757263645A0785945D160DB872AC4004 * get_GetActionOrigins_22() const { return ___GetActionOrigins_22; }
	inline _GetActionOrigins_t5981F544757263645A0785945D160DB872AC4004 ** get_address_of_GetActionOrigins_22() { return &___GetActionOrigins_22; }
	inline void set_GetActionOrigins_22(_GetActionOrigins_t5981F544757263645A0785945D160DB872AC4004 * value)
	{
		___GetActionOrigins_22 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetActionOrigins_22), (void*)value);
	}

	inline static int32_t get_offset_of_GetOriginLocalizedName_23() { return static_cast<int32_t>(offsetof(IVRInput_t4B3561EE68C72A22D3EBAA3858E3B5E34B841D5F, ___GetOriginLocalizedName_23)); }
	inline _GetOriginLocalizedName_tE07610E77B523E126544A7832EECC551E2FD3021 * get_GetOriginLocalizedName_23() const { return ___GetOriginLocalizedName_23; }
	inline _GetOriginLocalizedName_tE07610E77B523E126544A7832EECC551E2FD3021 ** get_address_of_GetOriginLocalizedName_23() { return &___GetOriginLocalizedName_23; }
	inline void set_GetOriginLocalizedName_23(_GetOriginLocalizedName_tE07610E77B523E126544A7832EECC551E2FD3021 * value)
	{
		___GetOriginLocalizedName_23 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetOriginLocalizedName_23), (void*)value);
	}

	inline static int32_t get_offset_of_GetOriginTrackedDeviceInfo_24() { return static_cast<int32_t>(offsetof(IVRInput_t4B3561EE68C72A22D3EBAA3858E3B5E34B841D5F, ___GetOriginTrackedDeviceInfo_24)); }
	inline _GetOriginTrackedDeviceInfo_t435DE06C2EE2B7705EE9AA94D172E3405305EBAA * get_GetOriginTrackedDeviceInfo_24() const { return ___GetOriginTrackedDeviceInfo_24; }
	inline _GetOriginTrackedDeviceInfo_t435DE06C2EE2B7705EE9AA94D172E3405305EBAA ** get_address_of_GetOriginTrackedDeviceInfo_24() { return &___GetOriginTrackedDeviceInfo_24; }
	inline void set_GetOriginTrackedDeviceInfo_24(_GetOriginTrackedDeviceInfo_t435DE06C2EE2B7705EE9AA94D172E3405305EBAA * value)
	{
		___GetOriginTrackedDeviceInfo_24 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetOriginTrackedDeviceInfo_24), (void*)value);
	}

	inline static int32_t get_offset_of_GetActionBindingInfo_25() { return static_cast<int32_t>(offsetof(IVRInput_t4B3561EE68C72A22D3EBAA3858E3B5E34B841D5F, ___GetActionBindingInfo_25)); }
	inline _GetActionBindingInfo_tAD1F4388BDBC6CD3B6917F8D34FDE4ED50FA0B90 * get_GetActionBindingInfo_25() const { return ___GetActionBindingInfo_25; }
	inline _GetActionBindingInfo_tAD1F4388BDBC6CD3B6917F8D34FDE4ED50FA0B90 ** get_address_of_GetActionBindingInfo_25() { return &___GetActionBindingInfo_25; }
	inline void set_GetActionBindingInfo_25(_GetActionBindingInfo_tAD1F4388BDBC6CD3B6917F8D34FDE4ED50FA0B90 * value)
	{
		___GetActionBindingInfo_25 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetActionBindingInfo_25), (void*)value);
	}

	inline static int32_t get_offset_of_ShowActionOrigins_26() { return static_cast<int32_t>(offsetof(IVRInput_t4B3561EE68C72A22D3EBAA3858E3B5E34B841D5F, ___ShowActionOrigins_26)); }
	inline _ShowActionOrigins_t13C88E34BE1267273FA0856B00B4925C3CC92104 * get_ShowActionOrigins_26() const { return ___ShowActionOrigins_26; }
	inline _ShowActionOrigins_t13C88E34BE1267273FA0856B00B4925C3CC92104 ** get_address_of_ShowActionOrigins_26() { return &___ShowActionOrigins_26; }
	inline void set_ShowActionOrigins_26(_ShowActionOrigins_t13C88E34BE1267273FA0856B00B4925C3CC92104 * value)
	{
		___ShowActionOrigins_26 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___ShowActionOrigins_26), (void*)value);
	}

	inline static int32_t get_offset_of_ShowBindingsForActionSet_27() { return static_cast<int32_t>(offsetof(IVRInput_t4B3561EE68C72A22D3EBAA3858E3B5E34B841D5F, ___ShowBindingsForActionSet_27)); }
	inline _ShowBindingsForActionSet_tD09336526A875B6A29BC7E9EA9FF1CBD5DE24F4E * get_ShowBindingsForActionSet_27() const { return ___ShowBindingsForActionSet_27; }
	inline _ShowBindingsForActionSet_tD09336526A875B6A29BC7E9EA9FF1CBD5DE24F4E ** get_address_of_ShowBindingsForActionSet_27() { return &___ShowBindingsForActionSet_27; }
	inline void set_ShowBindingsForActionSet_27(_ShowBindingsForActionSet_tD09336526A875B6A29BC7E9EA9FF1CBD5DE24F4E * value)
	{
		___ShowBindingsForActionSet_27 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___ShowBindingsForActionSet_27), (void*)value);
	}

	inline static int32_t get_offset_of_GetComponentStateForBinding_28() { return static_cast<int32_t>(offsetof(IVRInput_t4B3561EE68C72A22D3EBAA3858E3B5E34B841D5F, ___GetComponentStateForBinding_28)); }
	inline _GetComponentStateForBinding_t3CCC4BE573D9C8CD899FE4A5931C0A6D4BEF90C9 * get_GetComponentStateForBinding_28() const { return ___GetComponentStateForBinding_28; }
	inline _GetComponentStateForBinding_t3CCC4BE573D9C8CD899FE4A5931C0A6D4BEF90C9 ** get_address_of_GetComponentStateForBinding_28() { return &___GetComponentStateForBinding_28; }
	inline void set_GetComponentStateForBinding_28(_GetComponentStateForBinding_t3CCC4BE573D9C8CD899FE4A5931C0A6D4BEF90C9 * value)
	{
		___GetComponentStateForBinding_28 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetComponentStateForBinding_28), (void*)value);
	}

	inline static int32_t get_offset_of_IsUsingLegacyInput_29() { return static_cast<int32_t>(offsetof(IVRInput_t4B3561EE68C72A22D3EBAA3858E3B5E34B841D5F, ___IsUsingLegacyInput_29)); }
	inline _IsUsingLegacyInput_t612314BBE7397C3BB14BE0083435E0DB35EE29B0 * get_IsUsingLegacyInput_29() const { return ___IsUsingLegacyInput_29; }
	inline _IsUsingLegacyInput_t612314BBE7397C3BB14BE0083435E0DB35EE29B0 ** get_address_of_IsUsingLegacyInput_29() { return &___IsUsingLegacyInput_29; }
	inline void set_IsUsingLegacyInput_29(_IsUsingLegacyInput_t612314BBE7397C3BB14BE0083435E0DB35EE29B0 * value)
	{
		___IsUsingLegacyInput_29 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___IsUsingLegacyInput_29), (void*)value);
	}

	inline static int32_t get_offset_of_OpenBindingUI_30() { return static_cast<int32_t>(offsetof(IVRInput_t4B3561EE68C72A22D3EBAA3858E3B5E34B841D5F, ___OpenBindingUI_30)); }
	inline _OpenBindingUI_tEB5276251C8845C26545C483C744740F583EF786 * get_OpenBindingUI_30() const { return ___OpenBindingUI_30; }
	inline _OpenBindingUI_tEB5276251C8845C26545C483C744740F583EF786 ** get_address_of_OpenBindingUI_30() { return &___OpenBindingUI_30; }
	inline void set_OpenBindingUI_30(_OpenBindingUI_tEB5276251C8845C26545C483C744740F583EF786 * value)
	{
		___OpenBindingUI_30 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___OpenBindingUI_30), (void*)value);
	}

	inline static int32_t get_offset_of_GetBindingVariant_31() { return static_cast<int32_t>(offsetof(IVRInput_t4B3561EE68C72A22D3EBAA3858E3B5E34B841D5F, ___GetBindingVariant_31)); }
	inline _GetBindingVariant_tC5BBC7614163DE88B1552CFD849C1345C15B42DD * get_GetBindingVariant_31() const { return ___GetBindingVariant_31; }
	inline _GetBindingVariant_tC5BBC7614163DE88B1552CFD849C1345C15B42DD ** get_address_of_GetBindingVariant_31() { return &___GetBindingVariant_31; }
	inline void set_GetBindingVariant_31(_GetBindingVariant_tC5BBC7614163DE88B1552CFD849C1345C15B42DD * value)
	{
		___GetBindingVariant_31 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetBindingVariant_31), (void*)value);
	}
};

// Native definition for P/Invoke marshalling of Valve.VR.IVRInput
struct IVRInput_t4B3561EE68C72A22D3EBAA3858E3B5E34B841D5F_marshaled_pinvoke
{
	Il2CppMethodPointer ___SetActionManifestPath_0;
	Il2CppMethodPointer ___GetActionSetHandle_1;
	Il2CppMethodPointer ___GetActionHandle_2;
	Il2CppMethodPointer ___GetInputSourceHandle_3;
	Il2CppMethodPointer ___UpdateActionState_4;
	Il2CppMethodPointer ___GetDigitalActionData_5;
	Il2CppMethodPointer ___GetAnalogActionData_6;
	Il2CppMethodPointer ___GetPoseActionDataRelativeToNow_7;
	Il2CppMethodPointer ___GetPoseActionDataForNextFrame_8;
	Il2CppMethodPointer ___GetSkeletalActionData_9;
	Il2CppMethodPointer ___GetDominantHand_10;
	Il2CppMethodPointer ___SetDominantHand_11;
	Il2CppMethodPointer ___GetBoneCount_12;
	Il2CppMethodPointer ___GetBoneHierarchy_13;
	Il2CppMethodPointer ___GetBoneName_14;
	Il2CppMethodPointer ___GetSkeletalReferenceTransforms_15;
	Il2CppMethodPointer ___GetSkeletalTrackingLevel_16;
	Il2CppMethodPointer ___GetSkeletalBoneData_17;
	Il2CppMethodPointer ___GetSkeletalSummaryData_18;
	Il2CppMethodPointer ___GetSkeletalBoneDataCompressed_19;
	Il2CppMethodPointer ___DecompressSkeletalBoneData_20;
	Il2CppMethodPointer ___TriggerHapticVibrationAction_21;
	Il2CppMethodPointer ___GetActionOrigins_22;
	Il2CppMethodPointer ___GetOriginLocalizedName_23;
	Il2CppMethodPointer ___GetOriginTrackedDeviceInfo_24;
	Il2CppMethodPointer ___GetActionBindingInfo_25;
	Il2CppMethodPointer ___ShowActionOrigins_26;
	Il2CppMethodPointer ___ShowBindingsForActionSet_27;
	Il2CppMethodPointer ___GetComponentStateForBinding_28;
	Il2CppMethodPointer ___IsUsingLegacyInput_29;
	Il2CppMethodPointer ___OpenBindingUI_30;
	Il2CppMethodPointer ___GetBindingVariant_31;
};
// Native definition for COM marshalling of Valve.VR.IVRInput
struct IVRInput_t4B3561EE68C72A22D3EBAA3858E3B5E34B841D5F_marshaled_com
{
	Il2CppMethodPointer ___SetActionManifestPath_0;
	Il2CppMethodPointer ___GetActionSetHandle_1;
	Il2CppMethodPointer ___GetActionHandle_2;
	Il2CppMethodPointer ___GetInputSourceHandle_3;
	Il2CppMethodPointer ___UpdateActionState_4;
	Il2CppMethodPointer ___GetDigitalActionData_5;
	Il2CppMethodPointer ___GetAnalogActionData_6;
	Il2CppMethodPointer ___GetPoseActionDataRelativeToNow_7;
	Il2CppMethodPointer ___GetPoseActionDataForNextFrame_8;
	Il2CppMethodPointer ___GetSkeletalActionData_9;
	Il2CppMethodPointer ___GetDominantHand_10;
	Il2CppMethodPointer ___SetDominantHand_11;
	Il2CppMethodPointer ___GetBoneCount_12;
	Il2CppMethodPointer ___GetBoneHierarchy_13;
	Il2CppMethodPointer ___GetBoneName_14;
	Il2CppMethodPointer ___GetSkeletalReferenceTransforms_15;
	Il2CppMethodPointer ___GetSkeletalTrackingLevel_16;
	Il2CppMethodPointer ___GetSkeletalBoneData_17;
	Il2CppMethodPointer ___GetSkeletalSummaryData_18;
	Il2CppMethodPointer ___GetSkeletalBoneDataCompressed_19;
	Il2CppMethodPointer ___DecompressSkeletalBoneData_20;
	Il2CppMethodPointer ___TriggerHapticVibrationAction_21;
	Il2CppMethodPointer ___GetActionOrigins_22;
	Il2CppMethodPointer ___GetOriginLocalizedName_23;
	Il2CppMethodPointer ___GetOriginTrackedDeviceInfo_24;
	Il2CppMethodPointer ___GetActionBindingInfo_25;
	Il2CppMethodPointer ___ShowActionOrigins_26;
	Il2CppMethodPointer ___ShowBindingsForActionSet_27;
	Il2CppMethodPointer ___GetComponentStateForBinding_28;
	Il2CppMethodPointer ___IsUsingLegacyInput_29;
	Il2CppMethodPointer ___OpenBindingUI_30;
	Il2CppMethodPointer ___GetBindingVariant_31;
};

// Valve.VR.InputAnalogActionData_t
struct InputAnalogActionData_t_t6C7615BD7F4223A4ADA9268DDF501D09B3C808CA 
{
public:
	// System.Boolean Valve.VR.InputAnalogActionData_t::bActive
	bool ___bActive_0;
	// System.UInt64 Valve.VR.InputAnalogActionData_t::activeOrigin
	uint64_t ___activeOrigin_1;
	// System.Single Valve.VR.InputAnalogActionData_t::x
	float ___x_2;
	// System.Single Valve.VR.InputAnalogActionData_t::y
	float ___y_3;
	// System.Single Valve.VR.InputAnalogActionData_t::z
	float ___z_4;
	// System.Single Valve.VR.InputAnalogActionData_t::deltaX
	float ___deltaX_5;
	// System.Single Valve.VR.InputAnalogActionData_t::deltaY
	float ___deltaY_6;
	// System.Single Valve.VR.InputAnalogActionData_t::deltaZ
	float ___deltaZ_7;
	// System.Single Valve.VR.InputAnalogActionData_t::fUpdateTime
	float ___fUpdateTime_8;

public:
	inline static int32_t get_offset_of_bActive_0() { return static_cast<int32_t>(offsetof(InputAnalogActionData_t_t6C7615BD7F4223A4ADA9268DDF501D09B3C808CA, ___bActive_0)); }
	inline bool get_bActive_0() const { return ___bActive_0; }
	inline bool* get_address_of_bActive_0() { return &___bActive_0; }
	inline void set_bActive_0(bool value)
	{
		___bActive_0 = value;
	}

	inline static int32_t get_offset_of_activeOrigin_1() { return static_cast<int32_t>(offsetof(InputAnalogActionData_t_t6C7615BD7F4223A4ADA9268DDF501D09B3C808CA, ___activeOrigin_1)); }
	inline uint64_t get_activeOrigin_1() const { return ___activeOrigin_1; }
	inline uint64_t* get_address_of_activeOrigin_1() { return &___activeOrigin_1; }
	inline void set_activeOrigin_1(uint64_t value)
	{
		___activeOrigin_1 = value;
	}

	inline static int32_t get_offset_of_x_2() { return static_cast<int32_t>(offsetof(InputAnalogActionData_t_t6C7615BD7F4223A4ADA9268DDF501D09B3C808CA, ___x_2)); }
	inline float get_x_2() const { return ___x_2; }
	inline float* get_address_of_x_2() { return &___x_2; }
	inline void set_x_2(float value)
	{
		___x_2 = value;
	}

	inline static int32_t get_offset_of_y_3() { return static_cast<int32_t>(offsetof(InputAnalogActionData_t_t6C7615BD7F4223A4ADA9268DDF501D09B3C808CA, ___y_3)); }
	inline float get_y_3() const { return ___y_3; }
	inline float* get_address_of_y_3() { return &___y_3; }
	inline void set_y_3(float value)
	{
		___y_3 = value;
	}

	inline static int32_t get_offset_of_z_4() { return static_cast<int32_t>(offsetof(InputAnalogActionData_t_t6C7615BD7F4223A4ADA9268DDF501D09B3C808CA, ___z_4)); }
	inline float get_z_4() const { return ___z_4; }
	inline float* get_address_of_z_4() { return &___z_4; }
	inline void set_z_4(float value)
	{
		___z_4 = value;
	}

	inline static int32_t get_offset_of_deltaX_5() { return static_cast<int32_t>(offsetof(InputAnalogActionData_t_t6C7615BD7F4223A4ADA9268DDF501D09B3C808CA, ___deltaX_5)); }
	inline float get_deltaX_5() const { return ___deltaX_5; }
	inline float* get_address_of_deltaX_5() { return &___deltaX_5; }
	inline void set_deltaX_5(float value)
	{
		___deltaX_5 = value;
	}

	inline static int32_t get_offset_of_deltaY_6() { return static_cast<int32_t>(offsetof(InputAnalogActionData_t_t6C7615BD7F4223A4ADA9268DDF501D09B3C808CA, ___deltaY_6)); }
	inline float get_deltaY_6() const { return ___deltaY_6; }
	inline float* get_address_of_deltaY_6() { return &___deltaY_6; }
	inline void set_deltaY_6(float value)
	{
		___deltaY_6 = value;
	}

	inline static int32_t get_offset_of_deltaZ_7() { return static_cast<int32_t>(offsetof(InputAnalogActionData_t_t6C7615BD7F4223A4ADA9268DDF501D09B3C808CA, ___deltaZ_7)); }
	inline float get_deltaZ_7() const { return ___deltaZ_7; }
	inline float* get_address_of_deltaZ_7() { return &___deltaZ_7; }
	inline void set_deltaZ_7(float value)
	{
		___deltaZ_7 = value;
	}

	inline static int32_t get_offset_of_fUpdateTime_8() { return static_cast<int32_t>(offsetof(InputAnalogActionData_t_t6C7615BD7F4223A4ADA9268DDF501D09B3C808CA, ___fUpdateTime_8)); }
	inline float get_fUpdateTime_8() const { return ___fUpdateTime_8; }
	inline float* get_address_of_fUpdateTime_8() { return &___fUpdateTime_8; }
	inline void set_fUpdateTime_8(float value)
	{
		___fUpdateTime_8 = value;
	}
};


// Valve.VR.InputDigitalActionData_t
struct InputDigitalActionData_t_t4A01C92AC860229A4C521ED827FD4FC4508A822C 
{
public:
	// System.Boolean Valve.VR.InputDigitalActionData_t::bActive
	bool ___bActive_0;
	// System.UInt64 Valve.VR.InputDigitalActionData_t::activeOrigin
	uint64_t ___activeOrigin_1;
	// System.Boolean Valve.VR.InputDigitalActionData_t::bState
	bool ___bState_2;
	// System.Boolean Valve.VR.InputDigitalActionData_t::bChanged
	bool ___bChanged_3;
	// System.Single Valve.VR.InputDigitalActionData_t::fUpdateTime
	float ___fUpdateTime_4;

public:
	inline static int32_t get_offset_of_bActive_0() { return static_cast<int32_t>(offsetof(InputDigitalActionData_t_t4A01C92AC860229A4C521ED827FD4FC4508A822C, ___bActive_0)); }
	inline bool get_bActive_0() const { return ___bActive_0; }
	inline bool* get_address_of_bActive_0() { return &___bActive_0; }
	inline void set_bActive_0(bool value)
	{
		___bActive_0 = value;
	}

	inline static int32_t get_offset_of_activeOrigin_1() { return static_cast<int32_t>(offsetof(InputDigitalActionData_t_t4A01C92AC860229A4C521ED827FD4FC4508A822C, ___activeOrigin_1)); }
	inline uint64_t get_activeOrigin_1() const { return ___activeOrigin_1; }
	inline uint64_t* get_address_of_activeOrigin_1() { return &___activeOrigin_1; }
	inline void set_activeOrigin_1(uint64_t value)
	{
		___activeOrigin_1 = value;
	}

	inline static int32_t get_offset_of_bState_2() { return static_cast<int32_t>(offsetof(InputDigitalActionData_t_t4A01C92AC860229A4C521ED827FD4FC4508A822C, ___bState_2)); }
	inline bool get_bState_2() const { return ___bState_2; }
	inline bool* get_address_of_bState_2() { return &___bState_2; }
	inline void set_bState_2(bool value)
	{
		___bState_2 = value;
	}

	inline static int32_t get_offset_of_bChanged_3() { return static_cast<int32_t>(offsetof(InputDigitalActionData_t_t4A01C92AC860229A4C521ED827FD4FC4508A822C, ___bChanged_3)); }
	inline bool get_bChanged_3() const { return ___bChanged_3; }
	inline bool* get_address_of_bChanged_3() { return &___bChanged_3; }
	inline void set_bChanged_3(bool value)
	{
		___bChanged_3 = value;
	}

	inline static int32_t get_offset_of_fUpdateTime_4() { return static_cast<int32_t>(offsetof(InputDigitalActionData_t_t4A01C92AC860229A4C521ED827FD4FC4508A822C, ___fUpdateTime_4)); }
	inline float get_fUpdateTime_4() const { return ___fUpdateTime_4; }
	inline float* get_address_of_fUpdateTime_4() { return &___fUpdateTime_4; }
	inline void set_fUpdateTime_4(float value)
	{
		___fUpdateTime_4 = value;
	}
};


// Valve.VR.InputOriginInfo_t
struct InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7 
{
public:
	// System.UInt64 Valve.VR.InputOriginInfo_t::devicePath
	uint64_t ___devicePath_0;
	// System.UInt32 Valve.VR.InputOriginInfo_t::trackedDeviceIndex
	uint32_t ___trackedDeviceIndex_1;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName0
	uint8_t ___rchRenderModelComponentName0_2;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName1
	uint8_t ___rchRenderModelComponentName1_3;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName2
	uint8_t ___rchRenderModelComponentName2_4;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName3
	uint8_t ___rchRenderModelComponentName3_5;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName4
	uint8_t ___rchRenderModelComponentName4_6;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName5
	uint8_t ___rchRenderModelComponentName5_7;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName6
	uint8_t ___rchRenderModelComponentName6_8;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName7
	uint8_t ___rchRenderModelComponentName7_9;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName8
	uint8_t ___rchRenderModelComponentName8_10;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName9
	uint8_t ___rchRenderModelComponentName9_11;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName10
	uint8_t ___rchRenderModelComponentName10_12;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName11
	uint8_t ___rchRenderModelComponentName11_13;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName12
	uint8_t ___rchRenderModelComponentName12_14;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName13
	uint8_t ___rchRenderModelComponentName13_15;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName14
	uint8_t ___rchRenderModelComponentName14_16;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName15
	uint8_t ___rchRenderModelComponentName15_17;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName16
	uint8_t ___rchRenderModelComponentName16_18;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName17
	uint8_t ___rchRenderModelComponentName17_19;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName18
	uint8_t ___rchRenderModelComponentName18_20;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName19
	uint8_t ___rchRenderModelComponentName19_21;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName20
	uint8_t ___rchRenderModelComponentName20_22;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName21
	uint8_t ___rchRenderModelComponentName21_23;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName22
	uint8_t ___rchRenderModelComponentName22_24;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName23
	uint8_t ___rchRenderModelComponentName23_25;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName24
	uint8_t ___rchRenderModelComponentName24_26;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName25
	uint8_t ___rchRenderModelComponentName25_27;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName26
	uint8_t ___rchRenderModelComponentName26_28;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName27
	uint8_t ___rchRenderModelComponentName27_29;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName28
	uint8_t ___rchRenderModelComponentName28_30;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName29
	uint8_t ___rchRenderModelComponentName29_31;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName30
	uint8_t ___rchRenderModelComponentName30_32;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName31
	uint8_t ___rchRenderModelComponentName31_33;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName32
	uint8_t ___rchRenderModelComponentName32_34;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName33
	uint8_t ___rchRenderModelComponentName33_35;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName34
	uint8_t ___rchRenderModelComponentName34_36;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName35
	uint8_t ___rchRenderModelComponentName35_37;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName36
	uint8_t ___rchRenderModelComponentName36_38;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName37
	uint8_t ___rchRenderModelComponentName37_39;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName38
	uint8_t ___rchRenderModelComponentName38_40;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName39
	uint8_t ___rchRenderModelComponentName39_41;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName40
	uint8_t ___rchRenderModelComponentName40_42;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName41
	uint8_t ___rchRenderModelComponentName41_43;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName42
	uint8_t ___rchRenderModelComponentName42_44;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName43
	uint8_t ___rchRenderModelComponentName43_45;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName44
	uint8_t ___rchRenderModelComponentName44_46;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName45
	uint8_t ___rchRenderModelComponentName45_47;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName46
	uint8_t ___rchRenderModelComponentName46_48;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName47
	uint8_t ___rchRenderModelComponentName47_49;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName48
	uint8_t ___rchRenderModelComponentName48_50;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName49
	uint8_t ___rchRenderModelComponentName49_51;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName50
	uint8_t ___rchRenderModelComponentName50_52;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName51
	uint8_t ___rchRenderModelComponentName51_53;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName52
	uint8_t ___rchRenderModelComponentName52_54;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName53
	uint8_t ___rchRenderModelComponentName53_55;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName54
	uint8_t ___rchRenderModelComponentName54_56;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName55
	uint8_t ___rchRenderModelComponentName55_57;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName56
	uint8_t ___rchRenderModelComponentName56_58;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName57
	uint8_t ___rchRenderModelComponentName57_59;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName58
	uint8_t ___rchRenderModelComponentName58_60;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName59
	uint8_t ___rchRenderModelComponentName59_61;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName60
	uint8_t ___rchRenderModelComponentName60_62;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName61
	uint8_t ___rchRenderModelComponentName61_63;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName62
	uint8_t ___rchRenderModelComponentName62_64;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName63
	uint8_t ___rchRenderModelComponentName63_65;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName64
	uint8_t ___rchRenderModelComponentName64_66;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName65
	uint8_t ___rchRenderModelComponentName65_67;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName66
	uint8_t ___rchRenderModelComponentName66_68;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName67
	uint8_t ___rchRenderModelComponentName67_69;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName68
	uint8_t ___rchRenderModelComponentName68_70;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName69
	uint8_t ___rchRenderModelComponentName69_71;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName70
	uint8_t ___rchRenderModelComponentName70_72;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName71
	uint8_t ___rchRenderModelComponentName71_73;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName72
	uint8_t ___rchRenderModelComponentName72_74;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName73
	uint8_t ___rchRenderModelComponentName73_75;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName74
	uint8_t ___rchRenderModelComponentName74_76;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName75
	uint8_t ___rchRenderModelComponentName75_77;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName76
	uint8_t ___rchRenderModelComponentName76_78;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName77
	uint8_t ___rchRenderModelComponentName77_79;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName78
	uint8_t ___rchRenderModelComponentName78_80;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName79
	uint8_t ___rchRenderModelComponentName79_81;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName80
	uint8_t ___rchRenderModelComponentName80_82;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName81
	uint8_t ___rchRenderModelComponentName81_83;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName82
	uint8_t ___rchRenderModelComponentName82_84;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName83
	uint8_t ___rchRenderModelComponentName83_85;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName84
	uint8_t ___rchRenderModelComponentName84_86;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName85
	uint8_t ___rchRenderModelComponentName85_87;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName86
	uint8_t ___rchRenderModelComponentName86_88;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName87
	uint8_t ___rchRenderModelComponentName87_89;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName88
	uint8_t ___rchRenderModelComponentName88_90;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName89
	uint8_t ___rchRenderModelComponentName89_91;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName90
	uint8_t ___rchRenderModelComponentName90_92;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName91
	uint8_t ___rchRenderModelComponentName91_93;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName92
	uint8_t ___rchRenderModelComponentName92_94;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName93
	uint8_t ___rchRenderModelComponentName93_95;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName94
	uint8_t ___rchRenderModelComponentName94_96;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName95
	uint8_t ___rchRenderModelComponentName95_97;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName96
	uint8_t ___rchRenderModelComponentName96_98;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName97
	uint8_t ___rchRenderModelComponentName97_99;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName98
	uint8_t ___rchRenderModelComponentName98_100;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName99
	uint8_t ___rchRenderModelComponentName99_101;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName100
	uint8_t ___rchRenderModelComponentName100_102;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName101
	uint8_t ___rchRenderModelComponentName101_103;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName102
	uint8_t ___rchRenderModelComponentName102_104;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName103
	uint8_t ___rchRenderModelComponentName103_105;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName104
	uint8_t ___rchRenderModelComponentName104_106;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName105
	uint8_t ___rchRenderModelComponentName105_107;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName106
	uint8_t ___rchRenderModelComponentName106_108;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName107
	uint8_t ___rchRenderModelComponentName107_109;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName108
	uint8_t ___rchRenderModelComponentName108_110;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName109
	uint8_t ___rchRenderModelComponentName109_111;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName110
	uint8_t ___rchRenderModelComponentName110_112;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName111
	uint8_t ___rchRenderModelComponentName111_113;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName112
	uint8_t ___rchRenderModelComponentName112_114;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName113
	uint8_t ___rchRenderModelComponentName113_115;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName114
	uint8_t ___rchRenderModelComponentName114_116;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName115
	uint8_t ___rchRenderModelComponentName115_117;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName116
	uint8_t ___rchRenderModelComponentName116_118;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName117
	uint8_t ___rchRenderModelComponentName117_119;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName118
	uint8_t ___rchRenderModelComponentName118_120;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName119
	uint8_t ___rchRenderModelComponentName119_121;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName120
	uint8_t ___rchRenderModelComponentName120_122;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName121
	uint8_t ___rchRenderModelComponentName121_123;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName122
	uint8_t ___rchRenderModelComponentName122_124;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName123
	uint8_t ___rchRenderModelComponentName123_125;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName124
	uint8_t ___rchRenderModelComponentName124_126;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName125
	uint8_t ___rchRenderModelComponentName125_127;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName126
	uint8_t ___rchRenderModelComponentName126_128;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName127
	uint8_t ___rchRenderModelComponentName127_129;

public:
	inline static int32_t get_offset_of_devicePath_0() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7, ___devicePath_0)); }
	inline uint64_t get_devicePath_0() const { return ___devicePath_0; }
	inline uint64_t* get_address_of_devicePath_0() { return &___devicePath_0; }
	inline void set_devicePath_0(uint64_t value)
	{
		___devicePath_0 = value;
	}

	inline static int32_t get_offset_of_trackedDeviceIndex_1() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7, ___trackedDeviceIndex_1)); }
	inline uint32_t get_trackedDeviceIndex_1() const { return ___trackedDeviceIndex_1; }
	inline uint32_t* get_address_of_trackedDeviceIndex_1() { return &___trackedDeviceIndex_1; }
	inline void set_trackedDeviceIndex_1(uint32_t value)
	{
		___trackedDeviceIndex_1 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName0_2() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7, ___rchRenderModelComponentName0_2)); }
	inline uint8_t get_rchRenderModelComponentName0_2() const { return ___rchRenderModelComponentName0_2; }
	inline uint8_t* get_address_of_rchRenderModelComponentName0_2() { return &___rchRenderModelComponentName0_2; }
	inline void set_rchRenderModelComponentName0_2(uint8_t value)
	{
		___rchRenderModelComponentName0_2 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName1_3() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7, ___rchRenderModelComponentName1_3)); }
	inline uint8_t get_rchRenderModelComponentName1_3() const { return ___rchRenderModelComponentName1_3; }
	inline uint8_t* get_address_of_rchRenderModelComponentName1_3() { return &___rchRenderModelComponentName1_3; }
	inline void set_rchRenderModelComponentName1_3(uint8_t value)
	{
		___rchRenderModelComponentName1_3 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName2_4() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7, ___rchRenderModelComponentName2_4)); }
	inline uint8_t get_rchRenderModelComponentName2_4() const { return ___rchRenderModelComponentName2_4; }
	inline uint8_t* get_address_of_rchRenderModelComponentName2_4() { return &___rchRenderModelComponentName2_4; }
	inline void set_rchRenderModelComponentName2_4(uint8_t value)
	{
		___rchRenderModelComponentName2_4 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName3_5() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7, ___rchRenderModelComponentName3_5)); }
	inline uint8_t get_rchRenderModelComponentName3_5() const { return ___rchRenderModelComponentName3_5; }
	inline uint8_t* get_address_of_rchRenderModelComponentName3_5() { return &___rchRenderModelComponentName3_5; }
	inline void set_rchRenderModelComponentName3_5(uint8_t value)
	{
		___rchRenderModelComponentName3_5 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName4_6() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7, ___rchRenderModelComponentName4_6)); }
	inline uint8_t get_rchRenderModelComponentName4_6() const { return ___rchRenderModelComponentName4_6; }
	inline uint8_t* get_address_of_rchRenderModelComponentName4_6() { return &___rchRenderModelComponentName4_6; }
	inline void set_rchRenderModelComponentName4_6(uint8_t value)
	{
		___rchRenderModelComponentName4_6 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName5_7() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7, ___rchRenderModelComponentName5_7)); }
	inline uint8_t get_rchRenderModelComponentName5_7() const { return ___rchRenderModelComponentName5_7; }
	inline uint8_t* get_address_of_rchRenderModelComponentName5_7() { return &___rchRenderModelComponentName5_7; }
	inline void set_rchRenderModelComponentName5_7(uint8_t value)
	{
		___rchRenderModelComponentName5_7 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName6_8() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7, ___rchRenderModelComponentName6_8)); }
	inline uint8_t get_rchRenderModelComponentName6_8() const { return ___rchRenderModelComponentName6_8; }
	inline uint8_t* get_address_of_rchRenderModelComponentName6_8() { return &___rchRenderModelComponentName6_8; }
	inline void set_rchRenderModelComponentName6_8(uint8_t value)
	{
		___rchRenderModelComponentName6_8 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName7_9() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7, ___rchRenderModelComponentName7_9)); }
	inline uint8_t get_rchRenderModelComponentName7_9() const { return ___rchRenderModelComponentName7_9; }
	inline uint8_t* get_address_of_rchRenderModelComponentName7_9() { return &___rchRenderModelComponentName7_9; }
	inline void set_rchRenderModelComponentName7_9(uint8_t value)
	{
		___rchRenderModelComponentName7_9 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName8_10() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7, ___rchRenderModelComponentName8_10)); }
	inline uint8_t get_rchRenderModelComponentName8_10() const { return ___rchRenderModelComponentName8_10; }
	inline uint8_t* get_address_of_rchRenderModelComponentName8_10() { return &___rchRenderModelComponentName8_10; }
	inline void set_rchRenderModelComponentName8_10(uint8_t value)
	{
		___rchRenderModelComponentName8_10 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName9_11() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7, ___rchRenderModelComponentName9_11)); }
	inline uint8_t get_rchRenderModelComponentName9_11() const { return ___rchRenderModelComponentName9_11; }
	inline uint8_t* get_address_of_rchRenderModelComponentName9_11() { return &___rchRenderModelComponentName9_11; }
	inline void set_rchRenderModelComponentName9_11(uint8_t value)
	{
		___rchRenderModelComponentName9_11 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName10_12() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7, ___rchRenderModelComponentName10_12)); }
	inline uint8_t get_rchRenderModelComponentName10_12() const { return ___rchRenderModelComponentName10_12; }
	inline uint8_t* get_address_of_rchRenderModelComponentName10_12() { return &___rchRenderModelComponentName10_12; }
	inline void set_rchRenderModelComponentName10_12(uint8_t value)
	{
		___rchRenderModelComponentName10_12 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName11_13() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7, ___rchRenderModelComponentName11_13)); }
	inline uint8_t get_rchRenderModelComponentName11_13() const { return ___rchRenderModelComponentName11_13; }
	inline uint8_t* get_address_of_rchRenderModelComponentName11_13() { return &___rchRenderModelComponentName11_13; }
	inline void set_rchRenderModelComponentName11_13(uint8_t value)
	{
		___rchRenderModelComponentName11_13 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName12_14() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7, ___rchRenderModelComponentName12_14)); }
	inline uint8_t get_rchRenderModelComponentName12_14() const { return ___rchRenderModelComponentName12_14; }
	inline uint8_t* get_address_of_rchRenderModelComponentName12_14() { return &___rchRenderModelComponentName12_14; }
	inline void set_rchRenderModelComponentName12_14(uint8_t value)
	{
		___rchRenderModelComponentName12_14 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName13_15() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7, ___rchRenderModelComponentName13_15)); }
	inline uint8_t get_rchRenderModelComponentName13_15() const { return ___rchRenderModelComponentName13_15; }
	inline uint8_t* get_address_of_rchRenderModelComponentName13_15() { return &___rchRenderModelComponentName13_15; }
	inline void set_rchRenderModelComponentName13_15(uint8_t value)
	{
		___rchRenderModelComponentName13_15 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName14_16() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7, ___rchRenderModelComponentName14_16)); }
	inline uint8_t get_rchRenderModelComponentName14_16() const { return ___rchRenderModelComponentName14_16; }
	inline uint8_t* get_address_of_rchRenderModelComponentName14_16() { return &___rchRenderModelComponentName14_16; }
	inline void set_rchRenderModelComponentName14_16(uint8_t value)
	{
		___rchRenderModelComponentName14_16 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName15_17() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7, ___rchRenderModelComponentName15_17)); }
	inline uint8_t get_rchRenderModelComponentName15_17() const { return ___rchRenderModelComponentName15_17; }
	inline uint8_t* get_address_of_rchRenderModelComponentName15_17() { return &___rchRenderModelComponentName15_17; }
	inline void set_rchRenderModelComponentName15_17(uint8_t value)
	{
		___rchRenderModelComponentName15_17 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName16_18() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7, ___rchRenderModelComponentName16_18)); }
	inline uint8_t get_rchRenderModelComponentName16_18() const { return ___rchRenderModelComponentName16_18; }
	inline uint8_t* get_address_of_rchRenderModelComponentName16_18() { return &___rchRenderModelComponentName16_18; }
	inline void set_rchRenderModelComponentName16_18(uint8_t value)
	{
		___rchRenderModelComponentName16_18 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName17_19() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7, ___rchRenderModelComponentName17_19)); }
	inline uint8_t get_rchRenderModelComponentName17_19() const { return ___rchRenderModelComponentName17_19; }
	inline uint8_t* get_address_of_rchRenderModelComponentName17_19() { return &___rchRenderModelComponentName17_19; }
	inline void set_rchRenderModelComponentName17_19(uint8_t value)
	{
		___rchRenderModelComponentName17_19 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName18_20() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7, ___rchRenderModelComponentName18_20)); }
	inline uint8_t get_rchRenderModelComponentName18_20() const { return ___rchRenderModelComponentName18_20; }
	inline uint8_t* get_address_of_rchRenderModelComponentName18_20() { return &___rchRenderModelComponentName18_20; }
	inline void set_rchRenderModelComponentName18_20(uint8_t value)
	{
		___rchRenderModelComponentName18_20 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName19_21() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7, ___rchRenderModelComponentName19_21)); }
	inline uint8_t get_rchRenderModelComponentName19_21() const { return ___rchRenderModelComponentName19_21; }
	inline uint8_t* get_address_of_rchRenderModelComponentName19_21() { return &___rchRenderModelComponentName19_21; }
	inline void set_rchRenderModelComponentName19_21(uint8_t value)
	{
		___rchRenderModelComponentName19_21 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName20_22() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7, ___rchRenderModelComponentName20_22)); }
	inline uint8_t get_rchRenderModelComponentName20_22() const { return ___rchRenderModelComponentName20_22; }
	inline uint8_t* get_address_of_rchRenderModelComponentName20_22() { return &___rchRenderModelComponentName20_22; }
	inline void set_rchRenderModelComponentName20_22(uint8_t value)
	{
		___rchRenderModelComponentName20_22 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName21_23() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7, ___rchRenderModelComponentName21_23)); }
	inline uint8_t get_rchRenderModelComponentName21_23() const { return ___rchRenderModelComponentName21_23; }
	inline uint8_t* get_address_of_rchRenderModelComponentName21_23() { return &___rchRenderModelComponentName21_23; }
	inline void set_rchRenderModelComponentName21_23(uint8_t value)
	{
		___rchRenderModelComponentName21_23 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName22_24() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7, ___rchRenderModelComponentName22_24)); }
	inline uint8_t get_rchRenderModelComponentName22_24() const { return ___rchRenderModelComponentName22_24; }
	inline uint8_t* get_address_of_rchRenderModelComponentName22_24() { return &___rchRenderModelComponentName22_24; }
	inline void set_rchRenderModelComponentName22_24(uint8_t value)
	{
		___rchRenderModelComponentName22_24 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName23_25() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7, ___rchRenderModelComponentName23_25)); }
	inline uint8_t get_rchRenderModelComponentName23_25() const { return ___rchRenderModelComponentName23_25; }
	inline uint8_t* get_address_of_rchRenderModelComponentName23_25() { return &___rchRenderModelComponentName23_25; }
	inline void set_rchRenderModelComponentName23_25(uint8_t value)
	{
		___rchRenderModelComponentName23_25 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName24_26() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7, ___rchRenderModelComponentName24_26)); }
	inline uint8_t get_rchRenderModelComponentName24_26() const { return ___rchRenderModelComponentName24_26; }
	inline uint8_t* get_address_of_rchRenderModelComponentName24_26() { return &___rchRenderModelComponentName24_26; }
	inline void set_rchRenderModelComponentName24_26(uint8_t value)
	{
		___rchRenderModelComponentName24_26 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName25_27() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7, ___rchRenderModelComponentName25_27)); }
	inline uint8_t get_rchRenderModelComponentName25_27() const { return ___rchRenderModelComponentName25_27; }
	inline uint8_t* get_address_of_rchRenderModelComponentName25_27() { return &___rchRenderModelComponentName25_27; }
	inline void set_rchRenderModelComponentName25_27(uint8_t value)
	{
		___rchRenderModelComponentName25_27 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName26_28() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7, ___rchRenderModelComponentName26_28)); }
	inline uint8_t get_rchRenderModelComponentName26_28() const { return ___rchRenderModelComponentName26_28; }
	inline uint8_t* get_address_of_rchRenderModelComponentName26_28() { return &___rchRenderModelComponentName26_28; }
	inline void set_rchRenderModelComponentName26_28(uint8_t value)
	{
		___rchRenderModelComponentName26_28 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName27_29() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7, ___rchRenderModelComponentName27_29)); }
	inline uint8_t get_rchRenderModelComponentName27_29() const { return ___rchRenderModelComponentName27_29; }
	inline uint8_t* get_address_of_rchRenderModelComponentName27_29() { return &___rchRenderModelComponentName27_29; }
	inline void set_rchRenderModelComponentName27_29(uint8_t value)
	{
		___rchRenderModelComponentName27_29 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName28_30() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7, ___rchRenderModelComponentName28_30)); }
	inline uint8_t get_rchRenderModelComponentName28_30() const { return ___rchRenderModelComponentName28_30; }
	inline uint8_t* get_address_of_rchRenderModelComponentName28_30() { return &___rchRenderModelComponentName28_30; }
	inline void set_rchRenderModelComponentName28_30(uint8_t value)
	{
		___rchRenderModelComponentName28_30 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName29_31() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7, ___rchRenderModelComponentName29_31)); }
	inline uint8_t get_rchRenderModelComponentName29_31() const { return ___rchRenderModelComponentName29_31; }
	inline uint8_t* get_address_of_rchRenderModelComponentName29_31() { return &___rchRenderModelComponentName29_31; }
	inline void set_rchRenderModelComponentName29_31(uint8_t value)
	{
		___rchRenderModelComponentName29_31 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName30_32() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7, ___rchRenderModelComponentName30_32)); }
	inline uint8_t get_rchRenderModelComponentName30_32() const { return ___rchRenderModelComponentName30_32; }
	inline uint8_t* get_address_of_rchRenderModelComponentName30_32() { return &___rchRenderModelComponentName30_32; }
	inline void set_rchRenderModelComponentName30_32(uint8_t value)
	{
		___rchRenderModelComponentName30_32 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName31_33() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7, ___rchRenderModelComponentName31_33)); }
	inline uint8_t get_rchRenderModelComponentName31_33() const { return ___rchRenderModelComponentName31_33; }
	inline uint8_t* get_address_of_rchRenderModelComponentName31_33() { return &___rchRenderModelComponentName31_33; }
	inline void set_rchRenderModelComponentName31_33(uint8_t value)
	{
		___rchRenderModelComponentName31_33 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName32_34() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7, ___rchRenderModelComponentName32_34)); }
	inline uint8_t get_rchRenderModelComponentName32_34() const { return ___rchRenderModelComponentName32_34; }
	inline uint8_t* get_address_of_rchRenderModelComponentName32_34() { return &___rchRenderModelComponentName32_34; }
	inline void set_rchRenderModelComponentName32_34(uint8_t value)
	{
		___rchRenderModelComponentName32_34 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName33_35() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7, ___rchRenderModelComponentName33_35)); }
	inline uint8_t get_rchRenderModelComponentName33_35() const { return ___rchRenderModelComponentName33_35; }
	inline uint8_t* get_address_of_rchRenderModelComponentName33_35() { return &___rchRenderModelComponentName33_35; }
	inline void set_rchRenderModelComponentName33_35(uint8_t value)
	{
		___rchRenderModelComponentName33_35 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName34_36() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7, ___rchRenderModelComponentName34_36)); }
	inline uint8_t get_rchRenderModelComponentName34_36() const { return ___rchRenderModelComponentName34_36; }
	inline uint8_t* get_address_of_rchRenderModelComponentName34_36() { return &___rchRenderModelComponentName34_36; }
	inline void set_rchRenderModelComponentName34_36(uint8_t value)
	{
		___rchRenderModelComponentName34_36 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName35_37() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7, ___rchRenderModelComponentName35_37)); }
	inline uint8_t get_rchRenderModelComponentName35_37() const { return ___rchRenderModelComponentName35_37; }
	inline uint8_t* get_address_of_rchRenderModelComponentName35_37() { return &___rchRenderModelComponentName35_37; }
	inline void set_rchRenderModelComponentName35_37(uint8_t value)
	{
		___rchRenderModelComponentName35_37 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName36_38() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7, ___rchRenderModelComponentName36_38)); }
	inline uint8_t get_rchRenderModelComponentName36_38() const { return ___rchRenderModelComponentName36_38; }
	inline uint8_t* get_address_of_rchRenderModelComponentName36_38() { return &___rchRenderModelComponentName36_38; }
	inline void set_rchRenderModelComponentName36_38(uint8_t value)
	{
		___rchRenderModelComponentName36_38 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName37_39() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7, ___rchRenderModelComponentName37_39)); }
	inline uint8_t get_rchRenderModelComponentName37_39() const { return ___rchRenderModelComponentName37_39; }
	inline uint8_t* get_address_of_rchRenderModelComponentName37_39() { return &___rchRenderModelComponentName37_39; }
	inline void set_rchRenderModelComponentName37_39(uint8_t value)
	{
		___rchRenderModelComponentName37_39 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName38_40() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7, ___rchRenderModelComponentName38_40)); }
	inline uint8_t get_rchRenderModelComponentName38_40() const { return ___rchRenderModelComponentName38_40; }
	inline uint8_t* get_address_of_rchRenderModelComponentName38_40() { return &___rchRenderModelComponentName38_40; }
	inline void set_rchRenderModelComponentName38_40(uint8_t value)
	{
		___rchRenderModelComponentName38_40 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName39_41() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7, ___rchRenderModelComponentName39_41)); }
	inline uint8_t get_rchRenderModelComponentName39_41() const { return ___rchRenderModelComponentName39_41; }
	inline uint8_t* get_address_of_rchRenderModelComponentName39_41() { return &___rchRenderModelComponentName39_41; }
	inline void set_rchRenderModelComponentName39_41(uint8_t value)
	{
		___rchRenderModelComponentName39_41 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName40_42() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7, ___rchRenderModelComponentName40_42)); }
	inline uint8_t get_rchRenderModelComponentName40_42() const { return ___rchRenderModelComponentName40_42; }
	inline uint8_t* get_address_of_rchRenderModelComponentName40_42() { return &___rchRenderModelComponentName40_42; }
	inline void set_rchRenderModelComponentName40_42(uint8_t value)
	{
		___rchRenderModelComponentName40_42 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName41_43() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7, ___rchRenderModelComponentName41_43)); }
	inline uint8_t get_rchRenderModelComponentName41_43() const { return ___rchRenderModelComponentName41_43; }
	inline uint8_t* get_address_of_rchRenderModelComponentName41_43() { return &___rchRenderModelComponentName41_43; }
	inline void set_rchRenderModelComponentName41_43(uint8_t value)
	{
		___rchRenderModelComponentName41_43 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName42_44() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7, ___rchRenderModelComponentName42_44)); }
	inline uint8_t get_rchRenderModelComponentName42_44() const { return ___rchRenderModelComponentName42_44; }
	inline uint8_t* get_address_of_rchRenderModelComponentName42_44() { return &___rchRenderModelComponentName42_44; }
	inline void set_rchRenderModelComponentName42_44(uint8_t value)
	{
		___rchRenderModelComponentName42_44 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName43_45() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7, ___rchRenderModelComponentName43_45)); }
	inline uint8_t get_rchRenderModelComponentName43_45() const { return ___rchRenderModelComponentName43_45; }
	inline uint8_t* get_address_of_rchRenderModelComponentName43_45() { return &___rchRenderModelComponentName43_45; }
	inline void set_rchRenderModelComponentName43_45(uint8_t value)
	{
		___rchRenderModelComponentName43_45 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName44_46() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7, ___rchRenderModelComponentName44_46)); }
	inline uint8_t get_rchRenderModelComponentName44_46() const { return ___rchRenderModelComponentName44_46; }
	inline uint8_t* get_address_of_rchRenderModelComponentName44_46() { return &___rchRenderModelComponentName44_46; }
	inline void set_rchRenderModelComponentName44_46(uint8_t value)
	{
		___rchRenderModelComponentName44_46 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName45_47() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7, ___rchRenderModelComponentName45_47)); }
	inline uint8_t get_rchRenderModelComponentName45_47() const { return ___rchRenderModelComponentName45_47; }
	inline uint8_t* get_address_of_rchRenderModelComponentName45_47() { return &___rchRenderModelComponentName45_47; }
	inline void set_rchRenderModelComponentName45_47(uint8_t value)
	{
		___rchRenderModelComponentName45_47 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName46_48() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7, ___rchRenderModelComponentName46_48)); }
	inline uint8_t get_rchRenderModelComponentName46_48() const { return ___rchRenderModelComponentName46_48; }
	inline uint8_t* get_address_of_rchRenderModelComponentName46_48() { return &___rchRenderModelComponentName46_48; }
	inline void set_rchRenderModelComponentName46_48(uint8_t value)
	{
		___rchRenderModelComponentName46_48 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName47_49() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7, ___rchRenderModelComponentName47_49)); }
	inline uint8_t get_rchRenderModelComponentName47_49() const { return ___rchRenderModelComponentName47_49; }
	inline uint8_t* get_address_of_rchRenderModelComponentName47_49() { return &___rchRenderModelComponentName47_49; }
	inline void set_rchRenderModelComponentName47_49(uint8_t value)
	{
		___rchRenderModelComponentName47_49 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName48_50() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7, ___rchRenderModelComponentName48_50)); }
	inline uint8_t get_rchRenderModelComponentName48_50() const { return ___rchRenderModelComponentName48_50; }
	inline uint8_t* get_address_of_rchRenderModelComponentName48_50() { return &___rchRenderModelComponentName48_50; }
	inline void set_rchRenderModelComponentName48_50(uint8_t value)
	{
		___rchRenderModelComponentName48_50 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName49_51() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7, ___rchRenderModelComponentName49_51)); }
	inline uint8_t get_rchRenderModelComponentName49_51() const { return ___rchRenderModelComponentName49_51; }
	inline uint8_t* get_address_of_rchRenderModelComponentName49_51() { return &___rchRenderModelComponentName49_51; }
	inline void set_rchRenderModelComponentName49_51(uint8_t value)
	{
		___rchRenderModelComponentName49_51 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName50_52() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7, ___rchRenderModelComponentName50_52)); }
	inline uint8_t get_rchRenderModelComponentName50_52() const { return ___rchRenderModelComponentName50_52; }
	inline uint8_t* get_address_of_rchRenderModelComponentName50_52() { return &___rchRenderModelComponentName50_52; }
	inline void set_rchRenderModelComponentName50_52(uint8_t value)
	{
		___rchRenderModelComponentName50_52 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName51_53() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7, ___rchRenderModelComponentName51_53)); }
	inline uint8_t get_rchRenderModelComponentName51_53() const { return ___rchRenderModelComponentName51_53; }
	inline uint8_t* get_address_of_rchRenderModelComponentName51_53() { return &___rchRenderModelComponentName51_53; }
	inline void set_rchRenderModelComponentName51_53(uint8_t value)
	{
		___rchRenderModelComponentName51_53 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName52_54() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7, ___rchRenderModelComponentName52_54)); }
	inline uint8_t get_rchRenderModelComponentName52_54() const { return ___rchRenderModelComponentName52_54; }
	inline uint8_t* get_address_of_rchRenderModelComponentName52_54() { return &___rchRenderModelComponentName52_54; }
	inline void set_rchRenderModelComponentName52_54(uint8_t value)
	{
		___rchRenderModelComponentName52_54 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName53_55() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7, ___rchRenderModelComponentName53_55)); }
	inline uint8_t get_rchRenderModelComponentName53_55() const { return ___rchRenderModelComponentName53_55; }
	inline uint8_t* get_address_of_rchRenderModelComponentName53_55() { return &___rchRenderModelComponentName53_55; }
	inline void set_rchRenderModelComponentName53_55(uint8_t value)
	{
		___rchRenderModelComponentName53_55 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName54_56() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7, ___rchRenderModelComponentName54_56)); }
	inline uint8_t get_rchRenderModelComponentName54_56() const { return ___rchRenderModelComponentName54_56; }
	inline uint8_t* get_address_of_rchRenderModelComponentName54_56() { return &___rchRenderModelComponentName54_56; }
	inline void set_rchRenderModelComponentName54_56(uint8_t value)
	{
		___rchRenderModelComponentName54_56 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName55_57() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7, ___rchRenderModelComponentName55_57)); }
	inline uint8_t get_rchRenderModelComponentName55_57() const { return ___rchRenderModelComponentName55_57; }
	inline uint8_t* get_address_of_rchRenderModelComponentName55_57() { return &___rchRenderModelComponentName55_57; }
	inline void set_rchRenderModelComponentName55_57(uint8_t value)
	{
		___rchRenderModelComponentName55_57 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName56_58() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7, ___rchRenderModelComponentName56_58)); }
	inline uint8_t get_rchRenderModelComponentName56_58() const { return ___rchRenderModelComponentName56_58; }
	inline uint8_t* get_address_of_rchRenderModelComponentName56_58() { return &___rchRenderModelComponentName56_58; }
	inline void set_rchRenderModelComponentName56_58(uint8_t value)
	{
		___rchRenderModelComponentName56_58 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName57_59() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7, ___rchRenderModelComponentName57_59)); }
	inline uint8_t get_rchRenderModelComponentName57_59() const { return ___rchRenderModelComponentName57_59; }
	inline uint8_t* get_address_of_rchRenderModelComponentName57_59() { return &___rchRenderModelComponentName57_59; }
	inline void set_rchRenderModelComponentName57_59(uint8_t value)
	{
		___rchRenderModelComponentName57_59 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName58_60() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7, ___rchRenderModelComponentName58_60)); }
	inline uint8_t get_rchRenderModelComponentName58_60() const { return ___rchRenderModelComponentName58_60; }
	inline uint8_t* get_address_of_rchRenderModelComponentName58_60() { return &___rchRenderModelComponentName58_60; }
	inline void set_rchRenderModelComponentName58_60(uint8_t value)
	{
		___rchRenderModelComponentName58_60 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName59_61() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7, ___rchRenderModelComponentName59_61)); }
	inline uint8_t get_rchRenderModelComponentName59_61() const { return ___rchRenderModelComponentName59_61; }
	inline uint8_t* get_address_of_rchRenderModelComponentName59_61() { return &___rchRenderModelComponentName59_61; }
	inline void set_rchRenderModelComponentName59_61(uint8_t value)
	{
		___rchRenderModelComponentName59_61 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName60_62() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7, ___rchRenderModelComponentName60_62)); }
	inline uint8_t get_rchRenderModelComponentName60_62() const { return ___rchRenderModelComponentName60_62; }
	inline uint8_t* get_address_of_rchRenderModelComponentName60_62() { return &___rchRenderModelComponentName60_62; }
	inline void set_rchRenderModelComponentName60_62(uint8_t value)
	{
		___rchRenderModelComponentName60_62 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName61_63() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7, ___rchRenderModelComponentName61_63)); }
	inline uint8_t get_rchRenderModelComponentName61_63() const { return ___rchRenderModelComponentName61_63; }
	inline uint8_t* get_address_of_rchRenderModelComponentName61_63() { return &___rchRenderModelComponentName61_63; }
	inline void set_rchRenderModelComponentName61_63(uint8_t value)
	{
		___rchRenderModelComponentName61_63 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName62_64() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7, ___rchRenderModelComponentName62_64)); }
	inline uint8_t get_rchRenderModelComponentName62_64() const { return ___rchRenderModelComponentName62_64; }
	inline uint8_t* get_address_of_rchRenderModelComponentName62_64() { return &___rchRenderModelComponentName62_64; }
	inline void set_rchRenderModelComponentName62_64(uint8_t value)
	{
		___rchRenderModelComponentName62_64 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName63_65() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7, ___rchRenderModelComponentName63_65)); }
	inline uint8_t get_rchRenderModelComponentName63_65() const { return ___rchRenderModelComponentName63_65; }
	inline uint8_t* get_address_of_rchRenderModelComponentName63_65() { return &___rchRenderModelComponentName63_65; }
	inline void set_rchRenderModelComponentName63_65(uint8_t value)
	{
		___rchRenderModelComponentName63_65 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName64_66() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7, ___rchRenderModelComponentName64_66)); }
	inline uint8_t get_rchRenderModelComponentName64_66() const { return ___rchRenderModelComponentName64_66; }
	inline uint8_t* get_address_of_rchRenderModelComponentName64_66() { return &___rchRenderModelComponentName64_66; }
	inline void set_rchRenderModelComponentName64_66(uint8_t value)
	{
		___rchRenderModelComponentName64_66 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName65_67() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7, ___rchRenderModelComponentName65_67)); }
	inline uint8_t get_rchRenderModelComponentName65_67() const { return ___rchRenderModelComponentName65_67; }
	inline uint8_t* get_address_of_rchRenderModelComponentName65_67() { return &___rchRenderModelComponentName65_67; }
	inline void set_rchRenderModelComponentName65_67(uint8_t value)
	{
		___rchRenderModelComponentName65_67 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName66_68() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7, ___rchRenderModelComponentName66_68)); }
	inline uint8_t get_rchRenderModelComponentName66_68() const { return ___rchRenderModelComponentName66_68; }
	inline uint8_t* get_address_of_rchRenderModelComponentName66_68() { return &___rchRenderModelComponentName66_68; }
	inline void set_rchRenderModelComponentName66_68(uint8_t value)
	{
		___rchRenderModelComponentName66_68 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName67_69() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7, ___rchRenderModelComponentName67_69)); }
	inline uint8_t get_rchRenderModelComponentName67_69() const { return ___rchRenderModelComponentName67_69; }
	inline uint8_t* get_address_of_rchRenderModelComponentName67_69() { return &___rchRenderModelComponentName67_69; }
	inline void set_rchRenderModelComponentName67_69(uint8_t value)
	{
		___rchRenderModelComponentName67_69 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName68_70() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7, ___rchRenderModelComponentName68_70)); }
	inline uint8_t get_rchRenderModelComponentName68_70() const { return ___rchRenderModelComponentName68_70; }
	inline uint8_t* get_address_of_rchRenderModelComponentName68_70() { return &___rchRenderModelComponentName68_70; }
	inline void set_rchRenderModelComponentName68_70(uint8_t value)
	{
		___rchRenderModelComponentName68_70 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName69_71() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7, ___rchRenderModelComponentName69_71)); }
	inline uint8_t get_rchRenderModelComponentName69_71() const { return ___rchRenderModelComponentName69_71; }
	inline uint8_t* get_address_of_rchRenderModelComponentName69_71() { return &___rchRenderModelComponentName69_71; }
	inline void set_rchRenderModelComponentName69_71(uint8_t value)
	{
		___rchRenderModelComponentName69_71 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName70_72() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7, ___rchRenderModelComponentName70_72)); }
	inline uint8_t get_rchRenderModelComponentName70_72() const { return ___rchRenderModelComponentName70_72; }
	inline uint8_t* get_address_of_rchRenderModelComponentName70_72() { return &___rchRenderModelComponentName70_72; }
	inline void set_rchRenderModelComponentName70_72(uint8_t value)
	{
		___rchRenderModelComponentName70_72 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName71_73() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7, ___rchRenderModelComponentName71_73)); }
	inline uint8_t get_rchRenderModelComponentName71_73() const { return ___rchRenderModelComponentName71_73; }
	inline uint8_t* get_address_of_rchRenderModelComponentName71_73() { return &___rchRenderModelComponentName71_73; }
	inline void set_rchRenderModelComponentName71_73(uint8_t value)
	{
		___rchRenderModelComponentName71_73 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName72_74() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7, ___rchRenderModelComponentName72_74)); }
	inline uint8_t get_rchRenderModelComponentName72_74() const { return ___rchRenderModelComponentName72_74; }
	inline uint8_t* get_address_of_rchRenderModelComponentName72_74() { return &___rchRenderModelComponentName72_74; }
	inline void set_rchRenderModelComponentName72_74(uint8_t value)
	{
		___rchRenderModelComponentName72_74 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName73_75() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7, ___rchRenderModelComponentName73_75)); }
	inline uint8_t get_rchRenderModelComponentName73_75() const { return ___rchRenderModelComponentName73_75; }
	inline uint8_t* get_address_of_rchRenderModelComponentName73_75() { return &___rchRenderModelComponentName73_75; }
	inline void set_rchRenderModelComponentName73_75(uint8_t value)
	{
		___rchRenderModelComponentName73_75 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName74_76() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7, ___rchRenderModelComponentName74_76)); }
	inline uint8_t get_rchRenderModelComponentName74_76() const { return ___rchRenderModelComponentName74_76; }
	inline uint8_t* get_address_of_rchRenderModelComponentName74_76() { return &___rchRenderModelComponentName74_76; }
	inline void set_rchRenderModelComponentName74_76(uint8_t value)
	{
		___rchRenderModelComponentName74_76 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName75_77() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7, ___rchRenderModelComponentName75_77)); }
	inline uint8_t get_rchRenderModelComponentName75_77() const { return ___rchRenderModelComponentName75_77; }
	inline uint8_t* get_address_of_rchRenderModelComponentName75_77() { return &___rchRenderModelComponentName75_77; }
	inline void set_rchRenderModelComponentName75_77(uint8_t value)
	{
		___rchRenderModelComponentName75_77 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName76_78() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7, ___rchRenderModelComponentName76_78)); }
	inline uint8_t get_rchRenderModelComponentName76_78() const { return ___rchRenderModelComponentName76_78; }
	inline uint8_t* get_address_of_rchRenderModelComponentName76_78() { return &___rchRenderModelComponentName76_78; }
	inline void set_rchRenderModelComponentName76_78(uint8_t value)
	{
		___rchRenderModelComponentName76_78 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName77_79() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7, ___rchRenderModelComponentName77_79)); }
	inline uint8_t get_rchRenderModelComponentName77_79() const { return ___rchRenderModelComponentName77_79; }
	inline uint8_t* get_address_of_rchRenderModelComponentName77_79() { return &___rchRenderModelComponentName77_79; }
	inline void set_rchRenderModelComponentName77_79(uint8_t value)
	{
		___rchRenderModelComponentName77_79 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName78_80() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7, ___rchRenderModelComponentName78_80)); }
	inline uint8_t get_rchRenderModelComponentName78_80() const { return ___rchRenderModelComponentName78_80; }
	inline uint8_t* get_address_of_rchRenderModelComponentName78_80() { return &___rchRenderModelComponentName78_80; }
	inline void set_rchRenderModelComponentName78_80(uint8_t value)
	{
		___rchRenderModelComponentName78_80 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName79_81() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7, ___rchRenderModelComponentName79_81)); }
	inline uint8_t get_rchRenderModelComponentName79_81() const { return ___rchRenderModelComponentName79_81; }
	inline uint8_t* get_address_of_rchRenderModelComponentName79_81() { return &___rchRenderModelComponentName79_81; }
	inline void set_rchRenderModelComponentName79_81(uint8_t value)
	{
		___rchRenderModelComponentName79_81 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName80_82() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7, ___rchRenderModelComponentName80_82)); }
	inline uint8_t get_rchRenderModelComponentName80_82() const { return ___rchRenderModelComponentName80_82; }
	inline uint8_t* get_address_of_rchRenderModelComponentName80_82() { return &___rchRenderModelComponentName80_82; }
	inline void set_rchRenderModelComponentName80_82(uint8_t value)
	{
		___rchRenderModelComponentName80_82 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName81_83() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7, ___rchRenderModelComponentName81_83)); }
	inline uint8_t get_rchRenderModelComponentName81_83() const { return ___rchRenderModelComponentName81_83; }
	inline uint8_t* get_address_of_rchRenderModelComponentName81_83() { return &___rchRenderModelComponentName81_83; }
	inline void set_rchRenderModelComponentName81_83(uint8_t value)
	{
		___rchRenderModelComponentName81_83 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName82_84() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7, ___rchRenderModelComponentName82_84)); }
	inline uint8_t get_rchRenderModelComponentName82_84() const { return ___rchRenderModelComponentName82_84; }
	inline uint8_t* get_address_of_rchRenderModelComponentName82_84() { return &___rchRenderModelComponentName82_84; }
	inline void set_rchRenderModelComponentName82_84(uint8_t value)
	{
		___rchRenderModelComponentName82_84 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName83_85() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7, ___rchRenderModelComponentName83_85)); }
	inline uint8_t get_rchRenderModelComponentName83_85() const { return ___rchRenderModelComponentName83_85; }
	inline uint8_t* get_address_of_rchRenderModelComponentName83_85() { return &___rchRenderModelComponentName83_85; }
	inline void set_rchRenderModelComponentName83_85(uint8_t value)
	{
		___rchRenderModelComponentName83_85 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName84_86() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7, ___rchRenderModelComponentName84_86)); }
	inline uint8_t get_rchRenderModelComponentName84_86() const { return ___rchRenderModelComponentName84_86; }
	inline uint8_t* get_address_of_rchRenderModelComponentName84_86() { return &___rchRenderModelComponentName84_86; }
	inline void set_rchRenderModelComponentName84_86(uint8_t value)
	{
		___rchRenderModelComponentName84_86 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName85_87() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7, ___rchRenderModelComponentName85_87)); }
	inline uint8_t get_rchRenderModelComponentName85_87() const { return ___rchRenderModelComponentName85_87; }
	inline uint8_t* get_address_of_rchRenderModelComponentName85_87() { return &___rchRenderModelComponentName85_87; }
	inline void set_rchRenderModelComponentName85_87(uint8_t value)
	{
		___rchRenderModelComponentName85_87 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName86_88() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7, ___rchRenderModelComponentName86_88)); }
	inline uint8_t get_rchRenderModelComponentName86_88() const { return ___rchRenderModelComponentName86_88; }
	inline uint8_t* get_address_of_rchRenderModelComponentName86_88() { return &___rchRenderModelComponentName86_88; }
	inline void set_rchRenderModelComponentName86_88(uint8_t value)
	{
		___rchRenderModelComponentName86_88 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName87_89() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7, ___rchRenderModelComponentName87_89)); }
	inline uint8_t get_rchRenderModelComponentName87_89() const { return ___rchRenderModelComponentName87_89; }
	inline uint8_t* get_address_of_rchRenderModelComponentName87_89() { return &___rchRenderModelComponentName87_89; }
	inline void set_rchRenderModelComponentName87_89(uint8_t value)
	{
		___rchRenderModelComponentName87_89 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName88_90() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7, ___rchRenderModelComponentName88_90)); }
	inline uint8_t get_rchRenderModelComponentName88_90() const { return ___rchRenderModelComponentName88_90; }
	inline uint8_t* get_address_of_rchRenderModelComponentName88_90() { return &___rchRenderModelComponentName88_90; }
	inline void set_rchRenderModelComponentName88_90(uint8_t value)
	{
		___rchRenderModelComponentName88_90 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName89_91() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7, ___rchRenderModelComponentName89_91)); }
	inline uint8_t get_rchRenderModelComponentName89_91() const { return ___rchRenderModelComponentName89_91; }
	inline uint8_t* get_address_of_rchRenderModelComponentName89_91() { return &___rchRenderModelComponentName89_91; }
	inline void set_rchRenderModelComponentName89_91(uint8_t value)
	{
		___rchRenderModelComponentName89_91 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName90_92() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7, ___rchRenderModelComponentName90_92)); }
	inline uint8_t get_rchRenderModelComponentName90_92() const { return ___rchRenderModelComponentName90_92; }
	inline uint8_t* get_address_of_rchRenderModelComponentName90_92() { return &___rchRenderModelComponentName90_92; }
	inline void set_rchRenderModelComponentName90_92(uint8_t value)
	{
		___rchRenderModelComponentName90_92 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName91_93() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7, ___rchRenderModelComponentName91_93)); }
	inline uint8_t get_rchRenderModelComponentName91_93() const { return ___rchRenderModelComponentName91_93; }
	inline uint8_t* get_address_of_rchRenderModelComponentName91_93() { return &___rchRenderModelComponentName91_93; }
	inline void set_rchRenderModelComponentName91_93(uint8_t value)
	{
		___rchRenderModelComponentName91_93 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName92_94() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7, ___rchRenderModelComponentName92_94)); }
	inline uint8_t get_rchRenderModelComponentName92_94() const { return ___rchRenderModelComponentName92_94; }
	inline uint8_t* get_address_of_rchRenderModelComponentName92_94() { return &___rchRenderModelComponentName92_94; }
	inline void set_rchRenderModelComponentName92_94(uint8_t value)
	{
		___rchRenderModelComponentName92_94 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName93_95() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7, ___rchRenderModelComponentName93_95)); }
	inline uint8_t get_rchRenderModelComponentName93_95() const { return ___rchRenderModelComponentName93_95; }
	inline uint8_t* get_address_of_rchRenderModelComponentName93_95() { return &___rchRenderModelComponentName93_95; }
	inline void set_rchRenderModelComponentName93_95(uint8_t value)
	{
		___rchRenderModelComponentName93_95 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName94_96() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7, ___rchRenderModelComponentName94_96)); }
	inline uint8_t get_rchRenderModelComponentName94_96() const { return ___rchRenderModelComponentName94_96; }
	inline uint8_t* get_address_of_rchRenderModelComponentName94_96() { return &___rchRenderModelComponentName94_96; }
	inline void set_rchRenderModelComponentName94_96(uint8_t value)
	{
		___rchRenderModelComponentName94_96 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName95_97() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7, ___rchRenderModelComponentName95_97)); }
	inline uint8_t get_rchRenderModelComponentName95_97() const { return ___rchRenderModelComponentName95_97; }
	inline uint8_t* get_address_of_rchRenderModelComponentName95_97() { return &___rchRenderModelComponentName95_97; }
	inline void set_rchRenderModelComponentName95_97(uint8_t value)
	{
		___rchRenderModelComponentName95_97 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName96_98() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7, ___rchRenderModelComponentName96_98)); }
	inline uint8_t get_rchRenderModelComponentName96_98() const { return ___rchRenderModelComponentName96_98; }
	inline uint8_t* get_address_of_rchRenderModelComponentName96_98() { return &___rchRenderModelComponentName96_98; }
	inline void set_rchRenderModelComponentName96_98(uint8_t value)
	{
		___rchRenderModelComponentName96_98 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName97_99() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7, ___rchRenderModelComponentName97_99)); }
	inline uint8_t get_rchRenderModelComponentName97_99() const { return ___rchRenderModelComponentName97_99; }
	inline uint8_t* get_address_of_rchRenderModelComponentName97_99() { return &___rchRenderModelComponentName97_99; }
	inline void set_rchRenderModelComponentName97_99(uint8_t value)
	{
		___rchRenderModelComponentName97_99 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName98_100() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7, ___rchRenderModelComponentName98_100)); }
	inline uint8_t get_rchRenderModelComponentName98_100() const { return ___rchRenderModelComponentName98_100; }
	inline uint8_t* get_address_of_rchRenderModelComponentName98_100() { return &___rchRenderModelComponentName98_100; }
	inline void set_rchRenderModelComponentName98_100(uint8_t value)
	{
		___rchRenderModelComponentName98_100 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName99_101() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7, ___rchRenderModelComponentName99_101)); }
	inline uint8_t get_rchRenderModelComponentName99_101() const { return ___rchRenderModelComponentName99_101; }
	inline uint8_t* get_address_of_rchRenderModelComponentName99_101() { return &___rchRenderModelComponentName99_101; }
	inline void set_rchRenderModelComponentName99_101(uint8_t value)
	{
		___rchRenderModelComponentName99_101 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName100_102() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7, ___rchRenderModelComponentName100_102)); }
	inline uint8_t get_rchRenderModelComponentName100_102() const { return ___rchRenderModelComponentName100_102; }
	inline uint8_t* get_address_of_rchRenderModelComponentName100_102() { return &___rchRenderModelComponentName100_102; }
	inline void set_rchRenderModelComponentName100_102(uint8_t value)
	{
		___rchRenderModelComponentName100_102 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName101_103() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7, ___rchRenderModelComponentName101_103)); }
	inline uint8_t get_rchRenderModelComponentName101_103() const { return ___rchRenderModelComponentName101_103; }
	inline uint8_t* get_address_of_rchRenderModelComponentName101_103() { return &___rchRenderModelComponentName101_103; }
	inline void set_rchRenderModelComponentName101_103(uint8_t value)
	{
		___rchRenderModelComponentName101_103 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName102_104() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7, ___rchRenderModelComponentName102_104)); }
	inline uint8_t get_rchRenderModelComponentName102_104() const { return ___rchRenderModelComponentName102_104; }
	inline uint8_t* get_address_of_rchRenderModelComponentName102_104() { return &___rchRenderModelComponentName102_104; }
	inline void set_rchRenderModelComponentName102_104(uint8_t value)
	{
		___rchRenderModelComponentName102_104 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName103_105() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7, ___rchRenderModelComponentName103_105)); }
	inline uint8_t get_rchRenderModelComponentName103_105() const { return ___rchRenderModelComponentName103_105; }
	inline uint8_t* get_address_of_rchRenderModelComponentName103_105() { return &___rchRenderModelComponentName103_105; }
	inline void set_rchRenderModelComponentName103_105(uint8_t value)
	{
		___rchRenderModelComponentName103_105 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName104_106() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7, ___rchRenderModelComponentName104_106)); }
	inline uint8_t get_rchRenderModelComponentName104_106() const { return ___rchRenderModelComponentName104_106; }
	inline uint8_t* get_address_of_rchRenderModelComponentName104_106() { return &___rchRenderModelComponentName104_106; }
	inline void set_rchRenderModelComponentName104_106(uint8_t value)
	{
		___rchRenderModelComponentName104_106 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName105_107() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7, ___rchRenderModelComponentName105_107)); }
	inline uint8_t get_rchRenderModelComponentName105_107() const { return ___rchRenderModelComponentName105_107; }
	inline uint8_t* get_address_of_rchRenderModelComponentName105_107() { return &___rchRenderModelComponentName105_107; }
	inline void set_rchRenderModelComponentName105_107(uint8_t value)
	{
		___rchRenderModelComponentName105_107 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName106_108() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7, ___rchRenderModelComponentName106_108)); }
	inline uint8_t get_rchRenderModelComponentName106_108() const { return ___rchRenderModelComponentName106_108; }
	inline uint8_t* get_address_of_rchRenderModelComponentName106_108() { return &___rchRenderModelComponentName106_108; }
	inline void set_rchRenderModelComponentName106_108(uint8_t value)
	{
		___rchRenderModelComponentName106_108 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName107_109() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7, ___rchRenderModelComponentName107_109)); }
	inline uint8_t get_rchRenderModelComponentName107_109() const { return ___rchRenderModelComponentName107_109; }
	inline uint8_t* get_address_of_rchRenderModelComponentName107_109() { return &___rchRenderModelComponentName107_109; }
	inline void set_rchRenderModelComponentName107_109(uint8_t value)
	{
		___rchRenderModelComponentName107_109 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName108_110() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7, ___rchRenderModelComponentName108_110)); }
	inline uint8_t get_rchRenderModelComponentName108_110() const { return ___rchRenderModelComponentName108_110; }
	inline uint8_t* get_address_of_rchRenderModelComponentName108_110() { return &___rchRenderModelComponentName108_110; }
	inline void set_rchRenderModelComponentName108_110(uint8_t value)
	{
		___rchRenderModelComponentName108_110 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName109_111() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7, ___rchRenderModelComponentName109_111)); }
	inline uint8_t get_rchRenderModelComponentName109_111() const { return ___rchRenderModelComponentName109_111; }
	inline uint8_t* get_address_of_rchRenderModelComponentName109_111() { return &___rchRenderModelComponentName109_111; }
	inline void set_rchRenderModelComponentName109_111(uint8_t value)
	{
		___rchRenderModelComponentName109_111 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName110_112() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7, ___rchRenderModelComponentName110_112)); }
	inline uint8_t get_rchRenderModelComponentName110_112() const { return ___rchRenderModelComponentName110_112; }
	inline uint8_t* get_address_of_rchRenderModelComponentName110_112() { return &___rchRenderModelComponentName110_112; }
	inline void set_rchRenderModelComponentName110_112(uint8_t value)
	{
		___rchRenderModelComponentName110_112 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName111_113() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7, ___rchRenderModelComponentName111_113)); }
	inline uint8_t get_rchRenderModelComponentName111_113() const { return ___rchRenderModelComponentName111_113; }
	inline uint8_t* get_address_of_rchRenderModelComponentName111_113() { return &___rchRenderModelComponentName111_113; }
	inline void set_rchRenderModelComponentName111_113(uint8_t value)
	{
		___rchRenderModelComponentName111_113 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName112_114() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7, ___rchRenderModelComponentName112_114)); }
	inline uint8_t get_rchRenderModelComponentName112_114() const { return ___rchRenderModelComponentName112_114; }
	inline uint8_t* get_address_of_rchRenderModelComponentName112_114() { return &___rchRenderModelComponentName112_114; }
	inline void set_rchRenderModelComponentName112_114(uint8_t value)
	{
		___rchRenderModelComponentName112_114 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName113_115() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7, ___rchRenderModelComponentName113_115)); }
	inline uint8_t get_rchRenderModelComponentName113_115() const { return ___rchRenderModelComponentName113_115; }
	inline uint8_t* get_address_of_rchRenderModelComponentName113_115() { return &___rchRenderModelComponentName113_115; }
	inline void set_rchRenderModelComponentName113_115(uint8_t value)
	{
		___rchRenderModelComponentName113_115 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName114_116() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7, ___rchRenderModelComponentName114_116)); }
	inline uint8_t get_rchRenderModelComponentName114_116() const { return ___rchRenderModelComponentName114_116; }
	inline uint8_t* get_address_of_rchRenderModelComponentName114_116() { return &___rchRenderModelComponentName114_116; }
	inline void set_rchRenderModelComponentName114_116(uint8_t value)
	{
		___rchRenderModelComponentName114_116 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName115_117() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7, ___rchRenderModelComponentName115_117)); }
	inline uint8_t get_rchRenderModelComponentName115_117() const { return ___rchRenderModelComponentName115_117; }
	inline uint8_t* get_address_of_rchRenderModelComponentName115_117() { return &___rchRenderModelComponentName115_117; }
	inline void set_rchRenderModelComponentName115_117(uint8_t value)
	{
		___rchRenderModelComponentName115_117 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName116_118() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7, ___rchRenderModelComponentName116_118)); }
	inline uint8_t get_rchRenderModelComponentName116_118() const { return ___rchRenderModelComponentName116_118; }
	inline uint8_t* get_address_of_rchRenderModelComponentName116_118() { return &___rchRenderModelComponentName116_118; }
	inline void set_rchRenderModelComponentName116_118(uint8_t value)
	{
		___rchRenderModelComponentName116_118 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName117_119() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7, ___rchRenderModelComponentName117_119)); }
	inline uint8_t get_rchRenderModelComponentName117_119() const { return ___rchRenderModelComponentName117_119; }
	inline uint8_t* get_address_of_rchRenderModelComponentName117_119() { return &___rchRenderModelComponentName117_119; }
	inline void set_rchRenderModelComponentName117_119(uint8_t value)
	{
		___rchRenderModelComponentName117_119 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName118_120() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7, ___rchRenderModelComponentName118_120)); }
	inline uint8_t get_rchRenderModelComponentName118_120() const { return ___rchRenderModelComponentName118_120; }
	inline uint8_t* get_address_of_rchRenderModelComponentName118_120() { return &___rchRenderModelComponentName118_120; }
	inline void set_rchRenderModelComponentName118_120(uint8_t value)
	{
		___rchRenderModelComponentName118_120 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName119_121() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7, ___rchRenderModelComponentName119_121)); }
	inline uint8_t get_rchRenderModelComponentName119_121() const { return ___rchRenderModelComponentName119_121; }
	inline uint8_t* get_address_of_rchRenderModelComponentName119_121() { return &___rchRenderModelComponentName119_121; }
	inline void set_rchRenderModelComponentName119_121(uint8_t value)
	{
		___rchRenderModelComponentName119_121 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName120_122() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7, ___rchRenderModelComponentName120_122)); }
	inline uint8_t get_rchRenderModelComponentName120_122() const { return ___rchRenderModelComponentName120_122; }
	inline uint8_t* get_address_of_rchRenderModelComponentName120_122() { return &___rchRenderModelComponentName120_122; }
	inline void set_rchRenderModelComponentName120_122(uint8_t value)
	{
		___rchRenderModelComponentName120_122 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName121_123() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7, ___rchRenderModelComponentName121_123)); }
	inline uint8_t get_rchRenderModelComponentName121_123() const { return ___rchRenderModelComponentName121_123; }
	inline uint8_t* get_address_of_rchRenderModelComponentName121_123() { return &___rchRenderModelComponentName121_123; }
	inline void set_rchRenderModelComponentName121_123(uint8_t value)
	{
		___rchRenderModelComponentName121_123 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName122_124() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7, ___rchRenderModelComponentName122_124)); }
	inline uint8_t get_rchRenderModelComponentName122_124() const { return ___rchRenderModelComponentName122_124; }
	inline uint8_t* get_address_of_rchRenderModelComponentName122_124() { return &___rchRenderModelComponentName122_124; }
	inline void set_rchRenderModelComponentName122_124(uint8_t value)
	{
		___rchRenderModelComponentName122_124 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName123_125() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7, ___rchRenderModelComponentName123_125)); }
	inline uint8_t get_rchRenderModelComponentName123_125() const { return ___rchRenderModelComponentName123_125; }
	inline uint8_t* get_address_of_rchRenderModelComponentName123_125() { return &___rchRenderModelComponentName123_125; }
	inline void set_rchRenderModelComponentName123_125(uint8_t value)
	{
		___rchRenderModelComponentName123_125 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName124_126() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7, ___rchRenderModelComponentName124_126)); }
	inline uint8_t get_rchRenderModelComponentName124_126() const { return ___rchRenderModelComponentName124_126; }
	inline uint8_t* get_address_of_rchRenderModelComponentName124_126() { return &___rchRenderModelComponentName124_126; }
	inline void set_rchRenderModelComponentName124_126(uint8_t value)
	{
		___rchRenderModelComponentName124_126 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName125_127() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7, ___rchRenderModelComponentName125_127)); }
	inline uint8_t get_rchRenderModelComponentName125_127() const { return ___rchRenderModelComponentName125_127; }
	inline uint8_t* get_address_of_rchRenderModelComponentName125_127() { return &___rchRenderModelComponentName125_127; }
	inline void set_rchRenderModelComponentName125_127(uint8_t value)
	{
		___rchRenderModelComponentName125_127 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName126_128() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7, ___rchRenderModelComponentName126_128)); }
	inline uint8_t get_rchRenderModelComponentName126_128() const { return ___rchRenderModelComponentName126_128; }
	inline uint8_t* get_address_of_rchRenderModelComponentName126_128() { return &___rchRenderModelComponentName126_128; }
	inline void set_rchRenderModelComponentName126_128(uint8_t value)
	{
		___rchRenderModelComponentName126_128 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName127_129() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7, ___rchRenderModelComponentName127_129)); }
	inline uint8_t get_rchRenderModelComponentName127_129() const { return ___rchRenderModelComponentName127_129; }
	inline uint8_t* get_address_of_rchRenderModelComponentName127_129() { return &___rchRenderModelComponentName127_129; }
	inline void set_rchRenderModelComponentName127_129(uint8_t value)
	{
		___rchRenderModelComponentName127_129 = value;
	}
};


// Valve.VR.InputSkeletalActionData_t
struct InputSkeletalActionData_t_tD41850247EEE1858231B43C4B3EC2B5617140C26 
{
public:
	// System.Boolean Valve.VR.InputSkeletalActionData_t::bActive
	bool ___bActive_0;
	// System.UInt64 Valve.VR.InputSkeletalActionData_t::activeOrigin
	uint64_t ___activeOrigin_1;

public:
	inline static int32_t get_offset_of_bActive_0() { return static_cast<int32_t>(offsetof(InputSkeletalActionData_t_tD41850247EEE1858231B43C4B3EC2B5617140C26, ___bActive_0)); }
	inline bool get_bActive_0() const { return ___bActive_0; }
	inline bool* get_address_of_bActive_0() { return &___bActive_0; }
	inline void set_bActive_0(bool value)
	{
		___bActive_0 = value;
	}

	inline static int32_t get_offset_of_activeOrigin_1() { return static_cast<int32_t>(offsetof(InputSkeletalActionData_t_tD41850247EEE1858231B43C4B3EC2B5617140C26, ___activeOrigin_1)); }
	inline uint64_t get_activeOrigin_1() const { return ___activeOrigin_1; }
	inline uint64_t* get_address_of_activeOrigin_1() { return &___activeOrigin_1; }
	inline void set_activeOrigin_1(uint64_t value)
	{
		___activeOrigin_1 = value;
	}
};


// Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Boolean_Source_Map,Valve.VR.SteamVR_Action_Boolean_Source>
struct SteamVR_Action_2_tEF35EA9CF866C4CE33A6702A6D71E8DDE8081AC8  : public SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734
{
public:
	// SourceMap Valve.VR.SteamVR_Action`2::sourceMap
	SteamVR_Action_Boolean_Source_Map_tF5558AC3C11798E60DC5152DD2FB5E835D79AA3B * ___sourceMap_4;
	// System.Boolean Valve.VR.SteamVR_Action`2::initialized
	bool ___initialized_5;

public:
	inline static int32_t get_offset_of_sourceMap_4() { return static_cast<int32_t>(offsetof(SteamVR_Action_2_tEF35EA9CF866C4CE33A6702A6D71E8DDE8081AC8, ___sourceMap_4)); }
	inline SteamVR_Action_Boolean_Source_Map_tF5558AC3C11798E60DC5152DD2FB5E835D79AA3B * get_sourceMap_4() const { return ___sourceMap_4; }
	inline SteamVR_Action_Boolean_Source_Map_tF5558AC3C11798E60DC5152DD2FB5E835D79AA3B ** get_address_of_sourceMap_4() { return &___sourceMap_4; }
	inline void set_sourceMap_4(SteamVR_Action_Boolean_Source_Map_tF5558AC3C11798E60DC5152DD2FB5E835D79AA3B * value)
	{
		___sourceMap_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___sourceMap_4), (void*)value);
	}

	inline static int32_t get_offset_of_initialized_5() { return static_cast<int32_t>(offsetof(SteamVR_Action_2_tEF35EA9CF866C4CE33A6702A6D71E8DDE8081AC8, ___initialized_5)); }
	inline bool get_initialized_5() const { return ___initialized_5; }
	inline bool* get_address_of_initialized_5() { return &___initialized_5; }
	inline void set_initialized_5(bool value)
	{
		___initialized_5 = value;
	}
};


// Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Pose_Source_Map`1<Valve.VR.SteamVR_Action_Pose_Source>,Valve.VR.SteamVR_Action_Pose_Source>
struct SteamVR_Action_2_tDED2DB9236CA9398BCDCB18DB8DDA3DB1D98FBAC  : public SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734
{
public:
	// SourceMap Valve.VR.SteamVR_Action`2::sourceMap
	SteamVR_Action_Pose_Source_Map_1_t191C12A385C6BE9645B171973AA0141ECCBA76A9 * ___sourceMap_4;
	// System.Boolean Valve.VR.SteamVR_Action`2::initialized
	bool ___initialized_5;

public:
	inline static int32_t get_offset_of_sourceMap_4() { return static_cast<int32_t>(offsetof(SteamVR_Action_2_tDED2DB9236CA9398BCDCB18DB8DDA3DB1D98FBAC, ___sourceMap_4)); }
	inline SteamVR_Action_Pose_Source_Map_1_t191C12A385C6BE9645B171973AA0141ECCBA76A9 * get_sourceMap_4() const { return ___sourceMap_4; }
	inline SteamVR_Action_Pose_Source_Map_1_t191C12A385C6BE9645B171973AA0141ECCBA76A9 ** get_address_of_sourceMap_4() { return &___sourceMap_4; }
	inline void set_sourceMap_4(SteamVR_Action_Pose_Source_Map_1_t191C12A385C6BE9645B171973AA0141ECCBA76A9 * value)
	{
		___sourceMap_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___sourceMap_4), (void*)value);
	}

	inline static int32_t get_offset_of_initialized_5() { return static_cast<int32_t>(offsetof(SteamVR_Action_2_tDED2DB9236CA9398BCDCB18DB8DDA3DB1D98FBAC, ___initialized_5)); }
	inline bool get_initialized_5() const { return ___initialized_5; }
	inline bool* get_address_of_initialized_5() { return &___initialized_5; }
	inline void set_initialized_5(bool value)
	{
		___initialized_5 = value;
	}
};


// Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Single_Source_Map,Valve.VR.SteamVR_Action_Single_Source>
struct SteamVR_Action_2_t6C5A72BCD96947140E949B195C2578D4AE46E170  : public SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734
{
public:
	// SourceMap Valve.VR.SteamVR_Action`2::sourceMap
	SteamVR_Action_Single_Source_Map_tBD46D15F4FCB5A4B6BDA2B1FE96035D4DDBDBA37 * ___sourceMap_4;
	// System.Boolean Valve.VR.SteamVR_Action`2::initialized
	bool ___initialized_5;

public:
	inline static int32_t get_offset_of_sourceMap_4() { return static_cast<int32_t>(offsetof(SteamVR_Action_2_t6C5A72BCD96947140E949B195C2578D4AE46E170, ___sourceMap_4)); }
	inline SteamVR_Action_Single_Source_Map_tBD46D15F4FCB5A4B6BDA2B1FE96035D4DDBDBA37 * get_sourceMap_4() const { return ___sourceMap_4; }
	inline SteamVR_Action_Single_Source_Map_tBD46D15F4FCB5A4B6BDA2B1FE96035D4DDBDBA37 ** get_address_of_sourceMap_4() { return &___sourceMap_4; }
	inline void set_sourceMap_4(SteamVR_Action_Single_Source_Map_tBD46D15F4FCB5A4B6BDA2B1FE96035D4DDBDBA37 * value)
	{
		___sourceMap_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___sourceMap_4), (void*)value);
	}

	inline static int32_t get_offset_of_initialized_5() { return static_cast<int32_t>(offsetof(SteamVR_Action_2_t6C5A72BCD96947140E949B195C2578D4AE46E170, ___initialized_5)); }
	inline bool get_initialized_5() const { return ___initialized_5; }
	inline bool* get_address_of_initialized_5() { return &___initialized_5; }
	inline void set_initialized_5(bool value)
	{
		___initialized_5 = value;
	}
};


// Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Skeleton_Source_Map,Valve.VR.SteamVR_Action_Skeleton_Source>
struct SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D  : public SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734
{
public:
	// SourceMap Valve.VR.SteamVR_Action`2::sourceMap
	SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * ___sourceMap_4;
	// System.Boolean Valve.VR.SteamVR_Action`2::initialized
	bool ___initialized_5;

public:
	inline static int32_t get_offset_of_sourceMap_4() { return static_cast<int32_t>(offsetof(SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D, ___sourceMap_4)); }
	inline SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * get_sourceMap_4() const { return ___sourceMap_4; }
	inline SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB ** get_address_of_sourceMap_4() { return &___sourceMap_4; }
	inline void set_sourceMap_4(SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * value)
	{
		___sourceMap_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___sourceMap_4), (void*)value);
	}

	inline static int32_t get_offset_of_initialized_5() { return static_cast<int32_t>(offsetof(SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D, ___initialized_5)); }
	inline bool get_initialized_5() const { return ___initialized_5; }
	inline bool* get_address_of_initialized_5() { return &___initialized_5; }
	inline void set_initialized_5(bool value)
	{
		___initialized_5 = value;
	}
};


// Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Vector2_Source_Map,Valve.VR.SteamVR_Action_Vector2_Source>
struct SteamVR_Action_2_t83C041411A0CA61D62EE3A4F510D83333D049258  : public SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734
{
public:
	// SourceMap Valve.VR.SteamVR_Action`2::sourceMap
	SteamVR_Action_Vector2_Source_Map_tA43BF0AE8C89C3094C8375D1A82AE8676DA218D3 * ___sourceMap_4;
	// System.Boolean Valve.VR.SteamVR_Action`2::initialized
	bool ___initialized_5;

public:
	inline static int32_t get_offset_of_sourceMap_4() { return static_cast<int32_t>(offsetof(SteamVR_Action_2_t83C041411A0CA61D62EE3A4F510D83333D049258, ___sourceMap_4)); }
	inline SteamVR_Action_Vector2_Source_Map_tA43BF0AE8C89C3094C8375D1A82AE8676DA218D3 * get_sourceMap_4() const { return ___sourceMap_4; }
	inline SteamVR_Action_Vector2_Source_Map_tA43BF0AE8C89C3094C8375D1A82AE8676DA218D3 ** get_address_of_sourceMap_4() { return &___sourceMap_4; }
	inline void set_sourceMap_4(SteamVR_Action_Vector2_Source_Map_tA43BF0AE8C89C3094C8375D1A82AE8676DA218D3 * value)
	{
		___sourceMap_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___sourceMap_4), (void*)value);
	}

	inline static int32_t get_offset_of_initialized_5() { return static_cast<int32_t>(offsetof(SteamVR_Action_2_t83C041411A0CA61D62EE3A4F510D83333D049258, ___initialized_5)); }
	inline bool get_initialized_5() const { return ___initialized_5; }
	inline bool* get_address_of_initialized_5() { return &___initialized_5; }
	inline void set_initialized_5(bool value)
	{
		___initialized_5 = value;
	}
};


// Valve.VR.VRSkeletalSummaryData_t
struct VRSkeletalSummaryData_t_t644580EA9039A02976937652FFFEE20F90671B66 
{
public:
	// System.Single Valve.VR.VRSkeletalSummaryData_t::flFingerCurl0
	float ___flFingerCurl0_0;
	// System.Single Valve.VR.VRSkeletalSummaryData_t::flFingerCurl1
	float ___flFingerCurl1_1;
	// System.Single Valve.VR.VRSkeletalSummaryData_t::flFingerCurl2
	float ___flFingerCurl2_2;
	// System.Single Valve.VR.VRSkeletalSummaryData_t::flFingerCurl3
	float ___flFingerCurl3_3;
	// System.Single Valve.VR.VRSkeletalSummaryData_t::flFingerCurl4
	float ___flFingerCurl4_4;
	// System.Single Valve.VR.VRSkeletalSummaryData_t::flFingerSplay0
	float ___flFingerSplay0_5;
	// System.Single Valve.VR.VRSkeletalSummaryData_t::flFingerSplay1
	float ___flFingerSplay1_6;
	// System.Single Valve.VR.VRSkeletalSummaryData_t::flFingerSplay2
	float ___flFingerSplay2_7;
	// System.Single Valve.VR.VRSkeletalSummaryData_t::flFingerSplay3
	float ___flFingerSplay3_8;

public:
	inline static int32_t get_offset_of_flFingerCurl0_0() { return static_cast<int32_t>(offsetof(VRSkeletalSummaryData_t_t644580EA9039A02976937652FFFEE20F90671B66, ___flFingerCurl0_0)); }
	inline float get_flFingerCurl0_0() const { return ___flFingerCurl0_0; }
	inline float* get_address_of_flFingerCurl0_0() { return &___flFingerCurl0_0; }
	inline void set_flFingerCurl0_0(float value)
	{
		___flFingerCurl0_0 = value;
	}

	inline static int32_t get_offset_of_flFingerCurl1_1() { return static_cast<int32_t>(offsetof(VRSkeletalSummaryData_t_t644580EA9039A02976937652FFFEE20F90671B66, ___flFingerCurl1_1)); }
	inline float get_flFingerCurl1_1() const { return ___flFingerCurl1_1; }
	inline float* get_address_of_flFingerCurl1_1() { return &___flFingerCurl1_1; }
	inline void set_flFingerCurl1_1(float value)
	{
		___flFingerCurl1_1 = value;
	}

	inline static int32_t get_offset_of_flFingerCurl2_2() { return static_cast<int32_t>(offsetof(VRSkeletalSummaryData_t_t644580EA9039A02976937652FFFEE20F90671B66, ___flFingerCurl2_2)); }
	inline float get_flFingerCurl2_2() const { return ___flFingerCurl2_2; }
	inline float* get_address_of_flFingerCurl2_2() { return &___flFingerCurl2_2; }
	inline void set_flFingerCurl2_2(float value)
	{
		___flFingerCurl2_2 = value;
	}

	inline static int32_t get_offset_of_flFingerCurl3_3() { return static_cast<int32_t>(offsetof(VRSkeletalSummaryData_t_t644580EA9039A02976937652FFFEE20F90671B66, ___flFingerCurl3_3)); }
	inline float get_flFingerCurl3_3() const { return ___flFingerCurl3_3; }
	inline float* get_address_of_flFingerCurl3_3() { return &___flFingerCurl3_3; }
	inline void set_flFingerCurl3_3(float value)
	{
		___flFingerCurl3_3 = value;
	}

	inline static int32_t get_offset_of_flFingerCurl4_4() { return static_cast<int32_t>(offsetof(VRSkeletalSummaryData_t_t644580EA9039A02976937652FFFEE20F90671B66, ___flFingerCurl4_4)); }
	inline float get_flFingerCurl4_4() const { return ___flFingerCurl4_4; }
	inline float* get_address_of_flFingerCurl4_4() { return &___flFingerCurl4_4; }
	inline void set_flFingerCurl4_4(float value)
	{
		___flFingerCurl4_4 = value;
	}

	inline static int32_t get_offset_of_flFingerSplay0_5() { return static_cast<int32_t>(offsetof(VRSkeletalSummaryData_t_t644580EA9039A02976937652FFFEE20F90671B66, ___flFingerSplay0_5)); }
	inline float get_flFingerSplay0_5() const { return ___flFingerSplay0_5; }
	inline float* get_address_of_flFingerSplay0_5() { return &___flFingerSplay0_5; }
	inline void set_flFingerSplay0_5(float value)
	{
		___flFingerSplay0_5 = value;
	}

	inline static int32_t get_offset_of_flFingerSplay1_6() { return static_cast<int32_t>(offsetof(VRSkeletalSummaryData_t_t644580EA9039A02976937652FFFEE20F90671B66, ___flFingerSplay1_6)); }
	inline float get_flFingerSplay1_6() const { return ___flFingerSplay1_6; }
	inline float* get_address_of_flFingerSplay1_6() { return &___flFingerSplay1_6; }
	inline void set_flFingerSplay1_6(float value)
	{
		___flFingerSplay1_6 = value;
	}

	inline static int32_t get_offset_of_flFingerSplay2_7() { return static_cast<int32_t>(offsetof(VRSkeletalSummaryData_t_t644580EA9039A02976937652FFFEE20F90671B66, ___flFingerSplay2_7)); }
	inline float get_flFingerSplay2_7() const { return ___flFingerSplay2_7; }
	inline float* get_address_of_flFingerSplay2_7() { return &___flFingerSplay2_7; }
	inline void set_flFingerSplay2_7(float value)
	{
		___flFingerSplay2_7 = value;
	}

	inline static int32_t get_offset_of_flFingerSplay3_8() { return static_cast<int32_t>(offsetof(VRSkeletalSummaryData_t_t644580EA9039A02976937652FFFEE20F90671B66, ___flFingerSplay3_8)); }
	inline float get_flFingerSplay3_8() const { return ___flFingerSplay3_8; }
	inline float* get_address_of_flFingerSplay3_8() { return &___flFingerSplay3_8; }
	inline void set_flFingerSplay3_8(float value)
	{
		___flFingerSplay3_8 = value;
	}
};


// SteamVR_Utils/RigidTransform
struct RigidTransform_t0E8A00F7013270B6B2254F29B4FFEAA6783CD905 
{
public:
	// UnityEngine.Vector3 SteamVR_Utils/RigidTransform::pos
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___pos_0;
	// UnityEngine.Quaternion SteamVR_Utils/RigidTransform::rot
	Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___rot_1;

public:
	inline static int32_t get_offset_of_pos_0() { return static_cast<int32_t>(offsetof(RigidTransform_t0E8A00F7013270B6B2254F29B4FFEAA6783CD905, ___pos_0)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_pos_0() const { return ___pos_0; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_pos_0() { return &___pos_0; }
	inline void set_pos_0(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___pos_0 = value;
	}

	inline static int32_t get_offset_of_rot_1() { return static_cast<int32_t>(offsetof(RigidTransform_t0E8A00F7013270B6B2254F29B4FFEAA6783CD905, ___rot_1)); }
	inline Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  get_rot_1() const { return ___rot_1; }
	inline Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 * get_address_of_rot_1() { return &___rot_1; }
	inline void set_rot_1(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  value)
	{
		___rot_1 = value;
	}
};


// System.Delegate
struct Delegate_t  : public RuntimeObject
{
public:
	// System.IntPtr System.Delegate::method_ptr
	Il2CppMethodPointer ___method_ptr_0;
	// System.IntPtr System.Delegate::invoke_impl
	intptr_t ___invoke_impl_1;
	// System.Object System.Delegate::m_target
	RuntimeObject * ___m_target_2;
	// System.IntPtr System.Delegate::method
	intptr_t ___method_3;
	// System.IntPtr System.Delegate::delegate_trampoline
	intptr_t ___delegate_trampoline_4;
	// System.IntPtr System.Delegate::extra_arg
	intptr_t ___extra_arg_5;
	// System.IntPtr System.Delegate::method_code
	intptr_t ___method_code_6;
	// System.Reflection.MethodInfo System.Delegate::method_info
	MethodInfo_t * ___method_info_7;
	// System.Reflection.MethodInfo System.Delegate::original_method_info
	MethodInfo_t * ___original_method_info_8;
	// System.DelegateData System.Delegate::data
	DelegateData_t1BF9F691B56DAE5F8C28C5E084FDE94F15F27BBE * ___data_9;
	// System.Boolean System.Delegate::method_is_virtual
	bool ___method_is_virtual_10;

public:
	inline static int32_t get_offset_of_method_ptr_0() { return static_cast<int32_t>(offsetof(Delegate_t, ___method_ptr_0)); }
	inline Il2CppMethodPointer get_method_ptr_0() const { return ___method_ptr_0; }
	inline Il2CppMethodPointer* get_address_of_method_ptr_0() { return &___method_ptr_0; }
	inline void set_method_ptr_0(Il2CppMethodPointer value)
	{
		___method_ptr_0 = value;
	}

	inline static int32_t get_offset_of_invoke_impl_1() { return static_cast<int32_t>(offsetof(Delegate_t, ___invoke_impl_1)); }
	inline intptr_t get_invoke_impl_1() const { return ___invoke_impl_1; }
	inline intptr_t* get_address_of_invoke_impl_1() { return &___invoke_impl_1; }
	inline void set_invoke_impl_1(intptr_t value)
	{
		___invoke_impl_1 = value;
	}

	inline static int32_t get_offset_of_m_target_2() { return static_cast<int32_t>(offsetof(Delegate_t, ___m_target_2)); }
	inline RuntimeObject * get_m_target_2() const { return ___m_target_2; }
	inline RuntimeObject ** get_address_of_m_target_2() { return &___m_target_2; }
	inline void set_m_target_2(RuntimeObject * value)
	{
		___m_target_2 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_target_2), (void*)value);
	}

	inline static int32_t get_offset_of_method_3() { return static_cast<int32_t>(offsetof(Delegate_t, ___method_3)); }
	inline intptr_t get_method_3() const { return ___method_3; }
	inline intptr_t* get_address_of_method_3() { return &___method_3; }
	inline void set_method_3(intptr_t value)
	{
		___method_3 = value;
	}

	inline static int32_t get_offset_of_delegate_trampoline_4() { return static_cast<int32_t>(offsetof(Delegate_t, ___delegate_trampoline_4)); }
	inline intptr_t get_delegate_trampoline_4() const { return ___delegate_trampoline_4; }
	inline intptr_t* get_address_of_delegate_trampoline_4() { return &___delegate_trampoline_4; }
	inline void set_delegate_trampoline_4(intptr_t value)
	{
		___delegate_trampoline_4 = value;
	}

	inline static int32_t get_offset_of_extra_arg_5() { return static_cast<int32_t>(offsetof(Delegate_t, ___extra_arg_5)); }
	inline intptr_t get_extra_arg_5() const { return ___extra_arg_5; }
	inline intptr_t* get_address_of_extra_arg_5() { return &___extra_arg_5; }
	inline void set_extra_arg_5(intptr_t value)
	{
		___extra_arg_5 = value;
	}

	inline static int32_t get_offset_of_method_code_6() { return static_cast<int32_t>(offsetof(Delegate_t, ___method_code_6)); }
	inline intptr_t get_method_code_6() const { return ___method_code_6; }
	inline intptr_t* get_address_of_method_code_6() { return &___method_code_6; }
	inline void set_method_code_6(intptr_t value)
	{
		___method_code_6 = value;
	}

	inline static int32_t get_offset_of_method_info_7() { return static_cast<int32_t>(offsetof(Delegate_t, ___method_info_7)); }
	inline MethodInfo_t * get_method_info_7() const { return ___method_info_7; }
	inline MethodInfo_t ** get_address_of_method_info_7() { return &___method_info_7; }
	inline void set_method_info_7(MethodInfo_t * value)
	{
		___method_info_7 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___method_info_7), (void*)value);
	}

	inline static int32_t get_offset_of_original_method_info_8() { return static_cast<int32_t>(offsetof(Delegate_t, ___original_method_info_8)); }
	inline MethodInfo_t * get_original_method_info_8() const { return ___original_method_info_8; }
	inline MethodInfo_t ** get_address_of_original_method_info_8() { return &___original_method_info_8; }
	inline void set_original_method_info_8(MethodInfo_t * value)
	{
		___original_method_info_8 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___original_method_info_8), (void*)value);
	}

	inline static int32_t get_offset_of_data_9() { return static_cast<int32_t>(offsetof(Delegate_t, ___data_9)); }
	inline DelegateData_t1BF9F691B56DAE5F8C28C5E084FDE94F15F27BBE * get_data_9() const { return ___data_9; }
	inline DelegateData_t1BF9F691B56DAE5F8C28C5E084FDE94F15F27BBE ** get_address_of_data_9() { return &___data_9; }
	inline void set_data_9(DelegateData_t1BF9F691B56DAE5F8C28C5E084FDE94F15F27BBE * value)
	{
		___data_9 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___data_9), (void*)value);
	}

	inline static int32_t get_offset_of_method_is_virtual_10() { return static_cast<int32_t>(offsetof(Delegate_t, ___method_is_virtual_10)); }
	inline bool get_method_is_virtual_10() const { return ___method_is_virtual_10; }
	inline bool* get_address_of_method_is_virtual_10() { return &___method_is_virtual_10; }
	inline void set_method_is_virtual_10(bool value)
	{
		___method_is_virtual_10 = value;
	}
};

// Native definition for P/Invoke marshalling of System.Delegate
struct Delegate_t_marshaled_pinvoke
{
	intptr_t ___method_ptr_0;
	intptr_t ___invoke_impl_1;
	Il2CppIUnknown* ___m_target_2;
	intptr_t ___method_3;
	intptr_t ___delegate_trampoline_4;
	intptr_t ___extra_arg_5;
	intptr_t ___method_code_6;
	MethodInfo_t * ___method_info_7;
	MethodInfo_t * ___original_method_info_8;
	DelegateData_t1BF9F691B56DAE5F8C28C5E084FDE94F15F27BBE * ___data_9;
	int32_t ___method_is_virtual_10;
};
// Native definition for COM marshalling of System.Delegate
struct Delegate_t_marshaled_com
{
	intptr_t ___method_ptr_0;
	intptr_t ___invoke_impl_1;
	Il2CppIUnknown* ___m_target_2;
	intptr_t ___method_3;
	intptr_t ___delegate_trampoline_4;
	intptr_t ___extra_arg_5;
	intptr_t ___method_code_6;
	MethodInfo_t * ___method_info_7;
	MethodInfo_t * ___original_method_info_8;
	DelegateData_t1BF9F691B56DAE5F8C28C5E084FDE94F15F27BBE * ___data_9;
	int32_t ___method_is_virtual_10;
};

// System.Reflection.BindingFlags
struct BindingFlags_tE35C91D046E63A1B92BB9AB909FCF9DA84379ED0 
{
public:
	// System.Int32 System.Reflection.BindingFlags::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(BindingFlags_tE35C91D046E63A1B92BB9AB909FCF9DA84379ED0, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// System.RuntimeTypeHandle
struct RuntimeTypeHandle_t7B542280A22F0EC4EAC2061C29178845847A8B2D 
{
public:
	// System.IntPtr System.RuntimeTypeHandle::value
	intptr_t ___value_0;

public:
	inline static int32_t get_offset_of_value_0() { return static_cast<int32_t>(offsetof(RuntimeTypeHandle_t7B542280A22F0EC4EAC2061C29178845847A8B2D, ___value_0)); }
	inline intptr_t get_value_0() const { return ___value_0; }
	inline intptr_t* get_address_of_value_0() { return &___value_0; }
	inline void set_value_0(intptr_t value)
	{
		___value_0 = value;
	}
};


// UnityEngine.Object
struct Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0  : public RuntimeObject
{
public:
	// System.IntPtr UnityEngine.Object::m_CachedPtr
	intptr_t ___m_CachedPtr_0;

public:
	inline static int32_t get_offset_of_m_CachedPtr_0() { return static_cast<int32_t>(offsetof(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0, ___m_CachedPtr_0)); }
	inline intptr_t get_m_CachedPtr_0() const { return ___m_CachedPtr_0; }
	inline intptr_t* get_address_of_m_CachedPtr_0() { return &___m_CachedPtr_0; }
	inline void set_m_CachedPtr_0(intptr_t value)
	{
		___m_CachedPtr_0 = value;
	}
};

struct Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_StaticFields
{
public:
	// System.Int32 UnityEngine.Object::OffsetOfInstanceIDInCPlusPlusObject
	int32_t ___OffsetOfInstanceIDInCPlusPlusObject_1;

public:
	inline static int32_t get_offset_of_OffsetOfInstanceIDInCPlusPlusObject_1() { return static_cast<int32_t>(offsetof(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_StaticFields, ___OffsetOfInstanceIDInCPlusPlusObject_1)); }
	inline int32_t get_OffsetOfInstanceIDInCPlusPlusObject_1() const { return ___OffsetOfInstanceIDInCPlusPlusObject_1; }
	inline int32_t* get_address_of_OffsetOfInstanceIDInCPlusPlusObject_1() { return &___OffsetOfInstanceIDInCPlusPlusObject_1; }
	inline void set_OffsetOfInstanceIDInCPlusPlusObject_1(int32_t value)
	{
		___OffsetOfInstanceIDInCPlusPlusObject_1 = value;
	}
};

// Native definition for P/Invoke marshalling of UnityEngine.Object
struct Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_marshaled_pinvoke
{
	intptr_t ___m_CachedPtr_0;
};
// Native definition for COM marshalling of UnityEngine.Object
struct Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_marshaled_com
{
	intptr_t ___m_CachedPtr_0;
};

// Valve.VR.CVRCompositor
struct CVRCompositor_t0316216254FC5BC5562B6EFA273B82DDB77BB282  : public RuntimeObject
{
public:
	// Valve.VR.IVRCompositor Valve.VR.CVRCompositor::FnTable
	IVRCompositor_tD41C86F469DDC1A52B62E22B3B31DD5FFE5EB890  ___FnTable_0;

public:
	inline static int32_t get_offset_of_FnTable_0() { return static_cast<int32_t>(offsetof(CVRCompositor_t0316216254FC5BC5562B6EFA273B82DDB77BB282, ___FnTable_0)); }
	inline IVRCompositor_tD41C86F469DDC1A52B62E22B3B31DD5FFE5EB890  get_FnTable_0() const { return ___FnTable_0; }
	inline IVRCompositor_tD41C86F469DDC1A52B62E22B3B31DD5FFE5EB890 * get_address_of_FnTable_0() { return &___FnTable_0; }
	inline void set_FnTable_0(IVRCompositor_tD41C86F469DDC1A52B62E22B3B31DD5FFE5EB890  value)
	{
		___FnTable_0 = value;
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___SetTrackingSpace_0), (void*)NULL);
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___GetTrackingSpace_1), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___WaitGetPoses_2), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___GetLastPoses_3), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___GetLastPoseForTrackedDeviceIndex_4), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___Submit_5), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___ClearLastSubmittedFrame_6), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___PostPresentHandoff_7), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___GetFrameTiming_8), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___GetFrameTimings_9), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___GetFrameTimeRemaining_10), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___GetCumulativeStats_11), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___FadeToColor_12), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___GetCurrentFadeColor_13), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___FadeGrid_14), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___GetCurrentGridAlpha_15), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___SetSkyboxOverride_16), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___ClearSkyboxOverride_17), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___CompositorBringToFront_18), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___CompositorGoToBack_19), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___CompositorQuit_20), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___IsFullscreen_21), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___GetCurrentSceneFocusProcess_22), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___GetLastFrameRenderer_23), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___CanRenderScene_24), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___ShowMirrorWindow_25), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___HideMirrorWindow_26), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___IsMirrorWindowVisible_27), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___CompositorDumpImages_28), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___ShouldAppRenderWithLowResources_29), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___ForceInterleavedReprojectionOn_30), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___ForceReconnectProcess_31), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___SuspendRendering_32), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___GetMirrorTextureD3D11_33), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___ReleaseMirrorTextureD3D11_34), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___GetMirrorTextureGL_35), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___ReleaseSharedGLTexture_36), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___LockGLSharedTextureForAccess_37), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___UnlockGLSharedTextureForAccess_38), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___GetVulkanInstanceExtensionsRequired_39), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___GetVulkanDeviceExtensionsRequired_40), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___SetExplicitTimingMode_41), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___SubmitExplicitTimingData_42), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___IsMotionSmoothingEnabled_43), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___IsMotionSmoothingSupported_44), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___IsCurrentSceneFocusAppLoading_45), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___SetStageOverride_Async_46), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___ClearStageOverride_47), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___GetCompositorBenchmarkResults_48), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___GetLastPosePredictionIDs_49), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___GetPosesForFrame_50), (void*)NULL);
		#endif
	}
};


// Valve.VR.CVRInput
struct CVRInput_t8458E224B9D7EFD4A5B102EAA06F8F365A25A53A  : public RuntimeObject
{
public:
	// Valve.VR.IVRInput Valve.VR.CVRInput::FnTable
	IVRInput_t4B3561EE68C72A22D3EBAA3858E3B5E34B841D5F  ___FnTable_0;

public:
	inline static int32_t get_offset_of_FnTable_0() { return static_cast<int32_t>(offsetof(CVRInput_t8458E224B9D7EFD4A5B102EAA06F8F365A25A53A, ___FnTable_0)); }
	inline IVRInput_t4B3561EE68C72A22D3EBAA3858E3B5E34B841D5F  get_FnTable_0() const { return ___FnTable_0; }
	inline IVRInput_t4B3561EE68C72A22D3EBAA3858E3B5E34B841D5F * get_address_of_FnTable_0() { return &___FnTable_0; }
	inline void set_FnTable_0(IVRInput_t4B3561EE68C72A22D3EBAA3858E3B5E34B841D5F  value)
	{
		___FnTable_0 = value;
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___SetActionManifestPath_0), (void*)NULL);
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___GetActionSetHandle_1), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___GetActionHandle_2), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___GetInputSourceHandle_3), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___UpdateActionState_4), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___GetDigitalActionData_5), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___GetAnalogActionData_6), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___GetPoseActionDataRelativeToNow_7), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___GetPoseActionDataForNextFrame_8), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___GetSkeletalActionData_9), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___GetDominantHand_10), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___SetDominantHand_11), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___GetBoneCount_12), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___GetBoneHierarchy_13), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___GetBoneName_14), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___GetSkeletalReferenceTransforms_15), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___GetSkeletalTrackingLevel_16), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___GetSkeletalBoneData_17), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___GetSkeletalSummaryData_18), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___GetSkeletalBoneDataCompressed_19), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___DecompressSkeletalBoneData_20), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___TriggerHapticVibrationAction_21), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___GetActionOrigins_22), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___GetOriginLocalizedName_23), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___GetOriginTrackedDeviceInfo_24), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___GetActionBindingInfo_25), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___ShowActionOrigins_26), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___ShowBindingsForActionSet_27), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___GetComponentStateForBinding_28), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___IsUsingLegacyInput_29), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___OpenBindingUI_30), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___GetBindingVariant_31), (void*)NULL);
		#endif
	}
};


// Valve.VR.ETextureType
struct ETextureType_tFB3FFB53CC6687B5BC457855326160A44DA3B925 
{
public:
	// System.Int32 Valve.VR.ETextureType::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(ETextureType_tFB3FFB53CC6687B5BC457855326160A44DA3B925, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Valve.VR.ETrackingResult
struct ETrackingResult_tEF8D233780E244B87AFAECDB107A82C77C666E9D 
{
public:
	// System.Int32 Valve.VR.ETrackingResult::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(ETrackingResult_tEF8D233780E244B87AFAECDB107A82C77C666E9D, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Valve.VR.ETrackingUniverseOrigin
struct ETrackingUniverseOrigin_t643FEB471D1118F0DEFB499BBC70E0B8682C4469 
{
public:
	// System.Int32 Valve.VR.ETrackingUniverseOrigin::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(ETrackingUniverseOrigin_t643FEB471D1118F0DEFB499BBC70E0B8682C4469, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Valve.VR.EVRInputError
struct EVRInputError_tE4C895A0D1F18C0024F5C180FF3962B056DA8A71 
{
public:
	// System.Int32 Valve.VR.EVRInputError::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(EVRInputError_tE4C895A0D1F18C0024F5C180FF3962B056DA8A71, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Valve.VR.EVRInputStringBits
struct EVRInputStringBits_tA4806525AFF709667D865C9A7D4E6922B9ED0F33 
{
public:
	// System.Int32 Valve.VR.EVRInputStringBits::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(EVRInputStringBits_tA4806525AFF709667D865C9A7D4E6922B9ED0F33, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Valve.VR.EVRSkeletalMotionRange
struct EVRSkeletalMotionRange_tEEC0E65399E78BF5E94D2956D90ACD1C01C24BC2 
{
public:
	// System.Int32 Valve.VR.EVRSkeletalMotionRange::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(EVRSkeletalMotionRange_tEEC0E65399E78BF5E94D2956D90ACD1C01C24BC2, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Valve.VR.EVRSkeletalReferencePose
struct EVRSkeletalReferencePose_t73388CDE446B767A79DEA4854DF95068BB2BB71A 
{
public:
	// System.Int32 Valve.VR.EVRSkeletalReferencePose::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(EVRSkeletalReferencePose_t73388CDE446B767A79DEA4854DF95068BB2BB71A, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Valve.VR.EVRSkeletalTrackingLevel
struct EVRSkeletalTrackingLevel_t8DB0D25E26DEB70E27D898139F5F812062706D2D 
{
public:
	// System.Int32 Valve.VR.EVRSkeletalTrackingLevel::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(EVRSkeletalTrackingLevel_t8DB0D25E26DEB70E27D898139F5F812062706D2D, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Valve.VR.EVRSkeletalTransformSpace
struct EVRSkeletalTransformSpace_t1AADDF1D14B44EF3471DEC638167692B06EBF6AD 
{
public:
	// System.Int32 Valve.VR.EVRSkeletalTransformSpace::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(EVRSkeletalTransformSpace_t1AADDF1D14B44EF3471DEC638167692B06EBF6AD, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Valve.VR.EVRSummaryType
struct EVRSummaryType_t7571B18C4451E18D0143B9CF2710B53087556509 
{
public:
	// System.Int32 Valve.VR.EVRSummaryType::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(EVRSummaryType_t7571B18C4451E18D0143B9CF2710B53087556509, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Valve.VR.SteamVR/InitializedStates
struct InitializedStates_t2D84949EC0DFFB6C94ACBDA93736E7DEB8D4B9F9 
{
public:
	// System.Int32 Valve.VR.SteamVR/InitializedStates::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(InitializedStates_t2D84949EC0DFFB6C94ACBDA93736E7DEB8D4B9F9, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Valve.VR.SteamVR_ActionDirections
struct SteamVR_ActionDirections_tC7760C9A471565840E2F1D11A61E44735571D8B1 
{
public:
	// System.Int32 Valve.VR.SteamVR_ActionDirections::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(SteamVR_ActionDirections_tC7760C9A471565840E2F1D11A61E44735571D8B1, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Valve.VR.SteamVR_Action_In`2<Valve.VR.SteamVR_Action_Boolean_Source_Map,Valve.VR.SteamVR_Action_Boolean_Source>
struct SteamVR_Action_In_2_t2F8E3210A305FC855ECD46AD48FA406BA177FAA9  : public SteamVR_Action_2_tEF35EA9CF866C4CE33A6702A6D71E8DDE8081AC8
{
public:

public:
};


// Valve.VR.SteamVR_Action_In`2<Valve.VR.SteamVR_Action_Pose_Source_Map`1<Valve.VR.SteamVR_Action_Pose_Source>,Valve.VR.SteamVR_Action_Pose_Source>
struct SteamVR_Action_In_2_t2C5C166B83FDF97166A2B5B007C2A5742BBE2199  : public SteamVR_Action_2_tDED2DB9236CA9398BCDCB18DB8DDA3DB1D98FBAC
{
public:

public:
};


// Valve.VR.SteamVR_Action_In`2<Valve.VR.SteamVR_Action_Single_Source_Map,Valve.VR.SteamVR_Action_Single_Source>
struct SteamVR_Action_In_2_t518EEA73CD833B39D557DDB94804313377E0FE02  : public SteamVR_Action_2_t6C5A72BCD96947140E949B195C2578D4AE46E170
{
public:

public:
};


// Valve.VR.SteamVR_Action_In`2<Valve.VR.SteamVR_Action_Skeleton_Source_Map,Valve.VR.SteamVR_Action_Skeleton_Source>
struct SteamVR_Action_In_2_t648DCC49A164ED0184532F0961391833D01917D6  : public SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D
{
public:

public:
};


// Valve.VR.SteamVR_Action_In`2<Valve.VR.SteamVR_Action_Vector2_Source_Map,Valve.VR.SteamVR_Action_Vector2_Source>
struct SteamVR_Action_In_2_t4260173E99094920C69878272DE55CE93D5D5A9C  : public SteamVR_Action_2_t83C041411A0CA61D62EE3A4F510D83333D049258
{
public:

public:
};


// Valve.VR.SteamVR_Input_Sources
struct SteamVR_Input_Sources_tCE41AA589FB3B9516BDE0DFABDCB4AAEA29528F7 
{
public:
	// System.Int32 Valve.VR.SteamVR_Input_Sources::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(SteamVR_Input_Sources_tCE41AA589FB3B9516BDE0DFABDCB4AAEA29528F7, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Valve.VR.SteamVR_Skeleton_FingerIndexEnum
struct SteamVR_Skeleton_FingerIndexEnum_t94461F3230EE21117A33A97E423D48FDF7CBF56F 
{
public:
	// System.Int32 Valve.VR.SteamVR_Skeleton_FingerIndexEnum::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(SteamVR_Skeleton_FingerIndexEnum_t94461F3230EE21117A33A97E423D48FDF7CBF56F, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Valve.VR.SteamVR_Skeleton_FingerSplayIndexEnum
struct SteamVR_Skeleton_FingerSplayIndexEnum_t1117AEF9CE95E514D70A171E86825E39E04D7578 
{
public:
	// System.Int32 Valve.VR.SteamVR_Skeleton_FingerSplayIndexEnum::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(SteamVR_Skeleton_FingerSplayIndexEnum_t1117AEF9CE95E514D70A171E86825E39E04D7578, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Valve.VR.VRBoneTransform_t
struct VRBoneTransform_t_tB0AFC02B2EB00C94AA2AB8D517379266A80385AC 
{
public:
	// Valve.VR.HmdVector4_t Valve.VR.VRBoneTransform_t::position
	HmdVector4_t_tBA2A305DD2E705FAAC9CC5D2FD13B64202A381F3  ___position_0;
	// Valve.VR.HmdQuaternionf_t Valve.VR.VRBoneTransform_t::orientation
	HmdQuaternionf_t_tCE0ACBA93E70AA544844617F487F6A634A9E4A70  ___orientation_1;

public:
	inline static int32_t get_offset_of_position_0() { return static_cast<int32_t>(offsetof(VRBoneTransform_t_tB0AFC02B2EB00C94AA2AB8D517379266A80385AC, ___position_0)); }
	inline HmdVector4_t_tBA2A305DD2E705FAAC9CC5D2FD13B64202A381F3  get_position_0() const { return ___position_0; }
	inline HmdVector4_t_tBA2A305DD2E705FAAC9CC5D2FD13B64202A381F3 * get_address_of_position_0() { return &___position_0; }
	inline void set_position_0(HmdVector4_t_tBA2A305DD2E705FAAC9CC5D2FD13B64202A381F3  value)
	{
		___position_0 = value;
	}

	inline static int32_t get_offset_of_orientation_1() { return static_cast<int32_t>(offsetof(VRBoneTransform_t_tB0AFC02B2EB00C94AA2AB8D517379266A80385AC, ___orientation_1)); }
	inline HmdQuaternionf_t_tCE0ACBA93E70AA544844617F487F6A634A9E4A70  get_orientation_1() const { return ___orientation_1; }
	inline HmdQuaternionf_t_tCE0ACBA93E70AA544844617F487F6A634A9E4A70 * get_address_of_orientation_1() { return &___orientation_1; }
	inline void set_orientation_1(HmdQuaternionf_t_tCE0ACBA93E70AA544844617F487F6A634A9E4A70  value)
	{
		___orientation_1 = value;
	}
};


// System.MulticastDelegate
struct MulticastDelegate_t  : public Delegate_t
{
public:
	// System.Delegate[] System.MulticastDelegate::delegates
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* ___delegates_11;

public:
	inline static int32_t get_offset_of_delegates_11() { return static_cast<int32_t>(offsetof(MulticastDelegate_t, ___delegates_11)); }
	inline DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* get_delegates_11() const { return ___delegates_11; }
	inline DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86** get_address_of_delegates_11() { return &___delegates_11; }
	inline void set_delegates_11(DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* value)
	{
		___delegates_11 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___delegates_11), (void*)value);
	}
};

// Native definition for P/Invoke marshalling of System.MulticastDelegate
struct MulticastDelegate_t_marshaled_pinvoke : public Delegate_t_marshaled_pinvoke
{
	Delegate_t_marshaled_pinvoke** ___delegates_11;
};
// Native definition for COM marshalling of System.MulticastDelegate
struct MulticastDelegate_t_marshaled_com : public Delegate_t_marshaled_com
{
	Delegate_t_marshaled_com** ___delegates_11;
};

// System.Type
struct Type_t  : public MemberInfo_t
{
public:
	// System.RuntimeTypeHandle System.Type::_impl
	RuntimeTypeHandle_t7B542280A22F0EC4EAC2061C29178845847A8B2D  ____impl_9;

public:
	inline static int32_t get_offset_of__impl_9() { return static_cast<int32_t>(offsetof(Type_t, ____impl_9)); }
	inline RuntimeTypeHandle_t7B542280A22F0EC4EAC2061C29178845847A8B2D  get__impl_9() const { return ____impl_9; }
	inline RuntimeTypeHandle_t7B542280A22F0EC4EAC2061C29178845847A8B2D * get_address_of__impl_9() { return &____impl_9; }
	inline void set__impl_9(RuntimeTypeHandle_t7B542280A22F0EC4EAC2061C29178845847A8B2D  value)
	{
		____impl_9 = value;
	}
};

struct Type_t_StaticFields
{
public:
	// System.Reflection.MemberFilter System.Type::FilterAttribute
	MemberFilter_t25C1BD92C42BE94426E300787C13C452CB89B381 * ___FilterAttribute_0;
	// System.Reflection.MemberFilter System.Type::FilterName
	MemberFilter_t25C1BD92C42BE94426E300787C13C452CB89B381 * ___FilterName_1;
	// System.Reflection.MemberFilter System.Type::FilterNameIgnoreCase
	MemberFilter_t25C1BD92C42BE94426E300787C13C452CB89B381 * ___FilterNameIgnoreCase_2;
	// System.Object System.Type::Missing
	RuntimeObject * ___Missing_3;
	// System.Char System.Type::Delimiter
	Il2CppChar ___Delimiter_4;
	// System.Type[] System.Type::EmptyTypes
	TypeU5BU5D_t7FE623A666B49176DE123306221193E888A12F5F* ___EmptyTypes_5;
	// System.Reflection.Binder System.Type::defaultBinder
	Binder_t4D5CB06963501D32847C057B57157D6DC49CA759 * ___defaultBinder_6;

public:
	inline static int32_t get_offset_of_FilterAttribute_0() { return static_cast<int32_t>(offsetof(Type_t_StaticFields, ___FilterAttribute_0)); }
	inline MemberFilter_t25C1BD92C42BE94426E300787C13C452CB89B381 * get_FilterAttribute_0() const { return ___FilterAttribute_0; }
	inline MemberFilter_t25C1BD92C42BE94426E300787C13C452CB89B381 ** get_address_of_FilterAttribute_0() { return &___FilterAttribute_0; }
	inline void set_FilterAttribute_0(MemberFilter_t25C1BD92C42BE94426E300787C13C452CB89B381 * value)
	{
		___FilterAttribute_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___FilterAttribute_0), (void*)value);
	}

	inline static int32_t get_offset_of_FilterName_1() { return static_cast<int32_t>(offsetof(Type_t_StaticFields, ___FilterName_1)); }
	inline MemberFilter_t25C1BD92C42BE94426E300787C13C452CB89B381 * get_FilterName_1() const { return ___FilterName_1; }
	inline MemberFilter_t25C1BD92C42BE94426E300787C13C452CB89B381 ** get_address_of_FilterName_1() { return &___FilterName_1; }
	inline void set_FilterName_1(MemberFilter_t25C1BD92C42BE94426E300787C13C452CB89B381 * value)
	{
		___FilterName_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___FilterName_1), (void*)value);
	}

	inline static int32_t get_offset_of_FilterNameIgnoreCase_2() { return static_cast<int32_t>(offsetof(Type_t_StaticFields, ___FilterNameIgnoreCase_2)); }
	inline MemberFilter_t25C1BD92C42BE94426E300787C13C452CB89B381 * get_FilterNameIgnoreCase_2() const { return ___FilterNameIgnoreCase_2; }
	inline MemberFilter_t25C1BD92C42BE94426E300787C13C452CB89B381 ** get_address_of_FilterNameIgnoreCase_2() { return &___FilterNameIgnoreCase_2; }
	inline void set_FilterNameIgnoreCase_2(MemberFilter_t25C1BD92C42BE94426E300787C13C452CB89B381 * value)
	{
		___FilterNameIgnoreCase_2 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___FilterNameIgnoreCase_2), (void*)value);
	}

	inline static int32_t get_offset_of_Missing_3() { return static_cast<int32_t>(offsetof(Type_t_StaticFields, ___Missing_3)); }
	inline RuntimeObject * get_Missing_3() const { return ___Missing_3; }
	inline RuntimeObject ** get_address_of_Missing_3() { return &___Missing_3; }
	inline void set_Missing_3(RuntimeObject * value)
	{
		___Missing_3 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___Missing_3), (void*)value);
	}

	inline static int32_t get_offset_of_Delimiter_4() { return static_cast<int32_t>(offsetof(Type_t_StaticFields, ___Delimiter_4)); }
	inline Il2CppChar get_Delimiter_4() const { return ___Delimiter_4; }
	inline Il2CppChar* get_address_of_Delimiter_4() { return &___Delimiter_4; }
	inline void set_Delimiter_4(Il2CppChar value)
	{
		___Delimiter_4 = value;
	}

	inline static int32_t get_offset_of_EmptyTypes_5() { return static_cast<int32_t>(offsetof(Type_t_StaticFields, ___EmptyTypes_5)); }
	inline TypeU5BU5D_t7FE623A666B49176DE123306221193E888A12F5F* get_EmptyTypes_5() const { return ___EmptyTypes_5; }
	inline TypeU5BU5D_t7FE623A666B49176DE123306221193E888A12F5F** get_address_of_EmptyTypes_5() { return &___EmptyTypes_5; }
	inline void set_EmptyTypes_5(TypeU5BU5D_t7FE623A666B49176DE123306221193E888A12F5F* value)
	{
		___EmptyTypes_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___EmptyTypes_5), (void*)value);
	}

	inline static int32_t get_offset_of_defaultBinder_6() { return static_cast<int32_t>(offsetof(Type_t_StaticFields, ___defaultBinder_6)); }
	inline Binder_t4D5CB06963501D32847C057B57157D6DC49CA759 * get_defaultBinder_6() const { return ___defaultBinder_6; }
	inline Binder_t4D5CB06963501D32847C057B57157D6DC49CA759 ** get_address_of_defaultBinder_6() { return &___defaultBinder_6; }
	inline void set_defaultBinder_6(Binder_t4D5CB06963501D32847C057B57157D6DC49CA759 * value)
	{
		___defaultBinder_6 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___defaultBinder_6), (void*)value);
	}
};


// UnityEngine.Component
struct Component_t05064EF382ABCAF4B8C94F8A350EA85184C26621  : public Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0
{
public:

public:
};


// Valve.VR.SteamVR
struct SteamVR_tE14648C0E73A16927B96F72915B425561B0D057F  : public RuntimeObject
{
public:
	// Valve.VR.CVRSystem Valve.VR.SteamVR::<hmd>k__BackingField
	CVRSystem_t1030A1811964E8FA2273D18C6E87C90ABF85624A * ___U3ChmdU3Ek__BackingField_4;
	// Valve.VR.CVRCompositor Valve.VR.SteamVR::<compositor>k__BackingField
	CVRCompositor_t0316216254FC5BC5562B6EFA273B82DDB77BB282 * ___U3CcompositorU3Ek__BackingField_5;
	// Valve.VR.CVROverlay Valve.VR.SteamVR::<overlay>k__BackingField
	CVROverlay_tB2A34B1ABB5A269D91C8B5E5BC9D73C6FF6F8C97 * ___U3CoverlayU3Ek__BackingField_6;
	// System.Single Valve.VR.SteamVR::<sceneWidth>k__BackingField
	float ___U3CsceneWidthU3Ek__BackingField_11;
	// System.Single Valve.VR.SteamVR::<sceneHeight>k__BackingField
	float ___U3CsceneHeightU3Ek__BackingField_12;
	// System.Single Valve.VR.SteamVR::<aspect>k__BackingField
	float ___U3CaspectU3Ek__BackingField_13;
	// System.Single Valve.VR.SteamVR::<fieldOfView>k__BackingField
	float ___U3CfieldOfViewU3Ek__BackingField_14;
	// UnityEngine.Vector2 Valve.VR.SteamVR::<tanHalfFov>k__BackingField
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___U3CtanHalfFovU3Ek__BackingField_15;
	// Valve.VR.VRTextureBounds_t[] Valve.VR.SteamVR::<textureBounds>k__BackingField
	VRTextureBounds_tU5BU5D_t66A6DF52C6400F7EED32DBE6C22BDEF5968E361A* ___U3CtextureBoundsU3Ek__BackingField_16;
	// SteamVR_Utils/RigidTransform[] Valve.VR.SteamVR::<eyes>k__BackingField
	RigidTransformU5BU5D_tC98EB3576009E5D825D0D43671A65D32A2449ECC* ___U3CeyesU3Ek__BackingField_17;
	// Valve.VR.ETextureType Valve.VR.SteamVR::textureType
	int32_t ___textureType_18;

public:
	inline static int32_t get_offset_of_U3ChmdU3Ek__BackingField_4() { return static_cast<int32_t>(offsetof(SteamVR_tE14648C0E73A16927B96F72915B425561B0D057F, ___U3ChmdU3Ek__BackingField_4)); }
	inline CVRSystem_t1030A1811964E8FA2273D18C6E87C90ABF85624A * get_U3ChmdU3Ek__BackingField_4() const { return ___U3ChmdU3Ek__BackingField_4; }
	inline CVRSystem_t1030A1811964E8FA2273D18C6E87C90ABF85624A ** get_address_of_U3ChmdU3Ek__BackingField_4() { return &___U3ChmdU3Ek__BackingField_4; }
	inline void set_U3ChmdU3Ek__BackingField_4(CVRSystem_t1030A1811964E8FA2273D18C6E87C90ABF85624A * value)
	{
		___U3ChmdU3Ek__BackingField_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3ChmdU3Ek__BackingField_4), (void*)value);
	}

	inline static int32_t get_offset_of_U3CcompositorU3Ek__BackingField_5() { return static_cast<int32_t>(offsetof(SteamVR_tE14648C0E73A16927B96F72915B425561B0D057F, ___U3CcompositorU3Ek__BackingField_5)); }
	inline CVRCompositor_t0316216254FC5BC5562B6EFA273B82DDB77BB282 * get_U3CcompositorU3Ek__BackingField_5() const { return ___U3CcompositorU3Ek__BackingField_5; }
	inline CVRCompositor_t0316216254FC5BC5562B6EFA273B82DDB77BB282 ** get_address_of_U3CcompositorU3Ek__BackingField_5() { return &___U3CcompositorU3Ek__BackingField_5; }
	inline void set_U3CcompositorU3Ek__BackingField_5(CVRCompositor_t0316216254FC5BC5562B6EFA273B82DDB77BB282 * value)
	{
		___U3CcompositorU3Ek__BackingField_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CcompositorU3Ek__BackingField_5), (void*)value);
	}

	inline static int32_t get_offset_of_U3CoverlayU3Ek__BackingField_6() { return static_cast<int32_t>(offsetof(SteamVR_tE14648C0E73A16927B96F72915B425561B0D057F, ___U3CoverlayU3Ek__BackingField_6)); }
	inline CVROverlay_tB2A34B1ABB5A269D91C8B5E5BC9D73C6FF6F8C97 * get_U3CoverlayU3Ek__BackingField_6() const { return ___U3CoverlayU3Ek__BackingField_6; }
	inline CVROverlay_tB2A34B1ABB5A269D91C8B5E5BC9D73C6FF6F8C97 ** get_address_of_U3CoverlayU3Ek__BackingField_6() { return &___U3CoverlayU3Ek__BackingField_6; }
	inline void set_U3CoverlayU3Ek__BackingField_6(CVROverlay_tB2A34B1ABB5A269D91C8B5E5BC9D73C6FF6F8C97 * value)
	{
		___U3CoverlayU3Ek__BackingField_6 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CoverlayU3Ek__BackingField_6), (void*)value);
	}

	inline static int32_t get_offset_of_U3CsceneWidthU3Ek__BackingField_11() { return static_cast<int32_t>(offsetof(SteamVR_tE14648C0E73A16927B96F72915B425561B0D057F, ___U3CsceneWidthU3Ek__BackingField_11)); }
	inline float get_U3CsceneWidthU3Ek__BackingField_11() const { return ___U3CsceneWidthU3Ek__BackingField_11; }
	inline float* get_address_of_U3CsceneWidthU3Ek__BackingField_11() { return &___U3CsceneWidthU3Ek__BackingField_11; }
	inline void set_U3CsceneWidthU3Ek__BackingField_11(float value)
	{
		___U3CsceneWidthU3Ek__BackingField_11 = value;
	}

	inline static int32_t get_offset_of_U3CsceneHeightU3Ek__BackingField_12() { return static_cast<int32_t>(offsetof(SteamVR_tE14648C0E73A16927B96F72915B425561B0D057F, ___U3CsceneHeightU3Ek__BackingField_12)); }
	inline float get_U3CsceneHeightU3Ek__BackingField_12() const { return ___U3CsceneHeightU3Ek__BackingField_12; }
	inline float* get_address_of_U3CsceneHeightU3Ek__BackingField_12() { return &___U3CsceneHeightU3Ek__BackingField_12; }
	inline void set_U3CsceneHeightU3Ek__BackingField_12(float value)
	{
		___U3CsceneHeightU3Ek__BackingField_12 = value;
	}

	inline static int32_t get_offset_of_U3CaspectU3Ek__BackingField_13() { return static_cast<int32_t>(offsetof(SteamVR_tE14648C0E73A16927B96F72915B425561B0D057F, ___U3CaspectU3Ek__BackingField_13)); }
	inline float get_U3CaspectU3Ek__BackingField_13() const { return ___U3CaspectU3Ek__BackingField_13; }
	inline float* get_address_of_U3CaspectU3Ek__BackingField_13() { return &___U3CaspectU3Ek__BackingField_13; }
	inline void set_U3CaspectU3Ek__BackingField_13(float value)
	{
		___U3CaspectU3Ek__BackingField_13 = value;
	}

	inline static int32_t get_offset_of_U3CfieldOfViewU3Ek__BackingField_14() { return static_cast<int32_t>(offsetof(SteamVR_tE14648C0E73A16927B96F72915B425561B0D057F, ___U3CfieldOfViewU3Ek__BackingField_14)); }
	inline float get_U3CfieldOfViewU3Ek__BackingField_14() const { return ___U3CfieldOfViewU3Ek__BackingField_14; }
	inline float* get_address_of_U3CfieldOfViewU3Ek__BackingField_14() { return &___U3CfieldOfViewU3Ek__BackingField_14; }
	inline void set_U3CfieldOfViewU3Ek__BackingField_14(float value)
	{
		___U3CfieldOfViewU3Ek__BackingField_14 = value;
	}

	inline static int32_t get_offset_of_U3CtanHalfFovU3Ek__BackingField_15() { return static_cast<int32_t>(offsetof(SteamVR_tE14648C0E73A16927B96F72915B425561B0D057F, ___U3CtanHalfFovU3Ek__BackingField_15)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_U3CtanHalfFovU3Ek__BackingField_15() const { return ___U3CtanHalfFovU3Ek__BackingField_15; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_U3CtanHalfFovU3Ek__BackingField_15() { return &___U3CtanHalfFovU3Ek__BackingField_15; }
	inline void set_U3CtanHalfFovU3Ek__BackingField_15(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___U3CtanHalfFovU3Ek__BackingField_15 = value;
	}

	inline static int32_t get_offset_of_U3CtextureBoundsU3Ek__BackingField_16() { return static_cast<int32_t>(offsetof(SteamVR_tE14648C0E73A16927B96F72915B425561B0D057F, ___U3CtextureBoundsU3Ek__BackingField_16)); }
	inline VRTextureBounds_tU5BU5D_t66A6DF52C6400F7EED32DBE6C22BDEF5968E361A* get_U3CtextureBoundsU3Ek__BackingField_16() const { return ___U3CtextureBoundsU3Ek__BackingField_16; }
	inline VRTextureBounds_tU5BU5D_t66A6DF52C6400F7EED32DBE6C22BDEF5968E361A** get_address_of_U3CtextureBoundsU3Ek__BackingField_16() { return &___U3CtextureBoundsU3Ek__BackingField_16; }
	inline void set_U3CtextureBoundsU3Ek__BackingField_16(VRTextureBounds_tU5BU5D_t66A6DF52C6400F7EED32DBE6C22BDEF5968E361A* value)
	{
		___U3CtextureBoundsU3Ek__BackingField_16 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CtextureBoundsU3Ek__BackingField_16), (void*)value);
	}

	inline static int32_t get_offset_of_U3CeyesU3Ek__BackingField_17() { return static_cast<int32_t>(offsetof(SteamVR_tE14648C0E73A16927B96F72915B425561B0D057F, ___U3CeyesU3Ek__BackingField_17)); }
	inline RigidTransformU5BU5D_tC98EB3576009E5D825D0D43671A65D32A2449ECC* get_U3CeyesU3Ek__BackingField_17() const { return ___U3CeyesU3Ek__BackingField_17; }
	inline RigidTransformU5BU5D_tC98EB3576009E5D825D0D43671A65D32A2449ECC** get_address_of_U3CeyesU3Ek__BackingField_17() { return &___U3CeyesU3Ek__BackingField_17; }
	inline void set_U3CeyesU3Ek__BackingField_17(RigidTransformU5BU5D_tC98EB3576009E5D825D0D43671A65D32A2449ECC* value)
	{
		___U3CeyesU3Ek__BackingField_17 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CeyesU3Ek__BackingField_17), (void*)value);
	}

	inline static int32_t get_offset_of_textureType_18() { return static_cast<int32_t>(offsetof(SteamVR_tE14648C0E73A16927B96F72915B425561B0D057F, ___textureType_18)); }
	inline int32_t get_textureType_18() const { return ___textureType_18; }
	inline int32_t* get_address_of_textureType_18() { return &___textureType_18; }
	inline void set_textureType_18(int32_t value)
	{
		___textureType_18 = value;
	}
};

struct SteamVR_tE14648C0E73A16927B96F72915B425561B0D057F_StaticFields
{
public:
	// System.Boolean Valve.VR.SteamVR::_enabled
	bool ____enabled_0;
	// Valve.VR.SteamVR Valve.VR.SteamVR::_instance
	SteamVR_tE14648C0E73A16927B96F72915B425561B0D057F * ____instance_1;
	// Valve.VR.SteamVR/InitializedStates Valve.VR.SteamVR::initializedState
	int32_t ___initializedState_2;
	// Valve.VR.SteamVR_Settings Valve.VR.SteamVR::<settings>k__BackingField
	SteamVR_Settings_t64E5B6E42EEDC6ACB51C476970EF3AA6270E555C * ___U3CsettingsU3Ek__BackingField_3;
	// System.Boolean Valve.VR.SteamVR::<initializing>k__BackingField
	bool ___U3CinitializingU3Ek__BackingField_7;
	// System.Boolean Valve.VR.SteamVR::<calibrating>k__BackingField
	bool ___U3CcalibratingU3Ek__BackingField_8;
	// System.Boolean Valve.VR.SteamVR::<outOfRange>k__BackingField
	bool ___U3CoutOfRangeU3Ek__BackingField_9;
	// System.Boolean[] Valve.VR.SteamVR::connected
	BooleanU5BU5D_t192C7579715690E25BD5EFED47F3E0FC9DCB2040* ___connected_10;
	// System.Boolean Valve.VR.SteamVR::runningTemporarySession
	bool ___runningTemporarySession_19;

public:
	inline static int32_t get_offset_of__enabled_0() { return static_cast<int32_t>(offsetof(SteamVR_tE14648C0E73A16927B96F72915B425561B0D057F_StaticFields, ____enabled_0)); }
	inline bool get__enabled_0() const { return ____enabled_0; }
	inline bool* get_address_of__enabled_0() { return &____enabled_0; }
	inline void set__enabled_0(bool value)
	{
		____enabled_0 = value;
	}

	inline static int32_t get_offset_of__instance_1() { return static_cast<int32_t>(offsetof(SteamVR_tE14648C0E73A16927B96F72915B425561B0D057F_StaticFields, ____instance_1)); }
	inline SteamVR_tE14648C0E73A16927B96F72915B425561B0D057F * get__instance_1() const { return ____instance_1; }
	inline SteamVR_tE14648C0E73A16927B96F72915B425561B0D057F ** get_address_of__instance_1() { return &____instance_1; }
	inline void set__instance_1(SteamVR_tE14648C0E73A16927B96F72915B425561B0D057F * value)
	{
		____instance_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____instance_1), (void*)value);
	}

	inline static int32_t get_offset_of_initializedState_2() { return static_cast<int32_t>(offsetof(SteamVR_tE14648C0E73A16927B96F72915B425561B0D057F_StaticFields, ___initializedState_2)); }
	inline int32_t get_initializedState_2() const { return ___initializedState_2; }
	inline int32_t* get_address_of_initializedState_2() { return &___initializedState_2; }
	inline void set_initializedState_2(int32_t value)
	{
		___initializedState_2 = value;
	}

	inline static int32_t get_offset_of_U3CsettingsU3Ek__BackingField_3() { return static_cast<int32_t>(offsetof(SteamVR_tE14648C0E73A16927B96F72915B425561B0D057F_StaticFields, ___U3CsettingsU3Ek__BackingField_3)); }
	inline SteamVR_Settings_t64E5B6E42EEDC6ACB51C476970EF3AA6270E555C * get_U3CsettingsU3Ek__BackingField_3() const { return ___U3CsettingsU3Ek__BackingField_3; }
	inline SteamVR_Settings_t64E5B6E42EEDC6ACB51C476970EF3AA6270E555C ** get_address_of_U3CsettingsU3Ek__BackingField_3() { return &___U3CsettingsU3Ek__BackingField_3; }
	inline void set_U3CsettingsU3Ek__BackingField_3(SteamVR_Settings_t64E5B6E42EEDC6ACB51C476970EF3AA6270E555C * value)
	{
		___U3CsettingsU3Ek__BackingField_3 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CsettingsU3Ek__BackingField_3), (void*)value);
	}

	inline static int32_t get_offset_of_U3CinitializingU3Ek__BackingField_7() { return static_cast<int32_t>(offsetof(SteamVR_tE14648C0E73A16927B96F72915B425561B0D057F_StaticFields, ___U3CinitializingU3Ek__BackingField_7)); }
	inline bool get_U3CinitializingU3Ek__BackingField_7() const { return ___U3CinitializingU3Ek__BackingField_7; }
	inline bool* get_address_of_U3CinitializingU3Ek__BackingField_7() { return &___U3CinitializingU3Ek__BackingField_7; }
	inline void set_U3CinitializingU3Ek__BackingField_7(bool value)
	{
		___U3CinitializingU3Ek__BackingField_7 = value;
	}

	inline static int32_t get_offset_of_U3CcalibratingU3Ek__BackingField_8() { return static_cast<int32_t>(offsetof(SteamVR_tE14648C0E73A16927B96F72915B425561B0D057F_StaticFields, ___U3CcalibratingU3Ek__BackingField_8)); }
	inline bool get_U3CcalibratingU3Ek__BackingField_8() const { return ___U3CcalibratingU3Ek__BackingField_8; }
	inline bool* get_address_of_U3CcalibratingU3Ek__BackingField_8() { return &___U3CcalibratingU3Ek__BackingField_8; }
	inline void set_U3CcalibratingU3Ek__BackingField_8(bool value)
	{
		___U3CcalibratingU3Ek__BackingField_8 = value;
	}

	inline static int32_t get_offset_of_U3CoutOfRangeU3Ek__BackingField_9() { return static_cast<int32_t>(offsetof(SteamVR_tE14648C0E73A16927B96F72915B425561B0D057F_StaticFields, ___U3CoutOfRangeU3Ek__BackingField_9)); }
	inline bool get_U3CoutOfRangeU3Ek__BackingField_9() const { return ___U3CoutOfRangeU3Ek__BackingField_9; }
	inline bool* get_address_of_U3CoutOfRangeU3Ek__BackingField_9() { return &___U3CoutOfRangeU3Ek__BackingField_9; }
	inline void set_U3CoutOfRangeU3Ek__BackingField_9(bool value)
	{
		___U3CoutOfRangeU3Ek__BackingField_9 = value;
	}

	inline static int32_t get_offset_of_connected_10() { return static_cast<int32_t>(offsetof(SteamVR_tE14648C0E73A16927B96F72915B425561B0D057F_StaticFields, ___connected_10)); }
	inline BooleanU5BU5D_t192C7579715690E25BD5EFED47F3E0FC9DCB2040* get_connected_10() const { return ___connected_10; }
	inline BooleanU5BU5D_t192C7579715690E25BD5EFED47F3E0FC9DCB2040** get_address_of_connected_10() { return &___connected_10; }
	inline void set_connected_10(BooleanU5BU5D_t192C7579715690E25BD5EFED47F3E0FC9DCB2040* value)
	{
		___connected_10 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___connected_10), (void*)value);
	}

	inline static int32_t get_offset_of_runningTemporarySession_19() { return static_cast<int32_t>(offsetof(SteamVR_tE14648C0E73A16927B96F72915B425561B0D057F_StaticFields, ___runningTemporarySession_19)); }
	inline bool get_runningTemporarySession_19() const { return ___runningTemporarySession_19; }
	inline bool* get_address_of_runningTemporarySession_19() { return &___runningTemporarySession_19; }
	inline void set_runningTemporarySession_19(bool value)
	{
		___runningTemporarySession_19 = value;
	}
};


// Valve.VR.SteamVR_Action_Boolean
struct SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20  : public SteamVR_Action_In_2_t2F8E3210A305FC855ECD46AD48FA406BA177FAA9
{
public:

public:
};


// Valve.VR.SteamVR_Action_Pose_Base`2<Valve.VR.SteamVR_Action_Pose_Source_Map`1<Valve.VR.SteamVR_Action_Pose_Source>,Valve.VR.SteamVR_Action_Pose_Source>
struct SteamVR_Action_Pose_Base_2_tBAE9134F2B018AC078BAF24A2A5197F0A976D59A  : public SteamVR_Action_In_2_t2C5C166B83FDF97166A2B5B007C2A5742BBE2199
{
public:

public:
};


// Valve.VR.SteamVR_Action_Pose_Base`2<Valve.VR.SteamVR_Action_Skeleton_Source_Map,Valve.VR.SteamVR_Action_Skeleton_Source>
struct SteamVR_Action_Pose_Base_2_tCF260D4E08F45DC042B3B5B7B7A2F6B84880C2C2  : public SteamVR_Action_In_2_t648DCC49A164ED0184532F0961391833D01917D6
{
public:

public:
};


// Valve.VR.SteamVR_Action_Single
struct SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81  : public SteamVR_Action_In_2_t518EEA73CD833B39D557DDB94804313377E0FE02
{
public:

public:
};


// Valve.VR.SteamVR_Action_Source
struct SteamVR_Action_Source_t9D7428CDE39924074518EE6233D9A4FAB0C33CB0  : public RuntimeObject
{
public:
	// Valve.VR.SteamVR_Input_Sources Valve.VR.SteamVR_Action_Source::<inputSource>k__BackingField
	int32_t ___U3CinputSourceU3Ek__BackingField_0;
	// System.UInt64 Valve.VR.SteamVR_Action_Source::inputSourceHandle
	uint64_t ___inputSourceHandle_1;
	// Valve.VR.SteamVR_Action Valve.VR.SteamVR_Action_Source::action
	SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * ___action_2;

public:
	inline static int32_t get_offset_of_U3CinputSourceU3Ek__BackingField_0() { return static_cast<int32_t>(offsetof(SteamVR_Action_Source_t9D7428CDE39924074518EE6233D9A4FAB0C33CB0, ___U3CinputSourceU3Ek__BackingField_0)); }
	inline int32_t get_U3CinputSourceU3Ek__BackingField_0() const { return ___U3CinputSourceU3Ek__BackingField_0; }
	inline int32_t* get_address_of_U3CinputSourceU3Ek__BackingField_0() { return &___U3CinputSourceU3Ek__BackingField_0; }
	inline void set_U3CinputSourceU3Ek__BackingField_0(int32_t value)
	{
		___U3CinputSourceU3Ek__BackingField_0 = value;
	}

	inline static int32_t get_offset_of_inputSourceHandle_1() { return static_cast<int32_t>(offsetof(SteamVR_Action_Source_t9D7428CDE39924074518EE6233D9A4FAB0C33CB0, ___inputSourceHandle_1)); }
	inline uint64_t get_inputSourceHandle_1() const { return ___inputSourceHandle_1; }
	inline uint64_t* get_address_of_inputSourceHandle_1() { return &___inputSourceHandle_1; }
	inline void set_inputSourceHandle_1(uint64_t value)
	{
		___inputSourceHandle_1 = value;
	}

	inline static int32_t get_offset_of_action_2() { return static_cast<int32_t>(offsetof(SteamVR_Action_Source_t9D7428CDE39924074518EE6233D9A4FAB0C33CB0, ___action_2)); }
	inline SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * get_action_2() const { return ___action_2; }
	inline SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 ** get_address_of_action_2() { return &___action_2; }
	inline void set_action_2(SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * value)
	{
		___action_2 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___action_2), (void*)value);
	}
};


// Valve.VR.SteamVR_Action_Source_Map
struct SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17  : public RuntimeObject
{
public:
	// System.String Valve.VR.SteamVR_Action_Source_Map::<fullPath>k__BackingField
	String_t* ___U3CfullPathU3Ek__BackingField_0;
	// System.UInt64 Valve.VR.SteamVR_Action_Source_Map::<handle>k__BackingField
	uint64_t ___U3ChandleU3Ek__BackingField_1;
	// Valve.VR.SteamVR_ActionSet Valve.VR.SteamVR_Action_Source_Map::<actionSet>k__BackingField
	SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * ___U3CactionSetU3Ek__BackingField_2;
	// Valve.VR.SteamVR_ActionDirections Valve.VR.SteamVR_Action_Source_Map::<direction>k__BackingField
	int32_t ___U3CdirectionU3Ek__BackingField_3;
	// Valve.VR.SteamVR_Action Valve.VR.SteamVR_Action_Source_Map::action
	SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * ___action_4;

public:
	inline static int32_t get_offset_of_U3CfullPathU3Ek__BackingField_0() { return static_cast<int32_t>(offsetof(SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17, ___U3CfullPathU3Ek__BackingField_0)); }
	inline String_t* get_U3CfullPathU3Ek__BackingField_0() const { return ___U3CfullPathU3Ek__BackingField_0; }
	inline String_t** get_address_of_U3CfullPathU3Ek__BackingField_0() { return &___U3CfullPathU3Ek__BackingField_0; }
	inline void set_U3CfullPathU3Ek__BackingField_0(String_t* value)
	{
		___U3CfullPathU3Ek__BackingField_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CfullPathU3Ek__BackingField_0), (void*)value);
	}

	inline static int32_t get_offset_of_U3ChandleU3Ek__BackingField_1() { return static_cast<int32_t>(offsetof(SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17, ___U3ChandleU3Ek__BackingField_1)); }
	inline uint64_t get_U3ChandleU3Ek__BackingField_1() const { return ___U3ChandleU3Ek__BackingField_1; }
	inline uint64_t* get_address_of_U3ChandleU3Ek__BackingField_1() { return &___U3ChandleU3Ek__BackingField_1; }
	inline void set_U3ChandleU3Ek__BackingField_1(uint64_t value)
	{
		___U3ChandleU3Ek__BackingField_1 = value;
	}

	inline static int32_t get_offset_of_U3CactionSetU3Ek__BackingField_2() { return static_cast<int32_t>(offsetof(SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17, ___U3CactionSetU3Ek__BackingField_2)); }
	inline SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * get_U3CactionSetU3Ek__BackingField_2() const { return ___U3CactionSetU3Ek__BackingField_2; }
	inline SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 ** get_address_of_U3CactionSetU3Ek__BackingField_2() { return &___U3CactionSetU3Ek__BackingField_2; }
	inline void set_U3CactionSetU3Ek__BackingField_2(SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * value)
	{
		___U3CactionSetU3Ek__BackingField_2 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CactionSetU3Ek__BackingField_2), (void*)value);
	}

	inline static int32_t get_offset_of_U3CdirectionU3Ek__BackingField_3() { return static_cast<int32_t>(offsetof(SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17, ___U3CdirectionU3Ek__BackingField_3)); }
	inline int32_t get_U3CdirectionU3Ek__BackingField_3() const { return ___U3CdirectionU3Ek__BackingField_3; }
	inline int32_t* get_address_of_U3CdirectionU3Ek__BackingField_3() { return &___U3CdirectionU3Ek__BackingField_3; }
	inline void set_U3CdirectionU3Ek__BackingField_3(int32_t value)
	{
		___U3CdirectionU3Ek__BackingField_3 = value;
	}

	inline static int32_t get_offset_of_action_4() { return static_cast<int32_t>(offsetof(SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17, ___action_4)); }
	inline SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * get_action_4() const { return ___action_4; }
	inline SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 ** get_address_of_action_4() { return &___action_4; }
	inline void set_action_4(SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * value)
	{
		___action_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___action_4), (void*)value);
	}
};

struct SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17_StaticFields
{
public:
	// System.String Valve.VR.SteamVR_Action_Source_Map::inLowered
	String_t* ___inLowered_5;
	// System.String Valve.VR.SteamVR_Action_Source_Map::outLowered
	String_t* ___outLowered_6;

public:
	inline static int32_t get_offset_of_inLowered_5() { return static_cast<int32_t>(offsetof(SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17_StaticFields, ___inLowered_5)); }
	inline String_t* get_inLowered_5() const { return ___inLowered_5; }
	inline String_t** get_address_of_inLowered_5() { return &___inLowered_5; }
	inline void set_inLowered_5(String_t* value)
	{
		___inLowered_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___inLowered_5), (void*)value);
	}

	inline static int32_t get_offset_of_outLowered_6() { return static_cast<int32_t>(offsetof(SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17_StaticFields, ___outLowered_6)); }
	inline String_t* get_outLowered_6() const { return ___outLowered_6; }
	inline String_t** get_address_of_outLowered_6() { return &___outLowered_6; }
	inline void set_outLowered_6(String_t* value)
	{
		___outLowered_6 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___outLowered_6), (void*)value);
	}
};


// Valve.VR.SteamVR_Action_Vector2
struct SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37  : public SteamVR_Action_In_2_t4260173E99094920C69878272DE55CE93D5D5A9C
{
public:

public:
};


// Valve.VR.TrackedDevicePose_t
struct TrackedDevicePose_t_t42B7DC644F0F2CC1B416722EE2D63CB077F24383 
{
public:
	// Valve.VR.HmdMatrix34_t Valve.VR.TrackedDevicePose_t::mDeviceToAbsoluteTracking
	HmdMatrix34_t_tAD83D388E6173A848E1FE39121EE1BB9FE7F6305  ___mDeviceToAbsoluteTracking_0;
	// Valve.VR.HmdVector3_t Valve.VR.TrackedDevicePose_t::vVelocity
	HmdVector3_t_tEFA290D649DE2E28E5863ED6F09C667A0492FCF3  ___vVelocity_1;
	// Valve.VR.HmdVector3_t Valve.VR.TrackedDevicePose_t::vAngularVelocity
	HmdVector3_t_tEFA290D649DE2E28E5863ED6F09C667A0492FCF3  ___vAngularVelocity_2;
	// Valve.VR.ETrackingResult Valve.VR.TrackedDevicePose_t::eTrackingResult
	int32_t ___eTrackingResult_3;
	// System.Boolean Valve.VR.TrackedDevicePose_t::bPoseIsValid
	bool ___bPoseIsValid_4;
	// System.Boolean Valve.VR.TrackedDevicePose_t::bDeviceIsConnected
	bool ___bDeviceIsConnected_5;

public:
	inline static int32_t get_offset_of_mDeviceToAbsoluteTracking_0() { return static_cast<int32_t>(offsetof(TrackedDevicePose_t_t42B7DC644F0F2CC1B416722EE2D63CB077F24383, ___mDeviceToAbsoluteTracking_0)); }
	inline HmdMatrix34_t_tAD83D388E6173A848E1FE39121EE1BB9FE7F6305  get_mDeviceToAbsoluteTracking_0() const { return ___mDeviceToAbsoluteTracking_0; }
	inline HmdMatrix34_t_tAD83D388E6173A848E1FE39121EE1BB9FE7F6305 * get_address_of_mDeviceToAbsoluteTracking_0() { return &___mDeviceToAbsoluteTracking_0; }
	inline void set_mDeviceToAbsoluteTracking_0(HmdMatrix34_t_tAD83D388E6173A848E1FE39121EE1BB9FE7F6305  value)
	{
		___mDeviceToAbsoluteTracking_0 = value;
	}

	inline static int32_t get_offset_of_vVelocity_1() { return static_cast<int32_t>(offsetof(TrackedDevicePose_t_t42B7DC644F0F2CC1B416722EE2D63CB077F24383, ___vVelocity_1)); }
	inline HmdVector3_t_tEFA290D649DE2E28E5863ED6F09C667A0492FCF3  get_vVelocity_1() const { return ___vVelocity_1; }
	inline HmdVector3_t_tEFA290D649DE2E28E5863ED6F09C667A0492FCF3 * get_address_of_vVelocity_1() { return &___vVelocity_1; }
	inline void set_vVelocity_1(HmdVector3_t_tEFA290D649DE2E28E5863ED6F09C667A0492FCF3  value)
	{
		___vVelocity_1 = value;
	}

	inline static int32_t get_offset_of_vAngularVelocity_2() { return static_cast<int32_t>(offsetof(TrackedDevicePose_t_t42B7DC644F0F2CC1B416722EE2D63CB077F24383, ___vAngularVelocity_2)); }
	inline HmdVector3_t_tEFA290D649DE2E28E5863ED6F09C667A0492FCF3  get_vAngularVelocity_2() const { return ___vAngularVelocity_2; }
	inline HmdVector3_t_tEFA290D649DE2E28E5863ED6F09C667A0492FCF3 * get_address_of_vAngularVelocity_2() { return &___vAngularVelocity_2; }
	inline void set_vAngularVelocity_2(HmdVector3_t_tEFA290D649DE2E28E5863ED6F09C667A0492FCF3  value)
	{
		___vAngularVelocity_2 = value;
	}

	inline static int32_t get_offset_of_eTrackingResult_3() { return static_cast<int32_t>(offsetof(TrackedDevicePose_t_t42B7DC644F0F2CC1B416722EE2D63CB077F24383, ___eTrackingResult_3)); }
	inline int32_t get_eTrackingResult_3() const { return ___eTrackingResult_3; }
	inline int32_t* get_address_of_eTrackingResult_3() { return &___eTrackingResult_3; }
	inline void set_eTrackingResult_3(int32_t value)
	{
		___eTrackingResult_3 = value;
	}

	inline static int32_t get_offset_of_bPoseIsValid_4() { return static_cast<int32_t>(offsetof(TrackedDevicePose_t_t42B7DC644F0F2CC1B416722EE2D63CB077F24383, ___bPoseIsValid_4)); }
	inline bool get_bPoseIsValid_4() const { return ___bPoseIsValid_4; }
	inline bool* get_address_of_bPoseIsValid_4() { return &___bPoseIsValid_4; }
	inline void set_bPoseIsValid_4(bool value)
	{
		___bPoseIsValid_4 = value;
	}

	inline static int32_t get_offset_of_bDeviceIsConnected_5() { return static_cast<int32_t>(offsetof(TrackedDevicePose_t_t42B7DC644F0F2CC1B416722EE2D63CB077F24383, ___bDeviceIsConnected_5)); }
	inline bool get_bDeviceIsConnected_5() const { return ___bDeviceIsConnected_5; }
	inline bool* get_address_of_bDeviceIsConnected_5() { return &___bDeviceIsConnected_5; }
	inline void set_bDeviceIsConnected_5(bool value)
	{
		___bDeviceIsConnected_5 = value;
	}
};


// System.AsyncCallback
struct AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4  : public MulticastDelegate_t
{
public:

public:
};


// UnityEngine.Transform
struct Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA  : public Component_t05064EF382ABCAF4B8C94F8A350EA85184C26621
{
public:

public:
};


// Valve.VR.InputPoseActionData_t
struct InputPoseActionData_t_tC282FD2CB85805431D2F23AF9C032BAD99683111 
{
public:
	// System.Boolean Valve.VR.InputPoseActionData_t::bActive
	bool ___bActive_0;
	// System.UInt64 Valve.VR.InputPoseActionData_t::activeOrigin
	uint64_t ___activeOrigin_1;
	// Valve.VR.TrackedDevicePose_t Valve.VR.InputPoseActionData_t::pose
	TrackedDevicePose_t_t42B7DC644F0F2CC1B416722EE2D63CB077F24383  ___pose_2;

public:
	inline static int32_t get_offset_of_bActive_0() { return static_cast<int32_t>(offsetof(InputPoseActionData_t_tC282FD2CB85805431D2F23AF9C032BAD99683111, ___bActive_0)); }
	inline bool get_bActive_0() const { return ___bActive_0; }
	inline bool* get_address_of_bActive_0() { return &___bActive_0; }
	inline void set_bActive_0(bool value)
	{
		___bActive_0 = value;
	}

	inline static int32_t get_offset_of_activeOrigin_1() { return static_cast<int32_t>(offsetof(InputPoseActionData_t_tC282FD2CB85805431D2F23AF9C032BAD99683111, ___activeOrigin_1)); }
	inline uint64_t get_activeOrigin_1() const { return ___activeOrigin_1; }
	inline uint64_t* get_address_of_activeOrigin_1() { return &___activeOrigin_1; }
	inline void set_activeOrigin_1(uint64_t value)
	{
		___activeOrigin_1 = value;
	}

	inline static int32_t get_offset_of_pose_2() { return static_cast<int32_t>(offsetof(InputPoseActionData_t_tC282FD2CB85805431D2F23AF9C032BAD99683111, ___pose_2)); }
	inline TrackedDevicePose_t_t42B7DC644F0F2CC1B416722EE2D63CB077F24383  get_pose_2() const { return ___pose_2; }
	inline TrackedDevicePose_t_t42B7DC644F0F2CC1B416722EE2D63CB077F24383 * get_address_of_pose_2() { return &___pose_2; }
	inline void set_pose_2(TrackedDevicePose_t_t42B7DC644F0F2CC1B416722EE2D63CB077F24383  value)
	{
		___pose_2 = value;
	}
};


// Valve.VR.SteamVR_Action_Boolean/ActiveChangeHandler
struct ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Action_Boolean/ChangeHandler
struct ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Action_Boolean/StateDownHandler
struct StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Action_Boolean/StateHandler
struct StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Action_Boolean/StateUpHandler
struct StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Action_Boolean/UpdateHandler
struct UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Action_In_Source
struct SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB  : public SteamVR_Action_Source_t9D7428CDE39924074518EE6233D9A4FAB0C33CB0
{
public:
	// System.Boolean Valve.VR.SteamVR_Action_In_Source::<isUpdating>k__BackingField
	bool ___U3CisUpdatingU3Ek__BackingField_4;
	// System.Single Valve.VR.SteamVR_Action_In_Source::<updateTime>k__BackingField
	float ___U3CupdateTimeU3Ek__BackingField_5;
	// System.Single Valve.VR.SteamVR_Action_In_Source::<changedTime>k__BackingField
	float ___U3CchangedTimeU3Ek__BackingField_6;
	// System.Int32 Valve.VR.SteamVR_Action_In_Source::<lastOriginGetFrame>k__BackingField
	int32_t ___U3ClastOriginGetFrameU3Ek__BackingField_7;
	// Valve.VR.InputOriginInfo_t Valve.VR.SteamVR_Action_In_Source::inputOriginInfo
	InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7  ___inputOriginInfo_8;
	// Valve.VR.InputOriginInfo_t Valve.VR.SteamVR_Action_In_Source::lastInputOriginInfo
	InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7  ___lastInputOriginInfo_9;

public:
	inline static int32_t get_offset_of_U3CisUpdatingU3Ek__BackingField_4() { return static_cast<int32_t>(offsetof(SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB, ___U3CisUpdatingU3Ek__BackingField_4)); }
	inline bool get_U3CisUpdatingU3Ek__BackingField_4() const { return ___U3CisUpdatingU3Ek__BackingField_4; }
	inline bool* get_address_of_U3CisUpdatingU3Ek__BackingField_4() { return &___U3CisUpdatingU3Ek__BackingField_4; }
	inline void set_U3CisUpdatingU3Ek__BackingField_4(bool value)
	{
		___U3CisUpdatingU3Ek__BackingField_4 = value;
	}

	inline static int32_t get_offset_of_U3CupdateTimeU3Ek__BackingField_5() { return static_cast<int32_t>(offsetof(SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB, ___U3CupdateTimeU3Ek__BackingField_5)); }
	inline float get_U3CupdateTimeU3Ek__BackingField_5() const { return ___U3CupdateTimeU3Ek__BackingField_5; }
	inline float* get_address_of_U3CupdateTimeU3Ek__BackingField_5() { return &___U3CupdateTimeU3Ek__BackingField_5; }
	inline void set_U3CupdateTimeU3Ek__BackingField_5(float value)
	{
		___U3CupdateTimeU3Ek__BackingField_5 = value;
	}

	inline static int32_t get_offset_of_U3CchangedTimeU3Ek__BackingField_6() { return static_cast<int32_t>(offsetof(SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB, ___U3CchangedTimeU3Ek__BackingField_6)); }
	inline float get_U3CchangedTimeU3Ek__BackingField_6() const { return ___U3CchangedTimeU3Ek__BackingField_6; }
	inline float* get_address_of_U3CchangedTimeU3Ek__BackingField_6() { return &___U3CchangedTimeU3Ek__BackingField_6; }
	inline void set_U3CchangedTimeU3Ek__BackingField_6(float value)
	{
		___U3CchangedTimeU3Ek__BackingField_6 = value;
	}

	inline static int32_t get_offset_of_U3ClastOriginGetFrameU3Ek__BackingField_7() { return static_cast<int32_t>(offsetof(SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB, ___U3ClastOriginGetFrameU3Ek__BackingField_7)); }
	inline int32_t get_U3ClastOriginGetFrameU3Ek__BackingField_7() const { return ___U3ClastOriginGetFrameU3Ek__BackingField_7; }
	inline int32_t* get_address_of_U3ClastOriginGetFrameU3Ek__BackingField_7() { return &___U3ClastOriginGetFrameU3Ek__BackingField_7; }
	inline void set_U3ClastOriginGetFrameU3Ek__BackingField_7(int32_t value)
	{
		___U3ClastOriginGetFrameU3Ek__BackingField_7 = value;
	}

	inline static int32_t get_offset_of_inputOriginInfo_8() { return static_cast<int32_t>(offsetof(SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB, ___inputOriginInfo_8)); }
	inline InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7  get_inputOriginInfo_8() const { return ___inputOriginInfo_8; }
	inline InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7 * get_address_of_inputOriginInfo_8() { return &___inputOriginInfo_8; }
	inline void set_inputOriginInfo_8(InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7  value)
	{
		___inputOriginInfo_8 = value;
	}

	inline static int32_t get_offset_of_lastInputOriginInfo_9() { return static_cast<int32_t>(offsetof(SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB, ___lastInputOriginInfo_9)); }
	inline InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7  get_lastInputOriginInfo_9() const { return ___lastInputOriginInfo_9; }
	inline InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7 * get_address_of_lastInputOriginInfo_9() { return &___lastInputOriginInfo_9; }
	inline void set_lastInputOriginInfo_9(InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7  value)
	{
		___lastInputOriginInfo_9 = value;
	}
};

struct SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB_StaticFields
{
public:
	// System.UInt32 Valve.VR.SteamVR_Action_In_Source::inputOriginInfo_size
	uint32_t ___inputOriginInfo_size_3;

public:
	inline static int32_t get_offset_of_inputOriginInfo_size_3() { return static_cast<int32_t>(offsetof(SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB_StaticFields, ___inputOriginInfo_size_3)); }
	inline uint32_t get_inputOriginInfo_size_3() const { return ___inputOriginInfo_size_3; }
	inline uint32_t* get_address_of_inputOriginInfo_size_3() { return &___inputOriginInfo_size_3; }
	inline void set_inputOriginInfo_size_3(uint32_t value)
	{
		___inputOriginInfo_size_3 = value;
	}
};


// Valve.VR.SteamVR_Action_Out_Source
struct SteamVR_Action_Out_Source_t6BAB7CAA13DB2A871A892C09BFF55378A6D327D6  : public SteamVR_Action_Source_t9D7428CDE39924074518EE6233D9A4FAB0C33CB0
{
public:

public:
};


// Valve.VR.SteamVR_Action_Pose
struct SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C  : public SteamVR_Action_Pose_Base_2_tBAE9134F2B018AC078BAF24A2A5197F0A976D59A
{
public:

public:
};


// Valve.VR.SteamVR_Action_Pose/ActiveChangeHandler
struct ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Action_Pose/ChangeHandler
struct ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Action_Pose/DeviceConnectedChangeHandler
struct DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Action_Pose/TrackingChangeHandler
struct TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Action_Pose/UpdateHandler
struct UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Action_Pose/ValidPoseChangeHandler
struct ValidPoseChangeHandler_t1D487A0B0E2FB0D02C72EF5365E81BCD3E33B41A  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Action_Single/ActiveChangeHandler
struct ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Action_Single/AxisHandler
struct AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Action_Single/ChangeHandler
struct ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Action_Single/UpdateHandler
struct UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Action_Skeleton
struct SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504  : public SteamVR_Action_Pose_Base_2_tCF260D4E08F45DC042B3B5B7B7A2F6B84880C2C2
{
public:

public:
};

struct SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504_StaticFields
{
public:
	// UnityEngine.Quaternion Valve.VR.SteamVR_Action_Skeleton::steamVRFixUpRotation
	Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___steamVRFixUpRotation_7;

public:
	inline static int32_t get_offset_of_steamVRFixUpRotation_7() { return static_cast<int32_t>(offsetof(SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504_StaticFields, ___steamVRFixUpRotation_7)); }
	inline Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  get_steamVRFixUpRotation_7() const { return ___steamVRFixUpRotation_7; }
	inline Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 * get_address_of_steamVRFixUpRotation_7() { return &___steamVRFixUpRotation_7; }
	inline void set_steamVRFixUpRotation_7(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  value)
	{
		___steamVRFixUpRotation_7 = value;
	}
};


// Valve.VR.SteamVR_Action_Skeleton/ActiveChangeHandler
struct ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Action_Skeleton/ChangeHandler
struct ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Action_Skeleton/DeviceConnectedChangeHandler
struct DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Action_Skeleton/TrackingChangeHandler
struct TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Action_Skeleton/UpdateHandler
struct UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Action_Skeleton/ValidPoseChangeHandler
struct ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Action_Source_Map`1<Valve.VR.SteamVR_Action_Boolean_Source>
struct SteamVR_Action_Source_Map_1_t201E3E98AE5A0596AB8B460805D1C622B3C8288B  : public SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17
{
public:
	// SourceElement[] Valve.VR.SteamVR_Action_Source_Map`1::sources
	SteamVR_Action_Boolean_SourceU5BU5D_t3A16242B388E28FE4156180DB154A107EF5A8B1D* ___sources_7;

public:
	inline static int32_t get_offset_of_sources_7() { return static_cast<int32_t>(offsetof(SteamVR_Action_Source_Map_1_t201E3E98AE5A0596AB8B460805D1C622B3C8288B, ___sources_7)); }
	inline SteamVR_Action_Boolean_SourceU5BU5D_t3A16242B388E28FE4156180DB154A107EF5A8B1D* get_sources_7() const { return ___sources_7; }
	inline SteamVR_Action_Boolean_SourceU5BU5D_t3A16242B388E28FE4156180DB154A107EF5A8B1D** get_address_of_sources_7() { return &___sources_7; }
	inline void set_sources_7(SteamVR_Action_Boolean_SourceU5BU5D_t3A16242B388E28FE4156180DB154A107EF5A8B1D* value)
	{
		___sources_7 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___sources_7), (void*)value);
	}
};


// Valve.VR.SteamVR_Action_Source_Map`1<Valve.VR.SteamVR_Action_Pose_Source>
struct SteamVR_Action_Source_Map_1_t4A3528A78F542534FFD6E6F281FB9A8905078A20  : public SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17
{
public:
	// SourceElement[] Valve.VR.SteamVR_Action_Source_Map`1::sources
	SteamVR_Action_Pose_SourceU5BU5D_t22552112660E2C6809DF49AE76F3B6C3DF47DA18* ___sources_7;

public:
	inline static int32_t get_offset_of_sources_7() { return static_cast<int32_t>(offsetof(SteamVR_Action_Source_Map_1_t4A3528A78F542534FFD6E6F281FB9A8905078A20, ___sources_7)); }
	inline SteamVR_Action_Pose_SourceU5BU5D_t22552112660E2C6809DF49AE76F3B6C3DF47DA18* get_sources_7() const { return ___sources_7; }
	inline SteamVR_Action_Pose_SourceU5BU5D_t22552112660E2C6809DF49AE76F3B6C3DF47DA18** get_address_of_sources_7() { return &___sources_7; }
	inline void set_sources_7(SteamVR_Action_Pose_SourceU5BU5D_t22552112660E2C6809DF49AE76F3B6C3DF47DA18* value)
	{
		___sources_7 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___sources_7), (void*)value);
	}
};


// Valve.VR.SteamVR_Action_Source_Map`1<Valve.VR.SteamVR_Action_Single_Source>
struct SteamVR_Action_Source_Map_1_t35C427C8B75EF289976D4DB641CA212F073FB0A1  : public SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17
{
public:
	// SourceElement[] Valve.VR.SteamVR_Action_Source_Map`1::sources
	SteamVR_Action_Single_SourceU5BU5D_t5C412D6C07F76DC7C2B627B5C442ED002CDEB277* ___sources_7;

public:
	inline static int32_t get_offset_of_sources_7() { return static_cast<int32_t>(offsetof(SteamVR_Action_Source_Map_1_t35C427C8B75EF289976D4DB641CA212F073FB0A1, ___sources_7)); }
	inline SteamVR_Action_Single_SourceU5BU5D_t5C412D6C07F76DC7C2B627B5C442ED002CDEB277* get_sources_7() const { return ___sources_7; }
	inline SteamVR_Action_Single_SourceU5BU5D_t5C412D6C07F76DC7C2B627B5C442ED002CDEB277** get_address_of_sources_7() { return &___sources_7; }
	inline void set_sources_7(SteamVR_Action_Single_SourceU5BU5D_t5C412D6C07F76DC7C2B627B5C442ED002CDEB277* value)
	{
		___sources_7 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___sources_7), (void*)value);
	}
};


// Valve.VR.SteamVR_Action_Source_Map`1<Valve.VR.SteamVR_Action_Skeleton_Source>
struct SteamVR_Action_Source_Map_1_t27BBF2BA23BB14D6B7B203EF8ABFEF3D68E13AB1  : public SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17
{
public:
	// SourceElement[] Valve.VR.SteamVR_Action_Source_Map`1::sources
	SteamVR_Action_Skeleton_SourceU5BU5D_tD7F80DE17D413EA1E866B222C9A63AEBFF0CE5D4* ___sources_7;

public:
	inline static int32_t get_offset_of_sources_7() { return static_cast<int32_t>(offsetof(SteamVR_Action_Source_Map_1_t27BBF2BA23BB14D6B7B203EF8ABFEF3D68E13AB1, ___sources_7)); }
	inline SteamVR_Action_Skeleton_SourceU5BU5D_tD7F80DE17D413EA1E866B222C9A63AEBFF0CE5D4* get_sources_7() const { return ___sources_7; }
	inline SteamVR_Action_Skeleton_SourceU5BU5D_tD7F80DE17D413EA1E866B222C9A63AEBFF0CE5D4** get_address_of_sources_7() { return &___sources_7; }
	inline void set_sources_7(SteamVR_Action_Skeleton_SourceU5BU5D_tD7F80DE17D413EA1E866B222C9A63AEBFF0CE5D4* value)
	{
		___sources_7 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___sources_7), (void*)value);
	}
};


// Valve.VR.SteamVR_Action_Source_Map`1<Valve.VR.SteamVR_Action_Vector2_Source>
struct SteamVR_Action_Source_Map_1_tE12722D4173E7C4230CAF8EE7E30368AA130B899  : public SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17
{
public:
	// SourceElement[] Valve.VR.SteamVR_Action_Source_Map`1::sources
	SteamVR_Action_Vector2_SourceU5BU5D_t7FCBB6318B7E6C02575D1D2F50CA74FE49CCB359* ___sources_7;

public:
	inline static int32_t get_offset_of_sources_7() { return static_cast<int32_t>(offsetof(SteamVR_Action_Source_Map_1_tE12722D4173E7C4230CAF8EE7E30368AA130B899, ___sources_7)); }
	inline SteamVR_Action_Vector2_SourceU5BU5D_t7FCBB6318B7E6C02575D1D2F50CA74FE49CCB359* get_sources_7() const { return ___sources_7; }
	inline SteamVR_Action_Vector2_SourceU5BU5D_t7FCBB6318B7E6C02575D1D2F50CA74FE49CCB359** get_address_of_sources_7() { return &___sources_7; }
	inline void set_sources_7(SteamVR_Action_Vector2_SourceU5BU5D_t7FCBB6318B7E6C02575D1D2F50CA74FE49CCB359* value)
	{
		___sources_7 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___sources_7), (void*)value);
	}
};


// Valve.VR.SteamVR_Action_Vector2/ActiveChangeHandler
struct ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Action_Vector2/AxisHandler
struct AxisHandler_t97FB692AF5465040A2929AB663941933E3567689  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Action_Vector2/ChangeHandler
struct ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Action_Vector2/UpdateHandler
struct UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Action_Boolean_Source
struct SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB  : public SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB
{
public:
	// Valve.VR.SteamVR_Action_Boolean/StateDownHandler Valve.VR.SteamVR_Action_Boolean_Source::onStateDown
	StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464 * ___onStateDown_11;
	// Valve.VR.SteamVR_Action_Boolean/StateUpHandler Valve.VR.SteamVR_Action_Boolean_Source::onStateUp
	StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8 * ___onStateUp_12;
	// Valve.VR.SteamVR_Action_Boolean/StateHandler Valve.VR.SteamVR_Action_Boolean_Source::onState
	StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA * ___onState_13;
	// Valve.VR.SteamVR_Action_Boolean/ActiveChangeHandler Valve.VR.SteamVR_Action_Boolean_Source::onActiveChange
	ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * ___onActiveChange_14;
	// Valve.VR.SteamVR_Action_Boolean/ActiveChangeHandler Valve.VR.SteamVR_Action_Boolean_Source::onActiveBindingChange
	ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * ___onActiveBindingChange_15;
	// Valve.VR.SteamVR_Action_Boolean/ChangeHandler Valve.VR.SteamVR_Action_Boolean_Source::onChange
	ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0 * ___onChange_16;
	// Valve.VR.SteamVR_Action_Boolean/UpdateHandler Valve.VR.SteamVR_Action_Boolean_Source::onUpdate
	UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B * ___onUpdate_17;
	// System.Boolean Valve.VR.SteamVR_Action_Boolean_Source::<lastActive>k__BackingField
	bool ___U3ClastActiveU3Ek__BackingField_18;
	// Valve.VR.InputDigitalActionData_t Valve.VR.SteamVR_Action_Boolean_Source::actionData
	InputDigitalActionData_t_t4A01C92AC860229A4C521ED827FD4FC4508A822C  ___actionData_19;
	// Valve.VR.InputDigitalActionData_t Valve.VR.SteamVR_Action_Boolean_Source::lastActionData
	InputDigitalActionData_t_t4A01C92AC860229A4C521ED827FD4FC4508A822C  ___lastActionData_20;
	// Valve.VR.SteamVR_Action_Boolean Valve.VR.SteamVR_Action_Boolean_Source::booleanAction
	SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * ___booleanAction_21;

public:
	inline static int32_t get_offset_of_onStateDown_11() { return static_cast<int32_t>(offsetof(SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB, ___onStateDown_11)); }
	inline StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464 * get_onStateDown_11() const { return ___onStateDown_11; }
	inline StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464 ** get_address_of_onStateDown_11() { return &___onStateDown_11; }
	inline void set_onStateDown_11(StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464 * value)
	{
		___onStateDown_11 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onStateDown_11), (void*)value);
	}

	inline static int32_t get_offset_of_onStateUp_12() { return static_cast<int32_t>(offsetof(SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB, ___onStateUp_12)); }
	inline StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8 * get_onStateUp_12() const { return ___onStateUp_12; }
	inline StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8 ** get_address_of_onStateUp_12() { return &___onStateUp_12; }
	inline void set_onStateUp_12(StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8 * value)
	{
		___onStateUp_12 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onStateUp_12), (void*)value);
	}

	inline static int32_t get_offset_of_onState_13() { return static_cast<int32_t>(offsetof(SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB, ___onState_13)); }
	inline StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA * get_onState_13() const { return ___onState_13; }
	inline StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA ** get_address_of_onState_13() { return &___onState_13; }
	inline void set_onState_13(StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA * value)
	{
		___onState_13 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onState_13), (void*)value);
	}

	inline static int32_t get_offset_of_onActiveChange_14() { return static_cast<int32_t>(offsetof(SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB, ___onActiveChange_14)); }
	inline ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * get_onActiveChange_14() const { return ___onActiveChange_14; }
	inline ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 ** get_address_of_onActiveChange_14() { return &___onActiveChange_14; }
	inline void set_onActiveChange_14(ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * value)
	{
		___onActiveChange_14 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onActiveChange_14), (void*)value);
	}

	inline static int32_t get_offset_of_onActiveBindingChange_15() { return static_cast<int32_t>(offsetof(SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB, ___onActiveBindingChange_15)); }
	inline ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * get_onActiveBindingChange_15() const { return ___onActiveBindingChange_15; }
	inline ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 ** get_address_of_onActiveBindingChange_15() { return &___onActiveBindingChange_15; }
	inline void set_onActiveBindingChange_15(ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * value)
	{
		___onActiveBindingChange_15 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onActiveBindingChange_15), (void*)value);
	}

	inline static int32_t get_offset_of_onChange_16() { return static_cast<int32_t>(offsetof(SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB, ___onChange_16)); }
	inline ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0 * get_onChange_16() const { return ___onChange_16; }
	inline ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0 ** get_address_of_onChange_16() { return &___onChange_16; }
	inline void set_onChange_16(ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0 * value)
	{
		___onChange_16 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onChange_16), (void*)value);
	}

	inline static int32_t get_offset_of_onUpdate_17() { return static_cast<int32_t>(offsetof(SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB, ___onUpdate_17)); }
	inline UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B * get_onUpdate_17() const { return ___onUpdate_17; }
	inline UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B ** get_address_of_onUpdate_17() { return &___onUpdate_17; }
	inline void set_onUpdate_17(UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B * value)
	{
		___onUpdate_17 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onUpdate_17), (void*)value);
	}

	inline static int32_t get_offset_of_U3ClastActiveU3Ek__BackingField_18() { return static_cast<int32_t>(offsetof(SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB, ___U3ClastActiveU3Ek__BackingField_18)); }
	inline bool get_U3ClastActiveU3Ek__BackingField_18() const { return ___U3ClastActiveU3Ek__BackingField_18; }
	inline bool* get_address_of_U3ClastActiveU3Ek__BackingField_18() { return &___U3ClastActiveU3Ek__BackingField_18; }
	inline void set_U3ClastActiveU3Ek__BackingField_18(bool value)
	{
		___U3ClastActiveU3Ek__BackingField_18 = value;
	}

	inline static int32_t get_offset_of_actionData_19() { return static_cast<int32_t>(offsetof(SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB, ___actionData_19)); }
	inline InputDigitalActionData_t_t4A01C92AC860229A4C521ED827FD4FC4508A822C  get_actionData_19() const { return ___actionData_19; }
	inline InputDigitalActionData_t_t4A01C92AC860229A4C521ED827FD4FC4508A822C * get_address_of_actionData_19() { return &___actionData_19; }
	inline void set_actionData_19(InputDigitalActionData_t_t4A01C92AC860229A4C521ED827FD4FC4508A822C  value)
	{
		___actionData_19 = value;
	}

	inline static int32_t get_offset_of_lastActionData_20() { return static_cast<int32_t>(offsetof(SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB, ___lastActionData_20)); }
	inline InputDigitalActionData_t_t4A01C92AC860229A4C521ED827FD4FC4508A822C  get_lastActionData_20() const { return ___lastActionData_20; }
	inline InputDigitalActionData_t_t4A01C92AC860229A4C521ED827FD4FC4508A822C * get_address_of_lastActionData_20() { return &___lastActionData_20; }
	inline void set_lastActionData_20(InputDigitalActionData_t_t4A01C92AC860229A4C521ED827FD4FC4508A822C  value)
	{
		___lastActionData_20 = value;
	}

	inline static int32_t get_offset_of_booleanAction_21() { return static_cast<int32_t>(offsetof(SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB, ___booleanAction_21)); }
	inline SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * get_booleanAction_21() const { return ___booleanAction_21; }
	inline SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 ** get_address_of_booleanAction_21() { return &___booleanAction_21; }
	inline void set_booleanAction_21(SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * value)
	{
		___booleanAction_21 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___booleanAction_21), (void*)value);
	}
};

struct SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB_StaticFields
{
public:
	// System.UInt32 Valve.VR.SteamVR_Action_Boolean_Source::actionData_size
	uint32_t ___actionData_size_10;

public:
	inline static int32_t get_offset_of_actionData_size_10() { return static_cast<int32_t>(offsetof(SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB_StaticFields, ___actionData_size_10)); }
	inline uint32_t get_actionData_size_10() const { return ___actionData_size_10; }
	inline uint32_t* get_address_of_actionData_size_10() { return &___actionData_size_10; }
	inline void set_actionData_size_10(uint32_t value)
	{
		___actionData_size_10 = value;
	}
};


// Valve.VR.SteamVR_Action_In_Source_Map`1<Valve.VR.SteamVR_Action_Boolean_Source>
struct SteamVR_Action_In_Source_Map_1_t462A62AFB6CF3E08F3D5A481212A290F3FEB5FFE  : public SteamVR_Action_Source_Map_1_t201E3E98AE5A0596AB8B460805D1C622B3C8288B
{
public:
	// System.Collections.Generic.List`1<System.Int32> Valve.VR.SteamVR_Action_In_Source_Map`1::updatingSources
	List_1_tE1526161A558A17A39A8B69D8EEF3801393B6226 * ___updatingSources_8;

public:
	inline static int32_t get_offset_of_updatingSources_8() { return static_cast<int32_t>(offsetof(SteamVR_Action_In_Source_Map_1_t462A62AFB6CF3E08F3D5A481212A290F3FEB5FFE, ___updatingSources_8)); }
	inline List_1_tE1526161A558A17A39A8B69D8EEF3801393B6226 * get_updatingSources_8() const { return ___updatingSources_8; }
	inline List_1_tE1526161A558A17A39A8B69D8EEF3801393B6226 ** get_address_of_updatingSources_8() { return &___updatingSources_8; }
	inline void set_updatingSources_8(List_1_tE1526161A558A17A39A8B69D8EEF3801393B6226 * value)
	{
		___updatingSources_8 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___updatingSources_8), (void*)value);
	}
};


// Valve.VR.SteamVR_Action_In_Source_Map`1<Valve.VR.SteamVR_Action_Pose_Source>
struct SteamVR_Action_In_Source_Map_1_t8620836FE3BF53CCD96DF04716DB518EAEEC2584  : public SteamVR_Action_Source_Map_1_t4A3528A78F542534FFD6E6F281FB9A8905078A20
{
public:
	// System.Collections.Generic.List`1<System.Int32> Valve.VR.SteamVR_Action_In_Source_Map`1::updatingSources
	List_1_tE1526161A558A17A39A8B69D8EEF3801393B6226 * ___updatingSources_8;

public:
	inline static int32_t get_offset_of_updatingSources_8() { return static_cast<int32_t>(offsetof(SteamVR_Action_In_Source_Map_1_t8620836FE3BF53CCD96DF04716DB518EAEEC2584, ___updatingSources_8)); }
	inline List_1_tE1526161A558A17A39A8B69D8EEF3801393B6226 * get_updatingSources_8() const { return ___updatingSources_8; }
	inline List_1_tE1526161A558A17A39A8B69D8EEF3801393B6226 ** get_address_of_updatingSources_8() { return &___updatingSources_8; }
	inline void set_updatingSources_8(List_1_tE1526161A558A17A39A8B69D8EEF3801393B6226 * value)
	{
		___updatingSources_8 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___updatingSources_8), (void*)value);
	}
};


// Valve.VR.SteamVR_Action_In_Source_Map`1<Valve.VR.SteamVR_Action_Single_Source>
struct SteamVR_Action_In_Source_Map_1_t2C53C7DDA5E7BECE6E12D3EE7BFAB2ADF8781741  : public SteamVR_Action_Source_Map_1_t35C427C8B75EF289976D4DB641CA212F073FB0A1
{
public:
	// System.Collections.Generic.List`1<System.Int32> Valve.VR.SteamVR_Action_In_Source_Map`1::updatingSources
	List_1_tE1526161A558A17A39A8B69D8EEF3801393B6226 * ___updatingSources_8;

public:
	inline static int32_t get_offset_of_updatingSources_8() { return static_cast<int32_t>(offsetof(SteamVR_Action_In_Source_Map_1_t2C53C7DDA5E7BECE6E12D3EE7BFAB2ADF8781741, ___updatingSources_8)); }
	inline List_1_tE1526161A558A17A39A8B69D8EEF3801393B6226 * get_updatingSources_8() const { return ___updatingSources_8; }
	inline List_1_tE1526161A558A17A39A8B69D8EEF3801393B6226 ** get_address_of_updatingSources_8() { return &___updatingSources_8; }
	inline void set_updatingSources_8(List_1_tE1526161A558A17A39A8B69D8EEF3801393B6226 * value)
	{
		___updatingSources_8 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___updatingSources_8), (void*)value);
	}
};


// Valve.VR.SteamVR_Action_In_Source_Map`1<Valve.VR.SteamVR_Action_Skeleton_Source>
struct SteamVR_Action_In_Source_Map_1_t65B6CC75798A38C0D5EA4E4B15FB9C8DE87145B4  : public SteamVR_Action_Source_Map_1_t27BBF2BA23BB14D6B7B203EF8ABFEF3D68E13AB1
{
public:
	// System.Collections.Generic.List`1<System.Int32> Valve.VR.SteamVR_Action_In_Source_Map`1::updatingSources
	List_1_tE1526161A558A17A39A8B69D8EEF3801393B6226 * ___updatingSources_8;

public:
	inline static int32_t get_offset_of_updatingSources_8() { return static_cast<int32_t>(offsetof(SteamVR_Action_In_Source_Map_1_t65B6CC75798A38C0D5EA4E4B15FB9C8DE87145B4, ___updatingSources_8)); }
	inline List_1_tE1526161A558A17A39A8B69D8EEF3801393B6226 * get_updatingSources_8() const { return ___updatingSources_8; }
	inline List_1_tE1526161A558A17A39A8B69D8EEF3801393B6226 ** get_address_of_updatingSources_8() { return &___updatingSources_8; }
	inline void set_updatingSources_8(List_1_tE1526161A558A17A39A8B69D8EEF3801393B6226 * value)
	{
		___updatingSources_8 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___updatingSources_8), (void*)value);
	}
};


// Valve.VR.SteamVR_Action_In_Source_Map`1<Valve.VR.SteamVR_Action_Vector2_Source>
struct SteamVR_Action_In_Source_Map_1_tE08712080E22D9A4BAF4C436860AA6226B5FC72D  : public SteamVR_Action_Source_Map_1_tE12722D4173E7C4230CAF8EE7E30368AA130B899
{
public:
	// System.Collections.Generic.List`1<System.Int32> Valve.VR.SteamVR_Action_In_Source_Map`1::updatingSources
	List_1_tE1526161A558A17A39A8B69D8EEF3801393B6226 * ___updatingSources_8;

public:
	inline static int32_t get_offset_of_updatingSources_8() { return static_cast<int32_t>(offsetof(SteamVR_Action_In_Source_Map_1_tE08712080E22D9A4BAF4C436860AA6226B5FC72D, ___updatingSources_8)); }
	inline List_1_tE1526161A558A17A39A8B69D8EEF3801393B6226 * get_updatingSources_8() const { return ___updatingSources_8; }
	inline List_1_tE1526161A558A17A39A8B69D8EEF3801393B6226 ** get_address_of_updatingSources_8() { return &___updatingSources_8; }
	inline void set_updatingSources_8(List_1_tE1526161A558A17A39A8B69D8EEF3801393B6226 * value)
	{
		___updatingSources_8 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___updatingSources_8), (void*)value);
	}
};


// Valve.VR.SteamVR_Action_Pose_Source
struct SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27  : public SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB
{
public:
	// Valve.VR.ETrackingUniverseOrigin Valve.VR.SteamVR_Action_Pose_Source::universeOrigin
	int32_t ___universeOrigin_10;
	// System.Single Valve.VR.SteamVR_Action_Pose_Source::changeTolerance
	float ___changeTolerance_12;
	// Valve.VR.SteamVR_Action_Pose/ActiveChangeHandler Valve.VR.SteamVR_Action_Pose_Source::onActiveChange
	ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * ___onActiveChange_13;
	// Valve.VR.SteamVR_Action_Pose/ActiveChangeHandler Valve.VR.SteamVR_Action_Pose_Source::onActiveBindingChange
	ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * ___onActiveBindingChange_14;
	// Valve.VR.SteamVR_Action_Pose/ChangeHandler Valve.VR.SteamVR_Action_Pose_Source::onChange
	ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE * ___onChange_15;
	// Valve.VR.SteamVR_Action_Pose/UpdateHandler Valve.VR.SteamVR_Action_Pose_Source::onUpdate
	UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 * ___onUpdate_16;
	// Valve.VR.SteamVR_Action_Pose/TrackingChangeHandler Valve.VR.SteamVR_Action_Pose_Source::onTrackingChanged
	TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 * ___onTrackingChanged_17;
	// Valve.VR.SteamVR_Action_Pose/ValidPoseChangeHandler Valve.VR.SteamVR_Action_Pose_Source::onValidPoseChanged
	ValidPoseChangeHandler_t1D487A0B0E2FB0D02C72EF5365E81BCD3E33B41A * ___onValidPoseChanged_18;
	// Valve.VR.SteamVR_Action_Pose/DeviceConnectedChangeHandler Valve.VR.SteamVR_Action_Pose_Source::onDeviceConnectedChanged
	DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 * ___onDeviceConnectedChanged_19;
	// System.Boolean Valve.VR.SteamVR_Action_Pose_Source::<changed>k__BackingField
	bool ___U3CchangedU3Ek__BackingField_20;
	// System.Boolean Valve.VR.SteamVR_Action_Pose_Source::<lastChanged>k__BackingField
	bool ___U3ClastChangedU3Ek__BackingField_21;
	// System.Boolean Valve.VR.SteamVR_Action_Pose_Source::<lastActive>k__BackingField
	bool ___U3ClastActiveU3Ek__BackingField_22;
	// UnityEngine.Vector3 Valve.VR.SteamVR_Action_Pose_Source::<localPosition>k__BackingField
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___U3ClocalPositionU3Ek__BackingField_23;
	// UnityEngine.Quaternion Valve.VR.SteamVR_Action_Pose_Source::<localRotation>k__BackingField
	Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___U3ClocalRotationU3Ek__BackingField_24;
	// UnityEngine.Vector3 Valve.VR.SteamVR_Action_Pose_Source::<lastLocalPosition>k__BackingField
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___U3ClastLocalPositionU3Ek__BackingField_25;
	// UnityEngine.Quaternion Valve.VR.SteamVR_Action_Pose_Source::<lastLocalRotation>k__BackingField
	Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___U3ClastLocalRotationU3Ek__BackingField_26;
	// UnityEngine.Vector3 Valve.VR.SteamVR_Action_Pose_Source::<velocity>k__BackingField
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___U3CvelocityU3Ek__BackingField_27;
	// UnityEngine.Vector3 Valve.VR.SteamVR_Action_Pose_Source::<lastVelocity>k__BackingField
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___U3ClastVelocityU3Ek__BackingField_28;
	// UnityEngine.Vector3 Valve.VR.SteamVR_Action_Pose_Source::<angularVelocity>k__BackingField
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___U3CangularVelocityU3Ek__BackingField_29;
	// UnityEngine.Vector3 Valve.VR.SteamVR_Action_Pose_Source::<lastAngularVelocity>k__BackingField
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___U3ClastAngularVelocityU3Ek__BackingField_30;
	// Valve.VR.InputPoseActionData_t Valve.VR.SteamVR_Action_Pose_Source::poseActionData
	InputPoseActionData_t_tC282FD2CB85805431D2F23AF9C032BAD99683111  ___poseActionData_31;
	// Valve.VR.InputPoseActionData_t Valve.VR.SteamVR_Action_Pose_Source::lastPoseActionData
	InputPoseActionData_t_tC282FD2CB85805431D2F23AF9C032BAD99683111  ___lastPoseActionData_32;
	// Valve.VR.InputPoseActionData_t Valve.VR.SteamVR_Action_Pose_Source::tempPoseActionData
	InputPoseActionData_t_tC282FD2CB85805431D2F23AF9C032BAD99683111  ___tempPoseActionData_33;
	// Valve.VR.SteamVR_Action_Pose Valve.VR.SteamVR_Action_Pose_Source::poseAction
	SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * ___poseAction_34;

public:
	inline static int32_t get_offset_of_universeOrigin_10() { return static_cast<int32_t>(offsetof(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27, ___universeOrigin_10)); }
	inline int32_t get_universeOrigin_10() const { return ___universeOrigin_10; }
	inline int32_t* get_address_of_universeOrigin_10() { return &___universeOrigin_10; }
	inline void set_universeOrigin_10(int32_t value)
	{
		___universeOrigin_10 = value;
	}

	inline static int32_t get_offset_of_changeTolerance_12() { return static_cast<int32_t>(offsetof(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27, ___changeTolerance_12)); }
	inline float get_changeTolerance_12() const { return ___changeTolerance_12; }
	inline float* get_address_of_changeTolerance_12() { return &___changeTolerance_12; }
	inline void set_changeTolerance_12(float value)
	{
		___changeTolerance_12 = value;
	}

	inline static int32_t get_offset_of_onActiveChange_13() { return static_cast<int32_t>(offsetof(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27, ___onActiveChange_13)); }
	inline ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * get_onActiveChange_13() const { return ___onActiveChange_13; }
	inline ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E ** get_address_of_onActiveChange_13() { return &___onActiveChange_13; }
	inline void set_onActiveChange_13(ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * value)
	{
		___onActiveChange_13 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onActiveChange_13), (void*)value);
	}

	inline static int32_t get_offset_of_onActiveBindingChange_14() { return static_cast<int32_t>(offsetof(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27, ___onActiveBindingChange_14)); }
	inline ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * get_onActiveBindingChange_14() const { return ___onActiveBindingChange_14; }
	inline ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E ** get_address_of_onActiveBindingChange_14() { return &___onActiveBindingChange_14; }
	inline void set_onActiveBindingChange_14(ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * value)
	{
		___onActiveBindingChange_14 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onActiveBindingChange_14), (void*)value);
	}

	inline static int32_t get_offset_of_onChange_15() { return static_cast<int32_t>(offsetof(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27, ___onChange_15)); }
	inline ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE * get_onChange_15() const { return ___onChange_15; }
	inline ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE ** get_address_of_onChange_15() { return &___onChange_15; }
	inline void set_onChange_15(ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE * value)
	{
		___onChange_15 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onChange_15), (void*)value);
	}

	inline static int32_t get_offset_of_onUpdate_16() { return static_cast<int32_t>(offsetof(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27, ___onUpdate_16)); }
	inline UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 * get_onUpdate_16() const { return ___onUpdate_16; }
	inline UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 ** get_address_of_onUpdate_16() { return &___onUpdate_16; }
	inline void set_onUpdate_16(UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 * value)
	{
		___onUpdate_16 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onUpdate_16), (void*)value);
	}

	inline static int32_t get_offset_of_onTrackingChanged_17() { return static_cast<int32_t>(offsetof(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27, ___onTrackingChanged_17)); }
	inline TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 * get_onTrackingChanged_17() const { return ___onTrackingChanged_17; }
	inline TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 ** get_address_of_onTrackingChanged_17() { return &___onTrackingChanged_17; }
	inline void set_onTrackingChanged_17(TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 * value)
	{
		___onTrackingChanged_17 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onTrackingChanged_17), (void*)value);
	}

	inline static int32_t get_offset_of_onValidPoseChanged_18() { return static_cast<int32_t>(offsetof(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27, ___onValidPoseChanged_18)); }
	inline ValidPoseChangeHandler_t1D487A0B0E2FB0D02C72EF5365E81BCD3E33B41A * get_onValidPoseChanged_18() const { return ___onValidPoseChanged_18; }
	inline ValidPoseChangeHandler_t1D487A0B0E2FB0D02C72EF5365E81BCD3E33B41A ** get_address_of_onValidPoseChanged_18() { return &___onValidPoseChanged_18; }
	inline void set_onValidPoseChanged_18(ValidPoseChangeHandler_t1D487A0B0E2FB0D02C72EF5365E81BCD3E33B41A * value)
	{
		___onValidPoseChanged_18 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onValidPoseChanged_18), (void*)value);
	}

	inline static int32_t get_offset_of_onDeviceConnectedChanged_19() { return static_cast<int32_t>(offsetof(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27, ___onDeviceConnectedChanged_19)); }
	inline DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 * get_onDeviceConnectedChanged_19() const { return ___onDeviceConnectedChanged_19; }
	inline DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 ** get_address_of_onDeviceConnectedChanged_19() { return &___onDeviceConnectedChanged_19; }
	inline void set_onDeviceConnectedChanged_19(DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 * value)
	{
		___onDeviceConnectedChanged_19 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onDeviceConnectedChanged_19), (void*)value);
	}

	inline static int32_t get_offset_of_U3CchangedU3Ek__BackingField_20() { return static_cast<int32_t>(offsetof(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27, ___U3CchangedU3Ek__BackingField_20)); }
	inline bool get_U3CchangedU3Ek__BackingField_20() const { return ___U3CchangedU3Ek__BackingField_20; }
	inline bool* get_address_of_U3CchangedU3Ek__BackingField_20() { return &___U3CchangedU3Ek__BackingField_20; }
	inline void set_U3CchangedU3Ek__BackingField_20(bool value)
	{
		___U3CchangedU3Ek__BackingField_20 = value;
	}

	inline static int32_t get_offset_of_U3ClastChangedU3Ek__BackingField_21() { return static_cast<int32_t>(offsetof(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27, ___U3ClastChangedU3Ek__BackingField_21)); }
	inline bool get_U3ClastChangedU3Ek__BackingField_21() const { return ___U3ClastChangedU3Ek__BackingField_21; }
	inline bool* get_address_of_U3ClastChangedU3Ek__BackingField_21() { return &___U3ClastChangedU3Ek__BackingField_21; }
	inline void set_U3ClastChangedU3Ek__BackingField_21(bool value)
	{
		___U3ClastChangedU3Ek__BackingField_21 = value;
	}

	inline static int32_t get_offset_of_U3ClastActiveU3Ek__BackingField_22() { return static_cast<int32_t>(offsetof(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27, ___U3ClastActiveU3Ek__BackingField_22)); }
	inline bool get_U3ClastActiveU3Ek__BackingField_22() const { return ___U3ClastActiveU3Ek__BackingField_22; }
	inline bool* get_address_of_U3ClastActiveU3Ek__BackingField_22() { return &___U3ClastActiveU3Ek__BackingField_22; }
	inline void set_U3ClastActiveU3Ek__BackingField_22(bool value)
	{
		___U3ClastActiveU3Ek__BackingField_22 = value;
	}

	inline static int32_t get_offset_of_U3ClocalPositionU3Ek__BackingField_23() { return static_cast<int32_t>(offsetof(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27, ___U3ClocalPositionU3Ek__BackingField_23)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_U3ClocalPositionU3Ek__BackingField_23() const { return ___U3ClocalPositionU3Ek__BackingField_23; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_U3ClocalPositionU3Ek__BackingField_23() { return &___U3ClocalPositionU3Ek__BackingField_23; }
	inline void set_U3ClocalPositionU3Ek__BackingField_23(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___U3ClocalPositionU3Ek__BackingField_23 = value;
	}

	inline static int32_t get_offset_of_U3ClocalRotationU3Ek__BackingField_24() { return static_cast<int32_t>(offsetof(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27, ___U3ClocalRotationU3Ek__BackingField_24)); }
	inline Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  get_U3ClocalRotationU3Ek__BackingField_24() const { return ___U3ClocalRotationU3Ek__BackingField_24; }
	inline Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 * get_address_of_U3ClocalRotationU3Ek__BackingField_24() { return &___U3ClocalRotationU3Ek__BackingField_24; }
	inline void set_U3ClocalRotationU3Ek__BackingField_24(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  value)
	{
		___U3ClocalRotationU3Ek__BackingField_24 = value;
	}

	inline static int32_t get_offset_of_U3ClastLocalPositionU3Ek__BackingField_25() { return static_cast<int32_t>(offsetof(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27, ___U3ClastLocalPositionU3Ek__BackingField_25)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_U3ClastLocalPositionU3Ek__BackingField_25() const { return ___U3ClastLocalPositionU3Ek__BackingField_25; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_U3ClastLocalPositionU3Ek__BackingField_25() { return &___U3ClastLocalPositionU3Ek__BackingField_25; }
	inline void set_U3ClastLocalPositionU3Ek__BackingField_25(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___U3ClastLocalPositionU3Ek__BackingField_25 = value;
	}

	inline static int32_t get_offset_of_U3ClastLocalRotationU3Ek__BackingField_26() { return static_cast<int32_t>(offsetof(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27, ___U3ClastLocalRotationU3Ek__BackingField_26)); }
	inline Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  get_U3ClastLocalRotationU3Ek__BackingField_26() const { return ___U3ClastLocalRotationU3Ek__BackingField_26; }
	inline Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 * get_address_of_U3ClastLocalRotationU3Ek__BackingField_26() { return &___U3ClastLocalRotationU3Ek__BackingField_26; }
	inline void set_U3ClastLocalRotationU3Ek__BackingField_26(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  value)
	{
		___U3ClastLocalRotationU3Ek__BackingField_26 = value;
	}

	inline static int32_t get_offset_of_U3CvelocityU3Ek__BackingField_27() { return static_cast<int32_t>(offsetof(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27, ___U3CvelocityU3Ek__BackingField_27)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_U3CvelocityU3Ek__BackingField_27() const { return ___U3CvelocityU3Ek__BackingField_27; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_U3CvelocityU3Ek__BackingField_27() { return &___U3CvelocityU3Ek__BackingField_27; }
	inline void set_U3CvelocityU3Ek__BackingField_27(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___U3CvelocityU3Ek__BackingField_27 = value;
	}

	inline static int32_t get_offset_of_U3ClastVelocityU3Ek__BackingField_28() { return static_cast<int32_t>(offsetof(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27, ___U3ClastVelocityU3Ek__BackingField_28)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_U3ClastVelocityU3Ek__BackingField_28() const { return ___U3ClastVelocityU3Ek__BackingField_28; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_U3ClastVelocityU3Ek__BackingField_28() { return &___U3ClastVelocityU3Ek__BackingField_28; }
	inline void set_U3ClastVelocityU3Ek__BackingField_28(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___U3ClastVelocityU3Ek__BackingField_28 = value;
	}

	inline static int32_t get_offset_of_U3CangularVelocityU3Ek__BackingField_29() { return static_cast<int32_t>(offsetof(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27, ___U3CangularVelocityU3Ek__BackingField_29)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_U3CangularVelocityU3Ek__BackingField_29() const { return ___U3CangularVelocityU3Ek__BackingField_29; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_U3CangularVelocityU3Ek__BackingField_29() { return &___U3CangularVelocityU3Ek__BackingField_29; }
	inline void set_U3CangularVelocityU3Ek__BackingField_29(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___U3CangularVelocityU3Ek__BackingField_29 = value;
	}

	inline static int32_t get_offset_of_U3ClastAngularVelocityU3Ek__BackingField_30() { return static_cast<int32_t>(offsetof(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27, ___U3ClastAngularVelocityU3Ek__BackingField_30)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_U3ClastAngularVelocityU3Ek__BackingField_30() const { return ___U3ClastAngularVelocityU3Ek__BackingField_30; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_U3ClastAngularVelocityU3Ek__BackingField_30() { return &___U3ClastAngularVelocityU3Ek__BackingField_30; }
	inline void set_U3ClastAngularVelocityU3Ek__BackingField_30(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___U3ClastAngularVelocityU3Ek__BackingField_30 = value;
	}

	inline static int32_t get_offset_of_poseActionData_31() { return static_cast<int32_t>(offsetof(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27, ___poseActionData_31)); }
	inline InputPoseActionData_t_tC282FD2CB85805431D2F23AF9C032BAD99683111  get_poseActionData_31() const { return ___poseActionData_31; }
	inline InputPoseActionData_t_tC282FD2CB85805431D2F23AF9C032BAD99683111 * get_address_of_poseActionData_31() { return &___poseActionData_31; }
	inline void set_poseActionData_31(InputPoseActionData_t_tC282FD2CB85805431D2F23AF9C032BAD99683111  value)
	{
		___poseActionData_31 = value;
	}

	inline static int32_t get_offset_of_lastPoseActionData_32() { return static_cast<int32_t>(offsetof(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27, ___lastPoseActionData_32)); }
	inline InputPoseActionData_t_tC282FD2CB85805431D2F23AF9C032BAD99683111  get_lastPoseActionData_32() const { return ___lastPoseActionData_32; }
	inline InputPoseActionData_t_tC282FD2CB85805431D2F23AF9C032BAD99683111 * get_address_of_lastPoseActionData_32() { return &___lastPoseActionData_32; }
	inline void set_lastPoseActionData_32(InputPoseActionData_t_tC282FD2CB85805431D2F23AF9C032BAD99683111  value)
	{
		___lastPoseActionData_32 = value;
	}

	inline static int32_t get_offset_of_tempPoseActionData_33() { return static_cast<int32_t>(offsetof(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27, ___tempPoseActionData_33)); }
	inline InputPoseActionData_t_tC282FD2CB85805431D2F23AF9C032BAD99683111  get_tempPoseActionData_33() const { return ___tempPoseActionData_33; }
	inline InputPoseActionData_t_tC282FD2CB85805431D2F23AF9C032BAD99683111 * get_address_of_tempPoseActionData_33() { return &___tempPoseActionData_33; }
	inline void set_tempPoseActionData_33(InputPoseActionData_t_tC282FD2CB85805431D2F23AF9C032BAD99683111  value)
	{
		___tempPoseActionData_33 = value;
	}

	inline static int32_t get_offset_of_poseAction_34() { return static_cast<int32_t>(offsetof(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27, ___poseAction_34)); }
	inline SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * get_poseAction_34() const { return ___poseAction_34; }
	inline SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C ** get_address_of_poseAction_34() { return &___poseAction_34; }
	inline void set_poseAction_34(SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * value)
	{
		___poseAction_34 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___poseAction_34), (void*)value);
	}
};

struct SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27_StaticFields
{
public:
	// System.UInt32 Valve.VR.SteamVR_Action_Pose_Source::poseActionData_size
	uint32_t ___poseActionData_size_11;
	// System.Single Valve.VR.SteamVR_Action_Pose_Source::framesAhead
	float ___framesAhead_35;

public:
	inline static int32_t get_offset_of_poseActionData_size_11() { return static_cast<int32_t>(offsetof(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27_StaticFields, ___poseActionData_size_11)); }
	inline uint32_t get_poseActionData_size_11() const { return ___poseActionData_size_11; }
	inline uint32_t* get_address_of_poseActionData_size_11() { return &___poseActionData_size_11; }
	inline void set_poseActionData_size_11(uint32_t value)
	{
		___poseActionData_size_11 = value;
	}

	inline static int32_t get_offset_of_framesAhead_35() { return static_cast<int32_t>(offsetof(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27_StaticFields, ___framesAhead_35)); }
	inline float get_framesAhead_35() const { return ___framesAhead_35; }
	inline float* get_address_of_framesAhead_35() { return &___framesAhead_35; }
	inline void set_framesAhead_35(float value)
	{
		___framesAhead_35 = value;
	}
};


// Valve.VR.SteamVR_Action_Single_Source
struct SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F  : public SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB
{
public:
	// System.Single Valve.VR.SteamVR_Action_Single_Source::changeTolerance
	float ___changeTolerance_11;
	// Valve.VR.SteamVR_Action_Single/AxisHandler Valve.VR.SteamVR_Action_Single_Source::onAxis
	AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 * ___onAxis_12;
	// Valve.VR.SteamVR_Action_Single/ActiveChangeHandler Valve.VR.SteamVR_Action_Single_Source::onActiveChange
	ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * ___onActiveChange_13;
	// Valve.VR.SteamVR_Action_Single/ActiveChangeHandler Valve.VR.SteamVR_Action_Single_Source::onActiveBindingChange
	ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * ___onActiveBindingChange_14;
	// Valve.VR.SteamVR_Action_Single/ChangeHandler Valve.VR.SteamVR_Action_Single_Source::onChange
	ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED * ___onChange_15;
	// Valve.VR.SteamVR_Action_Single/UpdateHandler Valve.VR.SteamVR_Action_Single_Source::onUpdate
	UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D * ___onUpdate_16;
	// System.Boolean Valve.VR.SteamVR_Action_Single_Source::<changed>k__BackingField
	bool ___U3CchangedU3Ek__BackingField_17;
	// System.Boolean Valve.VR.SteamVR_Action_Single_Source::<lastChanged>k__BackingField
	bool ___U3ClastChangedU3Ek__BackingField_18;
	// System.Boolean Valve.VR.SteamVR_Action_Single_Source::<lastActive>k__BackingField
	bool ___U3ClastActiveU3Ek__BackingField_19;
	// Valve.VR.InputAnalogActionData_t Valve.VR.SteamVR_Action_Single_Source::actionData
	InputAnalogActionData_t_t6C7615BD7F4223A4ADA9268DDF501D09B3C808CA  ___actionData_20;
	// Valve.VR.InputAnalogActionData_t Valve.VR.SteamVR_Action_Single_Source::lastActionData
	InputAnalogActionData_t_t6C7615BD7F4223A4ADA9268DDF501D09B3C808CA  ___lastActionData_21;
	// Valve.VR.SteamVR_Action_Single Valve.VR.SteamVR_Action_Single_Source::singleAction
	SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * ___singleAction_22;

public:
	inline static int32_t get_offset_of_changeTolerance_11() { return static_cast<int32_t>(offsetof(SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F, ___changeTolerance_11)); }
	inline float get_changeTolerance_11() const { return ___changeTolerance_11; }
	inline float* get_address_of_changeTolerance_11() { return &___changeTolerance_11; }
	inline void set_changeTolerance_11(float value)
	{
		___changeTolerance_11 = value;
	}

	inline static int32_t get_offset_of_onAxis_12() { return static_cast<int32_t>(offsetof(SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F, ___onAxis_12)); }
	inline AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 * get_onAxis_12() const { return ___onAxis_12; }
	inline AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 ** get_address_of_onAxis_12() { return &___onAxis_12; }
	inline void set_onAxis_12(AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 * value)
	{
		___onAxis_12 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onAxis_12), (void*)value);
	}

	inline static int32_t get_offset_of_onActiveChange_13() { return static_cast<int32_t>(offsetof(SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F, ___onActiveChange_13)); }
	inline ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * get_onActiveChange_13() const { return ___onActiveChange_13; }
	inline ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE ** get_address_of_onActiveChange_13() { return &___onActiveChange_13; }
	inline void set_onActiveChange_13(ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * value)
	{
		___onActiveChange_13 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onActiveChange_13), (void*)value);
	}

	inline static int32_t get_offset_of_onActiveBindingChange_14() { return static_cast<int32_t>(offsetof(SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F, ___onActiveBindingChange_14)); }
	inline ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * get_onActiveBindingChange_14() const { return ___onActiveBindingChange_14; }
	inline ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE ** get_address_of_onActiveBindingChange_14() { return &___onActiveBindingChange_14; }
	inline void set_onActiveBindingChange_14(ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * value)
	{
		___onActiveBindingChange_14 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onActiveBindingChange_14), (void*)value);
	}

	inline static int32_t get_offset_of_onChange_15() { return static_cast<int32_t>(offsetof(SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F, ___onChange_15)); }
	inline ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED * get_onChange_15() const { return ___onChange_15; }
	inline ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED ** get_address_of_onChange_15() { return &___onChange_15; }
	inline void set_onChange_15(ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED * value)
	{
		___onChange_15 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onChange_15), (void*)value);
	}

	inline static int32_t get_offset_of_onUpdate_16() { return static_cast<int32_t>(offsetof(SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F, ___onUpdate_16)); }
	inline UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D * get_onUpdate_16() const { return ___onUpdate_16; }
	inline UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D ** get_address_of_onUpdate_16() { return &___onUpdate_16; }
	inline void set_onUpdate_16(UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D * value)
	{
		___onUpdate_16 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onUpdate_16), (void*)value);
	}

	inline static int32_t get_offset_of_U3CchangedU3Ek__BackingField_17() { return static_cast<int32_t>(offsetof(SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F, ___U3CchangedU3Ek__BackingField_17)); }
	inline bool get_U3CchangedU3Ek__BackingField_17() const { return ___U3CchangedU3Ek__BackingField_17; }
	inline bool* get_address_of_U3CchangedU3Ek__BackingField_17() { return &___U3CchangedU3Ek__BackingField_17; }
	inline void set_U3CchangedU3Ek__BackingField_17(bool value)
	{
		___U3CchangedU3Ek__BackingField_17 = value;
	}

	inline static int32_t get_offset_of_U3ClastChangedU3Ek__BackingField_18() { return static_cast<int32_t>(offsetof(SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F, ___U3ClastChangedU3Ek__BackingField_18)); }
	inline bool get_U3ClastChangedU3Ek__BackingField_18() const { return ___U3ClastChangedU3Ek__BackingField_18; }
	inline bool* get_address_of_U3ClastChangedU3Ek__BackingField_18() { return &___U3ClastChangedU3Ek__BackingField_18; }
	inline void set_U3ClastChangedU3Ek__BackingField_18(bool value)
	{
		___U3ClastChangedU3Ek__BackingField_18 = value;
	}

	inline static int32_t get_offset_of_U3ClastActiveU3Ek__BackingField_19() { return static_cast<int32_t>(offsetof(SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F, ___U3ClastActiveU3Ek__BackingField_19)); }
	inline bool get_U3ClastActiveU3Ek__BackingField_19() const { return ___U3ClastActiveU3Ek__BackingField_19; }
	inline bool* get_address_of_U3ClastActiveU3Ek__BackingField_19() { return &___U3ClastActiveU3Ek__BackingField_19; }
	inline void set_U3ClastActiveU3Ek__BackingField_19(bool value)
	{
		___U3ClastActiveU3Ek__BackingField_19 = value;
	}

	inline static int32_t get_offset_of_actionData_20() { return static_cast<int32_t>(offsetof(SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F, ___actionData_20)); }
	inline InputAnalogActionData_t_t6C7615BD7F4223A4ADA9268DDF501D09B3C808CA  get_actionData_20() const { return ___actionData_20; }
	inline InputAnalogActionData_t_t6C7615BD7F4223A4ADA9268DDF501D09B3C808CA * get_address_of_actionData_20() { return &___actionData_20; }
	inline void set_actionData_20(InputAnalogActionData_t_t6C7615BD7F4223A4ADA9268DDF501D09B3C808CA  value)
	{
		___actionData_20 = value;
	}

	inline static int32_t get_offset_of_lastActionData_21() { return static_cast<int32_t>(offsetof(SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F, ___lastActionData_21)); }
	inline InputAnalogActionData_t_t6C7615BD7F4223A4ADA9268DDF501D09B3C808CA  get_lastActionData_21() const { return ___lastActionData_21; }
	inline InputAnalogActionData_t_t6C7615BD7F4223A4ADA9268DDF501D09B3C808CA * get_address_of_lastActionData_21() { return &___lastActionData_21; }
	inline void set_lastActionData_21(InputAnalogActionData_t_t6C7615BD7F4223A4ADA9268DDF501D09B3C808CA  value)
	{
		___lastActionData_21 = value;
	}

	inline static int32_t get_offset_of_singleAction_22() { return static_cast<int32_t>(offsetof(SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F, ___singleAction_22)); }
	inline SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * get_singleAction_22() const { return ___singleAction_22; }
	inline SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 ** get_address_of_singleAction_22() { return &___singleAction_22; }
	inline void set_singleAction_22(SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * value)
	{
		___singleAction_22 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___singleAction_22), (void*)value);
	}
};

struct SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F_StaticFields
{
public:
	// System.UInt32 Valve.VR.SteamVR_Action_Single_Source::actionData_size
	uint32_t ___actionData_size_10;

public:
	inline static int32_t get_offset_of_actionData_size_10() { return static_cast<int32_t>(offsetof(SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F_StaticFields, ___actionData_size_10)); }
	inline uint32_t get_actionData_size_10() const { return ___actionData_size_10; }
	inline uint32_t* get_address_of_actionData_size_10() { return &___actionData_size_10; }
	inline void set_actionData_size_10(uint32_t value)
	{
		___actionData_size_10 = value;
	}
};


// Valve.VR.SteamVR_Action_Vector2_Source
struct SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1  : public SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB
{
public:
	// System.Single Valve.VR.SteamVR_Action_Vector2_Source::changeTolerance
	float ___changeTolerance_11;
	// Valve.VR.SteamVR_Action_Vector2/AxisHandler Valve.VR.SteamVR_Action_Vector2_Source::onAxis
	AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 * ___onAxis_12;
	// Valve.VR.SteamVR_Action_Vector2/ActiveChangeHandler Valve.VR.SteamVR_Action_Vector2_Source::onActiveChange
	ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * ___onActiveChange_13;
	// Valve.VR.SteamVR_Action_Vector2/ActiveChangeHandler Valve.VR.SteamVR_Action_Vector2_Source::onActiveBindingChange
	ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * ___onActiveBindingChange_14;
	// Valve.VR.SteamVR_Action_Vector2/ChangeHandler Valve.VR.SteamVR_Action_Vector2_Source::onChange
	ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 * ___onChange_15;
	// Valve.VR.SteamVR_Action_Vector2/UpdateHandler Valve.VR.SteamVR_Action_Vector2_Source::onUpdate
	UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 * ___onUpdate_16;
	// UnityEngine.Vector2 Valve.VR.SteamVR_Action_Vector2_Source::<axis>k__BackingField
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___U3CaxisU3Ek__BackingField_17;
	// UnityEngine.Vector2 Valve.VR.SteamVR_Action_Vector2_Source::<lastAxis>k__BackingField
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___U3ClastAxisU3Ek__BackingField_18;
	// UnityEngine.Vector2 Valve.VR.SteamVR_Action_Vector2_Source::<delta>k__BackingField
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___U3CdeltaU3Ek__BackingField_19;
	// UnityEngine.Vector2 Valve.VR.SteamVR_Action_Vector2_Source::<lastDelta>k__BackingField
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___U3ClastDeltaU3Ek__BackingField_20;
	// System.Boolean Valve.VR.SteamVR_Action_Vector2_Source::<changed>k__BackingField
	bool ___U3CchangedU3Ek__BackingField_21;
	// System.Boolean Valve.VR.SteamVR_Action_Vector2_Source::<lastChanged>k__BackingField
	bool ___U3ClastChangedU3Ek__BackingField_22;
	// System.Boolean Valve.VR.SteamVR_Action_Vector2_Source::<lastActive>k__BackingField
	bool ___U3ClastActiveU3Ek__BackingField_23;
	// Valve.VR.InputAnalogActionData_t Valve.VR.SteamVR_Action_Vector2_Source::actionData
	InputAnalogActionData_t_t6C7615BD7F4223A4ADA9268DDF501D09B3C808CA  ___actionData_24;
	// Valve.VR.InputAnalogActionData_t Valve.VR.SteamVR_Action_Vector2_Source::lastActionData
	InputAnalogActionData_t_t6C7615BD7F4223A4ADA9268DDF501D09B3C808CA  ___lastActionData_25;
	// Valve.VR.SteamVR_Action_Vector2 Valve.VR.SteamVR_Action_Vector2_Source::vector2Action
	SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * ___vector2Action_26;

public:
	inline static int32_t get_offset_of_changeTolerance_11() { return static_cast<int32_t>(offsetof(SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1, ___changeTolerance_11)); }
	inline float get_changeTolerance_11() const { return ___changeTolerance_11; }
	inline float* get_address_of_changeTolerance_11() { return &___changeTolerance_11; }
	inline void set_changeTolerance_11(float value)
	{
		___changeTolerance_11 = value;
	}

	inline static int32_t get_offset_of_onAxis_12() { return static_cast<int32_t>(offsetof(SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1, ___onAxis_12)); }
	inline AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 * get_onAxis_12() const { return ___onAxis_12; }
	inline AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 ** get_address_of_onAxis_12() { return &___onAxis_12; }
	inline void set_onAxis_12(AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 * value)
	{
		___onAxis_12 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onAxis_12), (void*)value);
	}

	inline static int32_t get_offset_of_onActiveChange_13() { return static_cast<int32_t>(offsetof(SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1, ___onActiveChange_13)); }
	inline ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * get_onActiveChange_13() const { return ___onActiveChange_13; }
	inline ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 ** get_address_of_onActiveChange_13() { return &___onActiveChange_13; }
	inline void set_onActiveChange_13(ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * value)
	{
		___onActiveChange_13 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onActiveChange_13), (void*)value);
	}

	inline static int32_t get_offset_of_onActiveBindingChange_14() { return static_cast<int32_t>(offsetof(SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1, ___onActiveBindingChange_14)); }
	inline ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * get_onActiveBindingChange_14() const { return ___onActiveBindingChange_14; }
	inline ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 ** get_address_of_onActiveBindingChange_14() { return &___onActiveBindingChange_14; }
	inline void set_onActiveBindingChange_14(ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * value)
	{
		___onActiveBindingChange_14 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onActiveBindingChange_14), (void*)value);
	}

	inline static int32_t get_offset_of_onChange_15() { return static_cast<int32_t>(offsetof(SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1, ___onChange_15)); }
	inline ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 * get_onChange_15() const { return ___onChange_15; }
	inline ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 ** get_address_of_onChange_15() { return &___onChange_15; }
	inline void set_onChange_15(ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 * value)
	{
		___onChange_15 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onChange_15), (void*)value);
	}

	inline static int32_t get_offset_of_onUpdate_16() { return static_cast<int32_t>(offsetof(SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1, ___onUpdate_16)); }
	inline UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 * get_onUpdate_16() const { return ___onUpdate_16; }
	inline UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 ** get_address_of_onUpdate_16() { return &___onUpdate_16; }
	inline void set_onUpdate_16(UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 * value)
	{
		___onUpdate_16 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onUpdate_16), (void*)value);
	}

	inline static int32_t get_offset_of_U3CaxisU3Ek__BackingField_17() { return static_cast<int32_t>(offsetof(SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1, ___U3CaxisU3Ek__BackingField_17)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_U3CaxisU3Ek__BackingField_17() const { return ___U3CaxisU3Ek__BackingField_17; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_U3CaxisU3Ek__BackingField_17() { return &___U3CaxisU3Ek__BackingField_17; }
	inline void set_U3CaxisU3Ek__BackingField_17(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___U3CaxisU3Ek__BackingField_17 = value;
	}

	inline static int32_t get_offset_of_U3ClastAxisU3Ek__BackingField_18() { return static_cast<int32_t>(offsetof(SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1, ___U3ClastAxisU3Ek__BackingField_18)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_U3ClastAxisU3Ek__BackingField_18() const { return ___U3ClastAxisU3Ek__BackingField_18; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_U3ClastAxisU3Ek__BackingField_18() { return &___U3ClastAxisU3Ek__BackingField_18; }
	inline void set_U3ClastAxisU3Ek__BackingField_18(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___U3ClastAxisU3Ek__BackingField_18 = value;
	}

	inline static int32_t get_offset_of_U3CdeltaU3Ek__BackingField_19() { return static_cast<int32_t>(offsetof(SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1, ___U3CdeltaU3Ek__BackingField_19)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_U3CdeltaU3Ek__BackingField_19() const { return ___U3CdeltaU3Ek__BackingField_19; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_U3CdeltaU3Ek__BackingField_19() { return &___U3CdeltaU3Ek__BackingField_19; }
	inline void set_U3CdeltaU3Ek__BackingField_19(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___U3CdeltaU3Ek__BackingField_19 = value;
	}

	inline static int32_t get_offset_of_U3ClastDeltaU3Ek__BackingField_20() { return static_cast<int32_t>(offsetof(SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1, ___U3ClastDeltaU3Ek__BackingField_20)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_U3ClastDeltaU3Ek__BackingField_20() const { return ___U3ClastDeltaU3Ek__BackingField_20; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_U3ClastDeltaU3Ek__BackingField_20() { return &___U3ClastDeltaU3Ek__BackingField_20; }
	inline void set_U3ClastDeltaU3Ek__BackingField_20(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___U3ClastDeltaU3Ek__BackingField_20 = value;
	}

	inline static int32_t get_offset_of_U3CchangedU3Ek__BackingField_21() { return static_cast<int32_t>(offsetof(SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1, ___U3CchangedU3Ek__BackingField_21)); }
	inline bool get_U3CchangedU3Ek__BackingField_21() const { return ___U3CchangedU3Ek__BackingField_21; }
	inline bool* get_address_of_U3CchangedU3Ek__BackingField_21() { return &___U3CchangedU3Ek__BackingField_21; }
	inline void set_U3CchangedU3Ek__BackingField_21(bool value)
	{
		___U3CchangedU3Ek__BackingField_21 = value;
	}

	inline static int32_t get_offset_of_U3ClastChangedU3Ek__BackingField_22() { return static_cast<int32_t>(offsetof(SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1, ___U3ClastChangedU3Ek__BackingField_22)); }
	inline bool get_U3ClastChangedU3Ek__BackingField_22() const { return ___U3ClastChangedU3Ek__BackingField_22; }
	inline bool* get_address_of_U3ClastChangedU3Ek__BackingField_22() { return &___U3ClastChangedU3Ek__BackingField_22; }
	inline void set_U3ClastChangedU3Ek__BackingField_22(bool value)
	{
		___U3ClastChangedU3Ek__BackingField_22 = value;
	}

	inline static int32_t get_offset_of_U3ClastActiveU3Ek__BackingField_23() { return static_cast<int32_t>(offsetof(SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1, ___U3ClastActiveU3Ek__BackingField_23)); }
	inline bool get_U3ClastActiveU3Ek__BackingField_23() const { return ___U3ClastActiveU3Ek__BackingField_23; }
	inline bool* get_address_of_U3ClastActiveU3Ek__BackingField_23() { return &___U3ClastActiveU3Ek__BackingField_23; }
	inline void set_U3ClastActiveU3Ek__BackingField_23(bool value)
	{
		___U3ClastActiveU3Ek__BackingField_23 = value;
	}

	inline static int32_t get_offset_of_actionData_24() { return static_cast<int32_t>(offsetof(SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1, ___actionData_24)); }
	inline InputAnalogActionData_t_t6C7615BD7F4223A4ADA9268DDF501D09B3C808CA  get_actionData_24() const { return ___actionData_24; }
	inline InputAnalogActionData_t_t6C7615BD7F4223A4ADA9268DDF501D09B3C808CA * get_address_of_actionData_24() { return &___actionData_24; }
	inline void set_actionData_24(InputAnalogActionData_t_t6C7615BD7F4223A4ADA9268DDF501D09B3C808CA  value)
	{
		___actionData_24 = value;
	}

	inline static int32_t get_offset_of_lastActionData_25() { return static_cast<int32_t>(offsetof(SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1, ___lastActionData_25)); }
	inline InputAnalogActionData_t_t6C7615BD7F4223A4ADA9268DDF501D09B3C808CA  get_lastActionData_25() const { return ___lastActionData_25; }
	inline InputAnalogActionData_t_t6C7615BD7F4223A4ADA9268DDF501D09B3C808CA * get_address_of_lastActionData_25() { return &___lastActionData_25; }
	inline void set_lastActionData_25(InputAnalogActionData_t_t6C7615BD7F4223A4ADA9268DDF501D09B3C808CA  value)
	{
		___lastActionData_25 = value;
	}

	inline static int32_t get_offset_of_vector2Action_26() { return static_cast<int32_t>(offsetof(SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1, ___vector2Action_26)); }
	inline SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * get_vector2Action_26() const { return ___vector2Action_26; }
	inline SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 ** get_address_of_vector2Action_26() { return &___vector2Action_26; }
	inline void set_vector2Action_26(SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * value)
	{
		___vector2Action_26 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___vector2Action_26), (void*)value);
	}
};

struct SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1_StaticFields
{
public:
	// System.UInt32 Valve.VR.SteamVR_Action_Vector2_Source::actionData_size
	uint32_t ___actionData_size_10;

public:
	inline static int32_t get_offset_of_actionData_size_10() { return static_cast<int32_t>(offsetof(SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1_StaticFields, ___actionData_size_10)); }
	inline uint32_t get_actionData_size_10() const { return ___actionData_size_10; }
	inline uint32_t* get_address_of_actionData_size_10() { return &___actionData_size_10; }
	inline void set_actionData_size_10(uint32_t value)
	{
		___actionData_size_10 = value;
	}
};


// Valve.VR.SteamVR_Action_Boolean_Source_Map
struct SteamVR_Action_Boolean_Source_Map_tF5558AC3C11798E60DC5152DD2FB5E835D79AA3B  : public SteamVR_Action_In_Source_Map_1_t462A62AFB6CF3E08F3D5A481212A290F3FEB5FFE
{
public:

public:
};


// Valve.VR.SteamVR_Action_Pose_Source_Map`1<Valve.VR.SteamVR_Action_Pose_Source>
struct SteamVR_Action_Pose_Source_Map_1_t191C12A385C6BE9645B171973AA0141ECCBA76A9  : public SteamVR_Action_In_Source_Map_1_t8620836FE3BF53CCD96DF04716DB518EAEEC2584
{
public:

public:
};


// Valve.VR.SteamVR_Action_Pose_Source_Map`1<Valve.VR.SteamVR_Action_Skeleton_Source>
struct SteamVR_Action_Pose_Source_Map_1_t62FCD50EDE24217AD6FAFADAC23DA65555B7A125  : public SteamVR_Action_In_Source_Map_1_t65B6CC75798A38C0D5EA4E4B15FB9C8DE87145B4
{
public:

public:
};


// Valve.VR.SteamVR_Action_Single_Source_Map
struct SteamVR_Action_Single_Source_Map_tBD46D15F4FCB5A4B6BDA2B1FE96035D4DDBDBA37  : public SteamVR_Action_In_Source_Map_1_t2C53C7DDA5E7BECE6E12D3EE7BFAB2ADF8781741
{
public:

public:
};


// Valve.VR.SteamVR_Action_Skeleton_Source
struct SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72  : public SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27
{
public:
	// Valve.VR.SteamVR_Action_Skeleton/ActiveChangeHandler Valve.VR.SteamVR_Action_Skeleton_Source::onActiveChange
	ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * ___onActiveChange_37;
	// Valve.VR.SteamVR_Action_Skeleton/ActiveChangeHandler Valve.VR.SteamVR_Action_Skeleton_Source::onActiveBindingChange
	ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * ___onActiveBindingChange_38;
	// Valve.VR.SteamVR_Action_Skeleton/ChangeHandler Valve.VR.SteamVR_Action_Skeleton_Source::onChange
	ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 * ___onChange_39;
	// Valve.VR.SteamVR_Action_Skeleton/UpdateHandler Valve.VR.SteamVR_Action_Skeleton_Source::onUpdate
	UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 * ___onUpdate_40;
	// Valve.VR.SteamVR_Action_Skeleton/TrackingChangeHandler Valve.VR.SteamVR_Action_Skeleton_Source::onTrackingChanged
	TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 * ___onTrackingChanged_41;
	// Valve.VR.SteamVR_Action_Skeleton/ValidPoseChangeHandler Valve.VR.SteamVR_Action_Skeleton_Source::onValidPoseChanged
	ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 * ___onValidPoseChanged_42;
	// Valve.VR.SteamVR_Action_Skeleton/DeviceConnectedChangeHandler Valve.VR.SteamVR_Action_Skeleton_Source::onDeviceConnectedChanged
	DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 * ___onDeviceConnectedChanged_43;
	// UnityEngine.Vector3[] Valve.VR.SteamVR_Action_Skeleton_Source::<bonePositions>k__BackingField
	Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* ___U3CbonePositionsU3Ek__BackingField_44;
	// UnityEngine.Quaternion[] Valve.VR.SteamVR_Action_Skeleton_Source::<boneRotations>k__BackingField
	QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* ___U3CboneRotationsU3Ek__BackingField_45;
	// UnityEngine.Vector3[] Valve.VR.SteamVR_Action_Skeleton_Source::<lastBonePositions>k__BackingField
	Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* ___U3ClastBonePositionsU3Ek__BackingField_46;
	// UnityEngine.Quaternion[] Valve.VR.SteamVR_Action_Skeleton_Source::<lastBoneRotations>k__BackingField
	QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* ___U3ClastBoneRotationsU3Ek__BackingField_47;
	// Valve.VR.EVRSkeletalMotionRange Valve.VR.SteamVR_Action_Skeleton_Source::<rangeOfMotion>k__BackingField
	int32_t ___U3CrangeOfMotionU3Ek__BackingField_48;
	// Valve.VR.EVRSkeletalTransformSpace Valve.VR.SteamVR_Action_Skeleton_Source::<skeletalTransformSpace>k__BackingField
	int32_t ___U3CskeletalTransformSpaceU3Ek__BackingField_49;
	// Valve.VR.EVRSummaryType Valve.VR.SteamVR_Action_Skeleton_Source::<summaryDataType>k__BackingField
	int32_t ___U3CsummaryDataTypeU3Ek__BackingField_50;
	// System.Single[] Valve.VR.SteamVR_Action_Skeleton_Source::<fingerCurls>k__BackingField
	SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* ___U3CfingerCurlsU3Ek__BackingField_51;
	// System.Single[] Valve.VR.SteamVR_Action_Skeleton_Source::<fingerSplays>k__BackingField
	SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* ___U3CfingerSplaysU3Ek__BackingField_52;
	// System.Single[] Valve.VR.SteamVR_Action_Skeleton_Source::<lastFingerCurls>k__BackingField
	SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* ___U3ClastFingerCurlsU3Ek__BackingField_53;
	// System.Single[] Valve.VR.SteamVR_Action_Skeleton_Source::<lastFingerSplays>k__BackingField
	SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* ___U3ClastFingerSplaysU3Ek__BackingField_54;
	// System.Boolean Valve.VR.SteamVR_Action_Skeleton_Source::<poseChanged>k__BackingField
	bool ___U3CposeChangedU3Ek__BackingField_55;
	// System.Boolean Valve.VR.SteamVR_Action_Skeleton_Source::<onlyUpdateSummaryData>k__BackingField
	bool ___U3ConlyUpdateSummaryDataU3Ek__BackingField_56;
	// Valve.VR.VRSkeletalSummaryData_t Valve.VR.SteamVR_Action_Skeleton_Source::skeletalSummaryData
	VRSkeletalSummaryData_t_t644580EA9039A02976937652FFFEE20F90671B66  ___skeletalSummaryData_57;
	// Valve.VR.VRSkeletalSummaryData_t Valve.VR.SteamVR_Action_Skeleton_Source::lastSkeletalSummaryData
	VRSkeletalSummaryData_t_t644580EA9039A02976937652FFFEE20F90671B66  ___lastSkeletalSummaryData_58;
	// Valve.VR.SteamVR_Action_Skeleton Valve.VR.SteamVR_Action_Skeleton_Source::skeletonAction
	SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * ___skeletonAction_59;
	// Valve.VR.VRBoneTransform_t[] Valve.VR.SteamVR_Action_Skeleton_Source::tempBoneTransforms
	VRBoneTransform_tU5BU5D_tB5FDD0831D295612D4381D2F2D8805367FAF83F8* ___tempBoneTransforms_60;
	// Valve.VR.InputSkeletalActionData_t Valve.VR.SteamVR_Action_Skeleton_Source::skeletonActionData
	InputSkeletalActionData_t_tD41850247EEE1858231B43C4B3EC2B5617140C26  ___skeletonActionData_61;
	// Valve.VR.InputSkeletalActionData_t Valve.VR.SteamVR_Action_Skeleton_Source::lastSkeletonActionData
	InputSkeletalActionData_t_tD41850247EEE1858231B43C4B3EC2B5617140C26  ___lastSkeletonActionData_62;
	// Valve.VR.InputSkeletalActionData_t Valve.VR.SteamVR_Action_Skeleton_Source::tempSkeletonActionData
	InputSkeletalActionData_t_tD41850247EEE1858231B43C4B3EC2B5617140C26  ___tempSkeletonActionData_63;

public:
	inline static int32_t get_offset_of_onActiveChange_37() { return static_cast<int32_t>(offsetof(SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72, ___onActiveChange_37)); }
	inline ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * get_onActiveChange_37() const { return ___onActiveChange_37; }
	inline ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 ** get_address_of_onActiveChange_37() { return &___onActiveChange_37; }
	inline void set_onActiveChange_37(ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * value)
	{
		___onActiveChange_37 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onActiveChange_37), (void*)value);
	}

	inline static int32_t get_offset_of_onActiveBindingChange_38() { return static_cast<int32_t>(offsetof(SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72, ___onActiveBindingChange_38)); }
	inline ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * get_onActiveBindingChange_38() const { return ___onActiveBindingChange_38; }
	inline ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 ** get_address_of_onActiveBindingChange_38() { return &___onActiveBindingChange_38; }
	inline void set_onActiveBindingChange_38(ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * value)
	{
		___onActiveBindingChange_38 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onActiveBindingChange_38), (void*)value);
	}

	inline static int32_t get_offset_of_onChange_39() { return static_cast<int32_t>(offsetof(SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72, ___onChange_39)); }
	inline ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 * get_onChange_39() const { return ___onChange_39; }
	inline ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 ** get_address_of_onChange_39() { return &___onChange_39; }
	inline void set_onChange_39(ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 * value)
	{
		___onChange_39 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onChange_39), (void*)value);
	}

	inline static int32_t get_offset_of_onUpdate_40() { return static_cast<int32_t>(offsetof(SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72, ___onUpdate_40)); }
	inline UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 * get_onUpdate_40() const { return ___onUpdate_40; }
	inline UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 ** get_address_of_onUpdate_40() { return &___onUpdate_40; }
	inline void set_onUpdate_40(UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 * value)
	{
		___onUpdate_40 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onUpdate_40), (void*)value);
	}

	inline static int32_t get_offset_of_onTrackingChanged_41() { return static_cast<int32_t>(offsetof(SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72, ___onTrackingChanged_41)); }
	inline TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 * get_onTrackingChanged_41() const { return ___onTrackingChanged_41; }
	inline TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 ** get_address_of_onTrackingChanged_41() { return &___onTrackingChanged_41; }
	inline void set_onTrackingChanged_41(TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 * value)
	{
		___onTrackingChanged_41 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onTrackingChanged_41), (void*)value);
	}

	inline static int32_t get_offset_of_onValidPoseChanged_42() { return static_cast<int32_t>(offsetof(SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72, ___onValidPoseChanged_42)); }
	inline ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 * get_onValidPoseChanged_42() const { return ___onValidPoseChanged_42; }
	inline ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 ** get_address_of_onValidPoseChanged_42() { return &___onValidPoseChanged_42; }
	inline void set_onValidPoseChanged_42(ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 * value)
	{
		___onValidPoseChanged_42 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onValidPoseChanged_42), (void*)value);
	}

	inline static int32_t get_offset_of_onDeviceConnectedChanged_43() { return static_cast<int32_t>(offsetof(SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72, ___onDeviceConnectedChanged_43)); }
	inline DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 * get_onDeviceConnectedChanged_43() const { return ___onDeviceConnectedChanged_43; }
	inline DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 ** get_address_of_onDeviceConnectedChanged_43() { return &___onDeviceConnectedChanged_43; }
	inline void set_onDeviceConnectedChanged_43(DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 * value)
	{
		___onDeviceConnectedChanged_43 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onDeviceConnectedChanged_43), (void*)value);
	}

	inline static int32_t get_offset_of_U3CbonePositionsU3Ek__BackingField_44() { return static_cast<int32_t>(offsetof(SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72, ___U3CbonePositionsU3Ek__BackingField_44)); }
	inline Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* get_U3CbonePositionsU3Ek__BackingField_44() const { return ___U3CbonePositionsU3Ek__BackingField_44; }
	inline Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28** get_address_of_U3CbonePositionsU3Ek__BackingField_44() { return &___U3CbonePositionsU3Ek__BackingField_44; }
	inline void set_U3CbonePositionsU3Ek__BackingField_44(Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* value)
	{
		___U3CbonePositionsU3Ek__BackingField_44 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CbonePositionsU3Ek__BackingField_44), (void*)value);
	}

	inline static int32_t get_offset_of_U3CboneRotationsU3Ek__BackingField_45() { return static_cast<int32_t>(offsetof(SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72, ___U3CboneRotationsU3Ek__BackingField_45)); }
	inline QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* get_U3CboneRotationsU3Ek__BackingField_45() const { return ___U3CboneRotationsU3Ek__BackingField_45; }
	inline QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3** get_address_of_U3CboneRotationsU3Ek__BackingField_45() { return &___U3CboneRotationsU3Ek__BackingField_45; }
	inline void set_U3CboneRotationsU3Ek__BackingField_45(QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* value)
	{
		___U3CboneRotationsU3Ek__BackingField_45 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CboneRotationsU3Ek__BackingField_45), (void*)value);
	}

	inline static int32_t get_offset_of_U3ClastBonePositionsU3Ek__BackingField_46() { return static_cast<int32_t>(offsetof(SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72, ___U3ClastBonePositionsU3Ek__BackingField_46)); }
	inline Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* get_U3ClastBonePositionsU3Ek__BackingField_46() const { return ___U3ClastBonePositionsU3Ek__BackingField_46; }
	inline Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28** get_address_of_U3ClastBonePositionsU3Ek__BackingField_46() { return &___U3ClastBonePositionsU3Ek__BackingField_46; }
	inline void set_U3ClastBonePositionsU3Ek__BackingField_46(Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* value)
	{
		___U3ClastBonePositionsU3Ek__BackingField_46 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3ClastBonePositionsU3Ek__BackingField_46), (void*)value);
	}

	inline static int32_t get_offset_of_U3ClastBoneRotationsU3Ek__BackingField_47() { return static_cast<int32_t>(offsetof(SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72, ___U3ClastBoneRotationsU3Ek__BackingField_47)); }
	inline QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* get_U3ClastBoneRotationsU3Ek__BackingField_47() const { return ___U3ClastBoneRotationsU3Ek__BackingField_47; }
	inline QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3** get_address_of_U3ClastBoneRotationsU3Ek__BackingField_47() { return &___U3ClastBoneRotationsU3Ek__BackingField_47; }
	inline void set_U3ClastBoneRotationsU3Ek__BackingField_47(QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* value)
	{
		___U3ClastBoneRotationsU3Ek__BackingField_47 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3ClastBoneRotationsU3Ek__BackingField_47), (void*)value);
	}

	inline static int32_t get_offset_of_U3CrangeOfMotionU3Ek__BackingField_48() { return static_cast<int32_t>(offsetof(SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72, ___U3CrangeOfMotionU3Ek__BackingField_48)); }
	inline int32_t get_U3CrangeOfMotionU3Ek__BackingField_48() const { return ___U3CrangeOfMotionU3Ek__BackingField_48; }
	inline int32_t* get_address_of_U3CrangeOfMotionU3Ek__BackingField_48() { return &___U3CrangeOfMotionU3Ek__BackingField_48; }
	inline void set_U3CrangeOfMotionU3Ek__BackingField_48(int32_t value)
	{
		___U3CrangeOfMotionU3Ek__BackingField_48 = value;
	}

	inline static int32_t get_offset_of_U3CskeletalTransformSpaceU3Ek__BackingField_49() { return static_cast<int32_t>(offsetof(SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72, ___U3CskeletalTransformSpaceU3Ek__BackingField_49)); }
	inline int32_t get_U3CskeletalTransformSpaceU3Ek__BackingField_49() const { return ___U3CskeletalTransformSpaceU3Ek__BackingField_49; }
	inline int32_t* get_address_of_U3CskeletalTransformSpaceU3Ek__BackingField_49() { return &___U3CskeletalTransformSpaceU3Ek__BackingField_49; }
	inline void set_U3CskeletalTransformSpaceU3Ek__BackingField_49(int32_t value)
	{
		___U3CskeletalTransformSpaceU3Ek__BackingField_49 = value;
	}

	inline static int32_t get_offset_of_U3CsummaryDataTypeU3Ek__BackingField_50() { return static_cast<int32_t>(offsetof(SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72, ___U3CsummaryDataTypeU3Ek__BackingField_50)); }
	inline int32_t get_U3CsummaryDataTypeU3Ek__BackingField_50() const { return ___U3CsummaryDataTypeU3Ek__BackingField_50; }
	inline int32_t* get_address_of_U3CsummaryDataTypeU3Ek__BackingField_50() { return &___U3CsummaryDataTypeU3Ek__BackingField_50; }
	inline void set_U3CsummaryDataTypeU3Ek__BackingField_50(int32_t value)
	{
		___U3CsummaryDataTypeU3Ek__BackingField_50 = value;
	}

	inline static int32_t get_offset_of_U3CfingerCurlsU3Ek__BackingField_51() { return static_cast<int32_t>(offsetof(SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72, ___U3CfingerCurlsU3Ek__BackingField_51)); }
	inline SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* get_U3CfingerCurlsU3Ek__BackingField_51() const { return ___U3CfingerCurlsU3Ek__BackingField_51; }
	inline SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5** get_address_of_U3CfingerCurlsU3Ek__BackingField_51() { return &___U3CfingerCurlsU3Ek__BackingField_51; }
	inline void set_U3CfingerCurlsU3Ek__BackingField_51(SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* value)
	{
		___U3CfingerCurlsU3Ek__BackingField_51 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CfingerCurlsU3Ek__BackingField_51), (void*)value);
	}

	inline static int32_t get_offset_of_U3CfingerSplaysU3Ek__BackingField_52() { return static_cast<int32_t>(offsetof(SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72, ___U3CfingerSplaysU3Ek__BackingField_52)); }
	inline SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* get_U3CfingerSplaysU3Ek__BackingField_52() const { return ___U3CfingerSplaysU3Ek__BackingField_52; }
	inline SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5** get_address_of_U3CfingerSplaysU3Ek__BackingField_52() { return &___U3CfingerSplaysU3Ek__BackingField_52; }
	inline void set_U3CfingerSplaysU3Ek__BackingField_52(SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* value)
	{
		___U3CfingerSplaysU3Ek__BackingField_52 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CfingerSplaysU3Ek__BackingField_52), (void*)value);
	}

	inline static int32_t get_offset_of_U3ClastFingerCurlsU3Ek__BackingField_53() { return static_cast<int32_t>(offsetof(SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72, ___U3ClastFingerCurlsU3Ek__BackingField_53)); }
	inline SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* get_U3ClastFingerCurlsU3Ek__BackingField_53() const { return ___U3ClastFingerCurlsU3Ek__BackingField_53; }
	inline SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5** get_address_of_U3ClastFingerCurlsU3Ek__BackingField_53() { return &___U3ClastFingerCurlsU3Ek__BackingField_53; }
	inline void set_U3ClastFingerCurlsU3Ek__BackingField_53(SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* value)
	{
		___U3ClastFingerCurlsU3Ek__BackingField_53 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3ClastFingerCurlsU3Ek__BackingField_53), (void*)value);
	}

	inline static int32_t get_offset_of_U3ClastFingerSplaysU3Ek__BackingField_54() { return static_cast<int32_t>(offsetof(SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72, ___U3ClastFingerSplaysU3Ek__BackingField_54)); }
	inline SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* get_U3ClastFingerSplaysU3Ek__BackingField_54() const { return ___U3ClastFingerSplaysU3Ek__BackingField_54; }
	inline SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5** get_address_of_U3ClastFingerSplaysU3Ek__BackingField_54() { return &___U3ClastFingerSplaysU3Ek__BackingField_54; }
	inline void set_U3ClastFingerSplaysU3Ek__BackingField_54(SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* value)
	{
		___U3ClastFingerSplaysU3Ek__BackingField_54 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3ClastFingerSplaysU3Ek__BackingField_54), (void*)value);
	}

	inline static int32_t get_offset_of_U3CposeChangedU3Ek__BackingField_55() { return static_cast<int32_t>(offsetof(SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72, ___U3CposeChangedU3Ek__BackingField_55)); }
	inline bool get_U3CposeChangedU3Ek__BackingField_55() const { return ___U3CposeChangedU3Ek__BackingField_55; }
	inline bool* get_address_of_U3CposeChangedU3Ek__BackingField_55() { return &___U3CposeChangedU3Ek__BackingField_55; }
	inline void set_U3CposeChangedU3Ek__BackingField_55(bool value)
	{
		___U3CposeChangedU3Ek__BackingField_55 = value;
	}

	inline static int32_t get_offset_of_U3ConlyUpdateSummaryDataU3Ek__BackingField_56() { return static_cast<int32_t>(offsetof(SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72, ___U3ConlyUpdateSummaryDataU3Ek__BackingField_56)); }
	inline bool get_U3ConlyUpdateSummaryDataU3Ek__BackingField_56() const { return ___U3ConlyUpdateSummaryDataU3Ek__BackingField_56; }
	inline bool* get_address_of_U3ConlyUpdateSummaryDataU3Ek__BackingField_56() { return &___U3ConlyUpdateSummaryDataU3Ek__BackingField_56; }
	inline void set_U3ConlyUpdateSummaryDataU3Ek__BackingField_56(bool value)
	{
		___U3ConlyUpdateSummaryDataU3Ek__BackingField_56 = value;
	}

	inline static int32_t get_offset_of_skeletalSummaryData_57() { return static_cast<int32_t>(offsetof(SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72, ___skeletalSummaryData_57)); }
	inline VRSkeletalSummaryData_t_t644580EA9039A02976937652FFFEE20F90671B66  get_skeletalSummaryData_57() const { return ___skeletalSummaryData_57; }
	inline VRSkeletalSummaryData_t_t644580EA9039A02976937652FFFEE20F90671B66 * get_address_of_skeletalSummaryData_57() { return &___skeletalSummaryData_57; }
	inline void set_skeletalSummaryData_57(VRSkeletalSummaryData_t_t644580EA9039A02976937652FFFEE20F90671B66  value)
	{
		___skeletalSummaryData_57 = value;
	}

	inline static int32_t get_offset_of_lastSkeletalSummaryData_58() { return static_cast<int32_t>(offsetof(SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72, ___lastSkeletalSummaryData_58)); }
	inline VRSkeletalSummaryData_t_t644580EA9039A02976937652FFFEE20F90671B66  get_lastSkeletalSummaryData_58() const { return ___lastSkeletalSummaryData_58; }
	inline VRSkeletalSummaryData_t_t644580EA9039A02976937652FFFEE20F90671B66 * get_address_of_lastSkeletalSummaryData_58() { return &___lastSkeletalSummaryData_58; }
	inline void set_lastSkeletalSummaryData_58(VRSkeletalSummaryData_t_t644580EA9039A02976937652FFFEE20F90671B66  value)
	{
		___lastSkeletalSummaryData_58 = value;
	}

	inline static int32_t get_offset_of_skeletonAction_59() { return static_cast<int32_t>(offsetof(SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72, ___skeletonAction_59)); }
	inline SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * get_skeletonAction_59() const { return ___skeletonAction_59; }
	inline SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 ** get_address_of_skeletonAction_59() { return &___skeletonAction_59; }
	inline void set_skeletonAction_59(SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * value)
	{
		___skeletonAction_59 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___skeletonAction_59), (void*)value);
	}

	inline static int32_t get_offset_of_tempBoneTransforms_60() { return static_cast<int32_t>(offsetof(SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72, ___tempBoneTransforms_60)); }
	inline VRBoneTransform_tU5BU5D_tB5FDD0831D295612D4381D2F2D8805367FAF83F8* get_tempBoneTransforms_60() const { return ___tempBoneTransforms_60; }
	inline VRBoneTransform_tU5BU5D_tB5FDD0831D295612D4381D2F2D8805367FAF83F8** get_address_of_tempBoneTransforms_60() { return &___tempBoneTransforms_60; }
	inline void set_tempBoneTransforms_60(VRBoneTransform_tU5BU5D_tB5FDD0831D295612D4381D2F2D8805367FAF83F8* value)
	{
		___tempBoneTransforms_60 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___tempBoneTransforms_60), (void*)value);
	}

	inline static int32_t get_offset_of_skeletonActionData_61() { return static_cast<int32_t>(offsetof(SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72, ___skeletonActionData_61)); }
	inline InputSkeletalActionData_t_tD41850247EEE1858231B43C4B3EC2B5617140C26  get_skeletonActionData_61() const { return ___skeletonActionData_61; }
	inline InputSkeletalActionData_t_tD41850247EEE1858231B43C4B3EC2B5617140C26 * get_address_of_skeletonActionData_61() { return &___skeletonActionData_61; }
	inline void set_skeletonActionData_61(InputSkeletalActionData_t_tD41850247EEE1858231B43C4B3EC2B5617140C26  value)
	{
		___skeletonActionData_61 = value;
	}

	inline static int32_t get_offset_of_lastSkeletonActionData_62() { return static_cast<int32_t>(offsetof(SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72, ___lastSkeletonActionData_62)); }
	inline InputSkeletalActionData_t_tD41850247EEE1858231B43C4B3EC2B5617140C26  get_lastSkeletonActionData_62() const { return ___lastSkeletonActionData_62; }
	inline InputSkeletalActionData_t_tD41850247EEE1858231B43C4B3EC2B5617140C26 * get_address_of_lastSkeletonActionData_62() { return &___lastSkeletonActionData_62; }
	inline void set_lastSkeletonActionData_62(InputSkeletalActionData_t_tD41850247EEE1858231B43C4B3EC2B5617140C26  value)
	{
		___lastSkeletonActionData_62 = value;
	}

	inline static int32_t get_offset_of_tempSkeletonActionData_63() { return static_cast<int32_t>(offsetof(SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72, ___tempSkeletonActionData_63)); }
	inline InputSkeletalActionData_t_tD41850247EEE1858231B43C4B3EC2B5617140C26  get_tempSkeletonActionData_63() const { return ___tempSkeletonActionData_63; }
	inline InputSkeletalActionData_t_tD41850247EEE1858231B43C4B3EC2B5617140C26 * get_address_of_tempSkeletonActionData_63() { return &___tempSkeletonActionData_63; }
	inline void set_tempSkeletonActionData_63(InputSkeletalActionData_t_tD41850247EEE1858231B43C4B3EC2B5617140C26  value)
	{
		___tempSkeletonActionData_63 = value;
	}
};

struct SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72_StaticFields
{
public:
	// System.UInt32 Valve.VR.SteamVR_Action_Skeleton_Source::skeletonActionData_size
	uint32_t ___skeletonActionData_size_36;

public:
	inline static int32_t get_offset_of_skeletonActionData_size_36() { return static_cast<int32_t>(offsetof(SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72_StaticFields, ___skeletonActionData_size_36)); }
	inline uint32_t get_skeletonActionData_size_36() const { return ___skeletonActionData_size_36; }
	inline uint32_t* get_address_of_skeletonActionData_size_36() { return &___skeletonActionData_size_36; }
	inline void set_skeletonActionData_size_36(uint32_t value)
	{
		___skeletonActionData_size_36 = value;
	}
};


// Valve.VR.SteamVR_Action_Vector2_Source_Map
struct SteamVR_Action_Vector2_Source_Map_tA43BF0AE8C89C3094C8375D1A82AE8676DA218D3  : public SteamVR_Action_In_Source_Map_1_tE08712080E22D9A4BAF4C436860AA6226B5FC72D
{
public:

public:
};


// Valve.VR.SteamVR_Action_Skeleton_Source_Map
struct SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB  : public SteamVR_Action_Pose_Source_Map_1_t62FCD50EDE24217AD6FAFADAC23DA65555B7A125
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
// System.Delegate[]
struct DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86  : public RuntimeArray
{
public:
	ALIGN_FIELD (8) Delegate_t * m_Items[1];

public:
	inline Delegate_t * GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline Delegate_t ** GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, Delegate_t * value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)m_Items + index, (void*)value);
	}
	inline Delegate_t * GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline Delegate_t ** GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, Delegate_t * value)
	{
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)m_Items + index, (void*)value);
	}
};
// System.String[]
struct StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E  : public RuntimeArray
{
public:
	ALIGN_FIELD (8) String_t* m_Items[1];

public:
	inline String_t* GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline String_t** GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, String_t* value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)m_Items + index, (void*)value);
	}
	inline String_t* GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline String_t** GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, String_t* value)
	{
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)m_Items + index, (void*)value);
	}
};
// Valve.VR.EVRInputStringBits[]
struct EVRInputStringBitsU5BU5D_t6940A5B40972263CCCE9DFDBA05F69BA9DD7B52C  : public RuntimeArray
{
public:
	ALIGN_FIELD (8) int32_t m_Items[1];

public:
	inline int32_t GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline int32_t* GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, int32_t value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline int32_t GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline int32_t* GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, int32_t value)
	{
		m_Items[index] = value;
	}
};
// UnityEngine.Vector3[]
struct Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28  : public RuntimeArray
{
public:
	ALIGN_FIELD (8) Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  m_Items[1];

public:
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		m_Items[index] = value;
	}
};
// UnityEngine.Quaternion[]
struct QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3  : public RuntimeArray
{
public:
	ALIGN_FIELD (8) Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  m_Items[1];

public:
	inline Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 * GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 * GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  value)
	{
		m_Items[index] = value;
	}
};
// System.Single[]
struct SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5  : public RuntimeArray
{
public:
	ALIGN_FIELD (8) float m_Items[1];

public:
	inline float GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline float* GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, float value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline float GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline float* GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, float value)
	{
		m_Items[index] = value;
	}
};
// System.Int32[]
struct Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83  : public RuntimeArray
{
public:
	ALIGN_FIELD (8) int32_t m_Items[1];

public:
	inline int32_t GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline int32_t* GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, int32_t value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline int32_t GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline int32_t* GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, int32_t value)
	{
		m_Items[index] = value;
	}
};
// SteamVR_Utils/RigidTransform[]
struct RigidTransformU5BU5D_tC98EB3576009E5D825D0D43671A65D32A2449ECC  : public RuntimeArray
{
public:
	ALIGN_FIELD (8) RigidTransform_t0E8A00F7013270B6B2254F29B4FFEAA6783CD905  m_Items[1];

public:
	inline RigidTransform_t0E8A00F7013270B6B2254F29B4FFEAA6783CD905  GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline RigidTransform_t0E8A00F7013270B6B2254F29B4FFEAA6783CD905 * GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, RigidTransform_t0E8A00F7013270B6B2254F29B4FFEAA6783CD905  value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline RigidTransform_t0E8A00F7013270B6B2254F29B4FFEAA6783CD905  GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline RigidTransform_t0E8A00F7013270B6B2254F29B4FFEAA6783CD905 * GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, RigidTransform_t0E8A00F7013270B6B2254F29B4FFEAA6783CD905  value)
	{
		m_Items[index] = value;
	}
};
// Valve.VR.SteamVR_Skeleton_FingerIndexEnum[]
struct SteamVR_Skeleton_FingerIndexEnumU5BU5D_t972F21E674536524E0BFB5F382CFD0ACA1714DB7  : public RuntimeArray
{
public:
	ALIGN_FIELD (8) int32_t m_Items[1];

public:
	inline int32_t GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline int32_t* GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, int32_t value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline int32_t GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline int32_t* GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, int32_t value)
	{
		m_Items[index] = value;
	}
};
// Valve.VR.SteamVR_Skeleton_FingerSplayIndexEnum[]
struct SteamVR_Skeleton_FingerSplayIndexEnumU5BU5D_t92DED5924CD2E6B494B9ABD5961F9BC65373A81B  : public RuntimeArray
{
public:
	ALIGN_FIELD (8) int32_t m_Items[1];

public:
	inline int32_t GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline int32_t* GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, int32_t value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline int32_t GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline int32_t* GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, int32_t value)
	{
		m_Items[index] = value;
	}
};
// Valve.VR.VRBoneTransform_t[]
struct VRBoneTransform_tU5BU5D_tB5FDD0831D295612D4381D2F2D8805367FAF83F8  : public RuntimeArray
{
public:
	ALIGN_FIELD (8) VRBoneTransform_t_tB0AFC02B2EB00C94AA2AB8D517379266A80385AC  m_Items[1];

public:
	inline VRBoneTransform_t_tB0AFC02B2EB00C94AA2AB8D517379266A80385AC  GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline VRBoneTransform_t_tB0AFC02B2EB00C94AA2AB8D517379266A80385AC * GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, VRBoneTransform_t_tB0AFC02B2EB00C94AA2AB8D517379266A80385AC  value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline VRBoneTransform_t_tB0AFC02B2EB00C94AA2AB8D517379266A80385AC  GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline VRBoneTransform_t_tB0AFC02B2EB00C94AA2AB8D517379266A80385AC * GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, VRBoneTransform_t_tB0AFC02B2EB00C94AA2AB8D517379266A80385AC  value)
	{
		m_Items[index] = value;
	}
};
// Valve.VR.SteamVR_Action_Skeleton_Source[]
struct SteamVR_Action_Skeleton_SourceU5BU5D_tD7F80DE17D413EA1E866B222C9A63AEBFF0CE5D4  : public RuntimeArray
{
public:
	ALIGN_FIELD (8) SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * m_Items[1];

public:
	inline SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 ** GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)m_Items + index, (void*)value);
	}
	inline SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 ** GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * value)
	{
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)m_Items + index, (void*)value);
	}
};
// Valve.VR.SteamVR_Input_Sources[]
struct SteamVR_Input_SourcesU5BU5D_t735048547A8599BA461FE16B1BC029194E1F184A  : public RuntimeArray
{
public:
	ALIGN_FIELD (8) int32_t m_Items[1];

public:
	inline int32_t GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline int32_t* GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, int32_t value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline int32_t GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline int32_t* GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, int32_t value)
	{
		m_Items[index] = value;
	}
};


// System.Void Valve.VR.SteamVR_Action_In_Source_Map`1<System.Object>::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_In_Source_Map_1__ctor_mA777437FDF48094346227E72C185C4F6703872B6_gshared (SteamVR_Action_In_Source_Map_1_tE23DCA7E159C6009D8EE8C1BB585F7939266D2C4 * __this, const RuntimeMethod* method);
// SourceElement Valve.VR.SteamVR_Action_Source_Map`1<System.Object>::get_Item(Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject * SteamVR_Action_Source_Map_1_get_Item_mB034B2596B39A1DB5B5BA1ADA63292FDE8DBF9D9_gshared (SteamVR_Action_Source_Map_1_tF6CD4E2DA9FBD867B5F22D6A040FC06A0BFE5CCA * __this, int32_t ___inputSource0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action`2<System.Object,System.Object>::InitAfterDeserialize()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_2_InitAfterDeserialize_m97D226DB0464C3D2CF67AC71B588420741A770F6_gshared (SteamVR_Action_2_t67EA892F0F7F8FCEB40A807AEF2569E6E8BA4B41 * __this, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Pose_Base`2<System.Object,System.Object>::SetUniverseOrigin(Valve.VR.ETrackingUniverseOrigin)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Base_2_SetUniverseOrigin_m8F0DA8C16B8D15E2E4A3859589C78B292F437AF1_gshared (int32_t ___newOrigin0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Pose_Base`2<System.Object,System.Object>::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Base_2__ctor_m04E553A324B788E71DB9C8AD50C13FB88D945BC7_gshared (SteamVR_Action_Pose_Base_2_t243A518FFFF5F7018B4C37F5EE6AA104F20ABB3C * __this, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_In`2<System.Object,System.Object>::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_In_2__ctor_mE8D7F48E48E81915F85312A869B9F905CAF9B986_gshared (SteamVR_Action_In_2_t6581D04BE16752D2B9D8A37860D18FCB02755CA0 * __this, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Pose_Base`2<System.Object,System.Object>::UpdateTransform(Valve.VR.SteamVR_Input_Sources,UnityEngine.Transform)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Base_2_UpdateTransform_m1262386ECE6A5BF84EEC593432A2442588797FFC_gshared (SteamVR_Action_Pose_Base_2_t243A518FFFF5F7018B4C37F5EE6AA104F20ABB3C * __this, int32_t ___inputSource0, Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___transformToUpdate1, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Pose_Source_Map`1<System.Object>::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_Map_1__ctor_mCFDE07E4D042B1DC990A94DC5AC250B75E5BCED8_gshared (SteamVR_Action_Pose_Source_Map_1_t8B8C4568BBAB9035BBC38B347ADCF1969560FDC9 * __this, const RuntimeMethod* method);

// System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Delegate_t * Delegate_Combine_mC25D2F7DECAFBA6D9A2F9EBA8A77063F0658ECF1 (Delegate_t * ___a0, Delegate_t * ___b1, const RuntimeMethod* method);
// System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Delegate_t * Delegate_Remove_m0B0DB7D1B3AF96B71AFAA72BA0EFE32FBBC2932D (Delegate_t * ___source0, Delegate_t * ___value1, const RuntimeMethod* method);
// Valve.VR.SteamVR_Input_Sources Valve.VR.SteamVR_Action_Source::get_inputSource()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR int32_t SteamVR_Action_Source_get_inputSource_mAA1928183BB06E5C8CF950F65BA80635C25535D4_inline (SteamVR_Action_Source_t9D7428CDE39924074518EE6233D9A4FAB0C33CB0 * __this, const RuntimeMethod* method);
// System.Boolean Valve.VR.SteamVR_ActionSet::IsActive(Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_ActionSet_IsActive_m2C7FE33DC70E0D8C3D7E06F024C3409A116CE127 (SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * __this, int32_t ___source0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Source::Preinitialize(Valve.VR.SteamVR_Action,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Source_Preinitialize_mC135AE740FECE5EA34FF516A739C0F58420521F9 (SteamVR_Action_Source_t9D7428CDE39924074518EE6233D9A4FAB0C33CB0 * __this, SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * ___wrappingAction0, int32_t ___forInputSource1, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_In_Source::Initialize()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_In_Source_Initialize_m40F600EDA6712166E32A98C5905420F6F2DC2001 (SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB * __this, const RuntimeMethod* method);
// System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Type_t * Type_GetTypeFromHandle_m9DC58ADF0512987012A8A016FB64B068F3B1AFF6 (RuntimeTypeHandle_t7B542280A22F0EC4EAC2061C29178845847A8B2D  ___handle0, const RuntimeMethod* method);
// System.Int32 System.Runtime.InteropServices.Marshal::SizeOf(System.Type)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Marshal_SizeOf_m4F7DA827FA7A720395E6FDD2ABE78D4B00D43130 (Type_t * ___t0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Boolean_Source::remove_onStateDown(Valve.VR.SteamVR_Action_Boolean/StateDownHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Boolean_Source_remove_onStateDown_m69EDBBEE11F60CD90D69A36C2146CD3532EA504F (SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * __this, StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Boolean_Source::remove_onStateUp(Valve.VR.SteamVR_Action_Boolean/StateUpHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Boolean_Source_remove_onStateUp_mA8DFD7672CA1FBA47512E22F6A5E8CA357FCFCB8 (SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * __this, StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Boolean_Source::remove_onState(Valve.VR.SteamVR_Action_Boolean/StateHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Boolean_Source_remove_onState_mE7577EF4670E0BB1EC939B92D024E29C825AD60E (SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * __this, StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA * ___value0, const RuntimeMethod* method);
// Valve.VR.CVRInput Valve.VR.OpenVR::get_Input()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR CVRInput_t8458E224B9D7EFD4A5B102EAA06F8F365A25A53A * OpenVR_get_Input_mF290A715AD07D4B7F8844AA79293934B7999CE04 (const RuntimeMethod* method);
// Valve.VR.EVRInputError Valve.VR.CVRInput::GetDigitalActionData(System.UInt64,Valve.VR.InputDigitalActionData_t&,System.UInt32,System.UInt64)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t CVRInput_GetDigitalActionData_m28C971587E9BF5AE9D507A5DBB11C78C5A3181E3 (CVRInput_t8458E224B9D7EFD4A5B102EAA06F8F365A25A53A * __this, uint64_t ___action0, InputDigitalActionData_t_t4A01C92AC860229A4C521ED827FD4FC4508A822C * ___pActionData1, uint32_t ___unActionDataSize2, uint64_t ___ulRestrictToDevice3, const RuntimeMethod* method);
// System.String System.UInt64::ToString()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* UInt64_ToString_mF0E40B7459C207B89A1C8C04CE7F183AC0E6D672 (uint64_t* __this, const RuntimeMethod* method);
// System.String System.String::Concat(System.String[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* String_Concat_m232E857CA5107EA6AC52E7DD7018716C021F237B (StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* ___values0, const RuntimeMethod* method);
// System.Void UnityEngine.Debug::LogError(System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Debug_LogError_m3BCF9B78263152261565DCA9DB7D55F0C391ED29 (RuntimeObject * ___message0, const RuntimeMethod* method);
// System.Single UnityEngine.Time::get_realtimeSinceStartup()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float Time_get_realtimeSinceStartup_mCA1086EC9DFCF135F77BC46D3B7127711EA3DE03 (const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_In_Source::set_changedTime(System.Single)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_In_Source_set_changedTime_m68F47645CA38A2261F0694F61E3756788CFAE750_inline (SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB * __this, float ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_In_Source::set_updateTime(System.Single)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_In_Source_set_updateTime_m7EA8D127664BA76D49BB51254DB17C4428843F9C_inline (SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB * __this, float ___value0, const RuntimeMethod* method);
// System.Boolean Valve.VR.SteamVR_Action_Boolean_Source::get_stateDown()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Boolean_Source_get_stateDown_mC315C3269CB5CB873056F5689D49C738FCADD63A (SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * __this, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Boolean/StateDownHandler::Invoke(Valve.VR.SteamVR_Action_Boolean,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void StateDownHandler_Invoke_m54E0989BB77A8803D3B5EC370C18CD4DECC47542 (StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464 * __this, SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * ___fromAction0, int32_t ___fromSource1, const RuntimeMethod* method);
// System.Boolean Valve.VR.SteamVR_Action_Boolean_Source::get_stateUp()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Boolean_Source_get_stateUp_mFF21F247946B79D77B8942F27003C9AB4772A152 (SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * __this, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Boolean/StateUpHandler::Invoke(Valve.VR.SteamVR_Action_Boolean,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void StateUpHandler_Invoke_mD551A47B2C82964F248D53C0B3CE4A2F820FA0B2 (StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8 * __this, SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * ___fromAction0, int32_t ___fromSource1, const RuntimeMethod* method);
// System.Boolean Valve.VR.SteamVR_Action_Boolean_Source::get_state()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Boolean_Source_get_state_m90B8F8D0A31028E5DCF0DA3FD27356F04FA93F41 (SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * __this, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Boolean/StateHandler::Invoke(Valve.VR.SteamVR_Action_Boolean,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void StateHandler_Invoke_m0A971767BA08FD69C8EE531F59D7A7884D5C958F (StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA * __this, SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * ___fromAction0, int32_t ___fromSource1, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Boolean/ChangeHandler::Invoke(Valve.VR.SteamVR_Action_Boolean,Valve.VR.SteamVR_Input_Sources,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ChangeHandler_Invoke_mE86F22936F1235834606277E2FA3A63B66A91D86 (ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0 * __this, SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * ___fromAction0, int32_t ___fromSource1, bool ___newState2, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Boolean/UpdateHandler::Invoke(Valve.VR.SteamVR_Action_Boolean,Valve.VR.SteamVR_Input_Sources,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UpdateHandler_Invoke_m29F8B278674748D3F69E5361A886FB3A868322AE (UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B * __this, SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * ___fromAction0, int32_t ___fromSource1, bool ___newState2, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Boolean/ActiveChangeHandler::Invoke(Valve.VR.SteamVR_Action_Boolean,Valve.VR.SteamVR_Input_Sources,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ActiveChangeHandler_Invoke_m868B6D44567C455103013646A3113CB22AB82C34 (ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * __this, SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * ___fromAction0, int32_t ___fromSource1, bool ___active2, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_In_Source::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_In_Source__ctor_mE238DF9510354C14124DF4D1973356C078DAE3BB (SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB * __this, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_In_Source_Map`1<Valve.VR.SteamVR_Action_Boolean_Source>::.ctor()
inline void SteamVR_Action_In_Source_Map_1__ctor_mB4256E2B87538A069DBF22BF7DE6095CD4948CC1 (SteamVR_Action_In_Source_Map_1_t462A62AFB6CF3E08F3D5A481212A290F3FEB5FFE * __this, const RuntimeMethod* method)
{
	((  void (*) (SteamVR_Action_In_Source_Map_1_t462A62AFB6CF3E08F3D5A481212A290F3FEB5FFE *, const RuntimeMethod*))SteamVR_Action_In_Source_Map_1__ctor_mA777437FDF48094346227E72C185C4F6703872B6_gshared)(__this, method);
}
// System.Void Valve.VR.SteamVR_Action_In_Source::UpdateOriginTrackedDeviceInfo()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_In_Source_UpdateOriginTrackedDeviceInfo_mF7505A7AB2C40628D28A09255C14AC74E5C386C0 (SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB * __this, const RuntimeMethod* method);
// Valve.VR.SteamVR_Input_Sources Valve.VR.SteamVR_Input_Source::GetSource(System.UInt64)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t SteamVR_Input_Source_GetSource_mE1D6F821FD5BD9B212F4D5509FD6963166A96E80 (uint64_t ___handle0, const RuntimeMethod* method);
// System.String Valve.VR.InputOriginInfo_t::get_rchRenderModelComponentName()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* InputOriginInfo_t_get_rchRenderModelComponentName_mD0E80E21A3391B748D801C757D386E53159AFC93 (InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7 * __this, const RuntimeMethod* method);
// System.String Valve.VR.SteamVR_Action_In_Source::GetLocalizedOrigin()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* SteamVR_Action_In_Source_GetLocalizedOrigin_m0ED5D7025677DF464116DCCD7EC3871D8719DC26 (SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB * __this, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Source::Initialize()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Source_Initialize_m2F3A973A4338854E06EA51D28CA96DAB1E5D29C9 (SteamVR_Action_Source_t9D7428CDE39924074518EE6233D9A4FAB0C33CB0 * __this, const RuntimeMethod* method);
// System.Int32 Valve.VR.SteamVR_Action_In_Source::get_lastOriginGetFrame()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR int32_t SteamVR_Action_In_Source_get_lastOriginGetFrame_mA410D02B5711787E38284F5B2434829A4E6C6137_inline (SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB * __this, const RuntimeMethod* method);
// System.Int32 UnityEngine.Time::get_frameCount()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Time_get_frameCount_m97573E267B487B8FD4BF37615AFC19BED7B4E436 (const RuntimeMethod* method);
// Valve.VR.EVRInputError Valve.VR.CVRInput::GetOriginTrackedDeviceInfo(System.UInt64,Valve.VR.InputOriginInfo_t&,System.UInt32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t CVRInput_GetOriginTrackedDeviceInfo_m0814AD2AE828ED9D5351D6D0B0F7F17674336030 (CVRInput_t8458E224B9D7EFD4A5B102EAA06F8F365A25A53A * __this, uint64_t ___origin0, InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7 * ___pOriginInfo1, uint32_t ___unOriginInfoSize2, const RuntimeMethod* method);
// System.String Valve.VR.SteamVR_Action_Source::get_fullPath()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* SteamVR_Action_Source_get_fullPath_m9D3700AC3EB06210A52EDA613F1523A48F0A1B81 (SteamVR_Action_Source_t9D7428CDE39924074518EE6233D9A4FAB0C33CB0 * __this, const RuntimeMethod* method);
// System.UInt64 Valve.VR.SteamVR_Action_Source::get_handle()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR uint64_t SteamVR_Action_Source_get_handle_m66E0A3E9E7D6434FB905BF0D25013927B0C12791 (SteamVR_Action_Source_t9D7428CDE39924074518EE6233D9A4FAB0C33CB0 * __this, const RuntimeMethod* method);
// System.String System.Boolean::ToString()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* Boolean_ToString_m62D1EFD5F6D5F6B6AF0D14A07BF5741C94413301 (bool* __this, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_In_Source::set_lastOriginGetFrame(System.Int32)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_In_Source_set_lastOriginGetFrame_m6F2512AE3F5AB9323BCF82CB31C708955508E897_inline (SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB * __this, int32_t ___value0, const RuntimeMethod* method);
// System.String Valve.VR.SteamVR_Input::GetLocalizedName(System.UInt64,Valve.VR.EVRInputStringBits[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* SteamVR_Input_GetLocalizedName_m613459F20324CA5053D20634D8AA15D0366EF96B (uint64_t ___originHandle0, EVRInputStringBitsU5BU5D_t6940A5B40972263CCCE9DFDBA05F69BA9DD7B52C* ___localizedParts1, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Source::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Source__ctor_mE39BAB3469E03218CEC35F563C2B9B36ADD3D2A1 (SteamVR_Action_Source_t9D7428CDE39924074518EE6233D9A4FAB0C33CB0 * __this, const RuntimeMethod* method);
// SourceElement Valve.VR.SteamVR_Action_Source_Map`1<Valve.VR.SteamVR_Action_Pose_Source>::get_Item(Valve.VR.SteamVR_Input_Sources)
inline SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * SteamVR_Action_Source_Map_1_get_Item_mE9FAF259F6EB506E78790EDB4F2AF6FF68569986 (SteamVR_Action_Source_Map_1_t4A3528A78F542534FFD6E6F281FB9A8905078A20 * __this, int32_t ___inputSource0, const RuntimeMethod* method)
{
	return ((  SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * (*) (SteamVR_Action_Source_Map_1_t4A3528A78F542534FFD6E6F281FB9A8905078A20 *, int32_t, const RuntimeMethod*))SteamVR_Action_Source_Map_1_get_Item_mB034B2596B39A1DB5B5BA1ADA63292FDE8DBF9D9_gshared)(__this, ___inputSource0, method);
}
// System.Void Valve.VR.SteamVR_Action_Pose_Source::add_onActiveChange(Valve.VR.SteamVR_Action_Pose/ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_add_onActiveChange_mBA4F89F86236E399A9FABBA6AB7BE9AFDD5E3FAA (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Pose_Source::remove_onActiveChange(Valve.VR.SteamVR_Action_Pose/ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_remove_onActiveChange_m8F91AE91CFF61C2B5D4B496A28827C3A416169B4 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Pose_Source::add_onActiveBindingChange(Valve.VR.SteamVR_Action_Pose/ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_add_onActiveBindingChange_m3FD39BFF599A4AF5014F2EEC7D595AF9D2EF33E2 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Pose_Source::remove_onActiveBindingChange(Valve.VR.SteamVR_Action_Pose/ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_remove_onActiveBindingChange_m0D0CAD39C7DE6CF2F11E94DC745FE84C863543E0 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Pose_Source::add_onChange(Valve.VR.SteamVR_Action_Pose/ChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_add_onChange_m86F9A8C49AAB74EFBED5F82F2BD450687C529567 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Pose_Source::remove_onChange(Valve.VR.SteamVR_Action_Pose/ChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_remove_onChange_mB962374F5363148A48D573F22C5E1B385411E27F (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Pose_Source::add_onUpdate(Valve.VR.SteamVR_Action_Pose/UpdateHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_add_onUpdate_mD30D3D18C58E9FD060B58868A4D66478C06FCADD (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Pose_Source::remove_onUpdate(Valve.VR.SteamVR_Action_Pose/UpdateHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_remove_onUpdate_m600E90F3012E310B2178CB34B8E3C3A35380A579 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Pose_Source::add_onTrackingChanged(Valve.VR.SteamVR_Action_Pose/TrackingChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_add_onTrackingChanged_m916FC64B7E280897083BF516B0A2B10BC4034499 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Pose_Source::remove_onTrackingChanged(Valve.VR.SteamVR_Action_Pose/TrackingChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_remove_onTrackingChanged_m664E1FD884A6B739CF4BCAD82EE1168E234B0AAF (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Pose_Source::add_onValidPoseChanged(Valve.VR.SteamVR_Action_Pose/ValidPoseChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_add_onValidPoseChanged_m3A2F8586C49174C0E6E2D338A8C8D523848BB156 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, ValidPoseChangeHandler_t1D487A0B0E2FB0D02C72EF5365E81BCD3E33B41A * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Pose_Source::remove_onValidPoseChanged(Valve.VR.SteamVR_Action_Pose/ValidPoseChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_remove_onValidPoseChanged_mD755CC0727CEA9CCE5BC937BA6D2B2458E47EA62 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, ValidPoseChangeHandler_t1D487A0B0E2FB0D02C72EF5365E81BCD3E33B41A * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Pose_Source::add_onDeviceConnectedChanged(Valve.VR.SteamVR_Action_Pose/DeviceConnectedChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_add_onDeviceConnectedChanged_m26FF6E86E0FC25279D9DF124C3A00DA48AA22C6C (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Pose_Source::remove_onDeviceConnectedChanged(Valve.VR.SteamVR_Action_Pose/DeviceConnectedChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_remove_onDeviceConnectedChanged_mC9B0E9333A8B27427E1197B77C6D287FD2C687F5 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Pose_Source_Map`1<Valve.VR.SteamVR_Action_Pose_Source>,Valve.VR.SteamVR_Action_Pose_Source>::InitAfterDeserialize()
inline void SteamVR_Action_2_InitAfterDeserialize_mE9F8DD45DF03F3256906560CBC27CF8758868081 (SteamVR_Action_2_tDED2DB9236CA9398BCDCB18DB8DDA3DB1D98FBAC * __this, const RuntimeMethod* method)
{
	((  void (*) (SteamVR_Action_2_tDED2DB9236CA9398BCDCB18DB8DDA3DB1D98FBAC *, const RuntimeMethod*))SteamVR_Action_2_InitAfterDeserialize_m97D226DB0464C3D2CF67AC71B588420741A770F6_gshared)(__this, method);
}
// System.Void Valve.VR.SteamVR_Action_Pose_Base`2<Valve.VR.SteamVR_Action_Pose_Source_Map`1<Valve.VR.SteamVR_Action_Pose_Source>,Valve.VR.SteamVR_Action_Pose_Source>::SetUniverseOrigin(Valve.VR.ETrackingUniverseOrigin)
inline void SteamVR_Action_Pose_Base_2_SetUniverseOrigin_m570ADC7EF0A55D9FFC6FF570D10F5ED7A096820F (int32_t ___newOrigin0, const RuntimeMethod* method)
{
	((  void (*) (int32_t, const RuntimeMethod*))SteamVR_Action_Pose_Base_2_SetUniverseOrigin_m8F0DA8C16B8D15E2E4A3859589C78B292F437AF1_gshared)(___newOrigin0, method);
}
// Valve.VR.CVRCompositor Valve.VR.OpenVR::get_Compositor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR CVRCompositor_t0316216254FC5BC5562B6EFA273B82DDB77BB282 * OpenVR_get_Compositor_m2FB93BF84700DFCE6493B5FCF0BFAD2B334A5444 (const RuntimeMethod* method);
// System.Void Valve.VR.CVRCompositor::SetTrackingSpace(Valve.VR.ETrackingUniverseOrigin)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void CVRCompositor_SetTrackingSpace_m25BF07407A92852D787ABA6B6380991C92BD0094 (CVRCompositor_t0316216254FC5BC5562B6EFA273B82DDB77BB282 * __this, int32_t ___eOrigin0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Pose_Base`2<Valve.VR.SteamVR_Action_Pose_Source_Map`1<Valve.VR.SteamVR_Action_Pose_Source>,Valve.VR.SteamVR_Action_Pose_Source>::.ctor()
inline void SteamVR_Action_Pose_Base_2__ctor_mBF2AF97C3EAEABACA97070B5DBFD7FBD6426161E (SteamVR_Action_Pose_Base_2_tBAE9134F2B018AC078BAF24A2A5197F0A976D59A * __this, const RuntimeMethod* method)
{
	((  void (*) (SteamVR_Action_Pose_Base_2_tBAE9134F2B018AC078BAF24A2A5197F0A976D59A *, const RuntimeMethod*))SteamVR_Action_Pose_Base_2__ctor_m04E553A324B788E71DB9C8AD50C13FB88D945BC7_gshared)(__this, method);
}
// UnityEngine.Vector3 Valve.VR.SteamVR_Action_Pose_Source::get_localPosition()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SteamVR_Action_Pose_Source_get_localPosition_mE065A826D8D1A8CF44D9E7F0D038F24D70985833_inline (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Pose_Source::set_lastLocalPosition(UnityEngine.Vector3)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_set_lastLocalPosition_m6D0A990E6188F82AC2C5C7BECC5A44EB21F1579D_inline (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method);
// UnityEngine.Quaternion Valve.VR.SteamVR_Action_Pose_Source::get_localRotation()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  SteamVR_Action_Pose_Source_get_localRotation_m307D9DD92DFFFCC30446A71D9BD15674A797ED2A_inline (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Pose_Source::set_lastLocalRotation(UnityEngine.Quaternion)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_set_lastLocalRotation_mCF887D640B4BF0BBD7D83276C11C921A2CE5F649_inline (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___value0, const RuntimeMethod* method);
// UnityEngine.Vector3 Valve.VR.SteamVR_Action_Pose_Source::get_velocity()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SteamVR_Action_Pose_Source_get_velocity_m2B71BB7981006080D113442CB374529602A310BF_inline (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Pose_Source::set_lastVelocity(UnityEngine.Vector3)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_set_lastVelocity_m5DD5D60CAF5672AC910E26BA4131B6192521A874_inline (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method);
// UnityEngine.Vector3 Valve.VR.SteamVR_Action_Pose_Source::get_angularVelocity()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SteamVR_Action_Pose_Source_get_angularVelocity_mACAA45CB05DB94C9292ED147F3156109DAFA0209_inline (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Pose_Source::set_lastAngularVelocity(UnityEngine.Vector3)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_set_lastAngularVelocity_m95C5214943FAA14AD6869D3E7154F5B107C99875_inline (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method);
// Valve.VR.EVRInputError Valve.VR.CVRInput::GetPoseActionDataForNextFrame(System.UInt64,Valve.VR.ETrackingUniverseOrigin,Valve.VR.InputPoseActionData_t&,System.UInt32,System.UInt64)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t CVRInput_GetPoseActionDataForNextFrame_m2EA9535E25E060B4C24DB4947ABC493F1B0D0152 (CVRInput_t8458E224B9D7EFD4A5B102EAA06F8F365A25A53A * __this, uint64_t ___action0, int32_t ___eOrigin1, InputPoseActionData_t_tC282FD2CB85805431D2F23AF9C032BAD99683111 * ___pActionData2, uint32_t ___unActionDataSize3, uint64_t ___ulRestrictToDevice4, const RuntimeMethod* method);
// System.Single UnityEngine.Time::get_timeScale()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float Time_get_timeScale_m7E198A5814859A08FD0FFE6DD5F7ED5C907719F8 (const RuntimeMethod* method);
// Valve.VR.SteamVR Valve.VR.SteamVR::get_instance()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR SteamVR_tE14648C0E73A16927B96F72915B425561B0D057F * SteamVR_get_instance_m051B21845BD2F1EACC9DAF67416E7B898EB8E248 (const RuntimeMethod* method);
// System.Single Valve.VR.SteamVR::get_hmd_DisplayFrequency()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_get_hmd_DisplayFrequency_m8D1D1E8EBC56DC3C9415D1212E4B446D9A899926 (SteamVR_tE14648C0E73A16927B96F72915B425561B0D057F * __this, const RuntimeMethod* method);
// Valve.VR.EVRInputError Valve.VR.CVRInput::GetPoseActionDataRelativeToNow(System.UInt64,Valve.VR.ETrackingUniverseOrigin,System.Single,Valve.VR.InputPoseActionData_t&,System.UInt32,System.UInt64)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t CVRInput_GetPoseActionDataRelativeToNow_mBAEDD17710ECA793901F7A42DB84C84B5C3D5841 (CVRInput_t8458E224B9D7EFD4A5B102EAA06F8F365A25A53A * __this, uint64_t ___action0, int32_t ___eOrigin1, float ___fPredictedSecondsFromNow2, InputPoseActionData_t_tC282FD2CB85805431D2F23AF9C032BAD99683111 * ___pActionData3, uint32_t ___unActionDataSize4, uint64_t ___ulRestrictToDevice5, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Pose_Source::SetCacheVariables()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_SetCacheVariables_m75B329DBF885C2F5959F2B3D58B6C0F2BD224BC6 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method);
// System.Boolean Valve.VR.SteamVR_Action_Pose_Source::GetChanged()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Pose_Source_GetChanged_mE8C7EA7519C1AA58C1B772041E738D0E2396AC4F (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method);
// System.Single Valve.VR.SteamVR_Action_In_Source::get_updateTime()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR float SteamVR_Action_In_Source_get_updateTime_mB9F438D749D92356ACC37F9C0BCD3A304506B210_inline (SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB * __this, const RuntimeMethod* method);
// UnityEngine.Vector3 Valve.VR.HmdMatrix34_t::GetPosition()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  HmdMatrix34_t_GetPosition_mAAB6339034207A72B318AC783E2244B07D962AB6 (HmdMatrix34_t_tAD83D388E6173A848E1FE39121EE1BB9FE7F6305 * __this, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Pose_Source::set_localPosition(UnityEngine.Vector3)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_set_localPosition_m38C19E63D633A91EA065A955E770CDC43C4174C0_inline (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method);
// UnityEngine.Quaternion Valve.VR.HmdMatrix34_t::GetRotation()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  HmdMatrix34_t_GetRotation_mC38BF33EF009CC61DC1F5ABA90E548772DEEEF79 (HmdMatrix34_t_tAD83D388E6173A848E1FE39121EE1BB9FE7F6305 * __this, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Pose_Source::set_localRotation(UnityEngine.Quaternion)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_set_localRotation_mC3D82C5E3624F6FC6B4A5CAD6766C69240FC9A37_inline (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___value0, const RuntimeMethod* method);
// UnityEngine.Vector3 Valve.VR.SteamVR_Action_Pose_Source::GetUnityCoordinateVelocity(Valve.VR.HmdVector3_t)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SteamVR_Action_Pose_Source_GetUnityCoordinateVelocity_m9D03219B49FDA193DC93B6321F58B30FB36FE8A8 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, HmdVector3_t_tEFA290D649DE2E28E5863ED6F09C667A0492FCF3  ___vector0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Pose_Source::set_velocity(UnityEngine.Vector3)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_set_velocity_m0392A856C5BA77F53831D681C32FC65E8255B168_inline (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method);
// UnityEngine.Vector3 Valve.VR.SteamVR_Action_Pose_Source::GetUnityCoordinateAngularVelocity(Valve.VR.HmdVector3_t)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SteamVR_Action_Pose_Source_GetUnityCoordinateAngularVelocity_mB3D973B7915A97CADFEF53AA08CEAB866BD70366 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, HmdVector3_t_tEFA290D649DE2E28E5863ED6F09C667A0492FCF3  ___vector0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Pose_Source::set_angularVelocity(UnityEngine.Vector3)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_set_angularVelocity_m78C04A085EB6CBA58F8B20629A341DA54B5F92B4_inline (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method);
// UnityEngine.Vector3 Valve.VR.SteamVR_Action_Pose_Source::get_lastLocalPosition()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SteamVR_Action_Pose_Source_get_lastLocalPosition_mB748F9D4600498E9BACCEBE5C8F00DED8125C307_inline (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method);
// System.Single UnityEngine.Vector3::Distance(UnityEngine.Vector3,UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float Vector3_Distance_mE316E10B9B319A5C2A29F86E028740FD528149E7 (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___a0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___b1, const RuntimeMethod* method);
// UnityEngine.Quaternion Valve.VR.SteamVR_Action_Pose_Source::get_lastLocalRotation()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  SteamVR_Action_Pose_Source_get_lastLocalRotation_m15622BCE4A3D32548EBFE7DC98F8751352617660_inline (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method);
// System.Single UnityEngine.Quaternion::Angle(UnityEngine.Quaternion,UnityEngine.Quaternion)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float Quaternion_Angle_m09599D660B724D330E5C7FE2FB1C8716161B3DD1 (Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___a0, Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___b1, const RuntimeMethod* method);
// UnityEngine.Vector3 Valve.VR.SteamVR_Action_Pose_Source::get_lastVelocity()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SteamVR_Action_Pose_Source_get_lastVelocity_mB9FD7955140F713C63842433E1E50D498EAD0A21_inline (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method);
// UnityEngine.Vector3 Valve.VR.SteamVR_Action_Pose_Source::get_lastAngularVelocity()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SteamVR_Action_Pose_Source_get_lastAngularVelocity_m3EE729ECF16DA55CFE069E25EB9099A80667C55F_inline (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Vector3::get_zero()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Vector3_get_zero_m3CDDCAE94581DF3BB16C4B40A100E28E9C6649C2 (const RuntimeMethod* method);
// UnityEngine.Quaternion UnityEngine.Quaternion::get_identity()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  Quaternion_get_identity_m548B37D80F2DEE60E41D1F09BF6889B557BE1A64 (const RuntimeMethod* method);
// System.Void UnityEngine.Transform::set_localPosition(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Transform_set_localPosition_m275F5550DD939F83AFEB5E8D681131172E2E1728 (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method);
// System.Void UnityEngine.Transform::set_localRotation(UnityEngine.Quaternion)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Transform_set_localRotation_mE2BECB0954FFC1D93FB631600D9A9BEFF41D9C8A (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * __this, Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___value0, const RuntimeMethod* method);
// Valve.VR.ETrackingResult Valve.VR.SteamVR_Action_Pose_Source::get_trackingState()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t SteamVR_Action_Pose_Source_get_trackingState_m702AC7130C7E0CD7EE794221240B44EAC08BAB7D (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method);
// Valve.VR.ETrackingResult Valve.VR.SteamVR_Action_Pose_Source::get_lastTrackingState()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t SteamVR_Action_Pose_Source_get_lastTrackingState_m38B8C3D8A8462CE12EFD78811EBBD8CCEB52FAF8 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Pose/TrackingChangeHandler::Invoke(Valve.VR.SteamVR_Action_Pose,Valve.VR.SteamVR_Input_Sources,Valve.VR.ETrackingResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TrackingChangeHandler_Invoke_m380F993E23ED2D80E4B30D2B3FC42191C8FBB99D (TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 * __this, SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * ___fromAction0, int32_t ___fromSource1, int32_t ___trackingState2, const RuntimeMethod* method);
// System.Boolean Valve.VR.SteamVR_Action_Pose_Source::get_poseIsValid()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Pose_Source_get_poseIsValid_m637DE37434CBBEC04B359C9FF89AF0681DA67457 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method);
// System.Boolean Valve.VR.SteamVR_Action_Pose_Source::get_lastPoseIsValid()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Pose_Source_get_lastPoseIsValid_m7CC61D5F85FD1334CFC6F917EECDA224FA903D0E (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Pose/ValidPoseChangeHandler::Invoke(Valve.VR.SteamVR_Action_Pose,Valve.VR.SteamVR_Input_Sources,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ValidPoseChangeHandler_Invoke_m881AD09C85F8A76B3DAC8FD9D6C1D8D2A43AE8DC (ValidPoseChangeHandler_t1D487A0B0E2FB0D02C72EF5365E81BCD3E33B41A * __this, SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * ___fromAction0, int32_t ___fromSource1, bool ___validPose2, const RuntimeMethod* method);
// System.Boolean Valve.VR.SteamVR_Action_Pose_Source::get_deviceIsConnected()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Pose_Source_get_deviceIsConnected_m631372A24F57796D298E27F7E8BB93BFA31143EB (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method);
// System.Boolean Valve.VR.SteamVR_Action_Pose_Source::get_lastDeviceIsConnected()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Pose_Source_get_lastDeviceIsConnected_m54D89CD952536E4C6CC1B31D732F097A78FC6D83 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Pose/DeviceConnectedChangeHandler::Invoke(Valve.VR.SteamVR_Action_Pose,Valve.VR.SteamVR_Input_Sources,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DeviceConnectedChangeHandler_Invoke_m512AF09CD9A724F720AFB1337A900BFE49B1F4F0 (DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 * __this, SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * ___fromAction0, int32_t ___fromSource1, bool ___deviceConnected2, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Pose/ChangeHandler::Invoke(Valve.VR.SteamVR_Action_Pose,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ChangeHandler_Invoke_m1E3883B22E580E2A82DF410B59EB44B502319DA9 (ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE * __this, SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * ___fromAction0, int32_t ___fromSource1, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Pose/ActiveChangeHandler::Invoke(Valve.VR.SteamVR_Action_Pose,Valve.VR.SteamVR_Input_Sources,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ActiveChangeHandler_Invoke_m5A1A650F2FBCBD68E1A3F5A15E6631F45A16BDAF (ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * __this, SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * ___fromAction0, int32_t ___fromSource1, bool ___active2, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Pose/UpdateHandler::Invoke(Valve.VR.SteamVR_Action_Pose,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UpdateHandler_Invoke_m27C63AF2E42B34048A8AF0905FCB8C7129DFFB2A (UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 * __this, SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * ___fromAction0, int32_t ___fromSource1, const RuntimeMethod* method);
// UnityEngine.Vector3 Valve.VR.SteamVR_Action_Pose_Source::GetUnityCoordinateVelocity(System.Single,System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SteamVR_Action_Pose_Source_GetUnityCoordinateVelocity_mBEF9FF5E7639E3298E578C1035691A3F2F14E3CC (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, float ___x0, float ___y1, float ___z2, const RuntimeMethod* method);
// UnityEngine.Vector3 Valve.VR.SteamVR_Action_Pose_Source::GetUnityCoordinateAngularVelocity(System.Single,System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SteamVR_Action_Pose_Source_GetUnityCoordinateAngularVelocity_mB29B533358ECB8CAF6B4D8C3C75E61CC00BA6626 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, float ___x0, float ___y1, float ___z2, const RuntimeMethod* method);
// SourceElement Valve.VR.SteamVR_Action_Source_Map`1<Valve.VR.SteamVR_Action_Single_Source>::get_Item(Valve.VR.SteamVR_Input_Sources)
inline SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * SteamVR_Action_Source_Map_1_get_Item_m303FDBA93004D8CE7E49B6F079D27B5CB7AC9B72 (SteamVR_Action_Source_Map_1_t35C427C8B75EF289976D4DB641CA212F073FB0A1 * __this, int32_t ___inputSource0, const RuntimeMethod* method)
{
	return ((  SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * (*) (SteamVR_Action_Source_Map_1_t35C427C8B75EF289976D4DB641CA212F073FB0A1 *, int32_t, const RuntimeMethod*))SteamVR_Action_Source_Map_1_get_Item_mB034B2596B39A1DB5B5BA1ADA63292FDE8DBF9D9_gshared)(__this, ___inputSource0, method);
}
// System.Void Valve.VR.SteamVR_Action_Single_Source::add_onChange(Valve.VR.SteamVR_Action_Single/ChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Single_Source_add_onChange_m293210E1B8395F5C75302844AF1B4AE74DD2F3A8 (SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * __this, ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Single_Source::remove_onChange(Valve.VR.SteamVR_Action_Single/ChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Single_Source_remove_onChange_m416E274F58D3F80F3E2AC77BC933E1D1F8BBDECD (SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * __this, ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Single_Source::add_onUpdate(Valve.VR.SteamVR_Action_Single/UpdateHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Single_Source_add_onUpdate_m5598F5E0ABEB41135E942BD9590CA88A5E89A167 (SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * __this, UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Single_Source::remove_onUpdate(Valve.VR.SteamVR_Action_Single/UpdateHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Single_Source_remove_onUpdate_mB6B6416FED4DA773EFB6D97EE7E6C9ED8F4CA16C (SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * __this, UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Single_Source::add_onAxis(Valve.VR.SteamVR_Action_Single/AxisHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Single_Source_add_onAxis_m61631AE5B07E5BA034D52ED44590597E6A13AC24 (SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * __this, AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Single_Source::remove_onAxis(Valve.VR.SteamVR_Action_Single/AxisHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Single_Source_remove_onAxis_m75F1ECD8DFD59FAFE831C580F22F1E2A0039D742 (SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * __this, AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Single_Source::add_onActiveChange(Valve.VR.SteamVR_Action_Single/ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Single_Source_add_onActiveChange_mB2A4804575E6862178A504A34B087ADCC989D383 (SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * __this, ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Single_Source::remove_onActiveChange(Valve.VR.SteamVR_Action_Single/ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Single_Source_remove_onActiveChange_mBE7196AA119D8715900D8D6F01D96E60801EF7E7 (SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * __this, ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Single_Source::add_onActiveBindingChange(Valve.VR.SteamVR_Action_Single/ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Single_Source_add_onActiveBindingChange_mBC814F86ED29A7728BD85E8C212603D05F4FD282 (SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * __this, ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Single_Source::remove_onActiveBindingChange(Valve.VR.SteamVR_Action_Single/ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Single_Source_remove_onActiveBindingChange_mE912C712F7759127954B79BD2D501387E3AD0DFD (SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * __this, ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * ___value0, const RuntimeMethod* method);
// System.Single Valve.VR.SteamVR_Action_Single_Source::get_axis()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Single_Source_get_axis_mBA7DCD6C227E324C4B4029D020E37B1262CFB592 (SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * __this, const RuntimeMethod* method);
// System.Single Valve.VR.SteamVR_Action_Single_Source::get_lastAxis()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Single_Source_get_lastAxis_m0E8BA1EEB9AD3414A37EB061A7DEEFE074832474 (SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * __this, const RuntimeMethod* method);
// System.Single Valve.VR.SteamVR_Action_Single_Source::get_delta()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Single_Source_get_delta_mD9BEE7AF7213499DAE270C19A1FBD5298527F1BF (SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * __this, const RuntimeMethod* method);
// System.Single Valve.VR.SteamVR_Action_Single_Source::get_lastDelta()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Single_Source_get_lastDelta_m1030BF40FF11089715D2A20730386FB2843AD08F (SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * __this, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_In`2<Valve.VR.SteamVR_Action_Single_Source_Map,Valve.VR.SteamVR_Action_Single_Source>::.ctor()
inline void SteamVR_Action_In_2__ctor_m41F7AFC75B6446B69288BD50077908E1AF71C61A (SteamVR_Action_In_2_t518EEA73CD833B39D557DDB94804313377E0FE02 * __this, const RuntimeMethod* method)
{
	((  void (*) (SteamVR_Action_In_2_t518EEA73CD833B39D557DDB94804313377E0FE02 *, const RuntimeMethod*))SteamVR_Action_In_2__ctor_mE8D7F48E48E81915F85312A869B9F905CAF9B986_gshared)(__this, method);
}
// System.Void Valve.VR.SteamVR_Action_Single_Source::RemoveAllListeners()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Single_Source_RemoveAllListeners_m23CB655786F09E0A2FB8273527639C90768AF2D8 (SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * __this, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Single_Source_Map,Valve.VR.SteamVR_Action_Single_Source>::InitAfterDeserialize()
inline void SteamVR_Action_2_InitAfterDeserialize_mE728FED0E8C00D51AC4197B832D5566ED4AC6B5C (SteamVR_Action_2_t6C5A72BCD96947140E949B195C2578D4AE46E170 * __this, const RuntimeMethod* method)
{
	((  void (*) (SteamVR_Action_2_t6C5A72BCD96947140E949B195C2578D4AE46E170 *, const RuntimeMethod*))SteamVR_Action_2_InitAfterDeserialize_m97D226DB0464C3D2CF67AC71B588420741A770F6_gshared)(__this, method);
}
// System.UInt64 Valve.VR.SteamVR_Input_Source::GetHandle(Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR uint64_t SteamVR_Input_Source_GetHandle_m0FAD747327B66172ACE9A9C1CD14FEDF685C7D3B (int32_t ___inputSource0, const RuntimeMethod* method);
// Valve.VR.EVRInputError Valve.VR.CVRInput::GetAnalogActionData(System.UInt64,Valve.VR.InputAnalogActionData_t&,System.UInt32,System.UInt64)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t CVRInput_GetAnalogActionData_m3FEB4E2D5AE96E97C2D73EEED945E547AE36741A (CVRInput_t8458E224B9D7EFD4A5B102EAA06F8F365A25A53A * __this, uint64_t ___action0, InputAnalogActionData_t_t6C7615BD7F4223A4ADA9268DDF501D09B3C808CA * ___pActionData1, uint32_t ___unActionDataSize2, uint64_t ___ulRestrictToDevice3, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Single/ChangeHandler::Invoke(Valve.VR.SteamVR_Action_Single,Valve.VR.SteamVR_Input_Sources,System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ChangeHandler_Invoke_mA6FEAACAFCF036074E714B587983BF47E83DC71A (ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED * __this, SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * ___fromAction0, int32_t ___fromSource1, float ___newAxis2, float ___newDelta3, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Single/AxisHandler::Invoke(Valve.VR.SteamVR_Action_Single,Valve.VR.SteamVR_Input_Sources,System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void AxisHandler_Invoke_mDA97876A749D05A969CA6F3E21492029C4EECD9B (AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 * __this, SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * ___fromAction0, int32_t ___fromSource1, float ___newAxis2, float ___newDelta3, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Single/UpdateHandler::Invoke(Valve.VR.SteamVR_Action_Single,Valve.VR.SteamVR_Input_Sources,System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UpdateHandler_Invoke_mC46C8434097606A7922886963544D8A3B25387BC (UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D * __this, SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * ___fromAction0, int32_t ___fromSource1, float ___newAxis2, float ___newDelta3, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Single/ActiveChangeHandler::Invoke(Valve.VR.SteamVR_Action_Single,Valve.VR.SteamVR_Input_Sources,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ActiveChangeHandler_Invoke_m226C2CFA8D9BB2881E969D6FB484D106AAF0D98D (ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * __this, SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * ___fromAction0, int32_t ___fromSource1, bool ___active2, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_In_Source_Map`1<Valve.VR.SteamVR_Action_Single_Source>::.ctor()
inline void SteamVR_Action_In_Source_Map_1__ctor_mB77B525B66B2B2D0584C98822837286DF43B701B (SteamVR_Action_In_Source_Map_1_t2C53C7DDA5E7BECE6E12D3EE7BFAB2ADF8781741 * __this, const RuntimeMethod* method)
{
	((  void (*) (SteamVR_Action_In_Source_Map_1_t2C53C7DDA5E7BECE6E12D3EE7BFAB2ADF8781741 *, const RuntimeMethod*))SteamVR_Action_In_Source_Map_1__ctor_mA777437FDF48094346227E72C185C4F6703872B6_gshared)(__this, method);
}
// SourceElement Valve.VR.SteamVR_Action_Source_Map`1<Valve.VR.SteamVR_Action_Skeleton_Source>::get_Item(Valve.VR.SteamVR_Input_Sources)
inline SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2 (SteamVR_Action_Source_Map_1_t27BBF2BA23BB14D6B7B203EF8ABFEF3D68E13AB1 * __this, int32_t ___inputSource0, const RuntimeMethod* method)
{
	return ((  SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * (*) (SteamVR_Action_Source_Map_1_t27BBF2BA23BB14D6B7B203EF8ABFEF3D68E13AB1 *, int32_t, const RuntimeMethod*))SteamVR_Action_Source_Map_1_get_Item_mB034B2596B39A1DB5B5BA1ADA63292FDE8DBF9D9_gshared)(__this, ___inputSource0, method);
}
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::add_onActiveChange(Valve.VR.SteamVR_Action_Skeleton/ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_add_onActiveChange_m24B7A7690655124BE37A0854C004BBD11BCBB83A (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::remove_onActiveChange(Valve.VR.SteamVR_Action_Skeleton/ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_remove_onActiveChange_mBFD27080A2A3F94F22EB62EBD7C2680D21CF0C40 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::add_onActiveBindingChange(Valve.VR.SteamVR_Action_Skeleton/ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_add_onActiveBindingChange_mBA9217A7856EEA2B9346304FF33C00F3D35E381D (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::remove_onActiveBindingChange(Valve.VR.SteamVR_Action_Skeleton/ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_remove_onActiveBindingChange_m928BE406E004801B903336174AD71858077B4C31 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::add_onChange(Valve.VR.SteamVR_Action_Skeleton/ChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_add_onChange_m51211C4C14EDFC3532F9E4E205AE05A33C33B853 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::remove_onChange(Valve.VR.SteamVR_Action_Skeleton/ChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_remove_onChange_m6ACA4D17F3A943BB1AA96322576AA634DE0D8A0B (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::add_onUpdate(Valve.VR.SteamVR_Action_Skeleton/UpdateHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_add_onUpdate_mB78DAAB24C69C5E8AFB4AAD7BD5207D3F1A4FE61 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::remove_onUpdate(Valve.VR.SteamVR_Action_Skeleton/UpdateHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_remove_onUpdate_m628C295EBD7F127757F7A4EB9CBD5563BF36C4B9 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::add_onTrackingChanged(Valve.VR.SteamVR_Action_Skeleton/TrackingChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_add_onTrackingChanged_mE82310A9D0C5662FEC30C6BBCA210B4448D954F8 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::remove_onTrackingChanged(Valve.VR.SteamVR_Action_Skeleton/TrackingChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_remove_onTrackingChanged_m40D169DABA55145AB54EF10974905C05237D2CA6 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::add_onValidPoseChanged(Valve.VR.SteamVR_Action_Skeleton/ValidPoseChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_add_onValidPoseChanged_m1E9DD56A71BF38267F5BD279BAA9B378842512AE (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::remove_onValidPoseChanged(Valve.VR.SteamVR_Action_Skeleton/ValidPoseChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_remove_onValidPoseChanged_mEE5E18D3BE29BAA782313154AFB6EAC448899DDE (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::add_onDeviceConnectedChanged(Valve.VR.SteamVR_Action_Skeleton/DeviceConnectedChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_add_onDeviceConnectedChanged_m6AF65BCB16CBA635F075BFE3D42A85C1164FBC3C (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::remove_onDeviceConnectedChanged(Valve.VR.SteamVR_Action_Skeleton/DeviceConnectedChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_remove_onDeviceConnectedChanged_m77B3EE4ABFF7936EC6951485DCD048DBEE1562BB (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Pose_Base`2<Valve.VR.SteamVR_Action_Skeleton_Source_Map,Valve.VR.SteamVR_Action_Skeleton_Source>::.ctor()
inline void SteamVR_Action_Pose_Base_2__ctor_m24086345D5295A3360CF25DCB9922CA2CC4ECF61 (SteamVR_Action_Pose_Base_2_tCF260D4E08F45DC042B3B5B7B7A2F6B84880C2C2 * __this, const RuntimeMethod* method)
{
	((  void (*) (SteamVR_Action_Pose_Base_2_tCF260D4E08F45DC042B3B5B7B7A2F6B84880C2C2 *, const RuntimeMethod*))SteamVR_Action_Pose_Base_2__ctor_m04E553A324B788E71DB9C8AD50C13FB88D945BC7_gshared)(__this, method);
}
// System.Void Valve.VR.SteamVR_Action_Pose_Base`2<Valve.VR.SteamVR_Action_Skeleton_Source_Map,Valve.VR.SteamVR_Action_Skeleton_Source>::UpdateTransform(Valve.VR.SteamVR_Input_Sources,UnityEngine.Transform)
inline void SteamVR_Action_Pose_Base_2_UpdateTransform_mA2326B217389FE7C35FA7067EC5CB94B949791CD (SteamVR_Action_Pose_Base_2_tCF260D4E08F45DC042B3B5B7B7A2F6B84880C2C2 * __this, int32_t ___inputSource0, Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___transformToUpdate1, const RuntimeMethod* method)
{
	((  void (*) (SteamVR_Action_Pose_Base_2_tCF260D4E08F45DC042B3B5B7B7A2F6B84880C2C2 *, int32_t, Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA *, const RuntimeMethod*))SteamVR_Action_Pose_Base_2_UpdateTransform_m1262386ECE6A5BF84EEC593432A2442588797FFC_gshared)(__this, ___inputSource0, ___transformToUpdate1, method);
}
// UnityEngine.Vector3[] Valve.VR.SteamVR_Action_Skeleton_Source::get_bonePositions()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* SteamVR_Action_Skeleton_Source_get_bonePositions_mA0C01DDB9EAB9749BBBEDBCFF72582812AB9C195_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method);
// UnityEngine.Quaternion[] Valve.VR.SteamVR_Action_Skeleton_Source::get_boneRotations()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* SteamVR_Action_Skeleton_Source_get_boneRotations_mCD0B038517CA7A79945AD615082F05B25B0EDA20_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method);
// UnityEngine.Vector3[] Valve.VR.SteamVR_Action_Skeleton_Source::get_lastBonePositions()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* SteamVR_Action_Skeleton_Source_get_lastBonePositions_m99D1C7B8A05E646777AC85CFC0ED2FF0953C3AB9_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method);
// UnityEngine.Quaternion[] Valve.VR.SteamVR_Action_Skeleton_Source::get_lastBoneRotations()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* SteamVR_Action_Skeleton_Source_get_lastBoneRotations_m14A98028FB99C0404733364FFD3C187D2A53261C_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method);
// Valve.VR.EVRSkeletalMotionRange Valve.VR.SteamVR_Action_Skeleton_Source::get_rangeOfMotion()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR int32_t SteamVR_Action_Skeleton_Source_get_rangeOfMotion_m3698046C051B2375EA956A3BDFE1BB6CA28AAD4E_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::set_rangeOfMotion(Valve.VR.EVRSkeletalMotionRange)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_set_rangeOfMotion_m91A4B52E877EA5A07574CC4A7FDE89BC4B4594F9_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, int32_t ___value0, const RuntimeMethod* method);
// Valve.VR.EVRSkeletalTransformSpace Valve.VR.SteamVR_Action_Skeleton_Source::get_skeletalTransformSpace()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR int32_t SteamVR_Action_Skeleton_Source_get_skeletalTransformSpace_m581268DA5BEE1B2F2315A38319F75E7241F5BB21_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::set_skeletalTransformSpace(Valve.VR.EVRSkeletalTransformSpace)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_set_skeletalTransformSpace_m0A466B97614EB779A0DA19E3F2DBEC0E7E8E162D_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, int32_t ___value0, const RuntimeMethod* method);
// Valve.VR.EVRSummaryType Valve.VR.SteamVR_Action_Skeleton_Source::get_summaryDataType()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR int32_t SteamVR_Action_Skeleton_Source_get_summaryDataType_m99C31EEF6D6E87C035887DE8640DC37C07D2CA79_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::set_summaryDataType(Valve.VR.EVRSummaryType)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_set_summaryDataType_m772AC48620054C732E34EE86BBADE98C3EFAC365_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, int32_t ___value0, const RuntimeMethod* method);
// Valve.VR.EVRSkeletalTrackingLevel Valve.VR.SteamVR_Action_Skeleton_Source::get_skeletalTrackingLevel()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t SteamVR_Action_Skeleton_Source_get_skeletalTrackingLevel_mABC82B5824C8B57C5C222A20B80E47ABE5DF7E9B (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method);
// System.Single Valve.VR.SteamVR_Action_Skeleton_Source::get_thumbCurl()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_Source_get_thumbCurl_m1E1B3EB8065D36CC07FD3D3F81142DE18117571D (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method);
// System.Single Valve.VR.SteamVR_Action_Skeleton_Source::get_indexCurl()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_Source_get_indexCurl_m23B7090B54104226A276B2DA6F9AF05D8A87F4C4 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method);
// System.Single Valve.VR.SteamVR_Action_Skeleton_Source::get_middleCurl()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_Source_get_middleCurl_mF2DB6D3C537BDA649730D9DED5FD8C158792A99E (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method);
// System.Single Valve.VR.SteamVR_Action_Skeleton_Source::get_ringCurl()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_Source_get_ringCurl_mB1080317044EB9464CBFA2AB4D579481889A4DF6 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method);
// System.Single Valve.VR.SteamVR_Action_Skeleton_Source::get_pinkyCurl()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_Source_get_pinkyCurl_mDCB73847A197AC4E4F55DF28D27857EE71F131B3 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method);
// System.Single Valve.VR.SteamVR_Action_Skeleton_Source::get_thumbIndexSplay()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_Source_get_thumbIndexSplay_m8A48CFB2D8446B92D1ACD230A06CCADEADAF90D8 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method);
// System.Single Valve.VR.SteamVR_Action_Skeleton_Source::get_indexMiddleSplay()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_Source_get_indexMiddleSplay_m032F314FF2441AF7819CD080BAC24BD7EA1D25B2 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method);
// System.Single Valve.VR.SteamVR_Action_Skeleton_Source::get_middleRingSplay()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_Source_get_middleRingSplay_m8F9D81F3B1CB80C0DD82485A54DB100FF1B0E546 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method);
// System.Single Valve.VR.SteamVR_Action_Skeleton_Source::get_ringPinkySplay()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_Source_get_ringPinkySplay_m1A57999FB132953BE3265B6C3AB7E274A1D10DE0 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method);
// System.Single Valve.VR.SteamVR_Action_Skeleton_Source::get_lastThumbCurl()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_Source_get_lastThumbCurl_mE893135DF37D02B74C7B190331E8A214C5350AC4 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method);
// System.Single Valve.VR.SteamVR_Action_Skeleton_Source::get_lastIndexCurl()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_Source_get_lastIndexCurl_mB7429964CAA0C0A16B0C98F8FEADEFFD8466CE30 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method);
// System.Single Valve.VR.SteamVR_Action_Skeleton_Source::get_lastMiddleCurl()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_Source_get_lastMiddleCurl_m1EC63B41C764BED847913534AFA8D939FE64686A (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method);
// System.Single Valve.VR.SteamVR_Action_Skeleton_Source::get_lastRingCurl()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_Source_get_lastRingCurl_m243A9EC6EA188AA107D23B07BA8BEFCABC3EEAA8 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method);
// System.Single Valve.VR.SteamVR_Action_Skeleton_Source::get_lastPinkyCurl()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_Source_get_lastPinkyCurl_m67226B9DF4D046AFFC83ED7FB6B9BD8678C0B306 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method);
// System.Single Valve.VR.SteamVR_Action_Skeleton_Source::get_lastThumbIndexSplay()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_Source_get_lastThumbIndexSplay_mFECABD9313D9F50354F74393A9A22B3DCF0C991B (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method);
// System.Single Valve.VR.SteamVR_Action_Skeleton_Source::get_lastIndexMiddleSplay()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_Source_get_lastIndexMiddleSplay_mC780C06D5EFBB2E006D57433B5813666CABE8684 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method);
// System.Single Valve.VR.SteamVR_Action_Skeleton_Source::get_lastMiddleRingSplay()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_Source_get_lastMiddleRingSplay_mF7BD21EE49B81B5326424FEA0EBB2191171BCDC6 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method);
// System.Single Valve.VR.SteamVR_Action_Skeleton_Source::get_lastRingPinkySplay()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_Source_get_lastRingPinkySplay_mE15C84D9E609B6A7941C2C96AAAF10514D3808B1 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method);
// System.Single[] Valve.VR.SteamVR_Action_Skeleton_Source::get_fingerCurls()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* SteamVR_Action_Skeleton_Source_get_fingerCurls_m6E0B4235B8D2B15E1BBFD7634ECA591CC77A2732_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method);
// System.Single[] Valve.VR.SteamVR_Action_Skeleton_Source::get_fingerSplays()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* SteamVR_Action_Skeleton_Source_get_fingerSplays_m21D8D0994518AF9B7532A558E5E39A81C29ADE11_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method);
// System.Single[] Valve.VR.SteamVR_Action_Skeleton_Source::get_lastFingerCurls()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* SteamVR_Action_Skeleton_Source_get_lastFingerCurls_m46C98882B5CB755BB4ADC367308E91D036E1896E_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method);
// System.Single[] Valve.VR.SteamVR_Action_Skeleton_Source::get_lastFingerSplays()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* SteamVR_Action_Skeleton_Source_get_lastFingerSplays_m9DFC31F484BCD45399E9335EE8679CEC8150D3F4_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method);
// System.Boolean Valve.VR.SteamVR_Action_Skeleton_Source::get_poseChanged()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR bool SteamVR_Action_Skeleton_Source_get_poseChanged_mBBFFCD8FF3AB5998C3B5053499A253E137EB6B01_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method);
// System.Boolean Valve.VR.SteamVR_Action_Skeleton_Source::get_onlyUpdateSummaryData()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR bool SteamVR_Action_Skeleton_Source_get_onlyUpdateSummaryData_m3F489169E6CE022F5E46CB1D3B6EB910564C8A9A_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::set_onlyUpdateSummaryData(System.Boolean)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_set_onlyUpdateSummaryData_m02A775C0CAB57C16D4A673019586873F7C0B3CFB_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, bool ___value0, const RuntimeMethod* method);
// System.Boolean Valve.VR.SteamVR_Action_Pose_Source::GetVelocitiesAtTimeOffset(System.Single,UnityEngine.Vector3&,UnityEngine.Vector3&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Pose_Source_GetVelocitiesAtTimeOffset_m2FB2A8F8F97750A6CAD390348AAE8E9DF94B9B69 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, float ___secondsFromNow0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * ___velocityAtTime1, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * ___angularVelocityAtTime2, const RuntimeMethod* method);
// System.Boolean Valve.VR.SteamVR_Action_Pose_Source::GetPoseAtTimeOffset(System.Single,UnityEngine.Vector3&,UnityEngine.Quaternion&,UnityEngine.Vector3&,UnityEngine.Vector3&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Pose_Source_GetPoseAtTimeOffset_mB6CC830F3A16661AADD4A98BBA70E69ED8C98480 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, float ___secondsFromNow0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * ___positionAtTime1, Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 * ___rotationAtTime2, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * ___velocityAtTime3, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * ___angularVelocityAtTime4, const RuntimeMethod* method);
// System.UInt32 Valve.VR.SteamVR_Action_Skeleton::GetBoneCount()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR uint32_t SteamVR_Action_Skeleton_GetBoneCount_mD2B27CC695DB970DE6F2FE9F57747306854185FC (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method);
// System.Object System.Array::Clone()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject * Array_Clone_mE8C710213E323617A6F46F2B36DCDDD4C7CF5176 (RuntimeArray * __this, const RuntimeMethod* method);
// System.UInt32 Valve.VR.SteamVR_Action_Skeleton_Source::GetBoneCount()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR uint32_t SteamVR_Action_Skeleton_Source_GetBoneCount_m3049CC9D5CB2C3913C467D136B8C6A9CDAAC8148 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method);
// System.Int32[] Valve.VR.SteamVR_Action_Skeleton_Source::GetBoneHierarchy()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* SteamVR_Action_Skeleton_Source_GetBoneHierarchy_mC62033C6184EC1DDE31051D1F167683E8D842445 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method);
// System.String Valve.VR.SteamVR_Action_Skeleton_Source::GetBoneName(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* SteamVR_Action_Skeleton_Source_GetBoneName_m464D8D3413D7782356433F03C854B062E0080488 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, int32_t ___boneIndex0, const RuntimeMethod* method);
// SteamVR_Utils/RigidTransform[] Valve.VR.SteamVR_Action_Skeleton_Source::GetReferenceTransforms(Valve.VR.EVRSkeletalTransformSpace,Valve.VR.EVRSkeletalReferencePose)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RigidTransformU5BU5D_tC98EB3576009E5D825D0D43671A65D32A2449ECC* SteamVR_Action_Skeleton_Source_GetReferenceTransforms_m81B42FB78EE3A685B9B88FD3083F07971B5EA156 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, int32_t ___transformSpace0, int32_t ___referencePose1, const RuntimeMethod* method);
// Valve.VR.EVRSkeletalTrackingLevel Valve.VR.SteamVR_Action_Skeleton_Source::GetSkeletalTrackingLevel()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t SteamVR_Action_Skeleton_Source_GetSkeletalTrackingLevel_mFDDD94CFD727E816757BEF9129ADCC8996495018 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method);
// System.Single Valve.VR.SteamVR_Action_Skeleton::GetFingerCurl(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_GetFingerCurl_mC08596A16D1F47B97BFC0DC8D9089F761751C1A6 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, int32_t ___finger0, const RuntimeMethod* method);
// System.Single Valve.VR.SteamVR_Action_Skeleton::GetSplay(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_GetSplay_m66C049355DEC070185248558C8532BA370F5B14F (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, int32_t ___fingerGapIndex0, const RuntimeMethod* method);
// System.Single Valve.VR.SteamVR_Action_Skeleton::GetLastFingerCurl(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_GetLastFingerCurl_mEB8760CBAD65388E4ECCD999150C3D6287171762 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, int32_t ___finger0, const RuntimeMethod* method);
// System.Single Valve.VR.SteamVR_Action_Skeleton::GetLastSplay(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_GetLastSplay_mD9365C49755E9D59DBB8F2F9F42EBFA2EAC6DFD5 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, int32_t ___fingerGapIndex0, const RuntimeMethod* method);
// System.String Valve.VR.SteamVR_Action_In_Source::GetLocalizedOriginPart(Valve.VR.EVRInputStringBits[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* SteamVR_Action_In_Source_GetLocalizedOriginPart_mE7B291A4EA395AD6127DE314E7B1194270C491D7 (SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB * __this, EVRInputStringBitsU5BU5D_t6940A5B40972263CCCE9DFDBA05F69BA9DD7B52C* ___localizedParts0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Skeleton_Source_Map,Valve.VR.SteamVR_Action_Skeleton_Source>::InitAfterDeserialize()
inline void SteamVR_Action_2_InitAfterDeserialize_m6328CD572A94DA88CD2DF7764B1C54660D864650 (SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D * __this, const RuntimeMethod* method)
{
	((  void (*) (SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *, const RuntimeMethod*))SteamVR_Action_2_InitAfterDeserialize_m97D226DB0464C3D2CF67AC71B588420741A770F6_gshared)(__this, method);
}
// UnityEngine.Vector3 UnityEngine.Vector3::get_up()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Vector3_get_up_m6309EBC4E42D6D0B3D28056BD23D0331275306F7 (const RuntimeMethod* method);
// UnityEngine.Quaternion UnityEngine.Quaternion::AngleAxis(System.Single,UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  Quaternion_AngleAxis_m07DACF59F0403451DABB9BC991C53EE3301E88B0 (float ___angle0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___axis1, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Pose_Source::Preinitialize(Valve.VR.SteamVR_Action,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_Preinitialize_mF8A86BF078F169380E7A1C75DA6C20B49380AE9B (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * ___wrappingAction0, int32_t ___forInputSource1, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::set_bonePositions(UnityEngine.Vector3[])
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_set_bonePositions_m96408532FED1D966DE56612099B679DA8FBBF8D9_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::set_lastBonePositions(UnityEngine.Vector3[])
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_set_lastBonePositions_m8E63D828A81C99EEA6A4C55BA74D48F7C7F19CBF_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::set_boneRotations(UnityEngine.Quaternion[])
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_set_boneRotations_m2B92E87BC6C9E456075204D69BD82CAE759F46E2_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::set_lastBoneRotations(UnityEngine.Quaternion[])
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_set_lastBoneRotations_mF1526AAAFE4506F1F70D22BED03D04083E75E3F8_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::set_fingerCurls(System.Single[])
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_set_fingerCurls_m2A1933C7FE83EB6B654B248354B4438B1B15C0BD_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::set_fingerSplays(System.Single[])
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_set_fingerSplays_mB8BA373C6A1A65E39FD6D8AF1566A31F18BA7055_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::set_lastFingerCurls(System.Single[])
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_set_lastFingerCurls_mA6CF9BCD46F49F1A95627142A70D9FA3C4F490E5_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::set_lastFingerSplays(System.Single[])
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_set_lastFingerSplays_m1E2D198E4627EA80F69A67AB26943144BD45DC70_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Pose_Source::Initialize()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_Initialize_m36604AB0F3E49250F5761A885B005CB8CEE2DBD1 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Pose_Source::RemoveAllListeners()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_RemoveAllListeners_m07850B9C3B46C5E52AA8D2FF80B15C09E7901B9C (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Pose_Source::UpdateValue(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_UpdateValue_mC4B5455237B6CD71DD565F71267D8EB3AE3681F0 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, bool ___skipStateAndEventUpdates0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::set_poseChanged(System.Boolean)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_set_poseChanged_m359037EAC8B53761892E89E13D0A1FCC31A222EC_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, bool ___value0, const RuntimeMethod* method);
// Valve.VR.EVRInputError Valve.VR.CVRInput::GetSkeletalActionData(System.UInt64,Valve.VR.InputSkeletalActionData_t&,System.UInt32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t CVRInput_GetSkeletalActionData_mD08DD4FDBE1F6CCF87ACBB5DDC9B3C7C5FEA2BD9 (CVRInput_t8458E224B9D7EFD4A5B102EAA06F8F365A25A53A * __this, uint64_t ___action0, InputSkeletalActionData_t_tD41850247EEE1858231B43C4B3EC2B5617140C26 * ___pActionData1, uint32_t ___unActionDataSize2, const RuntimeMethod* method);
// Valve.VR.EVRInputError Valve.VR.CVRInput::GetSkeletalBoneData(System.UInt64,Valve.VR.EVRSkeletalTransformSpace,Valve.VR.EVRSkeletalMotionRange,Valve.VR.VRBoneTransform_t[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t CVRInput_GetSkeletalBoneData_m3008E4A3FBB4A3C03948F1EC5C54FC314399F112 (CVRInput_t8458E224B9D7EFD4A5B102EAA06F8F365A25A53A * __this, uint64_t ___action0, int32_t ___eTransformSpace1, int32_t ___eMotionRange2, VRBoneTransform_tU5BU5D_tB5FDD0831D295612D4381D2F2D8805367FAF83F8* ___pTransformArray3, const RuntimeMethod* method);
// UnityEngine.Quaternion UnityEngine.Quaternion::op_Multiply(UnityEngine.Quaternion,UnityEngine.Quaternion)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  Quaternion_op_Multiply_mDB9F738AA8160E3D85549F4FEDA23BC658B5A790 (Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___lhs0, Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___rhs1, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::UpdateSkeletalSummaryData(Valve.VR.EVRSummaryType,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_UpdateSkeletalSummaryData_m5649DAF4900617BF2B608028C8382A7A22A1F41E (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, int32_t ___summaryType0, bool ___force1, const RuntimeMethod* method);
// Valve.VR.EVRInputError Valve.VR.CVRInput::GetBoneCount(System.UInt64,System.UInt32&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t CVRInput_GetBoneCount_m8EB7B9FA9695F9D7D48ACE6C9FEBC27B0D0D6F7B (CVRInput_t8458E224B9D7EFD4A5B102EAA06F8F365A25A53A * __this, uint64_t ___action0, uint32_t* ___pBoneCount1, const RuntimeMethod* method);
// Valve.VR.EVRInputError Valve.VR.CVRInput::GetBoneHierarchy(System.UInt64,System.Int32[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t CVRInput_GetBoneHierarchy_mBDD91998A6017809EFA6B91E8F6DC726974D2E0D (CVRInput_t8458E224B9D7EFD4A5B102EAA06F8F365A25A53A * __this, uint64_t ___action0, Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* ___pParentIndices1, const RuntimeMethod* method);
// System.Void System.Text.StringBuilder::.ctor(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void StringBuilder__ctor_m1C0F2D97B838537A2D0F64033AE4EF02D150A956 (StringBuilder_t * __this, int32_t ___capacity0, const RuntimeMethod* method);
// Valve.VR.EVRInputError Valve.VR.CVRInput::GetBoneName(System.UInt64,System.Int32,System.Text.StringBuilder,System.UInt32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t CVRInput_GetBoneName_mBAE82D02F085E0B3DDCE21EA4BDCEB94A1A72297 (CVRInput_t8458E224B9D7EFD4A5B102EAA06F8F365A25A53A * __this, uint64_t ___action0, int32_t ___nBoneIndex1, StringBuilder_t * ___pchBoneName2, uint32_t ___unNameBufferSize3, const RuntimeMethod* method);
// Valve.VR.EVRInputError Valve.VR.CVRInput::GetSkeletalReferenceTransforms(System.UInt64,Valve.VR.EVRSkeletalTransformSpace,Valve.VR.EVRSkeletalReferencePose,Valve.VR.VRBoneTransform_t[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t CVRInput_GetSkeletalReferenceTransforms_m39DC7D8210062B9512F7CECF5F60E361C1D729AF (CVRInput_t8458E224B9D7EFD4A5B102EAA06F8F365A25A53A * __this, uint64_t ___action0, int32_t ___eTransformSpace1, int32_t ___eReferencePose2, VRBoneTransform_tU5BU5D_tB5FDD0831D295612D4381D2F2D8805367FAF83F8* ___pTransformArray3, const RuntimeMethod* method);
// System.Void UnityEngine.Vector3::.ctor(System.Single,System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Vector3__ctor_m08F61F548AA5836D8789843ACB4A81E4963D2EE1 (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * __this, float ___x0, float ___y1, float ___z2, const RuntimeMethod* method);
// System.Void UnityEngine.Quaternion::.ctor(System.Single,System.Single,System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Quaternion__ctor_m7502F0C38E04C6DE24C965D1CAF278DDD02B9D61 (Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 * __this, float ___x0, float ___y1, float ___z2, float ___w3, const RuntimeMethod* method);
// System.Void SteamVR_Utils/RigidTransform::.ctor(UnityEngine.Vector3,UnityEngine.Quaternion)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void RigidTransform__ctor_mD0AE3AAF6BDAE1EC463E2EA22DD1988DCA16A62B (RigidTransform_t0E8A00F7013270B6B2254F29B4FFEAA6783CD905 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___pos0, Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___rot1, const RuntimeMethod* method);
// Valve.VR.EVRInputError Valve.VR.CVRInput::GetSkeletalTrackingLevel(System.UInt64,Valve.VR.EVRSkeletalTrackingLevel&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t CVRInput_GetSkeletalTrackingLevel_m47B8F2D722E0599DCFEA1E815F878C0A9439F6CC (CVRInput_t8458E224B9D7EFD4A5B102EAA06F8F365A25A53A * __this, uint64_t ___action0, int32_t* ___pSkeletalTrackingLevel1, const RuntimeMethod* method);
// Valve.VR.EVRInputError Valve.VR.CVRInput::GetSkeletalSummaryData(System.UInt64,Valve.VR.EVRSummaryType,Valve.VR.VRSkeletalSummaryData_t&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t CVRInput_GetSkeletalSummaryData_mF6F87A491E5F5A4C029BB33E77BCE55BC326D44C (CVRInput_t8458E224B9D7EFD4A5B102EAA06F8F365A25A53A * __this, uint64_t ___action0, int32_t ___eSummaryType1, VRSkeletalSummaryData_t_t644580EA9039A02976937652FFFEE20F90671B66 * ___pSkeletalSummaryData2, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Skeleton/TrackingChangeHandler::Invoke(Valve.VR.SteamVR_Action_Skeleton,Valve.VR.ETrackingResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TrackingChangeHandler_Invoke_m32F34205F63AC5D35F1071573E7ABE849DEBE40B (TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 * __this, SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * ___fromAction0, int32_t ___trackingState1, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Skeleton/ValidPoseChangeHandler::Invoke(Valve.VR.SteamVR_Action_Skeleton,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ValidPoseChangeHandler_Invoke_m69178B26D45FE5B6E566495EFD02D1CD56AED888 (ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 * __this, SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * ___fromAction0, bool ___validPose1, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Skeleton/DeviceConnectedChangeHandler::Invoke(Valve.VR.SteamVR_Action_Skeleton,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DeviceConnectedChangeHandler_Invoke_mB57708EA08D45928D64D09652CE8A71248A92E1B (DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 * __this, SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * ___fromAction0, bool ___deviceConnected1, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Skeleton/ChangeHandler::Invoke(Valve.VR.SteamVR_Action_Skeleton)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ChangeHandler_Invoke_mC5722DBE5AEDF8568E9849292C01588014D154EA (ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 * __this, SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * ___fromAction0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Skeleton/ActiveChangeHandler::Invoke(Valve.VR.SteamVR_Action_Skeleton,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ActiveChangeHandler_Invoke_m8F250A3B8449F2D46328A69B028001585024506D (ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * __this, SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * ___fromAction0, bool ___active1, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Skeleton/UpdateHandler::Invoke(Valve.VR.SteamVR_Action_Skeleton)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UpdateHandler_Invoke_m175C6770DB8B17FD5E716BA08127EEA22FDCA465 (UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 * __this, SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * ___fromAction0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Pose_Source::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source__ctor_mF1DE2EFD35F9F2DE84EFAEE2308E35D274D93C6E (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Pose_Source_Map`1<Valve.VR.SteamVR_Action_Skeleton_Source>::.ctor()
inline void SteamVR_Action_Pose_Source_Map_1__ctor_m01AFE5DB1C492BA28D7FDCC30F55DF0575D12510 (SteamVR_Action_Pose_Source_Map_1_t62FCD50EDE24217AD6FAFADAC23DA65555B7A125 * __this, const RuntimeMethod* method)
{
	((  void (*) (SteamVR_Action_Pose_Source_Map_1_t62FCD50EDE24217AD6FAFADAC23DA65555B7A125 *, const RuntimeMethod*))SteamVR_Action_Pose_Source_Map_1__ctor_mCFDE07E4D042B1DC990A94DC5AC250B75E5BCED8_gshared)(__this, method);
}
// Valve.VR.SteamVR_ActionSet Valve.VR.SteamVR_Action_Source::get_actionSet()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * SteamVR_Action_Source_get_actionSet_mF2BE8CE30F960A11115AD000921BBF16088CF5B2 (SteamVR_Action_Source_t9D7428CDE39924074518EE6233D9A4FAB0C33CB0 * __this, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Source::set_inputSource(Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Source_set_inputSource_m9871BD4130FD7649FAF628248DCAEAE32B19236E_inline (SteamVR_Action_Source_t9D7428CDE39924074518EE6233D9A4FAB0C33CB0 * __this, int32_t ___value0, const RuntimeMethod* method);
// System.Void System.Object::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Object__ctor_m925ECA5E85CA100E3FB86A4F9E15C120E9A184C0 (RuntimeObject * __this, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Source_Map::set_fullPath(System.String)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Source_Map_set_fullPath_m7532C77C62FC0CE955B4CF3581815398179B33EF_inline (SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17 * __this, String_t* ___value0, const RuntimeMethod* method);
// System.String Valve.VR.SteamVR_Action_Source_Map::GetActionSetPath()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* SteamVR_Action_Source_Map_GetActionSetPath_m9313321D0AA1100C49D6281C5078CABA46ABA787 (SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17 * __this, const RuntimeMethod* method);
// Valve.VR.SteamVR_ActionSet Valve.VR.SteamVR_Input::GetActionSetFromPath(System.String,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * SteamVR_Input_GetActionSetFromPath_mC6422D2A975439C138435CAFF70D2277EA94CA61 (String_t* ___path0, bool ___caseSensitive1, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Source_Map::set_actionSet(Valve.VR.SteamVR_ActionSet)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Source_Map_set_actionSet_mB40E957F963E0E3755C77F78B2094A06834B366F_inline (SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17 * __this, SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * ___value0, const RuntimeMethod* method);
// Valve.VR.SteamVR_ActionDirections Valve.VR.SteamVR_Action_Source_Map::GetActionDirection()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t SteamVR_Action_Source_Map_GetActionDirection_mA48BA216E276F882C863341B7197E590B6471119 (SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17 * __this, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Source_Map::set_direction(Valve.VR.SteamVR_ActionDirections)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Source_Map_set_direction_m952BA1C44972F3D692FB1E5A53B275A397B86F02_inline (SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17 * __this, int32_t ___value0, const RuntimeMethod* method);
// Valve.VR.SteamVR_Input_Sources[] Valve.VR.SteamVR_Input_Source::GetAllSources()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR SteamVR_Input_SourcesU5BU5D_t735048547A8599BA461FE16B1BC029194E1F184A* SteamVR_Input_Source_GetAllSources_m3FEDAE791D389B6ED4E1A7665B1F6381780C8352 (const RuntimeMethod* method);
// System.String Valve.VR.SteamVR_Action_Source_Map::get_fullPath()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR String_t* SteamVR_Action_Source_Map_get_fullPath_m59D22AC4A2ADB2B88085A1B676D686350CE1EE2A_inline (SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17 * __this, const RuntimeMethod* method);
// System.String System.String::ToLowerInvariant()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* String_ToLowerInvariant_m197BD65B6582DC546FF1BC398161EEFA708F799E (String_t* __this, const RuntimeMethod* method);
// Valve.VR.EVRInputError Valve.VR.CVRInput::GetActionHandle(System.String,System.UInt64&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t CVRInput_GetActionHandle_mF3DB37B5ED5E47F0E024CB4CDA9CC952CFFABF36 (CVRInput_t8458E224B9D7EFD4A5B102EAA06F8F365A25A53A * __this, String_t* ___pchActionName0, uint64_t* ___pHandle1, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Source_Map::set_handle(System.UInt64)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Source_Map_set_handle_mD2434905F9AA79607DC207C7C7855E0DCDFAF417_inline (SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17 * __this, uint64_t ___value0, const RuntimeMethod* method);
// System.String System.String::Concat(System.String,System.String,System.String,System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* String_Concat_mDD2E38332DED3A8C088D38D78A0E0BEB5091DA64 (String_t* ___str00, String_t* ___str11, String_t* ___str22, String_t* ___str33, const RuntimeMethod* method);
// System.Int32 System.String::IndexOf(System.Char,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t String_IndexOf_m66F6178DB4B2F61F4FAFD8B75787D0AB142ADD7D (String_t* __this, Il2CppChar ___value0, int32_t ___startIndex1, const RuntimeMethod* method);
// System.String System.String::Substring(System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* String_Substring_mB593C0A320C683E6E47EFFC0A12B7A465E5E43BB (String_t* __this, int32_t ___startIndex0, int32_t ___length1, const RuntimeMethod* method);
// System.Boolean System.String::op_Equality(System.String,System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool String_op_Equality_m139F0E4195AE2F856019E63B241F36F016997FCE (String_t* ___a0, String_t* ___b1, const RuntimeMethod* method);
// System.String System.String::Concat(System.String,System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* String_Concat_mB78D0094592718DA6D5DB6C712A9C225631666BE (String_t* ___str00, String_t* ___str11, const RuntimeMethod* method);
// System.Globalization.CultureInfo System.Globalization.CultureInfo::get_CurrentCulture()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F * CultureInfo_get_CurrentCulture_mD86F3D8E5D332FB304F80D9B9CA4DE849C2A6831 (const RuntimeMethod* method);
// System.String System.String::ToLower(System.Globalization.CultureInfo)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* String_ToLower_m91732DBE4AE31B77EA3BB2C185E66513919968A5 (String_t* __this, CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F * ___culture0, const RuntimeMethod* method);
// SourceElement Valve.VR.SteamVR_Action_Source_Map`1<Valve.VR.SteamVR_Action_Vector2_Source>::get_Item(Valve.VR.SteamVR_Input_Sources)
inline SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573 (SteamVR_Action_Source_Map_1_tE12722D4173E7C4230CAF8EE7E30368AA130B899 * __this, int32_t ___inputSource0, const RuntimeMethod* method)
{
	return ((  SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * (*) (SteamVR_Action_Source_Map_1_tE12722D4173E7C4230CAF8EE7E30368AA130B899 *, int32_t, const RuntimeMethod*))SteamVR_Action_Source_Map_1_get_Item_mB034B2596B39A1DB5B5BA1ADA63292FDE8DBF9D9_gshared)(__this, ___inputSource0, method);
}
// System.Void Valve.VR.SteamVR_Action_Vector2_Source::add_onChange(Valve.VR.SteamVR_Action_Vector2/ChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_Source_add_onChange_m6C1A0066B7F15BFA3348848BFC482FE665B0649E (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Vector2_Source::remove_onChange(Valve.VR.SteamVR_Action_Vector2/ChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_Source_remove_onChange_m4A6174FB66AC722D2DDA3F70045A3AE0B7578C13 (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Vector2_Source::add_onUpdate(Valve.VR.SteamVR_Action_Vector2/UpdateHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_Source_add_onUpdate_m9172BD3EC7BDD734F533EC8BDF91C1D2F1B3D94D (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Vector2_Source::remove_onUpdate(Valve.VR.SteamVR_Action_Vector2/UpdateHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_Source_remove_onUpdate_m54A0BCD658A033B1D95FEAA48FCA4165F8E33CD3 (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Vector2_Source::add_onAxis(Valve.VR.SteamVR_Action_Vector2/AxisHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_Source_add_onAxis_mDB5D5F366F588EC53B657FE1E8E76AD98D31FE92 (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Vector2_Source::remove_onAxis(Valve.VR.SteamVR_Action_Vector2/AxisHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_Source_remove_onAxis_m0C77619D89CD25BCD1475F3E1FF3F40B112D0E8B (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Vector2_Source::add_onActiveChange(Valve.VR.SteamVR_Action_Vector2/ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_Source_add_onActiveChange_mF1C9AA7D52BB851FC037A050CA2E477248691A7E (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Vector2_Source::remove_onActiveChange(Valve.VR.SteamVR_Action_Vector2/ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_Source_remove_onActiveChange_m59715CB9C8767EEA397A11B60489B7A7767462CF (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Vector2_Source::add_onActiveBindingChange(Valve.VR.SteamVR_Action_Vector2/ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_Source_add_onActiveBindingChange_m20A8F56D533537F5F8A266864F0D28DB6975ECA9 (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Vector2_Source::remove_onActiveBindingChange(Valve.VR.SteamVR_Action_Vector2/ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_Source_remove_onActiveBindingChange_m061B7C87671943E15EACAA99CC379C3C335702D5 (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * ___value0, const RuntimeMethod* method);
// UnityEngine.Vector2 Valve.VR.SteamVR_Action_Vector2_Source::get_axis()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  SteamVR_Action_Vector2_Source_get_axis_mCEB6E517ED0E10BE513D22B23A69F1BE3D5DA2BA_inline (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, const RuntimeMethod* method);
// UnityEngine.Vector2 Valve.VR.SteamVR_Action_Vector2_Source::get_lastAxis()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  SteamVR_Action_Vector2_Source_get_lastAxis_mD0A1188D33FAD9AAB16CBCC0C073796C76616460_inline (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, const RuntimeMethod* method);
// UnityEngine.Vector2 Valve.VR.SteamVR_Action_Vector2_Source::get_delta()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  SteamVR_Action_Vector2_Source_get_delta_m19CFFF4B8014BD4ED43D0C5EDDD909A2F1DF1908_inline (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, const RuntimeMethod* method);
// UnityEngine.Vector2 Valve.VR.SteamVR_Action_Vector2_Source::get_lastDelta()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  SteamVR_Action_Vector2_Source_get_lastDelta_mE21D07B848010D30A36B3C7338B5B615B81598AC_inline (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_In`2<Valve.VR.SteamVR_Action_Vector2_Source_Map,Valve.VR.SteamVR_Action_Vector2_Source>::.ctor()
inline void SteamVR_Action_In_2__ctor_mC337EE2FE20E16CE0DE3BC0FB61364B227330B64 (SteamVR_Action_In_2_t4260173E99094920C69878272DE55CE93D5D5A9C * __this, const RuntimeMethod* method)
{
	((  void (*) (SteamVR_Action_In_2_t4260173E99094920C69878272DE55CE93D5D5A9C *, const RuntimeMethod*))SteamVR_Action_In_2__ctor_mE8D7F48E48E81915F85312A869B9F905CAF9B986_gshared)(__this, method);
}
// System.Void Valve.VR.SteamVR_Action_Vector2_Source::RemoveAllListeners()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_Source_RemoveAllListeners_m0564DE9124B7CBF7D9B6002104B86394AB98C479 (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Vector2_Source_Map,Valve.VR.SteamVR_Action_Vector2_Source>::InitAfterDeserialize()
inline void SteamVR_Action_2_InitAfterDeserialize_mF196A84C3451B66EB3C0442338565F96747D1BDD (SteamVR_Action_2_t83C041411A0CA61D62EE3A4F510D83333D049258 * __this, const RuntimeMethod* method)
{
	((  void (*) (SteamVR_Action_2_t83C041411A0CA61D62EE3A4F510D83333D049258 *, const RuntimeMethod*))SteamVR_Action_2_InitAfterDeserialize_m97D226DB0464C3D2CF67AC71B588420741A770F6_gshared)(__this, method);
}
// System.Void Valve.VR.SteamVR_Action_Vector2_Source::set_lastAxis(UnityEngine.Vector2)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_Source_set_lastAxis_m28E7093728C01D3ABBF9871752E734D022101498_inline (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Vector2_Source::set_lastDelta(UnityEngine.Vector2)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_Source_set_lastDelta_m1140772DB3236B7C53E1B0723623DC3F564FC5BE_inline (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___value0, const RuntimeMethod* method);
// System.Void UnityEngine.Vector2::.ctor(System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Vector2__ctor_mEE8FB117AB1F8DB746FB8B3EB4C0DA3BF2A230D0 (Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * __this, float ___x0, float ___y1, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Vector2_Source::set_axis(UnityEngine.Vector2)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_Source_set_axis_m5714B37391AC92E5DB0BB3E1D600280B054A063D_inline (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Vector2_Source::set_delta(UnityEngine.Vector2)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_Source_set_delta_mE23EC73FCF0BFAAE785BFED2A3E3DF99A7A0A824_inline (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___value0, const RuntimeMethod* method);
// System.Single UnityEngine.Vector2::get_magnitude()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float Vector2_get_magnitude_m66097AFDF9696BD3E88467D4398D4F82B8A4C7DF (Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * __this, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Vector2/ChangeHandler::Invoke(Valve.VR.SteamVR_Action_Vector2,Valve.VR.SteamVR_Input_Sources,UnityEngine.Vector2,UnityEngine.Vector2)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ChangeHandler_Invoke_m664C8AE96DAF8EAB9BD99C79452FCD0B50D91645 (ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 * __this, SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * ___fromAction0, int32_t ___fromSource1, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___axis2, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___delta3, const RuntimeMethod* method);
// UnityEngine.Vector2 UnityEngine.Vector2::get_zero()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  Vector2_get_zero_mFE0C3213BB698130D6C5247AB4B887A59074D0A8 (const RuntimeMethod* method);
// System.Boolean UnityEngine.Vector2::op_Inequality(UnityEngine.Vector2,UnityEngine.Vector2)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool Vector2_op_Inequality_mC16161C640C89D98A00800924F83FF09FD7C100E (Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___lhs0, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___rhs1, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Vector2/AxisHandler::Invoke(Valve.VR.SteamVR_Action_Vector2,Valve.VR.SteamVR_Input_Sources,UnityEngine.Vector2,UnityEngine.Vector2)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void AxisHandler_Invoke_m483B11CC81D9E82CDE50D9629D580788C464A29C (AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 * __this, SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * ___fromAction0, int32_t ___fromSource1, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___axis2, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___delta3, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Vector2/UpdateHandler::Invoke(Valve.VR.SteamVR_Action_Vector2,Valve.VR.SteamVR_Input_Sources,UnityEngine.Vector2,UnityEngine.Vector2)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UpdateHandler_Invoke_m5BB2427CCB8050DF5F86E52782DBE6A180B6481C (UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 * __this, SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * ___fromAction0, int32_t ___fromSource1, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___axis2, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___delta3, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Vector2/ActiveChangeHandler::Invoke(Valve.VR.SteamVR_Action_Vector2,Valve.VR.SteamVR_Input_Sources,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ActiveChangeHandler_Invoke_m5A3352BD144AFB3158E26F423D73B6392B2138A5 (ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * __this, SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * ___fromAction0, int32_t ___fromSource1, bool ___active2, const RuntimeMethod* method);
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Action_Boolean/UpdateHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UpdateHandler__ctor_mE13407DCCC32DE335A641BBEEB5EE2565AAA7052 (UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.SteamVR_Action_Boolean/UpdateHandler::Invoke(Valve.VR.SteamVR_Action_Boolean,Valve.VR.SteamVR_Input_Sources,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UpdateHandler_Invoke_m29F8B278674748D3F69E5361A886FB3A868322AE (UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B * __this, SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * ___fromAction0, int32_t ___fromSource1, bool ___newState2, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 3)
			{
				// open
				typedef void (*FunctionPointerType) (SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 *, int32_t, bool, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___newState2, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 *, int32_t, bool, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, ___newState2, targetMethod);
			}
		}
		else if (___parameterCount != 3)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker2< int32_t, bool >::Invoke(targetMethod, ___fromAction0, ___fromSource1, ___newState2);
					else
						GenericVirtActionInvoker2< int32_t, bool >::Invoke(targetMethod, ___fromAction0, ___fromSource1, ___newState2);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker2< int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___fromAction0, ___fromSource1, ___newState2);
					else
						VirtActionInvoker2< int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___fromAction0, ___fromSource1, ___newState2);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___fromSource1) - 1), ___newState2, targetMethod);
				}
				typedef void (*FunctionPointerType) (SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 *, int32_t, bool, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___newState2, targetMethod);
			}
		}
		else
		{
			// closed
			if (targetThis != NULL && il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker3< SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 *, int32_t, bool >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1, ___newState2);
					else
						GenericVirtActionInvoker3< SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 *, int32_t, bool >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1, ___newState2);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker3< SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 *, int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___fromAction0, ___fromSource1, ___newState2);
					else
						VirtActionInvoker3< SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 *, int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___fromAction0, ___fromSource1, ___newState2);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, int32_t, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___fromAction0) - 1), ___fromSource1, ___newState2, targetMethod);
				}
				if (targetThis == NULL)
				{
					typedef void (*FunctionPointerType) (SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 *, int32_t, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___newState2, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 *, int32_t, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, ___newState2, targetMethod);
				}
			}
		}
	}
}
// System.IAsyncResult Valve.VR.SteamVR_Action_Boolean/UpdateHandler::BeginInvoke(Valve.VR.SteamVR_Action_Boolean,Valve.VR.SteamVR_Input_Sources,System.Boolean,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* UpdateHandler_BeginInvoke_mCCFCDD791936AD878CAC7259D08D91E020CA5636 (UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B * __this, SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * ___fromAction0, int32_t ___fromSource1, bool ___newState2, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback3, RuntimeObject * ___object4, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (UpdateHandler_BeginInvoke_mCCFCDD791936AD878CAC7259D08D91E020CA5636_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[4] = {0};
	__d_args[0] = ___fromAction0;
	__d_args[1] = Box(SteamVR_Input_Sources_tCE41AA589FB3B9516BDE0DFABDCB4AAEA29528F7_il2cpp_TypeInfo_var, &___fromSource1);
	__d_args[2] = Box(Boolean_tB53F6830F670160873277339AA58F15CAED4399C_il2cpp_TypeInfo_var, &___newState2);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback3, (RuntimeObject*)___object4);
}
// System.Void Valve.VR.SteamVR_Action_Boolean/UpdateHandler::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UpdateHandler_EndInvoke_mE7910685F1598CA1D9B189E328E193519D33B828 (UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Action_Boolean_Source::add_onStateDown(Valve.VR.SteamVR_Action_Boolean/StateDownHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Boolean_Source_add_onStateDown_m134E6EC8C9B791AA70682D015A0975D4DEA78149 (SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * __this, StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Boolean_Source_add_onStateDown_m134E6EC8C9B791AA70682D015A0975D4DEA78149_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464 * V_0 = NULL;
	StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464 * V_1 = NULL;
	StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464 * V_2 = NULL;
	{
		StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464 * L_0 = __this->get_onStateDown_11();
		V_0 = L_0;
	}

IL_0007:
	{
		StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464 * L_1 = V_0;
		V_1 = L_1;
		StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464 * L_2 = V_1;
		StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Combine_mC25D2F7DECAFBA6D9A2F9EBA8A77063F0658ECF1(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464 *)CastclassSealed((RuntimeObject*)L_4, StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464_il2cpp_TypeInfo_var));
		StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464 ** L_5 = __this->get_address_of_onStateDown_11();
		StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464 * L_6 = V_2;
		StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464 * L_7 = V_1;
		StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464 * L_8 = InterlockedCompareExchangeImpl<StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464 *>((StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464 **)L_5, L_6, L_7);
		V_0 = L_8;
		StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464 * L_9 = V_0;
		StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464 * L_10 = V_1;
		if ((!(((RuntimeObject*)(StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464 *)L_9) == ((RuntimeObject*)(StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Boolean_Source::remove_onStateDown(Valve.VR.SteamVR_Action_Boolean/StateDownHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Boolean_Source_remove_onStateDown_m69EDBBEE11F60CD90D69A36C2146CD3532EA504F (SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * __this, StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Boolean_Source_remove_onStateDown_m69EDBBEE11F60CD90D69A36C2146CD3532EA504F_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464 * V_0 = NULL;
	StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464 * V_1 = NULL;
	StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464 * V_2 = NULL;
	{
		StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464 * L_0 = __this->get_onStateDown_11();
		V_0 = L_0;
	}

IL_0007:
	{
		StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464 * L_1 = V_0;
		V_1 = L_1;
		StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464 * L_2 = V_1;
		StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Remove_m0B0DB7D1B3AF96B71AFAA72BA0EFE32FBBC2932D(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464 *)CastclassSealed((RuntimeObject*)L_4, StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464_il2cpp_TypeInfo_var));
		StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464 ** L_5 = __this->get_address_of_onStateDown_11();
		StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464 * L_6 = V_2;
		StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464 * L_7 = V_1;
		StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464 * L_8 = InterlockedCompareExchangeImpl<StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464 *>((StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464 **)L_5, L_6, L_7);
		V_0 = L_8;
		StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464 * L_9 = V_0;
		StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464 * L_10 = V_1;
		if ((!(((RuntimeObject*)(StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464 *)L_9) == ((RuntimeObject*)(StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Boolean_Source::add_onStateUp(Valve.VR.SteamVR_Action_Boolean/StateUpHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Boolean_Source_add_onStateUp_m12CDC2DD35ED4AC1CCD9C42AB149576D195B31C1 (SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * __this, StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Boolean_Source_add_onStateUp_m12CDC2DD35ED4AC1CCD9C42AB149576D195B31C1_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8 * V_0 = NULL;
	StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8 * V_1 = NULL;
	StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8 * V_2 = NULL;
	{
		StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8 * L_0 = __this->get_onStateUp_12();
		V_0 = L_0;
	}

IL_0007:
	{
		StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8 * L_1 = V_0;
		V_1 = L_1;
		StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8 * L_2 = V_1;
		StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Combine_mC25D2F7DECAFBA6D9A2F9EBA8A77063F0658ECF1(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8 *)CastclassSealed((RuntimeObject*)L_4, StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8_il2cpp_TypeInfo_var));
		StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8 ** L_5 = __this->get_address_of_onStateUp_12();
		StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8 * L_6 = V_2;
		StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8 * L_7 = V_1;
		StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8 * L_8 = InterlockedCompareExchangeImpl<StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8 *>((StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8 **)L_5, L_6, L_7);
		V_0 = L_8;
		StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8 * L_9 = V_0;
		StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8 * L_10 = V_1;
		if ((!(((RuntimeObject*)(StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8 *)L_9) == ((RuntimeObject*)(StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Boolean_Source::remove_onStateUp(Valve.VR.SteamVR_Action_Boolean/StateUpHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Boolean_Source_remove_onStateUp_mA8DFD7672CA1FBA47512E22F6A5E8CA357FCFCB8 (SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * __this, StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Boolean_Source_remove_onStateUp_mA8DFD7672CA1FBA47512E22F6A5E8CA357FCFCB8_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8 * V_0 = NULL;
	StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8 * V_1 = NULL;
	StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8 * V_2 = NULL;
	{
		StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8 * L_0 = __this->get_onStateUp_12();
		V_0 = L_0;
	}

IL_0007:
	{
		StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8 * L_1 = V_0;
		V_1 = L_1;
		StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8 * L_2 = V_1;
		StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Remove_m0B0DB7D1B3AF96B71AFAA72BA0EFE32FBBC2932D(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8 *)CastclassSealed((RuntimeObject*)L_4, StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8_il2cpp_TypeInfo_var));
		StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8 ** L_5 = __this->get_address_of_onStateUp_12();
		StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8 * L_6 = V_2;
		StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8 * L_7 = V_1;
		StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8 * L_8 = InterlockedCompareExchangeImpl<StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8 *>((StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8 **)L_5, L_6, L_7);
		V_0 = L_8;
		StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8 * L_9 = V_0;
		StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8 * L_10 = V_1;
		if ((!(((RuntimeObject*)(StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8 *)L_9) == ((RuntimeObject*)(StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Boolean_Source::add_onState(Valve.VR.SteamVR_Action_Boolean/StateHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Boolean_Source_add_onState_m9F952DE795F0A1BC8F161BE03F877894EA973823 (SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * __this, StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Boolean_Source_add_onState_m9F952DE795F0A1BC8F161BE03F877894EA973823_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA * V_0 = NULL;
	StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA * V_1 = NULL;
	StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA * V_2 = NULL;
	{
		StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA * L_0 = __this->get_onState_13();
		V_0 = L_0;
	}

IL_0007:
	{
		StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA * L_1 = V_0;
		V_1 = L_1;
		StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA * L_2 = V_1;
		StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Combine_mC25D2F7DECAFBA6D9A2F9EBA8A77063F0658ECF1(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA *)CastclassSealed((RuntimeObject*)L_4, StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA_il2cpp_TypeInfo_var));
		StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA ** L_5 = __this->get_address_of_onState_13();
		StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA * L_6 = V_2;
		StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA * L_7 = V_1;
		StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA * L_8 = InterlockedCompareExchangeImpl<StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA *>((StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA **)L_5, L_6, L_7);
		V_0 = L_8;
		StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA * L_9 = V_0;
		StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA * L_10 = V_1;
		if ((!(((RuntimeObject*)(StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA *)L_9) == ((RuntimeObject*)(StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Boolean_Source::remove_onState(Valve.VR.SteamVR_Action_Boolean/StateHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Boolean_Source_remove_onState_mE7577EF4670E0BB1EC939B92D024E29C825AD60E (SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * __this, StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Boolean_Source_remove_onState_mE7577EF4670E0BB1EC939B92D024E29C825AD60E_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA * V_0 = NULL;
	StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA * V_1 = NULL;
	StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA * V_2 = NULL;
	{
		StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA * L_0 = __this->get_onState_13();
		V_0 = L_0;
	}

IL_0007:
	{
		StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA * L_1 = V_0;
		V_1 = L_1;
		StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA * L_2 = V_1;
		StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Remove_m0B0DB7D1B3AF96B71AFAA72BA0EFE32FBBC2932D(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA *)CastclassSealed((RuntimeObject*)L_4, StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA_il2cpp_TypeInfo_var));
		StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA ** L_5 = __this->get_address_of_onState_13();
		StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA * L_6 = V_2;
		StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA * L_7 = V_1;
		StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA * L_8 = InterlockedCompareExchangeImpl<StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA *>((StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA **)L_5, L_6, L_7);
		V_0 = L_8;
		StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA * L_9 = V_0;
		StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA * L_10 = V_1;
		if ((!(((RuntimeObject*)(StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA *)L_9) == ((RuntimeObject*)(StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Boolean_Source::add_onActiveChange(Valve.VR.SteamVR_Action_Boolean/ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Boolean_Source_add_onActiveChange_mF3028B133711F7F5445E2E954FAE2040FE7BEA5B (SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * __this, ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Boolean_Source_add_onActiveChange_mF3028B133711F7F5445E2E954FAE2040FE7BEA5B_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * V_0 = NULL;
	ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * V_1 = NULL;
	ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * V_2 = NULL;
	{
		ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * L_0 = __this->get_onActiveChange_14();
		V_0 = L_0;
	}

IL_0007:
	{
		ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * L_1 = V_0;
		V_1 = L_1;
		ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * L_2 = V_1;
		ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Combine_mC25D2F7DECAFBA6D9A2F9EBA8A77063F0658ECF1(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 *)CastclassSealed((RuntimeObject*)L_4, ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884_il2cpp_TypeInfo_var));
		ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 ** L_5 = __this->get_address_of_onActiveChange_14();
		ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * L_6 = V_2;
		ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * L_7 = V_1;
		ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * L_8 = InterlockedCompareExchangeImpl<ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 *>((ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 **)L_5, L_6, L_7);
		V_0 = L_8;
		ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * L_9 = V_0;
		ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * L_10 = V_1;
		if ((!(((RuntimeObject*)(ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 *)L_9) == ((RuntimeObject*)(ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Boolean_Source::remove_onActiveChange(Valve.VR.SteamVR_Action_Boolean/ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Boolean_Source_remove_onActiveChange_mEEA2329DF99E658C7EBCA6670F68FA72A1993564 (SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * __this, ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Boolean_Source_remove_onActiveChange_mEEA2329DF99E658C7EBCA6670F68FA72A1993564_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * V_0 = NULL;
	ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * V_1 = NULL;
	ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * V_2 = NULL;
	{
		ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * L_0 = __this->get_onActiveChange_14();
		V_0 = L_0;
	}

IL_0007:
	{
		ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * L_1 = V_0;
		V_1 = L_1;
		ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * L_2 = V_1;
		ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Remove_m0B0DB7D1B3AF96B71AFAA72BA0EFE32FBBC2932D(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 *)CastclassSealed((RuntimeObject*)L_4, ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884_il2cpp_TypeInfo_var));
		ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 ** L_5 = __this->get_address_of_onActiveChange_14();
		ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * L_6 = V_2;
		ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * L_7 = V_1;
		ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * L_8 = InterlockedCompareExchangeImpl<ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 *>((ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 **)L_5, L_6, L_7);
		V_0 = L_8;
		ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * L_9 = V_0;
		ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * L_10 = V_1;
		if ((!(((RuntimeObject*)(ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 *)L_9) == ((RuntimeObject*)(ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Boolean_Source::add_onActiveBindingChange(Valve.VR.SteamVR_Action_Boolean/ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Boolean_Source_add_onActiveBindingChange_mECD5FA4A7530B1E098CE3FFADA9699CBD31637BE (SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * __this, ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Boolean_Source_add_onActiveBindingChange_mECD5FA4A7530B1E098CE3FFADA9699CBD31637BE_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * V_0 = NULL;
	ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * V_1 = NULL;
	ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * V_2 = NULL;
	{
		ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * L_0 = __this->get_onActiveBindingChange_15();
		V_0 = L_0;
	}

IL_0007:
	{
		ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * L_1 = V_0;
		V_1 = L_1;
		ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * L_2 = V_1;
		ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Combine_mC25D2F7DECAFBA6D9A2F9EBA8A77063F0658ECF1(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 *)CastclassSealed((RuntimeObject*)L_4, ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884_il2cpp_TypeInfo_var));
		ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 ** L_5 = __this->get_address_of_onActiveBindingChange_15();
		ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * L_6 = V_2;
		ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * L_7 = V_1;
		ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * L_8 = InterlockedCompareExchangeImpl<ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 *>((ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 **)L_5, L_6, L_7);
		V_0 = L_8;
		ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * L_9 = V_0;
		ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * L_10 = V_1;
		if ((!(((RuntimeObject*)(ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 *)L_9) == ((RuntimeObject*)(ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Boolean_Source::remove_onActiveBindingChange(Valve.VR.SteamVR_Action_Boolean/ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Boolean_Source_remove_onActiveBindingChange_mCBEAAADB6F7073EC8FDBCB332FC25B39912D1132 (SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * __this, ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Boolean_Source_remove_onActiveBindingChange_mCBEAAADB6F7073EC8FDBCB332FC25B39912D1132_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * V_0 = NULL;
	ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * V_1 = NULL;
	ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * V_2 = NULL;
	{
		ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * L_0 = __this->get_onActiveBindingChange_15();
		V_0 = L_0;
	}

IL_0007:
	{
		ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * L_1 = V_0;
		V_1 = L_1;
		ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * L_2 = V_1;
		ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Remove_m0B0DB7D1B3AF96B71AFAA72BA0EFE32FBBC2932D(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 *)CastclassSealed((RuntimeObject*)L_4, ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884_il2cpp_TypeInfo_var));
		ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 ** L_5 = __this->get_address_of_onActiveBindingChange_15();
		ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * L_6 = V_2;
		ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * L_7 = V_1;
		ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * L_8 = InterlockedCompareExchangeImpl<ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 *>((ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 **)L_5, L_6, L_7);
		V_0 = L_8;
		ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * L_9 = V_0;
		ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * L_10 = V_1;
		if ((!(((RuntimeObject*)(ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 *)L_9) == ((RuntimeObject*)(ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Boolean_Source::add_onChange(Valve.VR.SteamVR_Action_Boolean/ChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Boolean_Source_add_onChange_m14AB5553E5BEE97154D1ACE90FF20DFDEDED40E7 (SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * __this, ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Boolean_Source_add_onChange_m14AB5553E5BEE97154D1ACE90FF20DFDEDED40E7_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0 * V_0 = NULL;
	ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0 * V_1 = NULL;
	ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0 * V_2 = NULL;
	{
		ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0 * L_0 = __this->get_onChange_16();
		V_0 = L_0;
	}

IL_0007:
	{
		ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0 * L_1 = V_0;
		V_1 = L_1;
		ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0 * L_2 = V_1;
		ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Combine_mC25D2F7DECAFBA6D9A2F9EBA8A77063F0658ECF1(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0 *)CastclassSealed((RuntimeObject*)L_4, ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0_il2cpp_TypeInfo_var));
		ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0 ** L_5 = __this->get_address_of_onChange_16();
		ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0 * L_6 = V_2;
		ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0 * L_7 = V_1;
		ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0 * L_8 = InterlockedCompareExchangeImpl<ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0 *>((ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0 **)L_5, L_6, L_7);
		V_0 = L_8;
		ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0 * L_9 = V_0;
		ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0 * L_10 = V_1;
		if ((!(((RuntimeObject*)(ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0 *)L_9) == ((RuntimeObject*)(ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Boolean_Source::remove_onChange(Valve.VR.SteamVR_Action_Boolean/ChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Boolean_Source_remove_onChange_mC157DE7645416252EEC96DFEECBC80CE7294CDED (SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * __this, ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Boolean_Source_remove_onChange_mC157DE7645416252EEC96DFEECBC80CE7294CDED_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0 * V_0 = NULL;
	ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0 * V_1 = NULL;
	ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0 * V_2 = NULL;
	{
		ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0 * L_0 = __this->get_onChange_16();
		V_0 = L_0;
	}

IL_0007:
	{
		ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0 * L_1 = V_0;
		V_1 = L_1;
		ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0 * L_2 = V_1;
		ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Remove_m0B0DB7D1B3AF96B71AFAA72BA0EFE32FBBC2932D(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0 *)CastclassSealed((RuntimeObject*)L_4, ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0_il2cpp_TypeInfo_var));
		ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0 ** L_5 = __this->get_address_of_onChange_16();
		ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0 * L_6 = V_2;
		ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0 * L_7 = V_1;
		ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0 * L_8 = InterlockedCompareExchangeImpl<ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0 *>((ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0 **)L_5, L_6, L_7);
		V_0 = L_8;
		ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0 * L_9 = V_0;
		ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0 * L_10 = V_1;
		if ((!(((RuntimeObject*)(ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0 *)L_9) == ((RuntimeObject*)(ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Boolean_Source::add_onUpdate(Valve.VR.SteamVR_Action_Boolean/UpdateHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Boolean_Source_add_onUpdate_m43D27C8A8B7DFC39F24F31768AC83B87F380AA98 (SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * __this, UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Boolean_Source_add_onUpdate_m43D27C8A8B7DFC39F24F31768AC83B87F380AA98_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B * V_0 = NULL;
	UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B * V_1 = NULL;
	UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B * V_2 = NULL;
	{
		UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B * L_0 = __this->get_onUpdate_17();
		V_0 = L_0;
	}

IL_0007:
	{
		UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B * L_1 = V_0;
		V_1 = L_1;
		UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B * L_2 = V_1;
		UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Combine_mC25D2F7DECAFBA6D9A2F9EBA8A77063F0658ECF1(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B *)CastclassSealed((RuntimeObject*)L_4, UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B_il2cpp_TypeInfo_var));
		UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B ** L_5 = __this->get_address_of_onUpdate_17();
		UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B * L_6 = V_2;
		UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B * L_7 = V_1;
		UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B * L_8 = InterlockedCompareExchangeImpl<UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B *>((UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B **)L_5, L_6, L_7);
		V_0 = L_8;
		UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B * L_9 = V_0;
		UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B * L_10 = V_1;
		if ((!(((RuntimeObject*)(UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B *)L_9) == ((RuntimeObject*)(UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Boolean_Source::remove_onUpdate(Valve.VR.SteamVR_Action_Boolean/UpdateHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Boolean_Source_remove_onUpdate_mAC0DFDB074F54D52DFE402808FB2235809562B85 (SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * __this, UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Boolean_Source_remove_onUpdate_mAC0DFDB074F54D52DFE402808FB2235809562B85_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B * V_0 = NULL;
	UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B * V_1 = NULL;
	UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B * V_2 = NULL;
	{
		UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B * L_0 = __this->get_onUpdate_17();
		V_0 = L_0;
	}

IL_0007:
	{
		UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B * L_1 = V_0;
		V_1 = L_1;
		UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B * L_2 = V_1;
		UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Remove_m0B0DB7D1B3AF96B71AFAA72BA0EFE32FBBC2932D(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B *)CastclassSealed((RuntimeObject*)L_4, UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B_il2cpp_TypeInfo_var));
		UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B ** L_5 = __this->get_address_of_onUpdate_17();
		UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B * L_6 = V_2;
		UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B * L_7 = V_1;
		UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B * L_8 = InterlockedCompareExchangeImpl<UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B *>((UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B **)L_5, L_6, L_7);
		V_0 = L_8;
		UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B * L_9 = V_0;
		UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B * L_10 = V_1;
		if ((!(((RuntimeObject*)(UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B *)L_9) == ((RuntimeObject*)(UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Boolean_Source::get_state()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Boolean_Source_get_state_m90B8F8D0A31028E5DCF0DA3FD27356F04FA93F41 (SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * __this, const RuntimeMethod* method)
{
	bool V_0 = false;
	int32_t G_B3_0 = 0;
	{
		// public bool state { get { return active && actionData.bState; } }
		bool L_0 = VirtFuncInvoker0< bool >::Invoke(12 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_active() */, __this);
		if (!L_0)
		{
			goto IL_0016;
		}
	}
	{
		InputDigitalActionData_t_t4A01C92AC860229A4C521ED827FD4FC4508A822C * L_1 = __this->get_address_of_actionData_19();
		bool L_2 = L_1->get_bState_2();
		G_B3_0 = ((int32_t)(L_2));
		goto IL_0017;
	}

IL_0016:
	{
		G_B3_0 = 0;
	}

IL_0017:
	{
		V_0 = (bool)G_B3_0;
		goto IL_001a;
	}

IL_001a:
	{
		// public bool state { get { return active && actionData.bState; } }
		bool L_3 = V_0;
		return L_3;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Boolean_Source::get_stateDown()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Boolean_Source_get_stateDown_mC315C3269CB5CB873056F5689D49C738FCADD63A (SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * __this, const RuntimeMethod* method)
{
	bool V_0 = false;
	int32_t G_B4_0 = 0;
	{
		// public bool stateDown { get { return active && actionData.bState && actionData.bChanged; } }
		bool L_0 = VirtFuncInvoker0< bool >::Invoke(12 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_active() */, __this);
		if (!L_0)
		{
			goto IL_0023;
		}
	}
	{
		InputDigitalActionData_t_t4A01C92AC860229A4C521ED827FD4FC4508A822C * L_1 = __this->get_address_of_actionData_19();
		bool L_2 = L_1->get_bState_2();
		if (!L_2)
		{
			goto IL_0023;
		}
	}
	{
		InputDigitalActionData_t_t4A01C92AC860229A4C521ED827FD4FC4508A822C * L_3 = __this->get_address_of_actionData_19();
		bool L_4 = L_3->get_bChanged_3();
		G_B4_0 = ((int32_t)(L_4));
		goto IL_0024;
	}

IL_0023:
	{
		G_B4_0 = 0;
	}

IL_0024:
	{
		V_0 = (bool)G_B4_0;
		goto IL_0027;
	}

IL_0027:
	{
		// public bool stateDown { get { return active && actionData.bState && actionData.bChanged; } }
		bool L_5 = V_0;
		return L_5;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Boolean_Source::get_stateUp()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Boolean_Source_get_stateUp_mFF21F247946B79D77B8942F27003C9AB4772A152 (SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * __this, const RuntimeMethod* method)
{
	bool V_0 = false;
	int32_t G_B4_0 = 0;
	{
		// public bool stateUp { get { return active && actionData.bState == false && actionData.bChanged; } }
		bool L_0 = VirtFuncInvoker0< bool >::Invoke(12 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_active() */, __this);
		if (!L_0)
		{
			goto IL_0023;
		}
	}
	{
		InputDigitalActionData_t_t4A01C92AC860229A4C521ED827FD4FC4508A822C * L_1 = __this->get_address_of_actionData_19();
		bool L_2 = L_1->get_bState_2();
		if (L_2)
		{
			goto IL_0023;
		}
	}
	{
		InputDigitalActionData_t_t4A01C92AC860229A4C521ED827FD4FC4508A822C * L_3 = __this->get_address_of_actionData_19();
		bool L_4 = L_3->get_bChanged_3();
		G_B4_0 = ((int32_t)(L_4));
		goto IL_0024;
	}

IL_0023:
	{
		G_B4_0 = 0;
	}

IL_0024:
	{
		V_0 = (bool)G_B4_0;
		goto IL_0027;
	}

IL_0027:
	{
		// public bool stateUp { get { return active && actionData.bState == false && actionData.bChanged; } }
		bool L_5 = V_0;
		return L_5;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Boolean_Source::get_changed()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Boolean_Source_get_changed_mF81A162CDF9722004B484F1349AFCB3C465A796F (SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * __this, const RuntimeMethod* method)
{
	bool V_0 = false;
	int32_t G_B3_0 = 0;
	{
		// public override bool changed { get { return active && actionData.bChanged; } protected set { } }
		bool L_0 = VirtFuncInvoker0< bool >::Invoke(12 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_active() */, __this);
		if (!L_0)
		{
			goto IL_0016;
		}
	}
	{
		InputDigitalActionData_t_t4A01C92AC860229A4C521ED827FD4FC4508A822C * L_1 = __this->get_address_of_actionData_19();
		bool L_2 = L_1->get_bChanged_3();
		G_B3_0 = ((int32_t)(L_2));
		goto IL_0017;
	}

IL_0016:
	{
		G_B3_0 = 0;
	}

IL_0017:
	{
		V_0 = (bool)G_B3_0;
		goto IL_001a;
	}

IL_001a:
	{
		// public override bool changed { get { return active && actionData.bChanged; } protected set { } }
		bool L_3 = V_0;
		return L_3;
	}
}
// System.Void Valve.VR.SteamVR_Action_Boolean_Source::set_changed(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Boolean_Source_set_changed_mE128D526F35C12EBA7A00A98F034038370C2D86A (SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * __this, bool ___value0, const RuntimeMethod* method)
{
	{
		// public override bool changed { get { return active && actionData.bChanged; } protected set { } }
		return;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Boolean_Source::get_lastState()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Boolean_Source_get_lastState_m6F92E991A7382F880B62CD2224699CBAD443BB53 (SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * __this, const RuntimeMethod* method)
{
	bool V_0 = false;
	{
		// public bool lastState { get { return lastActionData.bState; } }
		InputDigitalActionData_t_t4A01C92AC860229A4C521ED827FD4FC4508A822C * L_0 = __this->get_address_of_lastActionData_20();
		bool L_1 = L_0->get_bState_2();
		V_0 = L_1;
		goto IL_000f;
	}

IL_000f:
	{
		// public bool lastState { get { return lastActionData.bState; } }
		bool L_2 = V_0;
		return L_2;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Boolean_Source::get_lastStateDown()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Boolean_Source_get_lastStateDown_m2A78482725CD5F712AC6BF238DAA13F57246D192 (SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * __this, const RuntimeMethod* method)
{
	bool V_0 = false;
	int32_t G_B3_0 = 0;
	{
		// public bool lastStateDown { get { return lastActionData.bState && lastActionData.bChanged; } }
		InputDigitalActionData_t_t4A01C92AC860229A4C521ED827FD4FC4508A822C * L_0 = __this->get_address_of_lastActionData_20();
		bool L_1 = L_0->get_bState_2();
		if (!L_1)
		{
			goto IL_001b;
		}
	}
	{
		InputDigitalActionData_t_t4A01C92AC860229A4C521ED827FD4FC4508A822C * L_2 = __this->get_address_of_lastActionData_20();
		bool L_3 = L_2->get_bChanged_3();
		G_B3_0 = ((int32_t)(L_3));
		goto IL_001c;
	}

IL_001b:
	{
		G_B3_0 = 0;
	}

IL_001c:
	{
		V_0 = (bool)G_B3_0;
		goto IL_001f;
	}

IL_001f:
	{
		// public bool lastStateDown { get { return lastActionData.bState && lastActionData.bChanged; } }
		bool L_4 = V_0;
		return L_4;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Boolean_Source::get_lastStateUp()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Boolean_Source_get_lastStateUp_mBBE00A49E8F6880AFD66570D9C15A31EDB6985A0 (SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * __this, const RuntimeMethod* method)
{
	bool V_0 = false;
	int32_t G_B3_0 = 0;
	{
		// public bool lastStateUp { get { return lastActionData.bState == false && lastActionData.bChanged; } }
		InputDigitalActionData_t_t4A01C92AC860229A4C521ED827FD4FC4508A822C * L_0 = __this->get_address_of_lastActionData_20();
		bool L_1 = L_0->get_bState_2();
		if (L_1)
		{
			goto IL_001b;
		}
	}
	{
		InputDigitalActionData_t_t4A01C92AC860229A4C521ED827FD4FC4508A822C * L_2 = __this->get_address_of_lastActionData_20();
		bool L_3 = L_2->get_bChanged_3();
		G_B3_0 = ((int32_t)(L_3));
		goto IL_001c;
	}

IL_001b:
	{
		G_B3_0 = 0;
	}

IL_001c:
	{
		V_0 = (bool)G_B3_0;
		goto IL_001f;
	}

IL_001f:
	{
		// public bool lastStateUp { get { return lastActionData.bState == false && lastActionData.bChanged; } }
		bool L_4 = V_0;
		return L_4;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Boolean_Source::get_lastChanged()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Boolean_Source_get_lastChanged_mFED9951914F0D558334CFD2AC7527296840A40F4 (SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * __this, const RuntimeMethod* method)
{
	bool V_0 = false;
	{
		// public override bool lastChanged { get { return lastActionData.bChanged; } protected set { } }
		InputDigitalActionData_t_t4A01C92AC860229A4C521ED827FD4FC4508A822C * L_0 = __this->get_address_of_lastActionData_20();
		bool L_1 = L_0->get_bChanged_3();
		V_0 = L_1;
		goto IL_000f;
	}

IL_000f:
	{
		// public override bool lastChanged { get { return lastActionData.bChanged; } protected set { } }
		bool L_2 = V_0;
		return L_2;
	}
}
// System.Void Valve.VR.SteamVR_Action_Boolean_Source::set_lastChanged(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Boolean_Source_set_lastChanged_m22727393D4D6AB12FDF894B091CD37CFFDCBBF8B (SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * __this, bool ___value0, const RuntimeMethod* method)
{
	{
		// public override bool lastChanged { get { return lastActionData.bChanged; } protected set { } }
		return;
	}
}
// System.UInt64 Valve.VR.SteamVR_Action_Boolean_Source::get_activeOrigin()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR uint64_t SteamVR_Action_Boolean_Source_get_activeOrigin_mC58E7668C95A4306F73F3F9D8430D6AA941F4B80 (SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * __this, const RuntimeMethod* method)
{
	bool V_0 = false;
	uint64_t V_1 = 0;
	{
		// if (active)
		bool L_0 = VirtFuncInvoker0< bool >::Invoke(12 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_active() */, __this);
		V_0 = L_0;
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0019;
		}
	}
	{
		// return actionData.activeOrigin;
		InputDigitalActionData_t_t4A01C92AC860229A4C521ED827FD4FC4508A822C * L_2 = __this->get_address_of_actionData_19();
		uint64_t L_3 = L_2->get_activeOrigin_1();
		V_1 = L_3;
		goto IL_001e;
	}

IL_0019:
	{
		// return 0;
		V_1 = (((int64_t)((int64_t)0)));
		goto IL_001e;
	}

IL_001e:
	{
		// }
		uint64_t L_4 = V_1;
		return L_4;
	}
}
// System.UInt64 Valve.VR.SteamVR_Action_Boolean_Source::get_lastActiveOrigin()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR uint64_t SteamVR_Action_Boolean_Source_get_lastActiveOrigin_m7F31AFFAB49FD55CA2C398BA4DA9B825D9CB6982 (SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * __this, const RuntimeMethod* method)
{
	uint64_t V_0 = 0;
	{
		// public override ulong lastActiveOrigin { get { return lastActionData.activeOrigin; } }
		InputDigitalActionData_t_t4A01C92AC860229A4C521ED827FD4FC4508A822C * L_0 = __this->get_address_of_lastActionData_20();
		uint64_t L_1 = L_0->get_activeOrigin_1();
		V_0 = L_1;
		goto IL_000f;
	}

IL_000f:
	{
		// public override ulong lastActiveOrigin { get { return lastActionData.activeOrigin; } }
		uint64_t L_2 = V_0;
		return L_2;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Boolean_Source::get_active()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Boolean_Source_get_active_m8FBFE259131831D676A112A8DA9320FB9FF08150 (SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * __this, const RuntimeMethod* method)
{
	bool V_0 = false;
	int32_t G_B3_0 = 0;
	{
		// public override bool active { get { return activeBinding && action.actionSet.IsActive(inputSource); } }
		bool L_0 = VirtFuncInvoker0< bool >::Invoke(13 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_activeBinding() */, __this);
		if (!L_0)
		{
			goto IL_0021;
		}
	}
	{
		SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * L_1 = ((SteamVR_Action_Source_t9D7428CDE39924074518EE6233D9A4FAB0C33CB0 *)__this)->get_action_2();
		NullCheck(L_1);
		SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * L_2 = VirtFuncInvoker0< SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * >::Invoke(19 /* Valve.VR.SteamVR_ActionSet Valve.VR.SteamVR_Action::get_actionSet() */, L_1);
		int32_t L_3 = SteamVR_Action_Source_get_inputSource_mAA1928183BB06E5C8CF950F65BA80635C25535D4_inline(__this, /*hidden argument*/NULL);
		NullCheck(L_2);
		bool L_4 = SteamVR_ActionSet_IsActive_m2C7FE33DC70E0D8C3D7E06F024C3409A116CE127(L_2, L_3, /*hidden argument*/NULL);
		G_B3_0 = ((int32_t)(L_4));
		goto IL_0022;
	}

IL_0021:
	{
		G_B3_0 = 0;
	}

IL_0022:
	{
		V_0 = (bool)G_B3_0;
		goto IL_0025;
	}

IL_0025:
	{
		// public override bool active { get { return activeBinding && action.actionSet.IsActive(inputSource); } }
		bool L_5 = V_0;
		return L_5;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Boolean_Source::get_activeBinding()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Boolean_Source_get_activeBinding_m78B33603FD0617A392CD5C3D66FA623673F5126A (SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * __this, const RuntimeMethod* method)
{
	bool V_0 = false;
	{
		// public override bool activeBinding { get { return actionData.bActive; } }
		InputDigitalActionData_t_t4A01C92AC860229A4C521ED827FD4FC4508A822C * L_0 = __this->get_address_of_actionData_19();
		bool L_1 = L_0->get_bActive_0();
		V_0 = L_1;
		goto IL_000f;
	}

IL_000f:
	{
		// public override bool activeBinding { get { return actionData.bActive; } }
		bool L_2 = V_0;
		return L_2;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Boolean_Source::get_lastActive()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Boolean_Source_get_lastActive_m7099CC728072B033C438C5400EC3129A520790E4 (SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * __this, const RuntimeMethod* method)
{
	{
		// public override bool lastActive { get; protected set; }
		bool L_0 = __this->get_U3ClastActiveU3Ek__BackingField_18();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_Action_Boolean_Source::set_lastActive(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Boolean_Source_set_lastActive_mED17F759490B4DBEF17BBC82FE62E697685DACB6 (SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * __this, bool ___value0, const RuntimeMethod* method)
{
	{
		// public override bool lastActive { get; protected set; }
		bool L_0 = ___value0;
		__this->set_U3ClastActiveU3Ek__BackingField_18(L_0);
		return;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Boolean_Source::get_lastActiveBinding()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Boolean_Source_get_lastActiveBinding_m1568FB9895660210A99A5965A2BB538BA12D7FE3 (SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * __this, const RuntimeMethod* method)
{
	bool V_0 = false;
	{
		// public override bool lastActiveBinding { get { return lastActionData.bActive; } }
		InputDigitalActionData_t_t4A01C92AC860229A4C521ED827FD4FC4508A822C * L_0 = __this->get_address_of_lastActionData_20();
		bool L_1 = L_0->get_bActive_0();
		V_0 = L_1;
		goto IL_000f;
	}

IL_000f:
	{
		// public override bool lastActiveBinding { get { return lastActionData.bActive; } }
		bool L_2 = V_0;
		return L_2;
	}
}
// System.Void Valve.VR.SteamVR_Action_Boolean_Source::Preinitialize(Valve.VR.SteamVR_Action,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Boolean_Source_Preinitialize_m9B4DCBB919985EE24F1B42069D7E119130756CC5 (SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * __this, SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * ___wrappingAction0, int32_t ___forInputSource1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Boolean_Source_Preinitialize_m9B4DCBB919985EE24F1B42069D7E119130756CC5_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// base.Preinitialize(wrappingAction, forInputSource);
		SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * L_0 = ___wrappingAction0;
		int32_t L_1 = ___forInputSource1;
		SteamVR_Action_Source_Preinitialize_mC135AE740FECE5EA34FF516A739C0F58420521F9(__this, L_0, L_1, /*hidden argument*/NULL);
		// booleanAction = (SteamVR_Action_Boolean)wrappingAction;
		SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * L_2 = ___wrappingAction0;
		__this->set_booleanAction_21(((SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 *)CastclassClass((RuntimeObject*)L_2, SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20_il2cpp_TypeInfo_var)));
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Boolean_Source::Initialize()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Boolean_Source_Initialize_m8DF0180598B4C73242B9BAF109C363D372597D9F (SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Boolean_Source_Initialize_m8DF0180598B4C73242B9BAF109C363D372597D9F_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	{
		// base.Initialize();
		SteamVR_Action_In_Source_Initialize_m40F600EDA6712166E32A98C5905420F6F2DC2001(__this, /*hidden argument*/NULL);
		// if (actionData_size == 0)
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB_il2cpp_TypeInfo_var);
		uint32_t L_0 = ((SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB_il2cpp_TypeInfo_var))->get_actionData_size_10();
		V_0 = (bool)((((int32_t)L_0) == ((int32_t)0))? 1 : 0);
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0028;
		}
	}
	{
		// actionData_size = (uint)Marshal.SizeOf(typeof(InputDigitalActionData_t));
		RuntimeTypeHandle_t7B542280A22F0EC4EAC2061C29178845847A8B2D  L_2 = { reinterpret_cast<intptr_t> (InputDigitalActionData_t_t4A01C92AC860229A4C521ED827FD4FC4508A822C_0_0_0_var) };
		IL2CPP_RUNTIME_CLASS_INIT(Type_t_il2cpp_TypeInfo_var);
		Type_t * L_3 = Type_GetTypeFromHandle_m9DC58ADF0512987012A8A016FB64B068F3B1AFF6(L_2, /*hidden argument*/NULL);
		IL2CPP_RUNTIME_CLASS_INIT(Marshal_tC795CE9CC2FFBA41EDB1AC1C0FEC04607DFA8A40_il2cpp_TypeInfo_var);
		int32_t L_4 = Marshal_SizeOf_m4F7DA827FA7A720395E6FDD2ABE78D4B00D43130(L_3, /*hidden argument*/NULL);
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB_il2cpp_TypeInfo_var);
		((SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB_il2cpp_TypeInfo_var))->set_actionData_size_10(L_4);
	}

IL_0028:
	{
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Boolean_Source::RemoveAllListeners()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Boolean_Source_RemoveAllListeners_m246ACB62D2C08DACC7E6C589F68944ABE0566280 (SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Boolean_Source_RemoveAllListeners_m246ACB62D2C08DACC7E6C589F68944ABE0566280_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* V_0 = NULL;
	bool V_1 = false;
	bool V_2 = false;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* V_3 = NULL;
	int32_t V_4 = 0;
	Delegate_t * V_5 = NULL;
	bool V_6 = false;
	bool V_7 = false;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* V_8 = NULL;
	int32_t V_9 = 0;
	Delegate_t * V_10 = NULL;
	bool V_11 = false;
	bool V_12 = false;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* V_13 = NULL;
	int32_t V_14 = 0;
	Delegate_t * V_15 = NULL;
	{
		// if (onStateDown != null)
		StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464 * L_0 = __this->get_onStateDown_11();
		V_1 = (bool)((!(((RuntimeObject*)(StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464 *)L_0) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		bool L_1 = V_1;
		if (!L_1)
		{
			goto IL_004d;
		}
	}
	{
		// delegates = onStateDown.GetInvocationList();
		StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464 * L_2 = __this->get_onStateDown_11();
		NullCheck(L_2);
		DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* L_3 = VirtFuncInvoker0< DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* >::Invoke(9 /* System.Delegate[] System.Delegate::GetInvocationList() */, L_2);
		V_0 = L_3;
		// if (delegates != null)
		DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* L_4 = V_0;
		V_2 = (bool)((!(((RuntimeObject*)(DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86*)L_4) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		bool L_5 = V_2;
		if (!L_5)
		{
			goto IL_004c;
		}
	}
	{
		// foreach (Delegate existingDelegate in delegates)
		DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* L_6 = V_0;
		V_3 = L_6;
		V_4 = 0;
		goto IL_0045;
	}

IL_002b:
	{
		// foreach (Delegate existingDelegate in delegates)
		DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* L_7 = V_3;
		int32_t L_8 = V_4;
		NullCheck(L_7);
		int32_t L_9 = L_8;
		Delegate_t * L_10 = (L_7)->GetAt(static_cast<il2cpp_array_size_t>(L_9));
		V_5 = L_10;
		// onStateDown -= (SteamVR_Action_Boolean.StateDownHandler)existingDelegate;
		Delegate_t * L_11 = V_5;
		SteamVR_Action_Boolean_Source_remove_onStateDown_m69EDBBEE11F60CD90D69A36C2146CD3532EA504F(__this, ((StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464 *)CastclassSealed((RuntimeObject*)L_11, StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464_il2cpp_TypeInfo_var)), /*hidden argument*/NULL);
		int32_t L_12 = V_4;
		V_4 = ((int32_t)il2cpp_codegen_add((int32_t)L_12, (int32_t)1));
	}

IL_0045:
	{
		// foreach (Delegate existingDelegate in delegates)
		int32_t L_13 = V_4;
		DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* L_14 = V_3;
		NullCheck(L_14);
		if ((((int32_t)L_13) < ((int32_t)(((int32_t)((int32_t)(((RuntimeArray*)L_14)->max_length)))))))
		{
			goto IL_002b;
		}
	}

IL_004c:
	{
	}

IL_004d:
	{
		// if (onStateUp != null)
		StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8 * L_15 = __this->get_onStateUp_12();
		V_6 = (bool)((!(((RuntimeObject*)(StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8 *)L_15) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		bool L_16 = V_6;
		if (!L_16)
		{
			goto IL_00a0;
		}
	}
	{
		// delegates = onStateUp.GetInvocationList();
		StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8 * L_17 = __this->get_onStateUp_12();
		NullCheck(L_17);
		DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* L_18 = VirtFuncInvoker0< DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* >::Invoke(9 /* System.Delegate[] System.Delegate::GetInvocationList() */, L_17);
		V_0 = L_18;
		// if (delegates != null)
		DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* L_19 = V_0;
		V_7 = (bool)((!(((RuntimeObject*)(DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86*)L_19) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		bool L_20 = V_7;
		if (!L_20)
		{
			goto IL_009f;
		}
	}
	{
		// foreach (Delegate existingDelegate in delegates)
		DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* L_21 = V_0;
		V_8 = L_21;
		V_9 = 0;
		goto IL_0097;
	}

IL_007c:
	{
		// foreach (Delegate existingDelegate in delegates)
		DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* L_22 = V_8;
		int32_t L_23 = V_9;
		NullCheck(L_22);
		int32_t L_24 = L_23;
		Delegate_t * L_25 = (L_22)->GetAt(static_cast<il2cpp_array_size_t>(L_24));
		V_10 = L_25;
		// onStateUp -= (SteamVR_Action_Boolean.StateUpHandler)existingDelegate;
		Delegate_t * L_26 = V_10;
		SteamVR_Action_Boolean_Source_remove_onStateUp_mA8DFD7672CA1FBA47512E22F6A5E8CA357FCFCB8(__this, ((StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8 *)CastclassSealed((RuntimeObject*)L_26, StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8_il2cpp_TypeInfo_var)), /*hidden argument*/NULL);
		int32_t L_27 = V_9;
		V_9 = ((int32_t)il2cpp_codegen_add((int32_t)L_27, (int32_t)1));
	}

IL_0097:
	{
		// foreach (Delegate existingDelegate in delegates)
		int32_t L_28 = V_9;
		DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* L_29 = V_8;
		NullCheck(L_29);
		if ((((int32_t)L_28) < ((int32_t)(((int32_t)((int32_t)(((RuntimeArray*)L_29)->max_length)))))))
		{
			goto IL_007c;
		}
	}

IL_009f:
	{
	}

IL_00a0:
	{
		// if (onState != null)
		StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA * L_30 = __this->get_onState_13();
		V_11 = (bool)((!(((RuntimeObject*)(StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA *)L_30) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		bool L_31 = V_11;
		if (!L_31)
		{
			goto IL_00f3;
		}
	}
	{
		// delegates = onState.GetInvocationList();
		StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA * L_32 = __this->get_onState_13();
		NullCheck(L_32);
		DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* L_33 = VirtFuncInvoker0< DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* >::Invoke(9 /* System.Delegate[] System.Delegate::GetInvocationList() */, L_32);
		V_0 = L_33;
		// if (delegates != null)
		DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* L_34 = V_0;
		V_12 = (bool)((!(((RuntimeObject*)(DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86*)L_34) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		bool L_35 = V_12;
		if (!L_35)
		{
			goto IL_00f2;
		}
	}
	{
		// foreach (Delegate existingDelegate in delegates)
		DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* L_36 = V_0;
		V_13 = L_36;
		V_14 = 0;
		goto IL_00ea;
	}

IL_00cf:
	{
		// foreach (Delegate existingDelegate in delegates)
		DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* L_37 = V_13;
		int32_t L_38 = V_14;
		NullCheck(L_37);
		int32_t L_39 = L_38;
		Delegate_t * L_40 = (L_37)->GetAt(static_cast<il2cpp_array_size_t>(L_39));
		V_15 = L_40;
		// onState -= (SteamVR_Action_Boolean.StateHandler)existingDelegate;
		Delegate_t * L_41 = V_15;
		SteamVR_Action_Boolean_Source_remove_onState_mE7577EF4670E0BB1EC939B92D024E29C825AD60E(__this, ((StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA *)CastclassSealed((RuntimeObject*)L_41, StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA_il2cpp_TypeInfo_var)), /*hidden argument*/NULL);
		int32_t L_42 = V_14;
		V_14 = ((int32_t)il2cpp_codegen_add((int32_t)L_42, (int32_t)1));
	}

IL_00ea:
	{
		// foreach (Delegate existingDelegate in delegates)
		int32_t L_43 = V_14;
		DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* L_44 = V_13;
		NullCheck(L_44);
		if ((((int32_t)L_43) < ((int32_t)(((int32_t)((int32_t)(((RuntimeArray*)L_44)->max_length)))))))
		{
			goto IL_00cf;
		}
	}

IL_00f2:
	{
	}

IL_00f3:
	{
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Boolean_Source::UpdateValue()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Boolean_Source_UpdateValue_mE169B77441B8F8CB86C6D07D7EB748A2737F4298 (SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Boolean_Source_UpdateValue_mE169B77441B8F8CB86C6D07D7EB748A2737F4298_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	bool V_1 = false;
	uint64_t V_2 = 0;
	bool V_3 = false;
	bool V_4 = false;
	bool V_5 = false;
	bool V_6 = false;
	bool V_7 = false;
	bool V_8 = false;
	bool V_9 = false;
	bool V_10 = false;
	bool V_11 = false;
	int32_t G_B8_0 = 0;
	int32_t G_B13_0 = 0;
	int32_t G_B18_0 = 0;
	int32_t G_B23_0 = 0;
	int32_t G_B31_0 = 0;
	int32_t G_B36_0 = 0;
	{
		// lastActionData = actionData;
		InputDigitalActionData_t_t4A01C92AC860229A4C521ED827FD4FC4508A822C  L_0 = __this->get_actionData_19();
		__this->set_lastActionData_20(L_0);
		// lastActive = active;
		bool L_1 = VirtFuncInvoker0< bool >::Invoke(12 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_active() */, __this);
		VirtActionInvoker1< bool >::Invoke(15 /* System.Void Valve.VR.SteamVR_Action_Source::set_lastActive(System.Boolean) */, __this, L_1);
		// EVRInputError err = OpenVR.Input.GetDigitalActionData(action.handle, ref actionData, actionData_size, inputSourceHandle);
		IL2CPP_RUNTIME_CLASS_INIT(OpenVR_t89189C917B539750153B18DDDCB4F7D9C8EF004D_il2cpp_TypeInfo_var);
		CVRInput_t8458E224B9D7EFD4A5B102EAA06F8F365A25A53A * L_2 = OpenVR_get_Input_mF290A715AD07D4B7F8844AA79293934B7999CE04(/*hidden argument*/NULL);
		SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * L_3 = ((SteamVR_Action_Source_t9D7428CDE39924074518EE6233D9A4FAB0C33CB0 *)__this)->get_action_2();
		NullCheck(L_3);
		uint64_t L_4 = VirtFuncInvoker0< uint64_t >::Invoke(18 /* System.UInt64 Valve.VR.SteamVR_Action::get_handle() */, L_3);
		InputDigitalActionData_t_t4A01C92AC860229A4C521ED827FD4FC4508A822C * L_5 = __this->get_address_of_actionData_19();
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB_il2cpp_TypeInfo_var);
		uint32_t L_6 = ((SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB_il2cpp_TypeInfo_var))->get_actionData_size_10();
		uint64_t L_7 = ((SteamVR_Action_Source_t9D7428CDE39924074518EE6233D9A4FAB0C33CB0 *)__this)->get_inputSourceHandle_1();
		NullCheck(L_2);
		int32_t L_8 = CVRInput_GetDigitalActionData_m28C971587E9BF5AE9D507A5DBB11C78C5A3181E3(L_2, L_4, (InputDigitalActionData_t_t4A01C92AC860229A4C521ED827FD4FC4508A822C *)L_5, L_6, L_7, /*hidden argument*/NULL);
		V_0 = L_8;
		// if (err != EVRInputError.None)
		int32_t L_9 = V_0;
		V_1 = (bool)((!(((uint32_t)L_9) <= ((uint32_t)0)))? 1 : 0);
		bool L_10 = V_1;
		if (!L_10)
		{
			goto IL_00a6;
		}
	}
	{
		// Debug.LogError("<b>[SteamVR]</b> GetDigitalActionData error (" + action.fullPath + "): " + err.ToString() + " handle: " + action.handle.ToString());
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_11 = (StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E*)(StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E*)SZArrayNew(StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E_il2cpp_TypeInfo_var, (uint32_t)6);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_12 = L_11;
		NullCheck(L_12);
		ArrayElementTypeCheck (L_12, _stringLiteral86E8370248F8FE7578E8A312953CA12AE864509D);
		(L_12)->SetAt(static_cast<il2cpp_array_size_t>(0), (String_t*)_stringLiteral86E8370248F8FE7578E8A312953CA12AE864509D);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_13 = L_12;
		SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * L_14 = ((SteamVR_Action_Source_t9D7428CDE39924074518EE6233D9A4FAB0C33CB0 *)__this)->get_action_2();
		NullCheck(L_14);
		String_t* L_15 = VirtFuncInvoker0< String_t* >::Invoke(17 /* System.String Valve.VR.SteamVR_Action::get_fullPath() */, L_14);
		NullCheck(L_13);
		ArrayElementTypeCheck (L_13, L_15);
		(L_13)->SetAt(static_cast<il2cpp_array_size_t>(1), (String_t*)L_15);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_16 = L_13;
		NullCheck(L_16);
		ArrayElementTypeCheck (L_16, _stringLiteralE6D56E05F32996CA7E5AE21BC90D49044C0BF356);
		(L_16)->SetAt(static_cast<il2cpp_array_size_t>(2), (String_t*)_stringLiteralE6D56E05F32996CA7E5AE21BC90D49044C0BF356);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_17 = L_16;
		RuntimeObject * L_18 = Box(EVRInputError_tE4C895A0D1F18C0024F5C180FF3962B056DA8A71_il2cpp_TypeInfo_var, (&V_0));
		NullCheck(L_18);
		String_t* L_19 = VirtFuncInvoker0< String_t* >::Invoke(3 /* System.String System.Object::ToString() */, L_18);
		V_0 = *(int32_t*)UnBox(L_18);
		NullCheck(L_17);
		ArrayElementTypeCheck (L_17, L_19);
		(L_17)->SetAt(static_cast<il2cpp_array_size_t>(3), (String_t*)L_19);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_20 = L_17;
		NullCheck(L_20);
		ArrayElementTypeCheck (L_20, _stringLiteral18B39452A606090B97AA8D84240CC83BE3E5D62B);
		(L_20)->SetAt(static_cast<il2cpp_array_size_t>(4), (String_t*)_stringLiteral18B39452A606090B97AA8D84240CC83BE3E5D62B);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_21 = L_20;
		SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * L_22 = ((SteamVR_Action_Source_t9D7428CDE39924074518EE6233D9A4FAB0C33CB0 *)__this)->get_action_2();
		NullCheck(L_22);
		uint64_t L_23 = VirtFuncInvoker0< uint64_t >::Invoke(18 /* System.UInt64 Valve.VR.SteamVR_Action::get_handle() */, L_22);
		V_2 = L_23;
		String_t* L_24 = UInt64_ToString_mF0E40B7459C207B89A1C8C04CE7F183AC0E6D672((uint64_t*)(&V_2), /*hidden argument*/NULL);
		NullCheck(L_21);
		ArrayElementTypeCheck (L_21, L_24);
		(L_21)->SetAt(static_cast<il2cpp_array_size_t>(5), (String_t*)L_24);
		String_t* L_25 = String_Concat_m232E857CA5107EA6AC52E7DD7018716C021F237B(L_21, /*hidden argument*/NULL);
		IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
		Debug_LogError_m3BCF9B78263152261565DCA9DB7D55F0C391ED29(L_25, /*hidden argument*/NULL);
	}

IL_00a6:
	{
		// if (changed)
		bool L_26 = VirtFuncInvoker0< bool >::Invoke(31 /* System.Boolean Valve.VR.SteamVR_Action_In_Source::get_changed() */, __this);
		V_3 = L_26;
		bool L_27 = V_3;
		if (!L_27)
		{
			goto IL_00c8;
		}
	}
	{
		// changedTime = Time.realtimeSinceStartup + actionData.fUpdateTime;
		float L_28 = Time_get_realtimeSinceStartup_mCA1086EC9DFCF135F77BC46D3B7127711EA3DE03(/*hidden argument*/NULL);
		InputDigitalActionData_t_t4A01C92AC860229A4C521ED827FD4FC4508A822C * L_29 = __this->get_address_of_actionData_19();
		float L_30 = L_29->get_fUpdateTime_4();
		SteamVR_Action_In_Source_set_changedTime_m68F47645CA38A2261F0694F61E3756788CFAE750_inline(__this, ((float)il2cpp_codegen_add((float)L_28, (float)L_30)), /*hidden argument*/NULL);
	}

IL_00c8:
	{
		// updateTime = Time.realtimeSinceStartup;
		float L_31 = Time_get_realtimeSinceStartup_mCA1086EC9DFCF135F77BC46D3B7127711EA3DE03(/*hidden argument*/NULL);
		SteamVR_Action_In_Source_set_updateTime_m7EA8D127664BA76D49BB51254DB17C4428843F9C_inline(__this, L_31, /*hidden argument*/NULL);
		// if (active)
		bool L_32 = VirtFuncInvoker0< bool >::Invoke(12 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_active() */, __this);
		V_4 = L_32;
		bool L_33 = V_4;
		if (!L_33)
		{
			goto IL_01d4;
		}
	}
	{
		// if (onStateDown != null && stateDown)
		StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464 * L_34 = __this->get_onStateDown_11();
		if (!L_34)
		{
			goto IL_00f4;
		}
	}
	{
		bool L_35 = SteamVR_Action_Boolean_Source_get_stateDown_mC315C3269CB5CB873056F5689D49C738FCADD63A(__this, /*hidden argument*/NULL);
		G_B8_0 = ((int32_t)(L_35));
		goto IL_00f5;
	}

IL_00f4:
	{
		G_B8_0 = 0;
	}

IL_00f5:
	{
		V_5 = (bool)G_B8_0;
		bool L_36 = V_5;
		if (!L_36)
		{
			goto IL_0113;
		}
	}
	{
		// onStateDown.Invoke(booleanAction, inputSource);
		StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464 * L_37 = __this->get_onStateDown_11();
		SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * L_38 = __this->get_booleanAction_21();
		int32_t L_39 = SteamVR_Action_Source_get_inputSource_mAA1928183BB06E5C8CF950F65BA80635C25535D4_inline(__this, /*hidden argument*/NULL);
		NullCheck(L_37);
		StateDownHandler_Invoke_m54E0989BB77A8803D3B5EC370C18CD4DECC47542(L_37, L_38, L_39, /*hidden argument*/NULL);
	}

IL_0113:
	{
		// if (onStateUp != null && stateUp)
		StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8 * L_40 = __this->get_onStateUp_12();
		if (!L_40)
		{
			goto IL_0123;
		}
	}
	{
		bool L_41 = SteamVR_Action_Boolean_Source_get_stateUp_mFF21F247946B79D77B8942F27003C9AB4772A152(__this, /*hidden argument*/NULL);
		G_B13_0 = ((int32_t)(L_41));
		goto IL_0124;
	}

IL_0123:
	{
		G_B13_0 = 0;
	}

IL_0124:
	{
		V_6 = (bool)G_B13_0;
		bool L_42 = V_6;
		if (!L_42)
		{
			goto IL_0142;
		}
	}
	{
		// onStateUp.Invoke(booleanAction, inputSource);
		StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8 * L_43 = __this->get_onStateUp_12();
		SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * L_44 = __this->get_booleanAction_21();
		int32_t L_45 = SteamVR_Action_Source_get_inputSource_mAA1928183BB06E5C8CF950F65BA80635C25535D4_inline(__this, /*hidden argument*/NULL);
		NullCheck(L_43);
		StateUpHandler_Invoke_mD551A47B2C82964F248D53C0B3CE4A2F820FA0B2(L_43, L_44, L_45, /*hidden argument*/NULL);
	}

IL_0142:
	{
		// if (onState != null && state)
		StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA * L_46 = __this->get_onState_13();
		if (!L_46)
		{
			goto IL_0152;
		}
	}
	{
		bool L_47 = SteamVR_Action_Boolean_Source_get_state_m90B8F8D0A31028E5DCF0DA3FD27356F04FA93F41(__this, /*hidden argument*/NULL);
		G_B18_0 = ((int32_t)(L_47));
		goto IL_0153;
	}

IL_0152:
	{
		G_B18_0 = 0;
	}

IL_0153:
	{
		V_7 = (bool)G_B18_0;
		bool L_48 = V_7;
		if (!L_48)
		{
			goto IL_0171;
		}
	}
	{
		// onState.Invoke(booleanAction, inputSource);
		StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA * L_49 = __this->get_onState_13();
		SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * L_50 = __this->get_booleanAction_21();
		int32_t L_51 = SteamVR_Action_Source_get_inputSource_mAA1928183BB06E5C8CF950F65BA80635C25535D4_inline(__this, /*hidden argument*/NULL);
		NullCheck(L_49);
		StateHandler_Invoke_m0A971767BA08FD69C8EE531F59D7A7884D5C958F(L_49, L_50, L_51, /*hidden argument*/NULL);
	}

IL_0171:
	{
		// if (onChange != null && changed)
		ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0 * L_52 = __this->get_onChange_16();
		if (!L_52)
		{
			goto IL_0181;
		}
	}
	{
		bool L_53 = VirtFuncInvoker0< bool >::Invoke(31 /* System.Boolean Valve.VR.SteamVR_Action_In_Source::get_changed() */, __this);
		G_B23_0 = ((int32_t)(L_53));
		goto IL_0182;
	}

IL_0181:
	{
		G_B23_0 = 0;
	}

IL_0182:
	{
		V_8 = (bool)G_B23_0;
		bool L_54 = V_8;
		if (!L_54)
		{
			goto IL_01a6;
		}
	}
	{
		// onChange.Invoke(booleanAction, inputSource, state);
		ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0 * L_55 = __this->get_onChange_16();
		SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * L_56 = __this->get_booleanAction_21();
		int32_t L_57 = SteamVR_Action_Source_get_inputSource_mAA1928183BB06E5C8CF950F65BA80635C25535D4_inline(__this, /*hidden argument*/NULL);
		bool L_58 = SteamVR_Action_Boolean_Source_get_state_m90B8F8D0A31028E5DCF0DA3FD27356F04FA93F41(__this, /*hidden argument*/NULL);
		NullCheck(L_55);
		ChangeHandler_Invoke_mE86F22936F1235834606277E2FA3A63B66A91D86(L_55, L_56, L_57, L_58, /*hidden argument*/NULL);
	}

IL_01a6:
	{
		// if (onUpdate != null)
		UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B * L_59 = __this->get_onUpdate_17();
		V_9 = (bool)((!(((RuntimeObject*)(UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B *)L_59) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		bool L_60 = V_9;
		if (!L_60)
		{
			goto IL_01d3;
		}
	}
	{
		// onUpdate.Invoke(booleanAction, inputSource, state);
		UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B * L_61 = __this->get_onUpdate_17();
		SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * L_62 = __this->get_booleanAction_21();
		int32_t L_63 = SteamVR_Action_Source_get_inputSource_mAA1928183BB06E5C8CF950F65BA80635C25535D4_inline(__this, /*hidden argument*/NULL);
		bool L_64 = SteamVR_Action_Boolean_Source_get_state_m90B8F8D0A31028E5DCF0DA3FD27356F04FA93F41(__this, /*hidden argument*/NULL);
		NullCheck(L_61);
		UpdateHandler_Invoke_m29F8B278674748D3F69E5361A886FB3A868322AE(L_61, L_62, L_63, L_64, /*hidden argument*/NULL);
	}

IL_01d3:
	{
	}

IL_01d4:
	{
		// if (onActiveBindingChange != null && lastActiveBinding != activeBinding)
		ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * L_65 = __this->get_onActiveBindingChange_15();
		if (!L_65)
		{
			goto IL_01ef;
		}
	}
	{
		bool L_66 = VirtFuncInvoker0< bool >::Invoke(16 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_lastActiveBinding() */, __this);
		bool L_67 = VirtFuncInvoker0< bool >::Invoke(13 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_activeBinding() */, __this);
		G_B31_0 = ((((int32_t)((((int32_t)L_66) == ((int32_t)L_67))? 1 : 0)) == ((int32_t)0))? 1 : 0);
		goto IL_01f0;
	}

IL_01ef:
	{
		G_B31_0 = 0;
	}

IL_01f0:
	{
		V_10 = (bool)G_B31_0;
		bool L_68 = V_10;
		if (!L_68)
		{
			goto IL_0214;
		}
	}
	{
		// onActiveBindingChange.Invoke(booleanAction, inputSource, activeBinding);
		ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * L_69 = __this->get_onActiveBindingChange_15();
		SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * L_70 = __this->get_booleanAction_21();
		int32_t L_71 = SteamVR_Action_Source_get_inputSource_mAA1928183BB06E5C8CF950F65BA80635C25535D4_inline(__this, /*hidden argument*/NULL);
		bool L_72 = VirtFuncInvoker0< bool >::Invoke(13 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_activeBinding() */, __this);
		NullCheck(L_69);
		ActiveChangeHandler_Invoke_m868B6D44567C455103013646A3113CB22AB82C34(L_69, L_70, L_71, L_72, /*hidden argument*/NULL);
	}

IL_0214:
	{
		// if (onActiveChange != null && lastActive != active)
		ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * L_73 = __this->get_onActiveChange_14();
		if (!L_73)
		{
			goto IL_022f;
		}
	}
	{
		bool L_74 = VirtFuncInvoker0< bool >::Invoke(14 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_lastActive() */, __this);
		bool L_75 = VirtFuncInvoker0< bool >::Invoke(12 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_active() */, __this);
		G_B36_0 = ((((int32_t)((((int32_t)L_74) == ((int32_t)L_75))? 1 : 0)) == ((int32_t)0))? 1 : 0);
		goto IL_0230;
	}

IL_022f:
	{
		G_B36_0 = 0;
	}

IL_0230:
	{
		V_11 = (bool)G_B36_0;
		bool L_76 = V_11;
		if (!L_76)
		{
			goto IL_0254;
		}
	}
	{
		// onActiveChange.Invoke(booleanAction, inputSource, activeBinding);
		ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * L_77 = __this->get_onActiveChange_14();
		SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * L_78 = __this->get_booleanAction_21();
		int32_t L_79 = SteamVR_Action_Source_get_inputSource_mAA1928183BB06E5C8CF950F65BA80635C25535D4_inline(__this, /*hidden argument*/NULL);
		bool L_80 = VirtFuncInvoker0< bool >::Invoke(13 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_activeBinding() */, __this);
		NullCheck(L_77);
		ActiveChangeHandler_Invoke_m868B6D44567C455103013646A3113CB22AB82C34(L_77, L_78, L_79, L_80, /*hidden argument*/NULL);
	}

IL_0254:
	{
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Boolean_Source::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Boolean_Source__ctor_mF54B2E2C7D20A53F67F83FE7E2DDA8594C3F5D8D (SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Boolean_Source__ctor_mF54B2E2C7D20A53F67F83FE7E2DDA8594C3F5D8D_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// protected InputDigitalActionData_t actionData = new InputDigitalActionData_t();
		InputDigitalActionData_t_t4A01C92AC860229A4C521ED827FD4FC4508A822C * L_0 = __this->get_address_of_actionData_19();
		il2cpp_codegen_initobj(L_0, sizeof(InputDigitalActionData_t_t4A01C92AC860229A4C521ED827FD4FC4508A822C ));
		// protected InputDigitalActionData_t lastActionData = new InputDigitalActionData_t();
		InputDigitalActionData_t_t4A01C92AC860229A4C521ED827FD4FC4508A822C * L_1 = __this->get_address_of_lastActionData_20();
		il2cpp_codegen_initobj(L_1, sizeof(InputDigitalActionData_t_t4A01C92AC860229A4C521ED827FD4FC4508A822C ));
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB_il2cpp_TypeInfo_var);
		SteamVR_Action_In_Source__ctor_mE238DF9510354C14124DF4D1973356C078DAE3BB(__this, /*hidden argument*/NULL);
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Boolean_Source::.cctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Boolean_Source__cctor_mFCEDCDBC2C17CD45E898C6815A54F8B8887A6864 (const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Boolean_Source__cctor_mFCEDCDBC2C17CD45E898C6815A54F8B8887A6864_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// protected static uint actionData_size = 0;
		((SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB_il2cpp_TypeInfo_var))->set_actionData_size_10(0);
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Action_Boolean_Source_Map::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Boolean_Source_Map__ctor_m402029D21ECB00F66F925BF91E03C207E9DC4061 (SteamVR_Action_Boolean_Source_Map_tF5558AC3C11798E60DC5152DD2FB5E835D79AA3B * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Boolean_Source_Map__ctor_m402029D21ECB00F66F925BF91E03C207E9DC4061_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		SteamVR_Action_In_Source_Map_1__ctor_mB4256E2B87538A069DBF22BF7DE6095CD4948CC1(__this, /*hidden argument*/SteamVR_Action_In_Source_Map_1__ctor_mB4256E2B87538A069DBF22BF7DE6095CD4948CC1_RuntimeMethod_var);
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Boolean Valve.VR.SteamVR_Action_In_Source::get_isUpdating()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_In_Source_get_isUpdating_m5BDFEDEA45D15365B64FAA147C3DA68267C5E701 (SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB * __this, const RuntimeMethod* method)
{
	{
		// public bool isUpdating { get; set; }
		bool L_0 = __this->get_U3CisUpdatingU3Ek__BackingField_4();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_Action_In_Source::set_isUpdating(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_In_Source_set_isUpdating_mD21FE41E248BFFA1C27109057C711B235B12AA12 (SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB * __this, bool ___value0, const RuntimeMethod* method)
{
	{
		// public bool isUpdating { get; set; }
		bool L_0 = ___value0;
		__this->set_U3CisUpdatingU3Ek__BackingField_4(L_0);
		return;
	}
}
// System.Single Valve.VR.SteamVR_Action_In_Source::get_updateTime()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_In_Source_get_updateTime_mB9F438D749D92356ACC37F9C0BCD3A304506B210 (SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB * __this, const RuntimeMethod* method)
{
	{
		// public float updateTime { get; protected set; }
		float L_0 = __this->get_U3CupdateTimeU3Ek__BackingField_5();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_Action_In_Source::set_updateTime(System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_In_Source_set_updateTime_m7EA8D127664BA76D49BB51254DB17C4428843F9C (SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB * __this, float ___value0, const RuntimeMethod* method)
{
	{
		// public float updateTime { get; protected set; }
		float L_0 = ___value0;
		__this->set_U3CupdateTimeU3Ek__BackingField_5(L_0);
		return;
	}
}
// Valve.VR.SteamVR_Input_Sources Valve.VR.SteamVR_Action_In_Source::get_activeDevice()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t SteamVR_Action_In_Source_get_activeDevice_m889780B67CDEDA524D6D5B264228DF2598AC3ED7 (SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_In_Source_get_activeDevice_m889780B67CDEDA524D6D5B264228DF2598AC3ED7_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	{
		// public SteamVR_Input_Sources activeDevice { get { UpdateOriginTrackedDeviceInfo();  return SteamVR_Input_Source.GetSource(inputOriginInfo.devicePath); } }
		SteamVR_Action_In_Source_UpdateOriginTrackedDeviceInfo_mF7505A7AB2C40628D28A09255C14AC74E5C386C0(__this, /*hidden argument*/NULL);
		// public SteamVR_Input_Sources activeDevice { get { UpdateOriginTrackedDeviceInfo();  return SteamVR_Input_Source.GetSource(inputOriginInfo.devicePath); } }
		InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7 * L_0 = __this->get_address_of_inputOriginInfo_8();
		uint64_t L_1 = L_0->get_devicePath_0();
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Input_Source_tAFDB40851F8E134E08DD2DD0BC1C1770705E81D0_il2cpp_TypeInfo_var);
		int32_t L_2 = SteamVR_Input_Source_GetSource_mE1D6F821FD5BD9B212F4D5509FD6963166A96E80(L_1, /*hidden argument*/NULL);
		V_0 = L_2;
		goto IL_001b;
	}

IL_001b:
	{
		// public SteamVR_Input_Sources activeDevice { get { UpdateOriginTrackedDeviceInfo();  return SteamVR_Input_Source.GetSource(inputOriginInfo.devicePath); } }
		int32_t L_3 = V_0;
		return L_3;
	}
}
// System.UInt32 Valve.VR.SteamVR_Action_In_Source::get_trackedDeviceIndex()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR uint32_t SteamVR_Action_In_Source_get_trackedDeviceIndex_m3AE971D28C54215B8531E9D35CE939CCA3927947 (SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB * __this, const RuntimeMethod* method)
{
	uint32_t V_0 = 0;
	{
		// public uint trackedDeviceIndex { get { UpdateOriginTrackedDeviceInfo(); return inputOriginInfo.trackedDeviceIndex; } }
		SteamVR_Action_In_Source_UpdateOriginTrackedDeviceInfo_mF7505A7AB2C40628D28A09255C14AC74E5C386C0(__this, /*hidden argument*/NULL);
		// public uint trackedDeviceIndex { get { UpdateOriginTrackedDeviceInfo(); return inputOriginInfo.trackedDeviceIndex; } }
		InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7 * L_0 = __this->get_address_of_inputOriginInfo_8();
		uint32_t L_1 = L_0->get_trackedDeviceIndex_1();
		V_0 = L_1;
		goto IL_0016;
	}

IL_0016:
	{
		// public uint trackedDeviceIndex { get { UpdateOriginTrackedDeviceInfo(); return inputOriginInfo.trackedDeviceIndex; } }
		uint32_t L_2 = V_0;
		return L_2;
	}
}
// System.String Valve.VR.SteamVR_Action_In_Source::get_renderModelComponentName()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* SteamVR_Action_In_Source_get_renderModelComponentName_m724E0A593767F5EE32BF86B4AC4B0D2D0B5335A0 (SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB * __this, const RuntimeMethod* method)
{
	String_t* V_0 = NULL;
	{
		// public string renderModelComponentName { get { UpdateOriginTrackedDeviceInfo(); return inputOriginInfo.rchRenderModelComponentName; } }
		SteamVR_Action_In_Source_UpdateOriginTrackedDeviceInfo_mF7505A7AB2C40628D28A09255C14AC74E5C386C0(__this, /*hidden argument*/NULL);
		// public string renderModelComponentName { get { UpdateOriginTrackedDeviceInfo(); return inputOriginInfo.rchRenderModelComponentName; } }
		InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7 * L_0 = __this->get_address_of_inputOriginInfo_8();
		String_t* L_1 = InputOriginInfo_t_get_rchRenderModelComponentName_mD0E80E21A3391B748D801C757D386E53159AFC93((InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7 *)L_0, /*hidden argument*/NULL);
		V_0 = L_1;
		goto IL_0016;
	}

IL_0016:
	{
		// public string renderModelComponentName { get { UpdateOriginTrackedDeviceInfo(); return inputOriginInfo.rchRenderModelComponentName; } }
		String_t* L_2 = V_0;
		return L_2;
	}
}
// System.String Valve.VR.SteamVR_Action_In_Source::get_localizedOriginName()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* SteamVR_Action_In_Source_get_localizedOriginName_m257021ED8542FF49E1DC73CE9C6F8EDC3A696563 (SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB * __this, const RuntimeMethod* method)
{
	String_t* V_0 = NULL;
	{
		// public string localizedOriginName { get { UpdateOriginTrackedDeviceInfo(); return GetLocalizedOrigin(); } }
		SteamVR_Action_In_Source_UpdateOriginTrackedDeviceInfo_mF7505A7AB2C40628D28A09255C14AC74E5C386C0(__this, /*hidden argument*/NULL);
		// public string localizedOriginName { get { UpdateOriginTrackedDeviceInfo(); return GetLocalizedOrigin(); } }
		String_t* L_0 = SteamVR_Action_In_Source_GetLocalizedOrigin_m0ED5D7025677DF464116DCCD7EC3871D8719DC26(__this, /*hidden argument*/NULL);
		V_0 = L_0;
		goto IL_0011;
	}

IL_0011:
	{
		// public string localizedOriginName { get { UpdateOriginTrackedDeviceInfo(); return GetLocalizedOrigin(); } }
		String_t* L_1 = V_0;
		return L_1;
	}
}
// System.Single Valve.VR.SteamVR_Action_In_Source::get_changedTime()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_In_Source_get_changedTime_m1038D436A53A2978400C0A21DE7B80DE8994F4DC (SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB * __this, const RuntimeMethod* method)
{
	{
		// public float changedTime { get; protected set; }
		float L_0 = __this->get_U3CchangedTimeU3Ek__BackingField_6();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_Action_In_Source::set_changedTime(System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_In_Source_set_changedTime_m68F47645CA38A2261F0694F61E3756788CFAE750 (SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB * __this, float ___value0, const RuntimeMethod* method)
{
	{
		// public float changedTime { get; protected set; }
		float L_0 = ___value0;
		__this->set_U3CchangedTimeU3Ek__BackingField_6(L_0);
		return;
	}
}
// System.Int32 Valve.VR.SteamVR_Action_In_Source::get_lastOriginGetFrame()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t SteamVR_Action_In_Source_get_lastOriginGetFrame_mA410D02B5711787E38284F5B2434829A4E6C6137 (SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB * __this, const RuntimeMethod* method)
{
	{
		// protected int lastOriginGetFrame { get; set; }
		int32_t L_0 = __this->get_U3ClastOriginGetFrameU3Ek__BackingField_7();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_Action_In_Source::set_lastOriginGetFrame(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_In_Source_set_lastOriginGetFrame_m6F2512AE3F5AB9323BCF82CB31C708955508E897 (SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB * __this, int32_t ___value0, const RuntimeMethod* method)
{
	{
		// protected int lastOriginGetFrame { get; set; }
		int32_t L_0 = ___value0;
		__this->set_U3ClastOriginGetFrameU3Ek__BackingField_7(L_0);
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_In_Source::Initialize()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_In_Source_Initialize_m40F600EDA6712166E32A98C5905420F6F2DC2001 (SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_In_Source_Initialize_m40F600EDA6712166E32A98C5905420F6F2DC2001_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	{
		// base.Initialize();
		SteamVR_Action_Source_Initialize_m2F3A973A4338854E06EA51D28CA96DAB1E5D29C9(__this, /*hidden argument*/NULL);
		// if (inputOriginInfo_size == 0)
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB_il2cpp_TypeInfo_var);
		uint32_t L_0 = ((SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB_il2cpp_TypeInfo_var))->get_inputOriginInfo_size_3();
		V_0 = (bool)((((int32_t)L_0) == ((int32_t)0))? 1 : 0);
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0028;
		}
	}
	{
		// inputOriginInfo_size = (uint)Marshal.SizeOf(typeof(InputOriginInfo_t));
		RuntimeTypeHandle_t7B542280A22F0EC4EAC2061C29178845847A8B2D  L_2 = { reinterpret_cast<intptr_t> (InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7_0_0_0_var) };
		IL2CPP_RUNTIME_CLASS_INIT(Type_t_il2cpp_TypeInfo_var);
		Type_t * L_3 = Type_GetTypeFromHandle_m9DC58ADF0512987012A8A016FB64B068F3B1AFF6(L_2, /*hidden argument*/NULL);
		IL2CPP_RUNTIME_CLASS_INIT(Marshal_tC795CE9CC2FFBA41EDB1AC1C0FEC04607DFA8A40_il2cpp_TypeInfo_var);
		int32_t L_4 = Marshal_SizeOf_m4F7DA827FA7A720395E6FDD2ABE78D4B00D43130(L_3, /*hidden argument*/NULL);
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB_il2cpp_TypeInfo_var);
		((SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB_il2cpp_TypeInfo_var))->set_inputOriginInfo_size_3(L_4);
	}

IL_0028:
	{
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_In_Source::UpdateOriginTrackedDeviceInfo()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_In_Source_UpdateOriginTrackedDeviceInfo_mF7505A7AB2C40628D28A09255C14AC74E5C386C0 (SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_In_Source_UpdateOriginTrackedDeviceInfo_mF7505A7AB2C40628D28A09255C14AC74E5C386C0_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	int32_t V_1 = 0;
	bool V_2 = false;
	uint64_t V_3 = 0;
	bool V_4 = false;
	{
		// if (lastOriginGetFrame != Time.frameCount) //only get once per frame
		int32_t L_0 = SteamVR_Action_In_Source_get_lastOriginGetFrame_mA410D02B5711787E38284F5B2434829A4E6C6137_inline(__this, /*hidden argument*/NULL);
		int32_t L_1 = Time_get_frameCount_m97573E267B487B8FD4BF37615AFC19BED7B4E436(/*hidden argument*/NULL);
		V_0 = (bool)((((int32_t)((((int32_t)L_0) == ((int32_t)L_1))? 1 : 0)) == ((int32_t)0))? 1 : 0);
		bool L_2 = V_0;
		if (!L_2)
		{
			goto IL_00e1;
		}
	}
	{
		// EVRInputError err = OpenVR.Input.GetOriginTrackedDeviceInfo(activeOrigin, ref inputOriginInfo, inputOriginInfo_size);
		IL2CPP_RUNTIME_CLASS_INIT(OpenVR_t89189C917B539750153B18DDDCB4F7D9C8EF004D_il2cpp_TypeInfo_var);
		CVRInput_t8458E224B9D7EFD4A5B102EAA06F8F365A25A53A * L_3 = OpenVR_get_Input_mF290A715AD07D4B7F8844AA79293934B7999CE04(/*hidden argument*/NULL);
		uint64_t L_4 = VirtFuncInvoker0< uint64_t >::Invoke(29 /* System.UInt64 Valve.VR.SteamVR_Action_In_Source::get_activeOrigin() */, __this);
		InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7 * L_5 = __this->get_address_of_inputOriginInfo_8();
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB_il2cpp_TypeInfo_var);
		uint32_t L_6 = ((SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB_il2cpp_TypeInfo_var))->get_inputOriginInfo_size_3();
		NullCheck(L_3);
		int32_t L_7 = CVRInput_GetOriginTrackedDeviceInfo_m0814AD2AE828ED9D5351D6D0B0F7F17674336030(L_3, L_4, (InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7 *)L_5, L_6, /*hidden argument*/NULL);
		V_1 = L_7;
		// if (err != EVRInputError.None)
		int32_t L_8 = V_1;
		V_2 = (bool)((!(((uint32_t)L_8) <= ((uint32_t)0)))? 1 : 0);
		bool L_9 = V_2;
		if (!L_9)
		{
			goto IL_00c8;
		}
	}
	{
		// Debug.LogError("<b>[SteamVR]</b> GetOriginTrackedDeviceInfo error (" + fullPath + "): " + err.ToString() + " handle: " + handle.ToString() + " activeOrigin: " + activeOrigin.ToString() + " active: " + active);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_10 = (StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E*)(StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E*)SZArrayNew(StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E_il2cpp_TypeInfo_var, (uint32_t)((int32_t)10));
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_11 = L_10;
		NullCheck(L_11);
		ArrayElementTypeCheck (L_11, _stringLiteralBF36B31510F1F60267BB121C5485B7F7FC7D7D59);
		(L_11)->SetAt(static_cast<il2cpp_array_size_t>(0), (String_t*)_stringLiteralBF36B31510F1F60267BB121C5485B7F7FC7D7D59);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_12 = L_11;
		String_t* L_13 = SteamVR_Action_Source_get_fullPath_m9D3700AC3EB06210A52EDA613F1523A48F0A1B81(__this, /*hidden argument*/NULL);
		NullCheck(L_12);
		ArrayElementTypeCheck (L_12, L_13);
		(L_12)->SetAt(static_cast<il2cpp_array_size_t>(1), (String_t*)L_13);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_14 = L_12;
		NullCheck(L_14);
		ArrayElementTypeCheck (L_14, _stringLiteralE6D56E05F32996CA7E5AE21BC90D49044C0BF356);
		(L_14)->SetAt(static_cast<il2cpp_array_size_t>(2), (String_t*)_stringLiteralE6D56E05F32996CA7E5AE21BC90D49044C0BF356);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_15 = L_14;
		RuntimeObject * L_16 = Box(EVRInputError_tE4C895A0D1F18C0024F5C180FF3962B056DA8A71_il2cpp_TypeInfo_var, (&V_1));
		NullCheck(L_16);
		String_t* L_17 = VirtFuncInvoker0< String_t* >::Invoke(3 /* System.String System.Object::ToString() */, L_16);
		V_1 = *(int32_t*)UnBox(L_16);
		NullCheck(L_15);
		ArrayElementTypeCheck (L_15, L_17);
		(L_15)->SetAt(static_cast<il2cpp_array_size_t>(3), (String_t*)L_17);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_18 = L_15;
		NullCheck(L_18);
		ArrayElementTypeCheck (L_18, _stringLiteral18B39452A606090B97AA8D84240CC83BE3E5D62B);
		(L_18)->SetAt(static_cast<il2cpp_array_size_t>(4), (String_t*)_stringLiteral18B39452A606090B97AA8D84240CC83BE3E5D62B);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_19 = L_18;
		uint64_t L_20 = SteamVR_Action_Source_get_handle_m66E0A3E9E7D6434FB905BF0D25013927B0C12791(__this, /*hidden argument*/NULL);
		V_3 = L_20;
		String_t* L_21 = UInt64_ToString_mF0E40B7459C207B89A1C8C04CE7F183AC0E6D672((uint64_t*)(&V_3), /*hidden argument*/NULL);
		NullCheck(L_19);
		ArrayElementTypeCheck (L_19, L_21);
		(L_19)->SetAt(static_cast<il2cpp_array_size_t>(5), (String_t*)L_21);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_22 = L_19;
		NullCheck(L_22);
		ArrayElementTypeCheck (L_22, _stringLiteral89D0E943F4CBF79958E13F52A770E6F67C06F387);
		(L_22)->SetAt(static_cast<il2cpp_array_size_t>(6), (String_t*)_stringLiteral89D0E943F4CBF79958E13F52A770E6F67C06F387);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_23 = L_22;
		uint64_t L_24 = VirtFuncInvoker0< uint64_t >::Invoke(29 /* System.UInt64 Valve.VR.SteamVR_Action_In_Source::get_activeOrigin() */, __this);
		V_3 = L_24;
		String_t* L_25 = UInt64_ToString_mF0E40B7459C207B89A1C8C04CE7F183AC0E6D672((uint64_t*)(&V_3), /*hidden argument*/NULL);
		NullCheck(L_23);
		ArrayElementTypeCheck (L_23, L_25);
		(L_23)->SetAt(static_cast<il2cpp_array_size_t>(7), (String_t*)L_25);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_26 = L_23;
		NullCheck(L_26);
		ArrayElementTypeCheck (L_26, _stringLiteral8F81A123645902E7859F319F49E4414C0F77D44E);
		(L_26)->SetAt(static_cast<il2cpp_array_size_t>(8), (String_t*)_stringLiteral8F81A123645902E7859F319F49E4414C0F77D44E);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_27 = L_26;
		bool L_28 = VirtFuncInvoker0< bool >::Invoke(12 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_active() */, __this);
		V_4 = L_28;
		String_t* L_29 = Boolean_ToString_m62D1EFD5F6D5F6B6AF0D14A07BF5741C94413301((bool*)(&V_4), /*hidden argument*/NULL);
		NullCheck(L_27);
		ArrayElementTypeCheck (L_27, L_29);
		(L_27)->SetAt(static_cast<il2cpp_array_size_t>(((int32_t)9)), (String_t*)L_29);
		String_t* L_30 = String_Concat_m232E857CA5107EA6AC52E7DD7018716C021F237B(L_27, /*hidden argument*/NULL);
		IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
		Debug_LogError_m3BCF9B78263152261565DCA9DB7D55F0C391ED29(L_30, /*hidden argument*/NULL);
	}

IL_00c8:
	{
		// lastInputOriginInfo = inputOriginInfo;
		InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7  L_31 = __this->get_inputOriginInfo_8();
		__this->set_lastInputOriginInfo_9(L_31);
		// lastOriginGetFrame = Time.frameCount;
		int32_t L_32 = Time_get_frameCount_m97573E267B487B8FD4BF37615AFC19BED7B4E436(/*hidden argument*/NULL);
		SteamVR_Action_In_Source_set_lastOriginGetFrame_m6F2512AE3F5AB9323BCF82CB31C708955508E897_inline(__this, L_32, /*hidden argument*/NULL);
	}

IL_00e1:
	{
		// }
		return;
	}
}
// System.String Valve.VR.SteamVR_Action_In_Source::GetLocalizedOriginPart(Valve.VR.EVRInputStringBits[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* SteamVR_Action_In_Source_GetLocalizedOriginPart_mE7B291A4EA395AD6127DE314E7B1194270C491D7 (SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB * __this, EVRInputStringBitsU5BU5D_t6940A5B40972263CCCE9DFDBA05F69BA9DD7B52C* ___localizedParts0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_In_Source_GetLocalizedOriginPart_mE7B291A4EA395AD6127DE314E7B1194270C491D7_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	String_t* V_1 = NULL;
	{
		// UpdateOriginTrackedDeviceInfo();
		SteamVR_Action_In_Source_UpdateOriginTrackedDeviceInfo_mF7505A7AB2C40628D28A09255C14AC74E5C386C0(__this, /*hidden argument*/NULL);
		// if (active)
		bool L_0 = VirtFuncInvoker0< bool >::Invoke(12 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_active() */, __this);
		V_0 = L_0;
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0022;
		}
	}
	{
		// return SteamVR_Input.GetLocalizedName(activeOrigin, localizedParts);
		uint64_t L_2 = VirtFuncInvoker0< uint64_t >::Invoke(29 /* System.UInt64 Valve.VR.SteamVR_Action_In_Source::get_activeOrigin() */, __this);
		EVRInputStringBitsU5BU5D_t6940A5B40972263CCCE9DFDBA05F69BA9DD7B52C* L_3 = ___localizedParts0;
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Input_tCE4A1EC6C51592CB9DCD7B860984CB2C4DD937BF_il2cpp_TypeInfo_var);
		String_t* L_4 = SteamVR_Input_GetLocalizedName_m613459F20324CA5053D20634D8AA15D0366EF96B(L_2, L_3, /*hidden argument*/NULL);
		V_1 = L_4;
		goto IL_0026;
	}

IL_0022:
	{
		// return null;
		V_1 = (String_t*)NULL;
		goto IL_0026;
	}

IL_0026:
	{
		// }
		String_t* L_5 = V_1;
		return L_5;
	}
}
// System.String Valve.VR.SteamVR_Action_In_Source::GetLocalizedOrigin()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* SteamVR_Action_In_Source_GetLocalizedOrigin_m0ED5D7025677DF464116DCCD7EC3871D8719DC26 (SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_In_Source_GetLocalizedOrigin_m0ED5D7025677DF464116DCCD7EC3871D8719DC26_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	String_t* V_1 = NULL;
	{
		// UpdateOriginTrackedDeviceInfo();
		SteamVR_Action_In_Source_UpdateOriginTrackedDeviceInfo_mF7505A7AB2C40628D28A09255C14AC74E5C386C0(__this, /*hidden argument*/NULL);
		// if (active)
		bool L_0 = VirtFuncInvoker0< bool >::Invoke(12 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_active() */, __this);
		V_0 = L_0;
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_002b;
		}
	}
	{
		// return SteamVR_Input.GetLocalizedName(activeOrigin, EVRInputStringBits.VRInputString_All);
		uint64_t L_2 = VirtFuncInvoker0< uint64_t >::Invoke(29 /* System.UInt64 Valve.VR.SteamVR_Action_In_Source::get_activeOrigin() */, __this);
		EVRInputStringBitsU5BU5D_t6940A5B40972263CCCE9DFDBA05F69BA9DD7B52C* L_3 = (EVRInputStringBitsU5BU5D_t6940A5B40972263CCCE9DFDBA05F69BA9DD7B52C*)(EVRInputStringBitsU5BU5D_t6940A5B40972263CCCE9DFDBA05F69BA9DD7B52C*)SZArrayNew(EVRInputStringBitsU5BU5D_t6940A5B40972263CCCE9DFDBA05F69BA9DD7B52C_il2cpp_TypeInfo_var, (uint32_t)1);
		EVRInputStringBitsU5BU5D_t6940A5B40972263CCCE9DFDBA05F69BA9DD7B52C* L_4 = L_3;
		NullCheck(L_4);
		(L_4)->SetAt(static_cast<il2cpp_array_size_t>(0), (int32_t)(-1));
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Input_tCE4A1EC6C51592CB9DCD7B860984CB2C4DD937BF_il2cpp_TypeInfo_var);
		String_t* L_5 = SteamVR_Input_GetLocalizedName_m613459F20324CA5053D20634D8AA15D0366EF96B(L_2, L_4, /*hidden argument*/NULL);
		V_1 = L_5;
		goto IL_002f;
	}

IL_002b:
	{
		// return null;
		V_1 = (String_t*)NULL;
		goto IL_002f;
	}

IL_002f:
	{
		// }
		String_t* L_6 = V_1;
		return L_6;
	}
}
// System.Void Valve.VR.SteamVR_Action_In_Source::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_In_Source__ctor_mE238DF9510354C14124DF4D1973356C078DAE3BB (SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB * __this, const RuntimeMethod* method)
{
	{
		// protected InputOriginInfo_t inputOriginInfo = new InputOriginInfo_t();
		InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7 * L_0 = __this->get_address_of_inputOriginInfo_8();
		il2cpp_codegen_initobj(L_0, sizeof(InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7 ));
		// protected InputOriginInfo_t lastInputOriginInfo = new InputOriginInfo_t();
		InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7 * L_1 = __this->get_address_of_lastInputOriginInfo_9();
		il2cpp_codegen_initobj(L_1, sizeof(InputOriginInfo_t_t5CA8B4CC8DC170D7FC353E8E9B2EAC13A64B33B7 ));
		SteamVR_Action_Source__ctor_mE39BAB3469E03218CEC35F563C2B9B36ADD3D2A1(__this, /*hidden argument*/NULL);
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_In_Source::.cctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_In_Source__cctor_mC0CABE2C708C0BB459C3CF2260382898F14EBA81 (const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_In_Source__cctor_mC0CABE2C708C0BB459C3CF2260382898F14EBA81_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// protected static uint inputOriginInfo_size = 0;
		((SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB_il2cpp_TypeInfo_var))->set_inputOriginInfo_size_3(0);
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Action_Out_Source::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Out_Source__ctor_mD40E6B0CF3B2080FC36785E990954B083BF07387 (SteamVR_Action_Out_Source_t6BAB7CAA13DB2A871A892C09BFF55378A6D327D6 * __this, const RuntimeMethod* method)
{
	{
		SteamVR_Action_Source__ctor_mE39BAB3469E03218CEC35F563C2B9B36ADD3D2A1(__this, /*hidden argument*/NULL);
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Action_Pose::add_onActiveChange(Valve.VR.SteamVR_Action_Pose/ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_add_onActiveChange_m5BE66990FFC6EA6107FE836333BA254B0522F722 (SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * __this, ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_add_onActiveChange_m5BE66990FFC6EA6107FE836333BA254B0522F722_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// { add { sourceMap[SteamVR_Input_Sources.Any].onActiveChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onActiveChange -= value; } }
		SteamVR_Action_Pose_Source_Map_1_t191C12A385C6BE9645B171973AA0141ECCBA76A9 * L_0 = ((SteamVR_Action_2_tDED2DB9236CA9398BCDCB18DB8DDA3DB1D98FBAC *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE9FAF259F6EB506E78790EDB4F2AF6FF68569986(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE9FAF259F6EB506E78790EDB4F2AF6FF68569986_RuntimeMethod_var);
		ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * L_2 = ___value0;
		NullCheck(L_1);
		SteamVR_Action_Pose_Source_add_onActiveChange_mBA4F89F86236E399A9FABBA6AB7BE9AFDD5E3FAA(L_1, L_2, /*hidden argument*/NULL);
		// { add { sourceMap[SteamVR_Input_Sources.Any].onActiveChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onActiveChange -= value; } }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Pose::remove_onActiveChange(Valve.VR.SteamVR_Action_Pose/ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_remove_onActiveChange_mA3D8719F745F20FBECCACABC20E5C5936085BE8D (SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * __this, ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_remove_onActiveChange_mA3D8719F745F20FBECCACABC20E5C5936085BE8D_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// { add { sourceMap[SteamVR_Input_Sources.Any].onActiveChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onActiveChange -= value; } }
		SteamVR_Action_Pose_Source_Map_1_t191C12A385C6BE9645B171973AA0141ECCBA76A9 * L_0 = ((SteamVR_Action_2_tDED2DB9236CA9398BCDCB18DB8DDA3DB1D98FBAC *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE9FAF259F6EB506E78790EDB4F2AF6FF68569986(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE9FAF259F6EB506E78790EDB4F2AF6FF68569986_RuntimeMethod_var);
		ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * L_2 = ___value0;
		NullCheck(L_1);
		SteamVR_Action_Pose_Source_remove_onActiveChange_m8F91AE91CFF61C2B5D4B496A28827C3A416169B4(L_1, L_2, /*hidden argument*/NULL);
		// { add { sourceMap[SteamVR_Input_Sources.Any].onActiveChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onActiveChange -= value; } }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Pose::add_onActiveBindingChange(Valve.VR.SteamVR_Action_Pose/ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_add_onActiveBindingChange_m1083C095268CA42B96BD150DB1B5E2B3D438506B (SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * __this, ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_add_onActiveBindingChange_m1083C095268CA42B96BD150DB1B5E2B3D438506B_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// { add { sourceMap[SteamVR_Input_Sources.Any].onActiveBindingChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onActiveBindingChange -= value; } }
		SteamVR_Action_Pose_Source_Map_1_t191C12A385C6BE9645B171973AA0141ECCBA76A9 * L_0 = ((SteamVR_Action_2_tDED2DB9236CA9398BCDCB18DB8DDA3DB1D98FBAC *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE9FAF259F6EB506E78790EDB4F2AF6FF68569986(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE9FAF259F6EB506E78790EDB4F2AF6FF68569986_RuntimeMethod_var);
		ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * L_2 = ___value0;
		NullCheck(L_1);
		SteamVR_Action_Pose_Source_add_onActiveBindingChange_m3FD39BFF599A4AF5014F2EEC7D595AF9D2EF33E2(L_1, L_2, /*hidden argument*/NULL);
		// { add { sourceMap[SteamVR_Input_Sources.Any].onActiveBindingChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onActiveBindingChange -= value; } }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Pose::remove_onActiveBindingChange(Valve.VR.SteamVR_Action_Pose/ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_remove_onActiveBindingChange_m68150CC2EDBF222450D7B6206A5E850B359AE23F (SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * __this, ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_remove_onActiveBindingChange_m68150CC2EDBF222450D7B6206A5E850B359AE23F_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// { add { sourceMap[SteamVR_Input_Sources.Any].onActiveBindingChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onActiveBindingChange -= value; } }
		SteamVR_Action_Pose_Source_Map_1_t191C12A385C6BE9645B171973AA0141ECCBA76A9 * L_0 = ((SteamVR_Action_2_tDED2DB9236CA9398BCDCB18DB8DDA3DB1D98FBAC *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE9FAF259F6EB506E78790EDB4F2AF6FF68569986(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE9FAF259F6EB506E78790EDB4F2AF6FF68569986_RuntimeMethod_var);
		ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * L_2 = ___value0;
		NullCheck(L_1);
		SteamVR_Action_Pose_Source_remove_onActiveBindingChange_m0D0CAD39C7DE6CF2F11E94DC745FE84C863543E0(L_1, L_2, /*hidden argument*/NULL);
		// { add { sourceMap[SteamVR_Input_Sources.Any].onActiveBindingChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onActiveBindingChange -= value; } }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Pose::add_onChange(Valve.VR.SteamVR_Action_Pose/ChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_add_onChange_m997D5080D5BE5893E9B4B4CB8196EEDF5A9C7068 (SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * __this, ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_add_onChange_m997D5080D5BE5893E9B4B4CB8196EEDF5A9C7068_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// { add { sourceMap[SteamVR_Input_Sources.Any].onChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onChange -= value; } }
		SteamVR_Action_Pose_Source_Map_1_t191C12A385C6BE9645B171973AA0141ECCBA76A9 * L_0 = ((SteamVR_Action_2_tDED2DB9236CA9398BCDCB18DB8DDA3DB1D98FBAC *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE9FAF259F6EB506E78790EDB4F2AF6FF68569986(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE9FAF259F6EB506E78790EDB4F2AF6FF68569986_RuntimeMethod_var);
		ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE * L_2 = ___value0;
		NullCheck(L_1);
		SteamVR_Action_Pose_Source_add_onChange_m86F9A8C49AAB74EFBED5F82F2BD450687C529567(L_1, L_2, /*hidden argument*/NULL);
		// { add { sourceMap[SteamVR_Input_Sources.Any].onChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onChange -= value; } }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Pose::remove_onChange(Valve.VR.SteamVR_Action_Pose/ChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_remove_onChange_m7AB5B45656A97E587B2D196A847CCED49EFAA562 (SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * __this, ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_remove_onChange_m7AB5B45656A97E587B2D196A847CCED49EFAA562_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// { add { sourceMap[SteamVR_Input_Sources.Any].onChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onChange -= value; } }
		SteamVR_Action_Pose_Source_Map_1_t191C12A385C6BE9645B171973AA0141ECCBA76A9 * L_0 = ((SteamVR_Action_2_tDED2DB9236CA9398BCDCB18DB8DDA3DB1D98FBAC *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE9FAF259F6EB506E78790EDB4F2AF6FF68569986(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE9FAF259F6EB506E78790EDB4F2AF6FF68569986_RuntimeMethod_var);
		ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE * L_2 = ___value0;
		NullCheck(L_1);
		SteamVR_Action_Pose_Source_remove_onChange_mB962374F5363148A48D573F22C5E1B385411E27F(L_1, L_2, /*hidden argument*/NULL);
		// { add { sourceMap[SteamVR_Input_Sources.Any].onChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onChange -= value; } }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Pose::add_onUpdate(Valve.VR.SteamVR_Action_Pose/UpdateHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_add_onUpdate_mB4F30C8838622CFDE925590ABDDB5F2C9844E226 (SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * __this, UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_add_onUpdate_mB4F30C8838622CFDE925590ABDDB5F2C9844E226_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// { add { sourceMap[SteamVR_Input_Sources.Any].onUpdate += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onUpdate -= value; } }
		SteamVR_Action_Pose_Source_Map_1_t191C12A385C6BE9645B171973AA0141ECCBA76A9 * L_0 = ((SteamVR_Action_2_tDED2DB9236CA9398BCDCB18DB8DDA3DB1D98FBAC *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE9FAF259F6EB506E78790EDB4F2AF6FF68569986(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE9FAF259F6EB506E78790EDB4F2AF6FF68569986_RuntimeMethod_var);
		UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 * L_2 = ___value0;
		NullCheck(L_1);
		SteamVR_Action_Pose_Source_add_onUpdate_mD30D3D18C58E9FD060B58868A4D66478C06FCADD(L_1, L_2, /*hidden argument*/NULL);
		// { add { sourceMap[SteamVR_Input_Sources.Any].onUpdate += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onUpdate -= value; } }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Pose::remove_onUpdate(Valve.VR.SteamVR_Action_Pose/UpdateHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_remove_onUpdate_mEE34A9454F2B6F79A1DACFC96E049B02523F05EA (SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * __this, UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_remove_onUpdate_mEE34A9454F2B6F79A1DACFC96E049B02523F05EA_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// { add { sourceMap[SteamVR_Input_Sources.Any].onUpdate += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onUpdate -= value; } }
		SteamVR_Action_Pose_Source_Map_1_t191C12A385C6BE9645B171973AA0141ECCBA76A9 * L_0 = ((SteamVR_Action_2_tDED2DB9236CA9398BCDCB18DB8DDA3DB1D98FBAC *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE9FAF259F6EB506E78790EDB4F2AF6FF68569986(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE9FAF259F6EB506E78790EDB4F2AF6FF68569986_RuntimeMethod_var);
		UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 * L_2 = ___value0;
		NullCheck(L_1);
		SteamVR_Action_Pose_Source_remove_onUpdate_m600E90F3012E310B2178CB34B8E3C3A35380A579(L_1, L_2, /*hidden argument*/NULL);
		// { add { sourceMap[SteamVR_Input_Sources.Any].onUpdate += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onUpdate -= value; } }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Pose::add_onTrackingChanged(Valve.VR.SteamVR_Action_Pose/TrackingChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_add_onTrackingChanged_m1799E771CBED8F83129BE5FD39C9E3638F7174D8 (SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * __this, TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_add_onTrackingChanged_m1799E771CBED8F83129BE5FD39C9E3638F7174D8_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// { add { sourceMap[SteamVR_Input_Sources.Any].onTrackingChanged += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onTrackingChanged -= value; } }
		SteamVR_Action_Pose_Source_Map_1_t191C12A385C6BE9645B171973AA0141ECCBA76A9 * L_0 = ((SteamVR_Action_2_tDED2DB9236CA9398BCDCB18DB8DDA3DB1D98FBAC *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE9FAF259F6EB506E78790EDB4F2AF6FF68569986(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE9FAF259F6EB506E78790EDB4F2AF6FF68569986_RuntimeMethod_var);
		TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 * L_2 = ___value0;
		NullCheck(L_1);
		SteamVR_Action_Pose_Source_add_onTrackingChanged_m916FC64B7E280897083BF516B0A2B10BC4034499(L_1, L_2, /*hidden argument*/NULL);
		// { add { sourceMap[SteamVR_Input_Sources.Any].onTrackingChanged += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onTrackingChanged -= value; } }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Pose::remove_onTrackingChanged(Valve.VR.SteamVR_Action_Pose/TrackingChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_remove_onTrackingChanged_mB2B162B58F8F00ACDAC09C6EDBCEC68DCB4CC364 (SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * __this, TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_remove_onTrackingChanged_mB2B162B58F8F00ACDAC09C6EDBCEC68DCB4CC364_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// { add { sourceMap[SteamVR_Input_Sources.Any].onTrackingChanged += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onTrackingChanged -= value; } }
		SteamVR_Action_Pose_Source_Map_1_t191C12A385C6BE9645B171973AA0141ECCBA76A9 * L_0 = ((SteamVR_Action_2_tDED2DB9236CA9398BCDCB18DB8DDA3DB1D98FBAC *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE9FAF259F6EB506E78790EDB4F2AF6FF68569986(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE9FAF259F6EB506E78790EDB4F2AF6FF68569986_RuntimeMethod_var);
		TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 * L_2 = ___value0;
		NullCheck(L_1);
		SteamVR_Action_Pose_Source_remove_onTrackingChanged_m664E1FD884A6B739CF4BCAD82EE1168E234B0AAF(L_1, L_2, /*hidden argument*/NULL);
		// { add { sourceMap[SteamVR_Input_Sources.Any].onTrackingChanged += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onTrackingChanged -= value; } }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Pose::add_onValidPoseChanged(Valve.VR.SteamVR_Action_Pose/ValidPoseChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_add_onValidPoseChanged_m43553E9E3C5618194CF9E162AAAAE0389413AF7C (SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * __this, ValidPoseChangeHandler_t1D487A0B0E2FB0D02C72EF5365E81BCD3E33B41A * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_add_onValidPoseChanged_m43553E9E3C5618194CF9E162AAAAE0389413AF7C_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// { add { sourceMap[SteamVR_Input_Sources.Any].onValidPoseChanged += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onValidPoseChanged -= value; } }
		SteamVR_Action_Pose_Source_Map_1_t191C12A385C6BE9645B171973AA0141ECCBA76A9 * L_0 = ((SteamVR_Action_2_tDED2DB9236CA9398BCDCB18DB8DDA3DB1D98FBAC *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE9FAF259F6EB506E78790EDB4F2AF6FF68569986(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE9FAF259F6EB506E78790EDB4F2AF6FF68569986_RuntimeMethod_var);
		ValidPoseChangeHandler_t1D487A0B0E2FB0D02C72EF5365E81BCD3E33B41A * L_2 = ___value0;
		NullCheck(L_1);
		SteamVR_Action_Pose_Source_add_onValidPoseChanged_m3A2F8586C49174C0E6E2D338A8C8D523848BB156(L_1, L_2, /*hidden argument*/NULL);
		// { add { sourceMap[SteamVR_Input_Sources.Any].onValidPoseChanged += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onValidPoseChanged -= value; } }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Pose::remove_onValidPoseChanged(Valve.VR.SteamVR_Action_Pose/ValidPoseChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_remove_onValidPoseChanged_mF17EB0A0FB465A75B75EAD280657BDFAF075DD96 (SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * __this, ValidPoseChangeHandler_t1D487A0B0E2FB0D02C72EF5365E81BCD3E33B41A * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_remove_onValidPoseChanged_mF17EB0A0FB465A75B75EAD280657BDFAF075DD96_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// { add { sourceMap[SteamVR_Input_Sources.Any].onValidPoseChanged += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onValidPoseChanged -= value; } }
		SteamVR_Action_Pose_Source_Map_1_t191C12A385C6BE9645B171973AA0141ECCBA76A9 * L_0 = ((SteamVR_Action_2_tDED2DB9236CA9398BCDCB18DB8DDA3DB1D98FBAC *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE9FAF259F6EB506E78790EDB4F2AF6FF68569986(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE9FAF259F6EB506E78790EDB4F2AF6FF68569986_RuntimeMethod_var);
		ValidPoseChangeHandler_t1D487A0B0E2FB0D02C72EF5365E81BCD3E33B41A * L_2 = ___value0;
		NullCheck(L_1);
		SteamVR_Action_Pose_Source_remove_onValidPoseChanged_mD755CC0727CEA9CCE5BC937BA6D2B2458E47EA62(L_1, L_2, /*hidden argument*/NULL);
		// { add { sourceMap[SteamVR_Input_Sources.Any].onValidPoseChanged += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onValidPoseChanged -= value; } }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Pose::add_onDeviceConnectedChanged(Valve.VR.SteamVR_Action_Pose/DeviceConnectedChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_add_onDeviceConnectedChanged_mC46C2DAB4A7CD3F7D956A6D0BA0337F2DB1C0E06 (SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * __this, DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_add_onDeviceConnectedChanged_mC46C2DAB4A7CD3F7D956A6D0BA0337F2DB1C0E06_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// { add { sourceMap[SteamVR_Input_Sources.Any].onDeviceConnectedChanged += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onDeviceConnectedChanged -= value; } }
		SteamVR_Action_Pose_Source_Map_1_t191C12A385C6BE9645B171973AA0141ECCBA76A9 * L_0 = ((SteamVR_Action_2_tDED2DB9236CA9398BCDCB18DB8DDA3DB1D98FBAC *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE9FAF259F6EB506E78790EDB4F2AF6FF68569986(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE9FAF259F6EB506E78790EDB4F2AF6FF68569986_RuntimeMethod_var);
		DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 * L_2 = ___value0;
		NullCheck(L_1);
		SteamVR_Action_Pose_Source_add_onDeviceConnectedChanged_m26FF6E86E0FC25279D9DF124C3A00DA48AA22C6C(L_1, L_2, /*hidden argument*/NULL);
		// { add { sourceMap[SteamVR_Input_Sources.Any].onDeviceConnectedChanged += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onDeviceConnectedChanged -= value; } }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Pose::remove_onDeviceConnectedChanged(Valve.VR.SteamVR_Action_Pose/DeviceConnectedChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_remove_onDeviceConnectedChanged_m852BA417954EF0DCD5B45B0FE020DBAAD5DFB50D (SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * __this, DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_remove_onDeviceConnectedChanged_m852BA417954EF0DCD5B45B0FE020DBAAD5DFB50D_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// { add { sourceMap[SteamVR_Input_Sources.Any].onDeviceConnectedChanged += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onDeviceConnectedChanged -= value; } }
		SteamVR_Action_Pose_Source_Map_1_t191C12A385C6BE9645B171973AA0141ECCBA76A9 * L_0 = ((SteamVR_Action_2_tDED2DB9236CA9398BCDCB18DB8DDA3DB1D98FBAC *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE9FAF259F6EB506E78790EDB4F2AF6FF68569986(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE9FAF259F6EB506E78790EDB4F2AF6FF68569986_RuntimeMethod_var);
		DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 * L_2 = ___value0;
		NullCheck(L_1);
		SteamVR_Action_Pose_Source_remove_onDeviceConnectedChanged_mC9B0E9333A8B27427E1197B77C6D287FD2C687F5(L_1, L_2, /*hidden argument*/NULL);
		// { add { sourceMap[SteamVR_Input_Sources.Any].onDeviceConnectedChanged += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onDeviceConnectedChanged -= value; } }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Pose::AddOnDeviceConnectedChanged(Valve.VR.SteamVR_Input_Sources,Valve.VR.SteamVR_Action_Pose/DeviceConnectedChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_AddOnDeviceConnectedChanged_m036FF5AFE7CEFFADDAB364C74805EB258B032AF2 (SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * __this, int32_t ___inputSource0, DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 * ___functionToCall1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_AddOnDeviceConnectedChanged_m036FF5AFE7CEFFADDAB364C74805EB258B032AF2_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// sourceMap[inputSource].onDeviceConnectedChanged += functionToCall;
		SteamVR_Action_Pose_Source_Map_1_t191C12A385C6BE9645B171973AA0141ECCBA76A9 * L_0 = ((SteamVR_Action_2_tDED2DB9236CA9398BCDCB18DB8DDA3DB1D98FBAC *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource0;
		NullCheck(L_0);
		SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * L_2 = SteamVR_Action_Source_Map_1_get_Item_mE9FAF259F6EB506E78790EDB4F2AF6FF68569986(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE9FAF259F6EB506E78790EDB4F2AF6FF68569986_RuntimeMethod_var);
		DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 * L_3 = ___functionToCall1;
		NullCheck(L_2);
		SteamVR_Action_Pose_Source_add_onDeviceConnectedChanged_m26FF6E86E0FC25279D9DF124C3A00DA48AA22C6C(L_2, L_3, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Pose::RemoveOnDeviceConnectedChanged(Valve.VR.SteamVR_Input_Sources,Valve.VR.SteamVR_Action_Pose/DeviceConnectedChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_RemoveOnDeviceConnectedChanged_mE91E5D3EDA07BB7108322354DC4910EDC7DA8818 (SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * __this, int32_t ___inputSource0, DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 * ___functionToStopCalling1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_RemoveOnDeviceConnectedChanged_mE91E5D3EDA07BB7108322354DC4910EDC7DA8818_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// sourceMap[inputSource].onDeviceConnectedChanged -= functionToStopCalling;
		SteamVR_Action_Pose_Source_Map_1_t191C12A385C6BE9645B171973AA0141ECCBA76A9 * L_0 = ((SteamVR_Action_2_tDED2DB9236CA9398BCDCB18DB8DDA3DB1D98FBAC *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource0;
		NullCheck(L_0);
		SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * L_2 = SteamVR_Action_Source_Map_1_get_Item_mE9FAF259F6EB506E78790EDB4F2AF6FF68569986(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE9FAF259F6EB506E78790EDB4F2AF6FF68569986_RuntimeMethod_var);
		DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 * L_3 = ___functionToStopCalling1;
		NullCheck(L_2);
		SteamVR_Action_Pose_Source_remove_onDeviceConnectedChanged_mC9B0E9333A8B27427E1197B77C6D287FD2C687F5(L_2, L_3, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Pose::AddOnTrackingChanged(Valve.VR.SteamVR_Input_Sources,Valve.VR.SteamVR_Action_Pose/TrackingChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_AddOnTrackingChanged_m5099C28D8428F47C64B8A35022AACB6657AE8704 (SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * __this, int32_t ___inputSource0, TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 * ___functionToCall1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_AddOnTrackingChanged_m5099C28D8428F47C64B8A35022AACB6657AE8704_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// sourceMap[inputSource].onTrackingChanged += functionToCall;
		SteamVR_Action_Pose_Source_Map_1_t191C12A385C6BE9645B171973AA0141ECCBA76A9 * L_0 = ((SteamVR_Action_2_tDED2DB9236CA9398BCDCB18DB8DDA3DB1D98FBAC *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource0;
		NullCheck(L_0);
		SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * L_2 = SteamVR_Action_Source_Map_1_get_Item_mE9FAF259F6EB506E78790EDB4F2AF6FF68569986(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE9FAF259F6EB506E78790EDB4F2AF6FF68569986_RuntimeMethod_var);
		TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 * L_3 = ___functionToCall1;
		NullCheck(L_2);
		SteamVR_Action_Pose_Source_add_onTrackingChanged_m916FC64B7E280897083BF516B0A2B10BC4034499(L_2, L_3, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Pose::RemoveOnTrackingChanged(Valve.VR.SteamVR_Input_Sources,Valve.VR.SteamVR_Action_Pose/TrackingChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_RemoveOnTrackingChanged_mA44878BEC23BE913CA4F4D1AC60F465F2B4A7428 (SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * __this, int32_t ___inputSource0, TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 * ___functionToStopCalling1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_RemoveOnTrackingChanged_mA44878BEC23BE913CA4F4D1AC60F465F2B4A7428_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// sourceMap[inputSource].onTrackingChanged -= functionToStopCalling;
		SteamVR_Action_Pose_Source_Map_1_t191C12A385C6BE9645B171973AA0141ECCBA76A9 * L_0 = ((SteamVR_Action_2_tDED2DB9236CA9398BCDCB18DB8DDA3DB1D98FBAC *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource0;
		NullCheck(L_0);
		SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * L_2 = SteamVR_Action_Source_Map_1_get_Item_mE9FAF259F6EB506E78790EDB4F2AF6FF68569986(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE9FAF259F6EB506E78790EDB4F2AF6FF68569986_RuntimeMethod_var);
		TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 * L_3 = ___functionToStopCalling1;
		NullCheck(L_2);
		SteamVR_Action_Pose_Source_remove_onTrackingChanged_m664E1FD884A6B739CF4BCAD82EE1168E234B0AAF(L_2, L_3, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Pose::AddOnValidPoseChanged(Valve.VR.SteamVR_Input_Sources,Valve.VR.SteamVR_Action_Pose/ValidPoseChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_AddOnValidPoseChanged_m571C4066CBBF6E1BD1711E89D0C944D7C8D7044F (SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * __this, int32_t ___inputSource0, ValidPoseChangeHandler_t1D487A0B0E2FB0D02C72EF5365E81BCD3E33B41A * ___functionToCall1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_AddOnValidPoseChanged_m571C4066CBBF6E1BD1711E89D0C944D7C8D7044F_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// sourceMap[inputSource].onValidPoseChanged += functionToCall;
		SteamVR_Action_Pose_Source_Map_1_t191C12A385C6BE9645B171973AA0141ECCBA76A9 * L_0 = ((SteamVR_Action_2_tDED2DB9236CA9398BCDCB18DB8DDA3DB1D98FBAC *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource0;
		NullCheck(L_0);
		SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * L_2 = SteamVR_Action_Source_Map_1_get_Item_mE9FAF259F6EB506E78790EDB4F2AF6FF68569986(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE9FAF259F6EB506E78790EDB4F2AF6FF68569986_RuntimeMethod_var);
		ValidPoseChangeHandler_t1D487A0B0E2FB0D02C72EF5365E81BCD3E33B41A * L_3 = ___functionToCall1;
		NullCheck(L_2);
		SteamVR_Action_Pose_Source_add_onValidPoseChanged_m3A2F8586C49174C0E6E2D338A8C8D523848BB156(L_2, L_3, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Pose::RemoveOnValidPoseChanged(Valve.VR.SteamVR_Input_Sources,Valve.VR.SteamVR_Action_Pose/ValidPoseChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_RemoveOnValidPoseChanged_mCD7BBDB8BC0CDD3933B813C224B08DABFE2CE1FE (SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * __this, int32_t ___inputSource0, ValidPoseChangeHandler_t1D487A0B0E2FB0D02C72EF5365E81BCD3E33B41A * ___functionToStopCalling1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_RemoveOnValidPoseChanged_mCD7BBDB8BC0CDD3933B813C224B08DABFE2CE1FE_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// sourceMap[inputSource].onValidPoseChanged -= functionToStopCalling;
		SteamVR_Action_Pose_Source_Map_1_t191C12A385C6BE9645B171973AA0141ECCBA76A9 * L_0 = ((SteamVR_Action_2_tDED2DB9236CA9398BCDCB18DB8DDA3DB1D98FBAC *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource0;
		NullCheck(L_0);
		SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * L_2 = SteamVR_Action_Source_Map_1_get_Item_mE9FAF259F6EB506E78790EDB4F2AF6FF68569986(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE9FAF259F6EB506E78790EDB4F2AF6FF68569986_RuntimeMethod_var);
		ValidPoseChangeHandler_t1D487A0B0E2FB0D02C72EF5365E81BCD3E33B41A * L_3 = ___functionToStopCalling1;
		NullCheck(L_2);
		SteamVR_Action_Pose_Source_remove_onValidPoseChanged_mD755CC0727CEA9CCE5BC937BA6D2B2458E47EA62(L_2, L_3, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Pose::AddOnActiveChangeListener(Valve.VR.SteamVR_Input_Sources,Valve.VR.SteamVR_Action_Pose/ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_AddOnActiveChangeListener_m8478A795612076542B73500EBFDFA5D9E7D40376 (SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * __this, int32_t ___inputSource0, ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * ___functionToCall1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_AddOnActiveChangeListener_m8478A795612076542B73500EBFDFA5D9E7D40376_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// sourceMap[inputSource].onActiveChange += functionToCall;
		SteamVR_Action_Pose_Source_Map_1_t191C12A385C6BE9645B171973AA0141ECCBA76A9 * L_0 = ((SteamVR_Action_2_tDED2DB9236CA9398BCDCB18DB8DDA3DB1D98FBAC *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource0;
		NullCheck(L_0);
		SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * L_2 = SteamVR_Action_Source_Map_1_get_Item_mE9FAF259F6EB506E78790EDB4F2AF6FF68569986(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE9FAF259F6EB506E78790EDB4F2AF6FF68569986_RuntimeMethod_var);
		ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * L_3 = ___functionToCall1;
		NullCheck(L_2);
		SteamVR_Action_Pose_Source_add_onActiveChange_mBA4F89F86236E399A9FABBA6AB7BE9AFDD5E3FAA(L_2, L_3, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Pose::RemoveOnActiveChangeListener(Valve.VR.SteamVR_Input_Sources,Valve.VR.SteamVR_Action_Pose/ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_RemoveOnActiveChangeListener_m540C3DD61D691B2D852E73B728D4A9BC1D28155E (SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * __this, int32_t ___inputSource0, ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * ___functionToStopCalling1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_RemoveOnActiveChangeListener_m540C3DD61D691B2D852E73B728D4A9BC1D28155E_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// sourceMap[inputSource].onActiveChange -= functionToStopCalling;
		SteamVR_Action_Pose_Source_Map_1_t191C12A385C6BE9645B171973AA0141ECCBA76A9 * L_0 = ((SteamVR_Action_2_tDED2DB9236CA9398BCDCB18DB8DDA3DB1D98FBAC *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource0;
		NullCheck(L_0);
		SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * L_2 = SteamVR_Action_Source_Map_1_get_Item_mE9FAF259F6EB506E78790EDB4F2AF6FF68569986(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE9FAF259F6EB506E78790EDB4F2AF6FF68569986_RuntimeMethod_var);
		ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * L_3 = ___functionToStopCalling1;
		NullCheck(L_2);
		SteamVR_Action_Pose_Source_remove_onActiveChange_m8F91AE91CFF61C2B5D4B496A28827C3A416169B4(L_2, L_3, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Pose::AddOnChangeListener(Valve.VR.SteamVR_Input_Sources,Valve.VR.SteamVR_Action_Pose/ChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_AddOnChangeListener_mE0CD7931B509EECE6987B7FE6D5CFABBFE92C756 (SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * __this, int32_t ___inputSource0, ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE * ___functionToCall1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_AddOnChangeListener_mE0CD7931B509EECE6987B7FE6D5CFABBFE92C756_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// sourceMap[inputSource].onChange += functionToCall;
		SteamVR_Action_Pose_Source_Map_1_t191C12A385C6BE9645B171973AA0141ECCBA76A9 * L_0 = ((SteamVR_Action_2_tDED2DB9236CA9398BCDCB18DB8DDA3DB1D98FBAC *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource0;
		NullCheck(L_0);
		SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * L_2 = SteamVR_Action_Source_Map_1_get_Item_mE9FAF259F6EB506E78790EDB4F2AF6FF68569986(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE9FAF259F6EB506E78790EDB4F2AF6FF68569986_RuntimeMethod_var);
		ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE * L_3 = ___functionToCall1;
		NullCheck(L_2);
		SteamVR_Action_Pose_Source_add_onChange_m86F9A8C49AAB74EFBED5F82F2BD450687C529567(L_2, L_3, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Pose::RemoveOnChangeListener(Valve.VR.SteamVR_Input_Sources,Valve.VR.SteamVR_Action_Pose/ChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_RemoveOnChangeListener_mE3746E0808A4E1713DC7C4C4A0D83BFDDA6189EE (SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * __this, int32_t ___inputSource0, ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE * ___functionToStopCalling1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_RemoveOnChangeListener_mE3746E0808A4E1713DC7C4C4A0D83BFDDA6189EE_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// sourceMap[inputSource].onChange -= functionToStopCalling;
		SteamVR_Action_Pose_Source_Map_1_t191C12A385C6BE9645B171973AA0141ECCBA76A9 * L_0 = ((SteamVR_Action_2_tDED2DB9236CA9398BCDCB18DB8DDA3DB1D98FBAC *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource0;
		NullCheck(L_0);
		SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * L_2 = SteamVR_Action_Source_Map_1_get_Item_mE9FAF259F6EB506E78790EDB4F2AF6FF68569986(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE9FAF259F6EB506E78790EDB4F2AF6FF68569986_RuntimeMethod_var);
		ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE * L_3 = ___functionToStopCalling1;
		NullCheck(L_2);
		SteamVR_Action_Pose_Source_remove_onChange_mB962374F5363148A48D573F22C5E1B385411E27F(L_2, L_3, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Pose::AddOnUpdateListener(Valve.VR.SteamVR_Input_Sources,Valve.VR.SteamVR_Action_Pose/UpdateHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_AddOnUpdateListener_mACE077D77A3952509CD813A00DB3F4D1DDE78C18 (SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * __this, int32_t ___inputSource0, UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 * ___functionToCall1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_AddOnUpdateListener_mACE077D77A3952509CD813A00DB3F4D1DDE78C18_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// sourceMap[inputSource].onUpdate += functionToCall;
		SteamVR_Action_Pose_Source_Map_1_t191C12A385C6BE9645B171973AA0141ECCBA76A9 * L_0 = ((SteamVR_Action_2_tDED2DB9236CA9398BCDCB18DB8DDA3DB1D98FBAC *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource0;
		NullCheck(L_0);
		SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * L_2 = SteamVR_Action_Source_Map_1_get_Item_mE9FAF259F6EB506E78790EDB4F2AF6FF68569986(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE9FAF259F6EB506E78790EDB4F2AF6FF68569986_RuntimeMethod_var);
		UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 * L_3 = ___functionToCall1;
		NullCheck(L_2);
		SteamVR_Action_Pose_Source_add_onUpdate_mD30D3D18C58E9FD060B58868A4D66478C06FCADD(L_2, L_3, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Pose::RemoveOnUpdateListener(Valve.VR.SteamVR_Input_Sources,Valve.VR.SteamVR_Action_Pose/UpdateHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_RemoveOnUpdateListener_m061F84B6D110F36E34AA9AE0C1C439229F090AF2 (SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * __this, int32_t ___inputSource0, UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 * ___functionToStopCalling1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_RemoveOnUpdateListener_m061F84B6D110F36E34AA9AE0C1C439229F090AF2_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// sourceMap[inputSource].onUpdate -= functionToStopCalling;
		SteamVR_Action_Pose_Source_Map_1_t191C12A385C6BE9645B171973AA0141ECCBA76A9 * L_0 = ((SteamVR_Action_2_tDED2DB9236CA9398BCDCB18DB8DDA3DB1D98FBAC *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource0;
		NullCheck(L_0);
		SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * L_2 = SteamVR_Action_Source_Map_1_get_Item_mE9FAF259F6EB506E78790EDB4F2AF6FF68569986(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE9FAF259F6EB506E78790EDB4F2AF6FF68569986_RuntimeMethod_var);
		UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 * L_3 = ___functionToStopCalling1;
		NullCheck(L_2);
		SteamVR_Action_Pose_Source_remove_onUpdate_m600E90F3012E310B2178CB34B8E3C3A35380A579(L_2, L_3, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Pose::RemoveAllListeners(Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_RemoveAllListeners_m63323402C737B82C29820B0E7489C69C94AC5B0A (SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * __this, int32_t ___input_Sources0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_RemoveAllListeners_m63323402C737B82C29820B0E7489C69C94AC5B0A_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// sourceMap[input_Sources].RemoveAllListeners();
		SteamVR_Action_Pose_Source_Map_1_t191C12A385C6BE9645B171973AA0141ECCBA76A9 * L_0 = ((SteamVR_Action_2_tDED2DB9236CA9398BCDCB18DB8DDA3DB1D98FBAC *)__this)->get_sourceMap_4();
		int32_t L_1 = ___input_Sources0;
		NullCheck(L_0);
		SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * L_2 = SteamVR_Action_Source_Map_1_get_Item_mE9FAF259F6EB506E78790EDB4F2AF6FF68569986(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE9FAF259F6EB506E78790EDB4F2AF6FF68569986_RuntimeMethod_var);
		NullCheck(L_2);
		VirtActionInvoker0::Invoke(50 /* System.Void Valve.VR.SteamVR_Action_Pose_Source::RemoveAllListeners() */, L_2);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Pose::UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_UnityEngine_ISerializationCallbackReceiver_OnBeforeSerialize_m1B1C667F3DD6A3876DFBD97701E07FABEBCE506B (SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * __this, const RuntimeMethod* method)
{
	{
		// void ISerializationCallbackReceiver.OnBeforeSerialize() { }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Pose::UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_UnityEngine_ISerializationCallbackReceiver_OnAfterDeserialize_m542B66C859252C963099DD155209573883795E1D (SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_UnityEngine_ISerializationCallbackReceiver_OnAfterDeserialize_m542B66C859252C963099DD155209573883795E1D_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// InitAfterDeserialize();
		SteamVR_Action_2_InitAfterDeserialize_mE9F8DD45DF03F3256906560CBC27CF8758868081(__this, /*hidden argument*/SteamVR_Action_2_InitAfterDeserialize_mE9F8DD45DF03F3256906560CBC27CF8758868081_RuntimeMethod_var);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Pose::SetTrackingUniverseOrigin(Valve.VR.ETrackingUniverseOrigin)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_SetTrackingUniverseOrigin_mB6C8C0D15AF0C30A8E36EDDB4BB96E15AA771926 (int32_t ___newOrigin0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_SetTrackingUniverseOrigin_mB6C8C0D15AF0C30A8E36EDDB4BB96E15AA771926_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// SetUniverseOrigin(newOrigin);
		int32_t L_0 = ___newOrigin0;
		SteamVR_Action_Pose_Base_2_SetUniverseOrigin_m570ADC7EF0A55D9FFC6FF570D10F5ED7A096820F(L_0, /*hidden argument*/SteamVR_Action_Pose_Base_2_SetUniverseOrigin_m570ADC7EF0A55D9FFC6FF570D10F5ED7A096820F_RuntimeMethod_var);
		// OpenVR.Compositor.SetTrackingSpace(newOrigin);
		IL2CPP_RUNTIME_CLASS_INIT(OpenVR_t89189C917B539750153B18DDDCB4F7D9C8EF004D_il2cpp_TypeInfo_var);
		CVRCompositor_t0316216254FC5BC5562B6EFA273B82DDB77BB282 * L_1 = OpenVR_get_Compositor_m2FB93BF84700DFCE6493B5FCF0BFAD2B334A5444(/*hidden argument*/NULL);
		int32_t L_2 = ___newOrigin0;
		NullCheck(L_1);
		CVRCompositor_SetTrackingSpace_m25BF07407A92852D787ABA6B6380991C92BD0094(L_1, L_2, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Pose::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose__ctor_m9464B0D35BD8034B23824E25C08534F2285C1EE4 (SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose__ctor_m9464B0D35BD8034B23824E25C08534F2285C1EE4_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		SteamVR_Action_Pose_Base_2__ctor_mBF2AF97C3EAEABACA97070B5DBFD7FBD6426161E(__this, /*hidden argument*/SteamVR_Action_Pose_Base_2__ctor_mBF2AF97C3EAEABACA97070B5DBFD7FBD6426161E_RuntimeMethod_var);
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Action_Pose/ActiveChangeHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ActiveChangeHandler__ctor_m94594FC1AEA5307930E393605ED9392D4DD2FFCC (ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.SteamVR_Action_Pose/ActiveChangeHandler::Invoke(Valve.VR.SteamVR_Action_Pose,Valve.VR.SteamVR_Input_Sources,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ActiveChangeHandler_Invoke_m5A1A650F2FBCBD68E1A3F5A15E6631F45A16BDAF (ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * __this, SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * ___fromAction0, int32_t ___fromSource1, bool ___active2, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 3)
			{
				// open
				typedef void (*FunctionPointerType) (SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C *, int32_t, bool, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___active2, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C *, int32_t, bool, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, ___active2, targetMethod);
			}
		}
		else if (___parameterCount != 3)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker2< int32_t, bool >::Invoke(targetMethod, ___fromAction0, ___fromSource1, ___active2);
					else
						GenericVirtActionInvoker2< int32_t, bool >::Invoke(targetMethod, ___fromAction0, ___fromSource1, ___active2);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker2< int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___fromAction0, ___fromSource1, ___active2);
					else
						VirtActionInvoker2< int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___fromAction0, ___fromSource1, ___active2);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___fromSource1) - 1), ___active2, targetMethod);
				}
				typedef void (*FunctionPointerType) (SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C *, int32_t, bool, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___active2, targetMethod);
			}
		}
		else
		{
			// closed
			if (targetThis != NULL && il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker3< SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C *, int32_t, bool >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1, ___active2);
					else
						GenericVirtActionInvoker3< SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C *, int32_t, bool >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1, ___active2);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker3< SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C *, int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___fromAction0, ___fromSource1, ___active2);
					else
						VirtActionInvoker3< SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C *, int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___fromAction0, ___fromSource1, ___active2);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, int32_t, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___fromAction0) - 1), ___fromSource1, ___active2, targetMethod);
				}
				if (targetThis == NULL)
				{
					typedef void (*FunctionPointerType) (SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C *, int32_t, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___active2, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C *, int32_t, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, ___active2, targetMethod);
				}
			}
		}
	}
}
// System.IAsyncResult Valve.VR.SteamVR_Action_Pose/ActiveChangeHandler::BeginInvoke(Valve.VR.SteamVR_Action_Pose,Valve.VR.SteamVR_Input_Sources,System.Boolean,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* ActiveChangeHandler_BeginInvoke_m840BDF45AD7CB0AD33349E89ED6AA1A9402998BD (ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * __this, SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * ___fromAction0, int32_t ___fromSource1, bool ___active2, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback3, RuntimeObject * ___object4, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ActiveChangeHandler_BeginInvoke_m840BDF45AD7CB0AD33349E89ED6AA1A9402998BD_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[4] = {0};
	__d_args[0] = ___fromAction0;
	__d_args[1] = Box(SteamVR_Input_Sources_tCE41AA589FB3B9516BDE0DFABDCB4AAEA29528F7_il2cpp_TypeInfo_var, &___fromSource1);
	__d_args[2] = Box(Boolean_tB53F6830F670160873277339AA58F15CAED4399C_il2cpp_TypeInfo_var, &___active2);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback3, (RuntimeObject*)___object4);
}
// System.Void Valve.VR.SteamVR_Action_Pose/ActiveChangeHandler::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ActiveChangeHandler_EndInvoke_m51C71310AA11840BE891B31F707CFA44F655037E (ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Action_Pose/ChangeHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ChangeHandler__ctor_m282D0F5DA54AA20DC12B31D0AC3F914C3B5382F8 (ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.SteamVR_Action_Pose/ChangeHandler::Invoke(Valve.VR.SteamVR_Action_Pose,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ChangeHandler_Invoke_m1E3883B22E580E2A82DF410B59EB44B502319DA9 (ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE * __this, SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * ___fromAction0, int32_t ___fromSource1, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 2)
			{
				// open
				typedef void (*FunctionPointerType) (SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C *, int32_t, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C *, int32_t, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, targetMethod);
			}
		}
		else if (___parameterCount != 2)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker1< int32_t >::Invoke(targetMethod, ___fromAction0, ___fromSource1);
					else
						GenericVirtActionInvoker1< int32_t >::Invoke(targetMethod, ___fromAction0, ___fromSource1);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker1< int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___fromAction0, ___fromSource1);
					else
						VirtActionInvoker1< int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___fromAction0, ___fromSource1);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___fromSource1) - 1), targetMethod);
				}
				typedef void (*FunctionPointerType) (SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C *, int32_t, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, targetMethod);
			}
		}
		else
		{
			// closed
			if (targetThis != NULL && il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker2< SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C *, int32_t >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1);
					else
						GenericVirtActionInvoker2< SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C *, int32_t >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker2< SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C *, int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___fromAction0, ___fromSource1);
					else
						VirtActionInvoker2< SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C *, int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___fromAction0, ___fromSource1);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, int32_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___fromAction0) - 1), ___fromSource1, targetMethod);
				}
				if (targetThis == NULL)
				{
					typedef void (*FunctionPointerType) (SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C *, int32_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C *, int32_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, targetMethod);
				}
			}
		}
	}
}
// System.IAsyncResult Valve.VR.SteamVR_Action_Pose/ChangeHandler::BeginInvoke(Valve.VR.SteamVR_Action_Pose,Valve.VR.SteamVR_Input_Sources,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* ChangeHandler_BeginInvoke_mB16F9AF55D593D093C99E610BF8193036D318499 (ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE * __this, SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * ___fromAction0, int32_t ___fromSource1, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback2, RuntimeObject * ___object3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ChangeHandler_BeginInvoke_mB16F9AF55D593D093C99E610BF8193036D318499_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[3] = {0};
	__d_args[0] = ___fromAction0;
	__d_args[1] = Box(SteamVR_Input_Sources_tCE41AA589FB3B9516BDE0DFABDCB4AAEA29528F7_il2cpp_TypeInfo_var, &___fromSource1);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback2, (RuntimeObject*)___object3);
}
// System.Void Valve.VR.SteamVR_Action_Pose/ChangeHandler::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ChangeHandler_EndInvoke_mC3CAF023E976489607FCE5042D1424A2027B811E (ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Action_Pose/DeviceConnectedChangeHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DeviceConnectedChangeHandler__ctor_mA41805A0B436012CFB19EAB0D88336B275CC206C (DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.SteamVR_Action_Pose/DeviceConnectedChangeHandler::Invoke(Valve.VR.SteamVR_Action_Pose,Valve.VR.SteamVR_Input_Sources,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DeviceConnectedChangeHandler_Invoke_m512AF09CD9A724F720AFB1337A900BFE49B1F4F0 (DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 * __this, SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * ___fromAction0, int32_t ___fromSource1, bool ___deviceConnected2, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 3)
			{
				// open
				typedef void (*FunctionPointerType) (SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C *, int32_t, bool, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___deviceConnected2, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C *, int32_t, bool, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, ___deviceConnected2, targetMethod);
			}
		}
		else if (___parameterCount != 3)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker2< int32_t, bool >::Invoke(targetMethod, ___fromAction0, ___fromSource1, ___deviceConnected2);
					else
						GenericVirtActionInvoker2< int32_t, bool >::Invoke(targetMethod, ___fromAction0, ___fromSource1, ___deviceConnected2);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker2< int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___fromAction0, ___fromSource1, ___deviceConnected2);
					else
						VirtActionInvoker2< int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___fromAction0, ___fromSource1, ___deviceConnected2);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___fromSource1) - 1), ___deviceConnected2, targetMethod);
				}
				typedef void (*FunctionPointerType) (SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C *, int32_t, bool, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___deviceConnected2, targetMethod);
			}
		}
		else
		{
			// closed
			if (targetThis != NULL && il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker3< SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C *, int32_t, bool >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1, ___deviceConnected2);
					else
						GenericVirtActionInvoker3< SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C *, int32_t, bool >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1, ___deviceConnected2);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker3< SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C *, int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___fromAction0, ___fromSource1, ___deviceConnected2);
					else
						VirtActionInvoker3< SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C *, int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___fromAction0, ___fromSource1, ___deviceConnected2);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, int32_t, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___fromAction0) - 1), ___fromSource1, ___deviceConnected2, targetMethod);
				}
				if (targetThis == NULL)
				{
					typedef void (*FunctionPointerType) (SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C *, int32_t, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___deviceConnected2, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C *, int32_t, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, ___deviceConnected2, targetMethod);
				}
			}
		}
	}
}
// System.IAsyncResult Valve.VR.SteamVR_Action_Pose/DeviceConnectedChangeHandler::BeginInvoke(Valve.VR.SteamVR_Action_Pose,Valve.VR.SteamVR_Input_Sources,System.Boolean,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* DeviceConnectedChangeHandler_BeginInvoke_m7182D36F4B940AD9BE37D71E2A18587607F31041 (DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 * __this, SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * ___fromAction0, int32_t ___fromSource1, bool ___deviceConnected2, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback3, RuntimeObject * ___object4, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (DeviceConnectedChangeHandler_BeginInvoke_m7182D36F4B940AD9BE37D71E2A18587607F31041_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[4] = {0};
	__d_args[0] = ___fromAction0;
	__d_args[1] = Box(SteamVR_Input_Sources_tCE41AA589FB3B9516BDE0DFABDCB4AAEA29528F7_il2cpp_TypeInfo_var, &___fromSource1);
	__d_args[2] = Box(Boolean_tB53F6830F670160873277339AA58F15CAED4399C_il2cpp_TypeInfo_var, &___deviceConnected2);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback3, (RuntimeObject*)___object4);
}
// System.Void Valve.VR.SteamVR_Action_Pose/DeviceConnectedChangeHandler::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DeviceConnectedChangeHandler_EndInvoke_m15B16B20969DA02147ECF5491B4F8C300D989B91 (DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Action_Pose/TrackingChangeHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TrackingChangeHandler__ctor_m349218462C65472313178FCB53D7C385ECF381D8 (TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.SteamVR_Action_Pose/TrackingChangeHandler::Invoke(Valve.VR.SteamVR_Action_Pose,Valve.VR.SteamVR_Input_Sources,Valve.VR.ETrackingResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TrackingChangeHandler_Invoke_m380F993E23ED2D80E4B30D2B3FC42191C8FBB99D (TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 * __this, SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * ___fromAction0, int32_t ___fromSource1, int32_t ___trackingState2, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 3)
			{
				// open
				typedef void (*FunctionPointerType) (SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C *, int32_t, int32_t, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___trackingState2, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C *, int32_t, int32_t, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, ___trackingState2, targetMethod);
			}
		}
		else if (___parameterCount != 3)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker2< int32_t, int32_t >::Invoke(targetMethod, ___fromAction0, ___fromSource1, ___trackingState2);
					else
						GenericVirtActionInvoker2< int32_t, int32_t >::Invoke(targetMethod, ___fromAction0, ___fromSource1, ___trackingState2);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker2< int32_t, int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___fromAction0, ___fromSource1, ___trackingState2);
					else
						VirtActionInvoker2< int32_t, int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___fromAction0, ___fromSource1, ___trackingState2);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, int32_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___fromSource1) - 1), ___trackingState2, targetMethod);
				}
				typedef void (*FunctionPointerType) (SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C *, int32_t, int32_t, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___trackingState2, targetMethod);
			}
		}
		else
		{
			// closed
			if (targetThis != NULL && il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker3< SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C *, int32_t, int32_t >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1, ___trackingState2);
					else
						GenericVirtActionInvoker3< SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C *, int32_t, int32_t >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1, ___trackingState2);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker3< SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C *, int32_t, int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___fromAction0, ___fromSource1, ___trackingState2);
					else
						VirtActionInvoker3< SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C *, int32_t, int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___fromAction0, ___fromSource1, ___trackingState2);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, int32_t, int32_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___fromAction0) - 1), ___fromSource1, ___trackingState2, targetMethod);
				}
				if (targetThis == NULL)
				{
					typedef void (*FunctionPointerType) (SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C *, int32_t, int32_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___trackingState2, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C *, int32_t, int32_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, ___trackingState2, targetMethod);
				}
			}
		}
	}
}
// System.IAsyncResult Valve.VR.SteamVR_Action_Pose/TrackingChangeHandler::BeginInvoke(Valve.VR.SteamVR_Action_Pose,Valve.VR.SteamVR_Input_Sources,Valve.VR.ETrackingResult,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* TrackingChangeHandler_BeginInvoke_m955DC601FB9B8E845AC3A16FE5FCFDB84C2305B6 (TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 * __this, SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * ___fromAction0, int32_t ___fromSource1, int32_t ___trackingState2, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback3, RuntimeObject * ___object4, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (TrackingChangeHandler_BeginInvoke_m955DC601FB9B8E845AC3A16FE5FCFDB84C2305B6_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[4] = {0};
	__d_args[0] = ___fromAction0;
	__d_args[1] = Box(SteamVR_Input_Sources_tCE41AA589FB3B9516BDE0DFABDCB4AAEA29528F7_il2cpp_TypeInfo_var, &___fromSource1);
	__d_args[2] = Box(ETrackingResult_tEF8D233780E244B87AFAECDB107A82C77C666E9D_il2cpp_TypeInfo_var, &___trackingState2);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback3, (RuntimeObject*)___object4);
}
// System.Void Valve.VR.SteamVR_Action_Pose/TrackingChangeHandler::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TrackingChangeHandler_EndInvoke_m53E034D20247E30C016F1734A058431BF70DB23E (TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Action_Pose/UpdateHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UpdateHandler__ctor_mB229E4D4E00FE9946266DE5EF6387E240FA96D6D (UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.SteamVR_Action_Pose/UpdateHandler::Invoke(Valve.VR.SteamVR_Action_Pose,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UpdateHandler_Invoke_m27C63AF2E42B34048A8AF0905FCB8C7129DFFB2A (UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 * __this, SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * ___fromAction0, int32_t ___fromSource1, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 2)
			{
				// open
				typedef void (*FunctionPointerType) (SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C *, int32_t, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C *, int32_t, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, targetMethod);
			}
		}
		else if (___parameterCount != 2)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker1< int32_t >::Invoke(targetMethod, ___fromAction0, ___fromSource1);
					else
						GenericVirtActionInvoker1< int32_t >::Invoke(targetMethod, ___fromAction0, ___fromSource1);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker1< int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___fromAction0, ___fromSource1);
					else
						VirtActionInvoker1< int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___fromAction0, ___fromSource1);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___fromSource1) - 1), targetMethod);
				}
				typedef void (*FunctionPointerType) (SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C *, int32_t, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, targetMethod);
			}
		}
		else
		{
			// closed
			if (targetThis != NULL && il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker2< SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C *, int32_t >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1);
					else
						GenericVirtActionInvoker2< SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C *, int32_t >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker2< SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C *, int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___fromAction0, ___fromSource1);
					else
						VirtActionInvoker2< SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C *, int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___fromAction0, ___fromSource1);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, int32_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___fromAction0) - 1), ___fromSource1, targetMethod);
				}
				if (targetThis == NULL)
				{
					typedef void (*FunctionPointerType) (SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C *, int32_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C *, int32_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, targetMethod);
				}
			}
		}
	}
}
// System.IAsyncResult Valve.VR.SteamVR_Action_Pose/UpdateHandler::BeginInvoke(Valve.VR.SteamVR_Action_Pose,Valve.VR.SteamVR_Input_Sources,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* UpdateHandler_BeginInvoke_m6C9F24AA0EB98146E7D8306F52FF2A69DC4273A6 (UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 * __this, SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * ___fromAction0, int32_t ___fromSource1, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback2, RuntimeObject * ___object3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (UpdateHandler_BeginInvoke_m6C9F24AA0EB98146E7D8306F52FF2A69DC4273A6_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[3] = {0};
	__d_args[0] = ___fromAction0;
	__d_args[1] = Box(SteamVR_Input_Sources_tCE41AA589FB3B9516BDE0DFABDCB4AAEA29528F7_il2cpp_TypeInfo_var, &___fromSource1);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback2, (RuntimeObject*)___object3);
}
// System.Void Valve.VR.SteamVR_Action_Pose/UpdateHandler::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UpdateHandler_EndInvoke_m89B7EE8D14822F4A0C6A6C4DADBEA3A0B8F597A9 (UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Action_Pose/ValidPoseChangeHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ValidPoseChangeHandler__ctor_mA909336AD25BEDCEA9D4A53A4DC447E98BE3FCDB (ValidPoseChangeHandler_t1D487A0B0E2FB0D02C72EF5365E81BCD3E33B41A * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.SteamVR_Action_Pose/ValidPoseChangeHandler::Invoke(Valve.VR.SteamVR_Action_Pose,Valve.VR.SteamVR_Input_Sources,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ValidPoseChangeHandler_Invoke_m881AD09C85F8A76B3DAC8FD9D6C1D8D2A43AE8DC (ValidPoseChangeHandler_t1D487A0B0E2FB0D02C72EF5365E81BCD3E33B41A * __this, SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * ___fromAction0, int32_t ___fromSource1, bool ___validPose2, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 3)
			{
				// open
				typedef void (*FunctionPointerType) (SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C *, int32_t, bool, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___validPose2, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C *, int32_t, bool, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, ___validPose2, targetMethod);
			}
		}
		else if (___parameterCount != 3)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker2< int32_t, bool >::Invoke(targetMethod, ___fromAction0, ___fromSource1, ___validPose2);
					else
						GenericVirtActionInvoker2< int32_t, bool >::Invoke(targetMethod, ___fromAction0, ___fromSource1, ___validPose2);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker2< int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___fromAction0, ___fromSource1, ___validPose2);
					else
						VirtActionInvoker2< int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___fromAction0, ___fromSource1, ___validPose2);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___fromSource1) - 1), ___validPose2, targetMethod);
				}
				typedef void (*FunctionPointerType) (SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C *, int32_t, bool, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___validPose2, targetMethod);
			}
		}
		else
		{
			// closed
			if (targetThis != NULL && il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker3< SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C *, int32_t, bool >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1, ___validPose2);
					else
						GenericVirtActionInvoker3< SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C *, int32_t, bool >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1, ___validPose2);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker3< SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C *, int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___fromAction0, ___fromSource1, ___validPose2);
					else
						VirtActionInvoker3< SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C *, int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___fromAction0, ___fromSource1, ___validPose2);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, int32_t, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___fromAction0) - 1), ___fromSource1, ___validPose2, targetMethod);
				}
				if (targetThis == NULL)
				{
					typedef void (*FunctionPointerType) (SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C *, int32_t, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___validPose2, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C *, int32_t, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, ___validPose2, targetMethod);
				}
			}
		}
	}
}
// System.IAsyncResult Valve.VR.SteamVR_Action_Pose/ValidPoseChangeHandler::BeginInvoke(Valve.VR.SteamVR_Action_Pose,Valve.VR.SteamVR_Input_Sources,System.Boolean,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* ValidPoseChangeHandler_BeginInvoke_m7FAF6DF123DCFADD1A78D6A2B271FDE962EA1C63 (ValidPoseChangeHandler_t1D487A0B0E2FB0D02C72EF5365E81BCD3E33B41A * __this, SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * ___fromAction0, int32_t ___fromSource1, bool ___validPose2, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback3, RuntimeObject * ___object4, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ValidPoseChangeHandler_BeginInvoke_m7FAF6DF123DCFADD1A78D6A2B271FDE962EA1C63_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[4] = {0};
	__d_args[0] = ___fromAction0;
	__d_args[1] = Box(SteamVR_Input_Sources_tCE41AA589FB3B9516BDE0DFABDCB4AAEA29528F7_il2cpp_TypeInfo_var, &___fromSource1);
	__d_args[2] = Box(Boolean_tB53F6830F670160873277339AA58F15CAED4399C_il2cpp_TypeInfo_var, &___validPose2);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback3, (RuntimeObject*)___object4);
}
// System.Void Valve.VR.SteamVR_Action_Pose/ValidPoseChangeHandler::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ValidPoseChangeHandler_EndInvoke_mCF4DDEC3B3D8A649A1D083C0C9742DEF86382F53 (ValidPoseChangeHandler_t1D487A0B0E2FB0D02C72EF5365E81BCD3E33B41A * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Action_Pose_Source::add_onActiveChange(Valve.VR.SteamVR_Action_Pose/ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_add_onActiveChange_mBA4F89F86236E399A9FABBA6AB7BE9AFDD5E3FAA (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_Source_add_onActiveChange_mBA4F89F86236E399A9FABBA6AB7BE9AFDD5E3FAA_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * V_0 = NULL;
	ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * V_1 = NULL;
	ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * V_2 = NULL;
	{
		ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * L_0 = __this->get_onActiveChange_13();
		V_0 = L_0;
	}

IL_0007:
	{
		ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * L_1 = V_0;
		V_1 = L_1;
		ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * L_2 = V_1;
		ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Combine_mC25D2F7DECAFBA6D9A2F9EBA8A77063F0658ECF1(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E *)CastclassSealed((RuntimeObject*)L_4, ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E_il2cpp_TypeInfo_var));
		ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E ** L_5 = __this->get_address_of_onActiveChange_13();
		ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * L_6 = V_2;
		ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * L_7 = V_1;
		ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * L_8 = InterlockedCompareExchangeImpl<ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E *>((ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E **)L_5, L_6, L_7);
		V_0 = L_8;
		ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * L_9 = V_0;
		ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * L_10 = V_1;
		if ((!(((RuntimeObject*)(ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E *)L_9) == ((RuntimeObject*)(ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Pose_Source::remove_onActiveChange(Valve.VR.SteamVR_Action_Pose/ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_remove_onActiveChange_m8F91AE91CFF61C2B5D4B496A28827C3A416169B4 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_Source_remove_onActiveChange_m8F91AE91CFF61C2B5D4B496A28827C3A416169B4_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * V_0 = NULL;
	ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * V_1 = NULL;
	ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * V_2 = NULL;
	{
		ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * L_0 = __this->get_onActiveChange_13();
		V_0 = L_0;
	}

IL_0007:
	{
		ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * L_1 = V_0;
		V_1 = L_1;
		ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * L_2 = V_1;
		ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Remove_m0B0DB7D1B3AF96B71AFAA72BA0EFE32FBBC2932D(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E *)CastclassSealed((RuntimeObject*)L_4, ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E_il2cpp_TypeInfo_var));
		ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E ** L_5 = __this->get_address_of_onActiveChange_13();
		ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * L_6 = V_2;
		ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * L_7 = V_1;
		ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * L_8 = InterlockedCompareExchangeImpl<ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E *>((ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E **)L_5, L_6, L_7);
		V_0 = L_8;
		ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * L_9 = V_0;
		ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * L_10 = V_1;
		if ((!(((RuntimeObject*)(ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E *)L_9) == ((RuntimeObject*)(ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Pose_Source::add_onActiveBindingChange(Valve.VR.SteamVR_Action_Pose/ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_add_onActiveBindingChange_m3FD39BFF599A4AF5014F2EEC7D595AF9D2EF33E2 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_Source_add_onActiveBindingChange_m3FD39BFF599A4AF5014F2EEC7D595AF9D2EF33E2_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * V_0 = NULL;
	ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * V_1 = NULL;
	ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * V_2 = NULL;
	{
		ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * L_0 = __this->get_onActiveBindingChange_14();
		V_0 = L_0;
	}

IL_0007:
	{
		ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * L_1 = V_0;
		V_1 = L_1;
		ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * L_2 = V_1;
		ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Combine_mC25D2F7DECAFBA6D9A2F9EBA8A77063F0658ECF1(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E *)CastclassSealed((RuntimeObject*)L_4, ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E_il2cpp_TypeInfo_var));
		ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E ** L_5 = __this->get_address_of_onActiveBindingChange_14();
		ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * L_6 = V_2;
		ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * L_7 = V_1;
		ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * L_8 = InterlockedCompareExchangeImpl<ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E *>((ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E **)L_5, L_6, L_7);
		V_0 = L_8;
		ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * L_9 = V_0;
		ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * L_10 = V_1;
		if ((!(((RuntimeObject*)(ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E *)L_9) == ((RuntimeObject*)(ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Pose_Source::remove_onActiveBindingChange(Valve.VR.SteamVR_Action_Pose/ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_remove_onActiveBindingChange_m0D0CAD39C7DE6CF2F11E94DC745FE84C863543E0 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_Source_remove_onActiveBindingChange_m0D0CAD39C7DE6CF2F11E94DC745FE84C863543E0_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * V_0 = NULL;
	ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * V_1 = NULL;
	ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * V_2 = NULL;
	{
		ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * L_0 = __this->get_onActiveBindingChange_14();
		V_0 = L_0;
	}

IL_0007:
	{
		ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * L_1 = V_0;
		V_1 = L_1;
		ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * L_2 = V_1;
		ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Remove_m0B0DB7D1B3AF96B71AFAA72BA0EFE32FBBC2932D(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E *)CastclassSealed((RuntimeObject*)L_4, ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E_il2cpp_TypeInfo_var));
		ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E ** L_5 = __this->get_address_of_onActiveBindingChange_14();
		ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * L_6 = V_2;
		ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * L_7 = V_1;
		ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * L_8 = InterlockedCompareExchangeImpl<ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E *>((ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E **)L_5, L_6, L_7);
		V_0 = L_8;
		ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * L_9 = V_0;
		ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * L_10 = V_1;
		if ((!(((RuntimeObject*)(ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E *)L_9) == ((RuntimeObject*)(ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Pose_Source::add_onChange(Valve.VR.SteamVR_Action_Pose/ChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_add_onChange_m86F9A8C49AAB74EFBED5F82F2BD450687C529567 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_Source_add_onChange_m86F9A8C49AAB74EFBED5F82F2BD450687C529567_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE * V_0 = NULL;
	ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE * V_1 = NULL;
	ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE * V_2 = NULL;
	{
		ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE * L_0 = __this->get_onChange_15();
		V_0 = L_0;
	}

IL_0007:
	{
		ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE * L_1 = V_0;
		V_1 = L_1;
		ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE * L_2 = V_1;
		ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Combine_mC25D2F7DECAFBA6D9A2F9EBA8A77063F0658ECF1(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE *)CastclassSealed((RuntimeObject*)L_4, ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE_il2cpp_TypeInfo_var));
		ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE ** L_5 = __this->get_address_of_onChange_15();
		ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE * L_6 = V_2;
		ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE * L_7 = V_1;
		ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE * L_8 = InterlockedCompareExchangeImpl<ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE *>((ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE **)L_5, L_6, L_7);
		V_0 = L_8;
		ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE * L_9 = V_0;
		ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE * L_10 = V_1;
		if ((!(((RuntimeObject*)(ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE *)L_9) == ((RuntimeObject*)(ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Pose_Source::remove_onChange(Valve.VR.SteamVR_Action_Pose/ChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_remove_onChange_mB962374F5363148A48D573F22C5E1B385411E27F (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_Source_remove_onChange_mB962374F5363148A48D573F22C5E1B385411E27F_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE * V_0 = NULL;
	ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE * V_1 = NULL;
	ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE * V_2 = NULL;
	{
		ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE * L_0 = __this->get_onChange_15();
		V_0 = L_0;
	}

IL_0007:
	{
		ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE * L_1 = V_0;
		V_1 = L_1;
		ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE * L_2 = V_1;
		ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Remove_m0B0DB7D1B3AF96B71AFAA72BA0EFE32FBBC2932D(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE *)CastclassSealed((RuntimeObject*)L_4, ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE_il2cpp_TypeInfo_var));
		ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE ** L_5 = __this->get_address_of_onChange_15();
		ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE * L_6 = V_2;
		ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE * L_7 = V_1;
		ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE * L_8 = InterlockedCompareExchangeImpl<ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE *>((ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE **)L_5, L_6, L_7);
		V_0 = L_8;
		ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE * L_9 = V_0;
		ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE * L_10 = V_1;
		if ((!(((RuntimeObject*)(ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE *)L_9) == ((RuntimeObject*)(ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Pose_Source::add_onUpdate(Valve.VR.SteamVR_Action_Pose/UpdateHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_add_onUpdate_mD30D3D18C58E9FD060B58868A4D66478C06FCADD (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_Source_add_onUpdate_mD30D3D18C58E9FD060B58868A4D66478C06FCADD_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 * V_0 = NULL;
	UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 * V_1 = NULL;
	UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 * V_2 = NULL;
	{
		UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 * L_0 = __this->get_onUpdate_16();
		V_0 = L_0;
	}

IL_0007:
	{
		UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 * L_1 = V_0;
		V_1 = L_1;
		UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 * L_2 = V_1;
		UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Combine_mC25D2F7DECAFBA6D9A2F9EBA8A77063F0658ECF1(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 *)CastclassSealed((RuntimeObject*)L_4, UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1_il2cpp_TypeInfo_var));
		UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 ** L_5 = __this->get_address_of_onUpdate_16();
		UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 * L_6 = V_2;
		UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 * L_7 = V_1;
		UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 * L_8 = InterlockedCompareExchangeImpl<UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 *>((UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 **)L_5, L_6, L_7);
		V_0 = L_8;
		UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 * L_9 = V_0;
		UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 * L_10 = V_1;
		if ((!(((RuntimeObject*)(UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 *)L_9) == ((RuntimeObject*)(UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Pose_Source::remove_onUpdate(Valve.VR.SteamVR_Action_Pose/UpdateHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_remove_onUpdate_m600E90F3012E310B2178CB34B8E3C3A35380A579 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_Source_remove_onUpdate_m600E90F3012E310B2178CB34B8E3C3A35380A579_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 * V_0 = NULL;
	UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 * V_1 = NULL;
	UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 * V_2 = NULL;
	{
		UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 * L_0 = __this->get_onUpdate_16();
		V_0 = L_0;
	}

IL_0007:
	{
		UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 * L_1 = V_0;
		V_1 = L_1;
		UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 * L_2 = V_1;
		UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Remove_m0B0DB7D1B3AF96B71AFAA72BA0EFE32FBBC2932D(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 *)CastclassSealed((RuntimeObject*)L_4, UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1_il2cpp_TypeInfo_var));
		UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 ** L_5 = __this->get_address_of_onUpdate_16();
		UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 * L_6 = V_2;
		UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 * L_7 = V_1;
		UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 * L_8 = InterlockedCompareExchangeImpl<UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 *>((UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 **)L_5, L_6, L_7);
		V_0 = L_8;
		UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 * L_9 = V_0;
		UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 * L_10 = V_1;
		if ((!(((RuntimeObject*)(UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 *)L_9) == ((RuntimeObject*)(UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Pose_Source::add_onTrackingChanged(Valve.VR.SteamVR_Action_Pose/TrackingChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_add_onTrackingChanged_m916FC64B7E280897083BF516B0A2B10BC4034499 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_Source_add_onTrackingChanged_m916FC64B7E280897083BF516B0A2B10BC4034499_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 * V_0 = NULL;
	TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 * V_1 = NULL;
	TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 * V_2 = NULL;
	{
		TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 * L_0 = __this->get_onTrackingChanged_17();
		V_0 = L_0;
	}

IL_0007:
	{
		TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 * L_1 = V_0;
		V_1 = L_1;
		TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 * L_2 = V_1;
		TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Combine_mC25D2F7DECAFBA6D9A2F9EBA8A77063F0658ECF1(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 *)CastclassSealed((RuntimeObject*)L_4, TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914_il2cpp_TypeInfo_var));
		TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 ** L_5 = __this->get_address_of_onTrackingChanged_17();
		TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 * L_6 = V_2;
		TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 * L_7 = V_1;
		TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 * L_8 = InterlockedCompareExchangeImpl<TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 *>((TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 **)L_5, L_6, L_7);
		V_0 = L_8;
		TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 * L_9 = V_0;
		TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 * L_10 = V_1;
		if ((!(((RuntimeObject*)(TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 *)L_9) == ((RuntimeObject*)(TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Pose_Source::remove_onTrackingChanged(Valve.VR.SteamVR_Action_Pose/TrackingChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_remove_onTrackingChanged_m664E1FD884A6B739CF4BCAD82EE1168E234B0AAF (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_Source_remove_onTrackingChanged_m664E1FD884A6B739CF4BCAD82EE1168E234B0AAF_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 * V_0 = NULL;
	TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 * V_1 = NULL;
	TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 * V_2 = NULL;
	{
		TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 * L_0 = __this->get_onTrackingChanged_17();
		V_0 = L_0;
	}

IL_0007:
	{
		TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 * L_1 = V_0;
		V_1 = L_1;
		TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 * L_2 = V_1;
		TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Remove_m0B0DB7D1B3AF96B71AFAA72BA0EFE32FBBC2932D(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 *)CastclassSealed((RuntimeObject*)L_4, TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914_il2cpp_TypeInfo_var));
		TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 ** L_5 = __this->get_address_of_onTrackingChanged_17();
		TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 * L_6 = V_2;
		TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 * L_7 = V_1;
		TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 * L_8 = InterlockedCompareExchangeImpl<TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 *>((TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 **)L_5, L_6, L_7);
		V_0 = L_8;
		TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 * L_9 = V_0;
		TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 * L_10 = V_1;
		if ((!(((RuntimeObject*)(TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 *)L_9) == ((RuntimeObject*)(TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Pose_Source::add_onValidPoseChanged(Valve.VR.SteamVR_Action_Pose/ValidPoseChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_add_onValidPoseChanged_m3A2F8586C49174C0E6E2D338A8C8D523848BB156 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, ValidPoseChangeHandler_t1D487A0B0E2FB0D02C72EF5365E81BCD3E33B41A * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_Source_add_onValidPoseChanged_m3A2F8586C49174C0E6E2D338A8C8D523848BB156_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	ValidPoseChangeHandler_t1D487A0B0E2FB0D02C72EF5365E81BCD3E33B41A * V_0 = NULL;
	ValidPoseChangeHandler_t1D487A0B0E2FB0D02C72EF5365E81BCD3E33B41A * V_1 = NULL;
	ValidPoseChangeHandler_t1D487A0B0E2FB0D02C72EF5365E81BCD3E33B41A * V_2 = NULL;
	{
		ValidPoseChangeHandler_t1D487A0B0E2FB0D02C72EF5365E81BCD3E33B41A * L_0 = __this->get_onValidPoseChanged_18();
		V_0 = L_0;
	}

IL_0007:
	{
		ValidPoseChangeHandler_t1D487A0B0E2FB0D02C72EF5365E81BCD3E33B41A * L_1 = V_0;
		V_1 = L_1;
		ValidPoseChangeHandler_t1D487A0B0E2FB0D02C72EF5365E81BCD3E33B41A * L_2 = V_1;
		ValidPoseChangeHandler_t1D487A0B0E2FB0D02C72EF5365E81BCD3E33B41A * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Combine_mC25D2F7DECAFBA6D9A2F9EBA8A77063F0658ECF1(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((ValidPoseChangeHandler_t1D487A0B0E2FB0D02C72EF5365E81BCD3E33B41A *)CastclassSealed((RuntimeObject*)L_4, ValidPoseChangeHandler_t1D487A0B0E2FB0D02C72EF5365E81BCD3E33B41A_il2cpp_TypeInfo_var));
		ValidPoseChangeHandler_t1D487A0B0E2FB0D02C72EF5365E81BCD3E33B41A ** L_5 = __this->get_address_of_onValidPoseChanged_18();
		ValidPoseChangeHandler_t1D487A0B0E2FB0D02C72EF5365E81BCD3E33B41A * L_6 = V_2;
		ValidPoseChangeHandler_t1D487A0B0E2FB0D02C72EF5365E81BCD3E33B41A * L_7 = V_1;
		ValidPoseChangeHandler_t1D487A0B0E2FB0D02C72EF5365E81BCD3E33B41A * L_8 = InterlockedCompareExchangeImpl<ValidPoseChangeHandler_t1D487A0B0E2FB0D02C72EF5365E81BCD3E33B41A *>((ValidPoseChangeHandler_t1D487A0B0E2FB0D02C72EF5365E81BCD3E33B41A **)L_5, L_6, L_7);
		V_0 = L_8;
		ValidPoseChangeHandler_t1D487A0B0E2FB0D02C72EF5365E81BCD3E33B41A * L_9 = V_0;
		ValidPoseChangeHandler_t1D487A0B0E2FB0D02C72EF5365E81BCD3E33B41A * L_10 = V_1;
		if ((!(((RuntimeObject*)(ValidPoseChangeHandler_t1D487A0B0E2FB0D02C72EF5365E81BCD3E33B41A *)L_9) == ((RuntimeObject*)(ValidPoseChangeHandler_t1D487A0B0E2FB0D02C72EF5365E81BCD3E33B41A *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Pose_Source::remove_onValidPoseChanged(Valve.VR.SteamVR_Action_Pose/ValidPoseChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_remove_onValidPoseChanged_mD755CC0727CEA9CCE5BC937BA6D2B2458E47EA62 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, ValidPoseChangeHandler_t1D487A0B0E2FB0D02C72EF5365E81BCD3E33B41A * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_Source_remove_onValidPoseChanged_mD755CC0727CEA9CCE5BC937BA6D2B2458E47EA62_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	ValidPoseChangeHandler_t1D487A0B0E2FB0D02C72EF5365E81BCD3E33B41A * V_0 = NULL;
	ValidPoseChangeHandler_t1D487A0B0E2FB0D02C72EF5365E81BCD3E33B41A * V_1 = NULL;
	ValidPoseChangeHandler_t1D487A0B0E2FB0D02C72EF5365E81BCD3E33B41A * V_2 = NULL;
	{
		ValidPoseChangeHandler_t1D487A0B0E2FB0D02C72EF5365E81BCD3E33B41A * L_0 = __this->get_onValidPoseChanged_18();
		V_0 = L_0;
	}

IL_0007:
	{
		ValidPoseChangeHandler_t1D487A0B0E2FB0D02C72EF5365E81BCD3E33B41A * L_1 = V_0;
		V_1 = L_1;
		ValidPoseChangeHandler_t1D487A0B0E2FB0D02C72EF5365E81BCD3E33B41A * L_2 = V_1;
		ValidPoseChangeHandler_t1D487A0B0E2FB0D02C72EF5365E81BCD3E33B41A * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Remove_m0B0DB7D1B3AF96B71AFAA72BA0EFE32FBBC2932D(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((ValidPoseChangeHandler_t1D487A0B0E2FB0D02C72EF5365E81BCD3E33B41A *)CastclassSealed((RuntimeObject*)L_4, ValidPoseChangeHandler_t1D487A0B0E2FB0D02C72EF5365E81BCD3E33B41A_il2cpp_TypeInfo_var));
		ValidPoseChangeHandler_t1D487A0B0E2FB0D02C72EF5365E81BCD3E33B41A ** L_5 = __this->get_address_of_onValidPoseChanged_18();
		ValidPoseChangeHandler_t1D487A0B0E2FB0D02C72EF5365E81BCD3E33B41A * L_6 = V_2;
		ValidPoseChangeHandler_t1D487A0B0E2FB0D02C72EF5365E81BCD3E33B41A * L_7 = V_1;
		ValidPoseChangeHandler_t1D487A0B0E2FB0D02C72EF5365E81BCD3E33B41A * L_8 = InterlockedCompareExchangeImpl<ValidPoseChangeHandler_t1D487A0B0E2FB0D02C72EF5365E81BCD3E33B41A *>((ValidPoseChangeHandler_t1D487A0B0E2FB0D02C72EF5365E81BCD3E33B41A **)L_5, L_6, L_7);
		V_0 = L_8;
		ValidPoseChangeHandler_t1D487A0B0E2FB0D02C72EF5365E81BCD3E33B41A * L_9 = V_0;
		ValidPoseChangeHandler_t1D487A0B0E2FB0D02C72EF5365E81BCD3E33B41A * L_10 = V_1;
		if ((!(((RuntimeObject*)(ValidPoseChangeHandler_t1D487A0B0E2FB0D02C72EF5365E81BCD3E33B41A *)L_9) == ((RuntimeObject*)(ValidPoseChangeHandler_t1D487A0B0E2FB0D02C72EF5365E81BCD3E33B41A *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Pose_Source::add_onDeviceConnectedChanged(Valve.VR.SteamVR_Action_Pose/DeviceConnectedChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_add_onDeviceConnectedChanged_m26FF6E86E0FC25279D9DF124C3A00DA48AA22C6C (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_Source_add_onDeviceConnectedChanged_m26FF6E86E0FC25279D9DF124C3A00DA48AA22C6C_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 * V_0 = NULL;
	DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 * V_1 = NULL;
	DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 * V_2 = NULL;
	{
		DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 * L_0 = __this->get_onDeviceConnectedChanged_19();
		V_0 = L_0;
	}

IL_0007:
	{
		DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 * L_1 = V_0;
		V_1 = L_1;
		DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 * L_2 = V_1;
		DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Combine_mC25D2F7DECAFBA6D9A2F9EBA8A77063F0658ECF1(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 *)CastclassSealed((RuntimeObject*)L_4, DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9_il2cpp_TypeInfo_var));
		DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 ** L_5 = __this->get_address_of_onDeviceConnectedChanged_19();
		DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 * L_6 = V_2;
		DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 * L_7 = V_1;
		DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 * L_8 = InterlockedCompareExchangeImpl<DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 *>((DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 **)L_5, L_6, L_7);
		V_0 = L_8;
		DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 * L_9 = V_0;
		DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 * L_10 = V_1;
		if ((!(((RuntimeObject*)(DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 *)L_9) == ((RuntimeObject*)(DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Pose_Source::remove_onDeviceConnectedChanged(Valve.VR.SteamVR_Action_Pose/DeviceConnectedChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_remove_onDeviceConnectedChanged_mC9B0E9333A8B27427E1197B77C6D287FD2C687F5 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_Source_remove_onDeviceConnectedChanged_mC9B0E9333A8B27427E1197B77C6D287FD2C687F5_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 * V_0 = NULL;
	DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 * V_1 = NULL;
	DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 * V_2 = NULL;
	{
		DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 * L_0 = __this->get_onDeviceConnectedChanged_19();
		V_0 = L_0;
	}

IL_0007:
	{
		DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 * L_1 = V_0;
		V_1 = L_1;
		DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 * L_2 = V_1;
		DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Remove_m0B0DB7D1B3AF96B71AFAA72BA0EFE32FBBC2932D(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 *)CastclassSealed((RuntimeObject*)L_4, DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9_il2cpp_TypeInfo_var));
		DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 ** L_5 = __this->get_address_of_onDeviceConnectedChanged_19();
		DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 * L_6 = V_2;
		DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 * L_7 = V_1;
		DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 * L_8 = InterlockedCompareExchangeImpl<DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 *>((DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 **)L_5, L_6, L_7);
		V_0 = L_8;
		DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 * L_9 = V_0;
		DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 * L_10 = V_1;
		if ((!(((RuntimeObject*)(DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 *)L_9) == ((RuntimeObject*)(DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Pose_Source::get_changed()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Pose_Source_get_changed_mFCF87002A2B2E1DE8FD3B8687A1F3C47025D659A (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method)
{
	{
		// public override bool changed { get; protected set; }
		bool L_0 = __this->get_U3CchangedU3Ek__BackingField_20();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_Action_Pose_Source::set_changed(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_set_changed_m132A90461163C807339D42160EA7B4C4C9F7F32F (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, bool ___value0, const RuntimeMethod* method)
{
	{
		// public override bool changed { get; protected set; }
		bool L_0 = ___value0;
		__this->set_U3CchangedU3Ek__BackingField_20(L_0);
		return;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Pose_Source::get_lastChanged()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Pose_Source_get_lastChanged_mE743B36B6F87AFDECD01B521E22D7D1EBAE128A5 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method)
{
	{
		// public override bool lastChanged { get; protected set; }
		bool L_0 = __this->get_U3ClastChangedU3Ek__BackingField_21();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_Action_Pose_Source::set_lastChanged(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_set_lastChanged_m4DF551EBC7F221B6BD8A34189A52541E52EFCBB0 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, bool ___value0, const RuntimeMethod* method)
{
	{
		// public override bool lastChanged { get; protected set; }
		bool L_0 = ___value0;
		__this->set_U3ClastChangedU3Ek__BackingField_21(L_0);
		return;
	}
}
// System.UInt64 Valve.VR.SteamVR_Action_Pose_Source::get_activeOrigin()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR uint64_t SteamVR_Action_Pose_Source_get_activeOrigin_m36BE95D2DCA1FEED748EDE9C403621609231CFDF (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method)
{
	bool V_0 = false;
	uint64_t V_1 = 0;
	{
		// if (active)
		bool L_0 = VirtFuncInvoker0< bool >::Invoke(12 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_active() */, __this);
		V_0 = L_0;
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0019;
		}
	}
	{
		// return poseActionData.activeOrigin;
		InputPoseActionData_t_tC282FD2CB85805431D2F23AF9C032BAD99683111 * L_2 = __this->get_address_of_poseActionData_31();
		uint64_t L_3 = L_2->get_activeOrigin_1();
		V_1 = L_3;
		goto IL_001e;
	}

IL_0019:
	{
		// return 0;
		V_1 = (((int64_t)((int64_t)0)));
		goto IL_001e;
	}

IL_001e:
	{
		// }
		uint64_t L_4 = V_1;
		return L_4;
	}
}
// System.UInt64 Valve.VR.SteamVR_Action_Pose_Source::get_lastActiveOrigin()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR uint64_t SteamVR_Action_Pose_Source_get_lastActiveOrigin_mE6B336774154C1E814BD9B51510B5FC866F5C860 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method)
{
	uint64_t V_0 = 0;
	{
		// public override ulong lastActiveOrigin { get { return lastPoseActionData.activeOrigin; } }
		InputPoseActionData_t_tC282FD2CB85805431D2F23AF9C032BAD99683111 * L_0 = __this->get_address_of_lastPoseActionData_32();
		uint64_t L_1 = L_0->get_activeOrigin_1();
		V_0 = L_1;
		goto IL_000f;
	}

IL_000f:
	{
		// public override ulong lastActiveOrigin { get { return lastPoseActionData.activeOrigin; } }
		uint64_t L_2 = V_0;
		return L_2;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Pose_Source::get_active()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Pose_Source_get_active_m3178F0469EB90D8B5A59A8C6EF08ACE4D4E33235 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method)
{
	bool V_0 = false;
	int32_t G_B3_0 = 0;
	{
		// public override bool active { get { return activeBinding && action.actionSet.IsActive(inputSource); } }
		bool L_0 = VirtFuncInvoker0< bool >::Invoke(13 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_activeBinding() */, __this);
		if (!L_0)
		{
			goto IL_0021;
		}
	}
	{
		SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * L_1 = ((SteamVR_Action_Source_t9D7428CDE39924074518EE6233D9A4FAB0C33CB0 *)__this)->get_action_2();
		NullCheck(L_1);
		SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * L_2 = VirtFuncInvoker0< SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * >::Invoke(19 /* Valve.VR.SteamVR_ActionSet Valve.VR.SteamVR_Action::get_actionSet() */, L_1);
		int32_t L_3 = SteamVR_Action_Source_get_inputSource_mAA1928183BB06E5C8CF950F65BA80635C25535D4_inline(__this, /*hidden argument*/NULL);
		NullCheck(L_2);
		bool L_4 = SteamVR_ActionSet_IsActive_m2C7FE33DC70E0D8C3D7E06F024C3409A116CE127(L_2, L_3, /*hidden argument*/NULL);
		G_B3_0 = ((int32_t)(L_4));
		goto IL_0022;
	}

IL_0021:
	{
		G_B3_0 = 0;
	}

IL_0022:
	{
		V_0 = (bool)G_B3_0;
		goto IL_0025;
	}

IL_0025:
	{
		// public override bool active { get { return activeBinding && action.actionSet.IsActive(inputSource); } }
		bool L_5 = V_0;
		return L_5;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Pose_Source::get_activeBinding()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Pose_Source_get_activeBinding_mE43C9474A498C11C72557A4FB6FFDD2A1E693B0B (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method)
{
	bool V_0 = false;
	{
		// public override bool activeBinding { get { return poseActionData.bActive; } }
		InputPoseActionData_t_tC282FD2CB85805431D2F23AF9C032BAD99683111 * L_0 = __this->get_address_of_poseActionData_31();
		bool L_1 = L_0->get_bActive_0();
		V_0 = L_1;
		goto IL_000f;
	}

IL_000f:
	{
		// public override bool activeBinding { get { return poseActionData.bActive; } }
		bool L_2 = V_0;
		return L_2;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Pose_Source::get_lastActive()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Pose_Source_get_lastActive_mCAD2D898632A2F625F1FE82F3227EDC75F1E7AE8 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method)
{
	{
		// public override bool lastActive { get; protected set; }
		bool L_0 = __this->get_U3ClastActiveU3Ek__BackingField_22();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_Action_Pose_Source::set_lastActive(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_set_lastActive_m2C8AF3A2315CEB2B0A6E0F52DD188E4C21487542 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, bool ___value0, const RuntimeMethod* method)
{
	{
		// public override bool lastActive { get; protected set; }
		bool L_0 = ___value0;
		__this->set_U3ClastActiveU3Ek__BackingField_22(L_0);
		return;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Pose_Source::get_lastActiveBinding()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Pose_Source_get_lastActiveBinding_m872178D6DA7352D943A9F6CF2555E2EFD41255F7 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method)
{
	bool V_0 = false;
	{
		// public override bool lastActiveBinding { get { return lastPoseActionData.bActive; } }
		InputPoseActionData_t_tC282FD2CB85805431D2F23AF9C032BAD99683111 * L_0 = __this->get_address_of_lastPoseActionData_32();
		bool L_1 = L_0->get_bActive_0();
		V_0 = L_1;
		goto IL_000f;
	}

IL_000f:
	{
		// public override bool lastActiveBinding { get { return lastPoseActionData.bActive; } }
		bool L_2 = V_0;
		return L_2;
	}
}
// Valve.VR.ETrackingResult Valve.VR.SteamVR_Action_Pose_Source::get_trackingState()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t SteamVR_Action_Pose_Source_get_trackingState_m702AC7130C7E0CD7EE794221240B44EAC08BAB7D (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method)
{
	int32_t V_0 = 0;
	{
		// public ETrackingResult trackingState { get { return poseActionData.pose.eTrackingResult; } }
		InputPoseActionData_t_tC282FD2CB85805431D2F23AF9C032BAD99683111 * L_0 = __this->get_address_of_poseActionData_31();
		TrackedDevicePose_t_t42B7DC644F0F2CC1B416722EE2D63CB077F24383 * L_1 = L_0->get_address_of_pose_2();
		int32_t L_2 = L_1->get_eTrackingResult_3();
		V_0 = L_2;
		goto IL_0014;
	}

IL_0014:
	{
		// public ETrackingResult trackingState { get { return poseActionData.pose.eTrackingResult; } }
		int32_t L_3 = V_0;
		return L_3;
	}
}
// Valve.VR.ETrackingResult Valve.VR.SteamVR_Action_Pose_Source::get_lastTrackingState()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t SteamVR_Action_Pose_Source_get_lastTrackingState_m38B8C3D8A8462CE12EFD78811EBBD8CCEB52FAF8 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method)
{
	int32_t V_0 = 0;
	{
		// public ETrackingResult lastTrackingState { get { return lastPoseActionData.pose.eTrackingResult; } }
		InputPoseActionData_t_tC282FD2CB85805431D2F23AF9C032BAD99683111 * L_0 = __this->get_address_of_lastPoseActionData_32();
		TrackedDevicePose_t_t42B7DC644F0F2CC1B416722EE2D63CB077F24383 * L_1 = L_0->get_address_of_pose_2();
		int32_t L_2 = L_1->get_eTrackingResult_3();
		V_0 = L_2;
		goto IL_0014;
	}

IL_0014:
	{
		// public ETrackingResult lastTrackingState { get { return lastPoseActionData.pose.eTrackingResult; } }
		int32_t L_3 = V_0;
		return L_3;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Pose_Source::get_poseIsValid()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Pose_Source_get_poseIsValid_m637DE37434CBBEC04B359C9FF89AF0681DA67457 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method)
{
	bool V_0 = false;
	{
		// public bool poseIsValid { get { return poseActionData.pose.bPoseIsValid; } }
		InputPoseActionData_t_tC282FD2CB85805431D2F23AF9C032BAD99683111 * L_0 = __this->get_address_of_poseActionData_31();
		TrackedDevicePose_t_t42B7DC644F0F2CC1B416722EE2D63CB077F24383 * L_1 = L_0->get_address_of_pose_2();
		bool L_2 = L_1->get_bPoseIsValid_4();
		V_0 = L_2;
		goto IL_0014;
	}

IL_0014:
	{
		// public bool poseIsValid { get { return poseActionData.pose.bPoseIsValid; } }
		bool L_3 = V_0;
		return L_3;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Pose_Source::get_lastPoseIsValid()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Pose_Source_get_lastPoseIsValid_m7CC61D5F85FD1334CFC6F917EECDA224FA903D0E (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method)
{
	bool V_0 = false;
	{
		// public bool lastPoseIsValid { get { return lastPoseActionData.pose.bPoseIsValid; } }
		InputPoseActionData_t_tC282FD2CB85805431D2F23AF9C032BAD99683111 * L_0 = __this->get_address_of_lastPoseActionData_32();
		TrackedDevicePose_t_t42B7DC644F0F2CC1B416722EE2D63CB077F24383 * L_1 = L_0->get_address_of_pose_2();
		bool L_2 = L_1->get_bPoseIsValid_4();
		V_0 = L_2;
		goto IL_0014;
	}

IL_0014:
	{
		// public bool lastPoseIsValid { get { return lastPoseActionData.pose.bPoseIsValid; } }
		bool L_3 = V_0;
		return L_3;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Pose_Source::get_deviceIsConnected()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Pose_Source_get_deviceIsConnected_m631372A24F57796D298E27F7E8BB93BFA31143EB (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method)
{
	bool V_0 = false;
	{
		// public bool deviceIsConnected { get { return poseActionData.pose.bDeviceIsConnected; } }
		InputPoseActionData_t_tC282FD2CB85805431D2F23AF9C032BAD99683111 * L_0 = __this->get_address_of_poseActionData_31();
		TrackedDevicePose_t_t42B7DC644F0F2CC1B416722EE2D63CB077F24383 * L_1 = L_0->get_address_of_pose_2();
		bool L_2 = L_1->get_bDeviceIsConnected_5();
		V_0 = L_2;
		goto IL_0014;
	}

IL_0014:
	{
		// public bool deviceIsConnected { get { return poseActionData.pose.bDeviceIsConnected; } }
		bool L_3 = V_0;
		return L_3;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Pose_Source::get_lastDeviceIsConnected()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Pose_Source_get_lastDeviceIsConnected_m54D89CD952536E4C6CC1B31D732F097A78FC6D83 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method)
{
	bool V_0 = false;
	{
		// public bool lastDeviceIsConnected { get { return lastPoseActionData.pose.bDeviceIsConnected; } }
		InputPoseActionData_t_tC282FD2CB85805431D2F23AF9C032BAD99683111 * L_0 = __this->get_address_of_lastPoseActionData_32();
		TrackedDevicePose_t_t42B7DC644F0F2CC1B416722EE2D63CB077F24383 * L_1 = L_0->get_address_of_pose_2();
		bool L_2 = L_1->get_bDeviceIsConnected_5();
		V_0 = L_2;
		goto IL_0014;
	}

IL_0014:
	{
		// public bool lastDeviceIsConnected { get { return lastPoseActionData.pose.bDeviceIsConnected; } }
		bool L_3 = V_0;
		return L_3;
	}
}
// UnityEngine.Vector3 Valve.VR.SteamVR_Action_Pose_Source::get_localPosition()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SteamVR_Action_Pose_Source_get_localPosition_mE065A826D8D1A8CF44D9E7F0D038F24D70985833 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method)
{
	{
		// public Vector3 localPosition { get; protected set; }
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = __this->get_U3ClocalPositionU3Ek__BackingField_23();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_Action_Pose_Source::set_localPosition(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_set_localPosition_m38C19E63D633A91EA065A955E770CDC43C4174C0 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method)
{
	{
		// public Vector3 localPosition { get; protected set; }
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = ___value0;
		__this->set_U3ClocalPositionU3Ek__BackingField_23(L_0);
		return;
	}
}
// UnityEngine.Quaternion Valve.VR.SteamVR_Action_Pose_Source::get_localRotation()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  SteamVR_Action_Pose_Source_get_localRotation_m307D9DD92DFFFCC30446A71D9BD15674A797ED2A (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method)
{
	{
		// public Quaternion localRotation { get; protected set; }
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_0 = __this->get_U3ClocalRotationU3Ek__BackingField_24();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_Action_Pose_Source::set_localRotation(UnityEngine.Quaternion)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_set_localRotation_mC3D82C5E3624F6FC6B4A5CAD6766C69240FC9A37 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___value0, const RuntimeMethod* method)
{
	{
		// public Quaternion localRotation { get; protected set; }
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_0 = ___value0;
		__this->set_U3ClocalRotationU3Ek__BackingField_24(L_0);
		return;
	}
}
// UnityEngine.Vector3 Valve.VR.SteamVR_Action_Pose_Source::get_lastLocalPosition()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SteamVR_Action_Pose_Source_get_lastLocalPosition_mB748F9D4600498E9BACCEBE5C8F00DED8125C307 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method)
{
	{
		// public Vector3 lastLocalPosition { get; protected set; }
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = __this->get_U3ClastLocalPositionU3Ek__BackingField_25();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_Action_Pose_Source::set_lastLocalPosition(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_set_lastLocalPosition_m6D0A990E6188F82AC2C5C7BECC5A44EB21F1579D (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method)
{
	{
		// public Vector3 lastLocalPosition { get; protected set; }
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = ___value0;
		__this->set_U3ClastLocalPositionU3Ek__BackingField_25(L_0);
		return;
	}
}
// UnityEngine.Quaternion Valve.VR.SteamVR_Action_Pose_Source::get_lastLocalRotation()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  SteamVR_Action_Pose_Source_get_lastLocalRotation_m15622BCE4A3D32548EBFE7DC98F8751352617660 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method)
{
	{
		// public Quaternion lastLocalRotation { get; protected set; }
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_0 = __this->get_U3ClastLocalRotationU3Ek__BackingField_26();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_Action_Pose_Source::set_lastLocalRotation(UnityEngine.Quaternion)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_set_lastLocalRotation_mCF887D640B4BF0BBD7D83276C11C921A2CE5F649 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___value0, const RuntimeMethod* method)
{
	{
		// public Quaternion lastLocalRotation { get; protected set; }
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_0 = ___value0;
		__this->set_U3ClastLocalRotationU3Ek__BackingField_26(L_0);
		return;
	}
}
// UnityEngine.Vector3 Valve.VR.SteamVR_Action_Pose_Source::get_velocity()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SteamVR_Action_Pose_Source_get_velocity_m2B71BB7981006080D113442CB374529602A310BF (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method)
{
	{
		// public Vector3 velocity { get; protected set; }
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = __this->get_U3CvelocityU3Ek__BackingField_27();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_Action_Pose_Source::set_velocity(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_set_velocity_m0392A856C5BA77F53831D681C32FC65E8255B168 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method)
{
	{
		// public Vector3 velocity { get; protected set; }
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = ___value0;
		__this->set_U3CvelocityU3Ek__BackingField_27(L_0);
		return;
	}
}
// UnityEngine.Vector3 Valve.VR.SteamVR_Action_Pose_Source::get_lastVelocity()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SteamVR_Action_Pose_Source_get_lastVelocity_mB9FD7955140F713C63842433E1E50D498EAD0A21 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method)
{
	{
		// public Vector3 lastVelocity { get; protected set; }
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = __this->get_U3ClastVelocityU3Ek__BackingField_28();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_Action_Pose_Source::set_lastVelocity(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_set_lastVelocity_m5DD5D60CAF5672AC910E26BA4131B6192521A874 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method)
{
	{
		// public Vector3 lastVelocity { get; protected set; }
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = ___value0;
		__this->set_U3ClastVelocityU3Ek__BackingField_28(L_0);
		return;
	}
}
// UnityEngine.Vector3 Valve.VR.SteamVR_Action_Pose_Source::get_angularVelocity()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SteamVR_Action_Pose_Source_get_angularVelocity_mACAA45CB05DB94C9292ED147F3156109DAFA0209 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method)
{
	{
		// public Vector3 angularVelocity { get; protected set; }
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = __this->get_U3CangularVelocityU3Ek__BackingField_29();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_Action_Pose_Source::set_angularVelocity(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_set_angularVelocity_m78C04A085EB6CBA58F8B20629A341DA54B5F92B4 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method)
{
	{
		// public Vector3 angularVelocity { get; protected set; }
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = ___value0;
		__this->set_U3CangularVelocityU3Ek__BackingField_29(L_0);
		return;
	}
}
// UnityEngine.Vector3 Valve.VR.SteamVR_Action_Pose_Source::get_lastAngularVelocity()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SteamVR_Action_Pose_Source_get_lastAngularVelocity_m3EE729ECF16DA55CFE069E25EB9099A80667C55F (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method)
{
	{
		// public Vector3 lastAngularVelocity { get; protected set; }
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = __this->get_U3ClastAngularVelocityU3Ek__BackingField_30();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_Action_Pose_Source::set_lastAngularVelocity(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_set_lastAngularVelocity_m95C5214943FAA14AD6869D3E7154F5B107C99875 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method)
{
	{
		// public Vector3 lastAngularVelocity { get; protected set; }
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = ___value0;
		__this->set_U3ClastAngularVelocityU3Ek__BackingField_30(L_0);
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Pose_Source::Preinitialize(Valve.VR.SteamVR_Action,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_Preinitialize_mF8A86BF078F169380E7A1C75DA6C20B49380AE9B (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * ___wrappingAction0, int32_t ___forInputSource1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_Source_Preinitialize_mF8A86BF078F169380E7A1C75DA6C20B49380AE9B_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// base.Preinitialize(wrappingAction, forInputSource);
		SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * L_0 = ___wrappingAction0;
		int32_t L_1 = ___forInputSource1;
		SteamVR_Action_Source_Preinitialize_mC135AE740FECE5EA34FF516A739C0F58420521F9(__this, L_0, L_1, /*hidden argument*/NULL);
		// poseAction = wrappingAction as SteamVR_Action_Pose;
		SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * L_2 = ___wrappingAction0;
		__this->set_poseAction_34(((SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C *)IsInstClass((RuntimeObject*)L_2, SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C_il2cpp_TypeInfo_var)));
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Pose_Source::Initialize()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_Initialize_m36604AB0F3E49250F5761A885B005CB8CEE2DBD1 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_Source_Initialize_m36604AB0F3E49250F5761A885B005CB8CEE2DBD1_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	{
		// base.Initialize();
		SteamVR_Action_In_Source_Initialize_m40F600EDA6712166E32A98C5905420F6F2DC2001(__this, /*hidden argument*/NULL);
		// if (poseActionData_size == 0)
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27_il2cpp_TypeInfo_var);
		uint32_t L_0 = ((SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27_il2cpp_TypeInfo_var))->get_poseActionData_size_11();
		V_0 = (bool)((((int32_t)L_0) == ((int32_t)0))? 1 : 0);
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0028;
		}
	}
	{
		// poseActionData_size = (uint)Marshal.SizeOf(typeof(InputPoseActionData_t));
		RuntimeTypeHandle_t7B542280A22F0EC4EAC2061C29178845847A8B2D  L_2 = { reinterpret_cast<intptr_t> (InputPoseActionData_t_tC282FD2CB85805431D2F23AF9C032BAD99683111_0_0_0_var) };
		IL2CPP_RUNTIME_CLASS_INIT(Type_t_il2cpp_TypeInfo_var);
		Type_t * L_3 = Type_GetTypeFromHandle_m9DC58ADF0512987012A8A016FB64B068F3B1AFF6(L_2, /*hidden argument*/NULL);
		IL2CPP_RUNTIME_CLASS_INIT(Marshal_tC795CE9CC2FFBA41EDB1AC1C0FEC04607DFA8A40_il2cpp_TypeInfo_var);
		int32_t L_4 = Marshal_SizeOf_m4F7DA827FA7A720395E6FDD2ABE78D4B00D43130(L_3, /*hidden argument*/NULL);
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27_il2cpp_TypeInfo_var);
		((SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27_il2cpp_TypeInfo_var))->set_poseActionData_size_11(L_4);
	}

IL_0028:
	{
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Pose_Source::RemoveAllListeners()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_RemoveAllListeners_m07850B9C3B46C5E52AA8D2FF80B15C09E7901B9C (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_Source_RemoveAllListeners_m07850B9C3B46C5E52AA8D2FF80B15C09E7901B9C_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* V_0 = NULL;
	bool V_1 = false;
	bool V_2 = false;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* V_3 = NULL;
	int32_t V_4 = 0;
	Delegate_t * V_5 = NULL;
	bool V_6 = false;
	bool V_7 = false;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* V_8 = NULL;
	int32_t V_9 = 0;
	Delegate_t * V_10 = NULL;
	bool V_11 = false;
	bool V_12 = false;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* V_13 = NULL;
	int32_t V_14 = 0;
	Delegate_t * V_15 = NULL;
	bool V_16 = false;
	bool V_17 = false;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* V_18 = NULL;
	int32_t V_19 = 0;
	Delegate_t * V_20 = NULL;
	bool V_21 = false;
	bool V_22 = false;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* V_23 = NULL;
	int32_t V_24 = 0;
	Delegate_t * V_25 = NULL;
	bool V_26 = false;
	bool V_27 = false;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* V_28 = NULL;
	int32_t V_29 = 0;
	Delegate_t * V_30 = NULL;
	{
		// if (onActiveChange != null)
		ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * L_0 = __this->get_onActiveChange_13();
		V_1 = (bool)((!(((RuntimeObject*)(ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E *)L_0) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		bool L_1 = V_1;
		if (!L_1)
		{
			goto IL_004d;
		}
	}
	{
		// delegates = onActiveChange.GetInvocationList();
		ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * L_2 = __this->get_onActiveChange_13();
		NullCheck(L_2);
		DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* L_3 = VirtFuncInvoker0< DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* >::Invoke(9 /* System.Delegate[] System.Delegate::GetInvocationList() */, L_2);
		V_0 = L_3;
		// if (delegates != null)
		DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* L_4 = V_0;
		V_2 = (bool)((!(((RuntimeObject*)(DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86*)L_4) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		bool L_5 = V_2;
		if (!L_5)
		{
			goto IL_004c;
		}
	}
	{
		// foreach (Delegate existingDelegate in delegates)
		DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* L_6 = V_0;
		V_3 = L_6;
		V_4 = 0;
		goto IL_0045;
	}

IL_002b:
	{
		// foreach (Delegate existingDelegate in delegates)
		DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* L_7 = V_3;
		int32_t L_8 = V_4;
		NullCheck(L_7);
		int32_t L_9 = L_8;
		Delegate_t * L_10 = (L_7)->GetAt(static_cast<il2cpp_array_size_t>(L_9));
		V_5 = L_10;
		// onActiveChange -= (SteamVR_Action_Pose.ActiveChangeHandler)existingDelegate;
		Delegate_t * L_11 = V_5;
		SteamVR_Action_Pose_Source_remove_onActiveChange_m8F91AE91CFF61C2B5D4B496A28827C3A416169B4(__this, ((ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E *)CastclassSealed((RuntimeObject*)L_11, ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E_il2cpp_TypeInfo_var)), /*hidden argument*/NULL);
		int32_t L_12 = V_4;
		V_4 = ((int32_t)il2cpp_codegen_add((int32_t)L_12, (int32_t)1));
	}

IL_0045:
	{
		// foreach (Delegate existingDelegate in delegates)
		int32_t L_13 = V_4;
		DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* L_14 = V_3;
		NullCheck(L_14);
		if ((((int32_t)L_13) < ((int32_t)(((int32_t)((int32_t)(((RuntimeArray*)L_14)->max_length)))))))
		{
			goto IL_002b;
		}
	}

IL_004c:
	{
	}

IL_004d:
	{
		// if (onChange != null)
		ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE * L_15 = __this->get_onChange_15();
		V_6 = (bool)((!(((RuntimeObject*)(ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE *)L_15) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		bool L_16 = V_6;
		if (!L_16)
		{
			goto IL_00a0;
		}
	}
	{
		// delegates = onChange.GetInvocationList();
		ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE * L_17 = __this->get_onChange_15();
		NullCheck(L_17);
		DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* L_18 = VirtFuncInvoker0< DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* >::Invoke(9 /* System.Delegate[] System.Delegate::GetInvocationList() */, L_17);
		V_0 = L_18;
		// if (delegates != null)
		DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* L_19 = V_0;
		V_7 = (bool)((!(((RuntimeObject*)(DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86*)L_19) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		bool L_20 = V_7;
		if (!L_20)
		{
			goto IL_009f;
		}
	}
	{
		// foreach (Delegate existingDelegate in delegates)
		DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* L_21 = V_0;
		V_8 = L_21;
		V_9 = 0;
		goto IL_0097;
	}

IL_007c:
	{
		// foreach (Delegate existingDelegate in delegates)
		DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* L_22 = V_8;
		int32_t L_23 = V_9;
		NullCheck(L_22);
		int32_t L_24 = L_23;
		Delegate_t * L_25 = (L_22)->GetAt(static_cast<il2cpp_array_size_t>(L_24));
		V_10 = L_25;
		// onChange -= (SteamVR_Action_Pose.ChangeHandler)existingDelegate;
		Delegate_t * L_26 = V_10;
		SteamVR_Action_Pose_Source_remove_onChange_mB962374F5363148A48D573F22C5E1B385411E27F(__this, ((ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE *)CastclassSealed((RuntimeObject*)L_26, ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE_il2cpp_TypeInfo_var)), /*hidden argument*/NULL);
		int32_t L_27 = V_9;
		V_9 = ((int32_t)il2cpp_codegen_add((int32_t)L_27, (int32_t)1));
	}

IL_0097:
	{
		// foreach (Delegate existingDelegate in delegates)
		int32_t L_28 = V_9;
		DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* L_29 = V_8;
		NullCheck(L_29);
		if ((((int32_t)L_28) < ((int32_t)(((int32_t)((int32_t)(((RuntimeArray*)L_29)->max_length)))))))
		{
			goto IL_007c;
		}
	}

IL_009f:
	{
	}

IL_00a0:
	{
		// if (onUpdate != null)
		UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 * L_30 = __this->get_onUpdate_16();
		V_11 = (bool)((!(((RuntimeObject*)(UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 *)L_30) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		bool L_31 = V_11;
		if (!L_31)
		{
			goto IL_00f3;
		}
	}
	{
		// delegates = onUpdate.GetInvocationList();
		UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 * L_32 = __this->get_onUpdate_16();
		NullCheck(L_32);
		DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* L_33 = VirtFuncInvoker0< DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* >::Invoke(9 /* System.Delegate[] System.Delegate::GetInvocationList() */, L_32);
		V_0 = L_33;
		// if (delegates != null)
		DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* L_34 = V_0;
		V_12 = (bool)((!(((RuntimeObject*)(DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86*)L_34) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		bool L_35 = V_12;
		if (!L_35)
		{
			goto IL_00f2;
		}
	}
	{
		// foreach (Delegate existingDelegate in delegates)
		DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* L_36 = V_0;
		V_13 = L_36;
		V_14 = 0;
		goto IL_00ea;
	}

IL_00cf:
	{
		// foreach (Delegate existingDelegate in delegates)
		DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* L_37 = V_13;
		int32_t L_38 = V_14;
		NullCheck(L_37);
		int32_t L_39 = L_38;
		Delegate_t * L_40 = (L_37)->GetAt(static_cast<il2cpp_array_size_t>(L_39));
		V_15 = L_40;
		// onUpdate -= (SteamVR_Action_Pose.UpdateHandler)existingDelegate;
		Delegate_t * L_41 = V_15;
		SteamVR_Action_Pose_Source_remove_onUpdate_m600E90F3012E310B2178CB34B8E3C3A35380A579(__this, ((UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 *)CastclassSealed((RuntimeObject*)L_41, UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1_il2cpp_TypeInfo_var)), /*hidden argument*/NULL);
		int32_t L_42 = V_14;
		V_14 = ((int32_t)il2cpp_codegen_add((int32_t)L_42, (int32_t)1));
	}

IL_00ea:
	{
		// foreach (Delegate existingDelegate in delegates)
		int32_t L_43 = V_14;
		DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* L_44 = V_13;
		NullCheck(L_44);
		if ((((int32_t)L_43) < ((int32_t)(((int32_t)((int32_t)(((RuntimeArray*)L_44)->max_length)))))))
		{
			goto IL_00cf;
		}
	}

IL_00f2:
	{
	}

IL_00f3:
	{
		// if (onTrackingChanged != null)
		TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 * L_45 = __this->get_onTrackingChanged_17();
		V_16 = (bool)((!(((RuntimeObject*)(TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 *)L_45) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		bool L_46 = V_16;
		if (!L_46)
		{
			goto IL_0146;
		}
	}
	{
		// delegates = onTrackingChanged.GetInvocationList();
		TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 * L_47 = __this->get_onTrackingChanged_17();
		NullCheck(L_47);
		DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* L_48 = VirtFuncInvoker0< DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* >::Invoke(9 /* System.Delegate[] System.Delegate::GetInvocationList() */, L_47);
		V_0 = L_48;
		// if (delegates != null)
		DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* L_49 = V_0;
		V_17 = (bool)((!(((RuntimeObject*)(DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86*)L_49) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		bool L_50 = V_17;
		if (!L_50)
		{
			goto IL_0145;
		}
	}
	{
		// foreach (Delegate existingDelegate in delegates)
		DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* L_51 = V_0;
		V_18 = L_51;
		V_19 = 0;
		goto IL_013d;
	}

IL_0122:
	{
		// foreach (Delegate existingDelegate in delegates)
		DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* L_52 = V_18;
		int32_t L_53 = V_19;
		NullCheck(L_52);
		int32_t L_54 = L_53;
		Delegate_t * L_55 = (L_52)->GetAt(static_cast<il2cpp_array_size_t>(L_54));
		V_20 = L_55;
		// onTrackingChanged -= (SteamVR_Action_Pose.TrackingChangeHandler)existingDelegate;
		Delegate_t * L_56 = V_20;
		SteamVR_Action_Pose_Source_remove_onTrackingChanged_m664E1FD884A6B739CF4BCAD82EE1168E234B0AAF(__this, ((TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 *)CastclassSealed((RuntimeObject*)L_56, TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914_il2cpp_TypeInfo_var)), /*hidden argument*/NULL);
		int32_t L_57 = V_19;
		V_19 = ((int32_t)il2cpp_codegen_add((int32_t)L_57, (int32_t)1));
	}

IL_013d:
	{
		// foreach (Delegate existingDelegate in delegates)
		int32_t L_58 = V_19;
		DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* L_59 = V_18;
		NullCheck(L_59);
		if ((((int32_t)L_58) < ((int32_t)(((int32_t)((int32_t)(((RuntimeArray*)L_59)->max_length)))))))
		{
			goto IL_0122;
		}
	}

IL_0145:
	{
	}

IL_0146:
	{
		// if (onValidPoseChanged != null)
		ValidPoseChangeHandler_t1D487A0B0E2FB0D02C72EF5365E81BCD3E33B41A * L_60 = __this->get_onValidPoseChanged_18();
		V_21 = (bool)((!(((RuntimeObject*)(ValidPoseChangeHandler_t1D487A0B0E2FB0D02C72EF5365E81BCD3E33B41A *)L_60) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		bool L_61 = V_21;
		if (!L_61)
		{
			goto IL_0199;
		}
	}
	{
		// delegates = onValidPoseChanged.GetInvocationList();
		ValidPoseChangeHandler_t1D487A0B0E2FB0D02C72EF5365E81BCD3E33B41A * L_62 = __this->get_onValidPoseChanged_18();
		NullCheck(L_62);
		DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* L_63 = VirtFuncInvoker0< DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* >::Invoke(9 /* System.Delegate[] System.Delegate::GetInvocationList() */, L_62);
		V_0 = L_63;
		// if (delegates != null)
		DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* L_64 = V_0;
		V_22 = (bool)((!(((RuntimeObject*)(DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86*)L_64) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		bool L_65 = V_22;
		if (!L_65)
		{
			goto IL_0198;
		}
	}
	{
		// foreach (Delegate existingDelegate in delegates)
		DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* L_66 = V_0;
		V_23 = L_66;
		V_24 = 0;
		goto IL_0190;
	}

IL_0175:
	{
		// foreach (Delegate existingDelegate in delegates)
		DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* L_67 = V_23;
		int32_t L_68 = V_24;
		NullCheck(L_67);
		int32_t L_69 = L_68;
		Delegate_t * L_70 = (L_67)->GetAt(static_cast<il2cpp_array_size_t>(L_69));
		V_25 = L_70;
		// onValidPoseChanged -= (SteamVR_Action_Pose.ValidPoseChangeHandler)existingDelegate;
		Delegate_t * L_71 = V_25;
		SteamVR_Action_Pose_Source_remove_onValidPoseChanged_mD755CC0727CEA9CCE5BC937BA6D2B2458E47EA62(__this, ((ValidPoseChangeHandler_t1D487A0B0E2FB0D02C72EF5365E81BCD3E33B41A *)CastclassSealed((RuntimeObject*)L_71, ValidPoseChangeHandler_t1D487A0B0E2FB0D02C72EF5365E81BCD3E33B41A_il2cpp_TypeInfo_var)), /*hidden argument*/NULL);
		int32_t L_72 = V_24;
		V_24 = ((int32_t)il2cpp_codegen_add((int32_t)L_72, (int32_t)1));
	}

IL_0190:
	{
		// foreach (Delegate existingDelegate in delegates)
		int32_t L_73 = V_24;
		DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* L_74 = V_23;
		NullCheck(L_74);
		if ((((int32_t)L_73) < ((int32_t)(((int32_t)((int32_t)(((RuntimeArray*)L_74)->max_length)))))))
		{
			goto IL_0175;
		}
	}

IL_0198:
	{
	}

IL_0199:
	{
		// if (onDeviceConnectedChanged != null)
		DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 * L_75 = __this->get_onDeviceConnectedChanged_19();
		V_26 = (bool)((!(((RuntimeObject*)(DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 *)L_75) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		bool L_76 = V_26;
		if (!L_76)
		{
			goto IL_01ec;
		}
	}
	{
		// delegates = onDeviceConnectedChanged.GetInvocationList();
		DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 * L_77 = __this->get_onDeviceConnectedChanged_19();
		NullCheck(L_77);
		DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* L_78 = VirtFuncInvoker0< DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* >::Invoke(9 /* System.Delegate[] System.Delegate::GetInvocationList() */, L_77);
		V_0 = L_78;
		// if (delegates != null)
		DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* L_79 = V_0;
		V_27 = (bool)((!(((RuntimeObject*)(DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86*)L_79) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		bool L_80 = V_27;
		if (!L_80)
		{
			goto IL_01eb;
		}
	}
	{
		// foreach (Delegate existingDelegate in delegates)
		DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* L_81 = V_0;
		V_28 = L_81;
		V_29 = 0;
		goto IL_01e3;
	}

IL_01c8:
	{
		// foreach (Delegate existingDelegate in delegates)
		DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* L_82 = V_28;
		int32_t L_83 = V_29;
		NullCheck(L_82);
		int32_t L_84 = L_83;
		Delegate_t * L_85 = (L_82)->GetAt(static_cast<il2cpp_array_size_t>(L_84));
		V_30 = L_85;
		// onDeviceConnectedChanged -= (SteamVR_Action_Pose.DeviceConnectedChangeHandler)existingDelegate;
		Delegate_t * L_86 = V_30;
		SteamVR_Action_Pose_Source_remove_onDeviceConnectedChanged_mC9B0E9333A8B27427E1197B77C6D287FD2C687F5(__this, ((DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 *)CastclassSealed((RuntimeObject*)L_86, DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9_il2cpp_TypeInfo_var)), /*hidden argument*/NULL);
		int32_t L_87 = V_29;
		V_29 = ((int32_t)il2cpp_codegen_add((int32_t)L_87, (int32_t)1));
	}

IL_01e3:
	{
		// foreach (Delegate existingDelegate in delegates)
		int32_t L_88 = V_29;
		DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* L_89 = V_28;
		NullCheck(L_89);
		if ((((int32_t)L_88) < ((int32_t)(((int32_t)((int32_t)(((RuntimeArray*)L_89)->max_length)))))))
		{
			goto IL_01c8;
		}
	}

IL_01eb:
	{
	}

IL_01ec:
	{
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Pose_Source::UpdateValue()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_UpdateValue_m308B71B7F64F72D56604B342FC62D8DD0799369A (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method)
{
	{
		// UpdateValue(false);
		VirtActionInvoker1< bool >::Invoke(51 /* System.Void Valve.VR.SteamVR_Action_Pose_Source::UpdateValue(System.Boolean) */, __this, (bool)0);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Pose_Source::UpdateValue(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_UpdateValue_mC4B5455237B6CD71DD565F71267D8EB3AE3681F0 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, bool ___skipStateAndEventUpdates0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_Source_UpdateValue_mC4B5455237B6CD71DD565F71267D8EB3AE3681F0_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	bool V_1 = false;
	bool V_2 = false;
	uint64_t V_3 = 0;
	int32_t V_4 = 0;
	bool V_5 = false;
	bool V_6 = false;
	bool V_7 = false;
	{
		// lastChanged = changed;
		bool L_0 = VirtFuncInvoker0< bool >::Invoke(31 /* System.Boolean Valve.VR.SteamVR_Action_In_Source::get_changed() */, __this);
		VirtActionInvoker1< bool >::Invoke(34 /* System.Void Valve.VR.SteamVR_Action_In_Source::set_lastChanged(System.Boolean) */, __this, L_0);
		// lastPoseActionData = poseActionData;
		InputPoseActionData_t_tC282FD2CB85805431D2F23AF9C032BAD99683111  L_1 = __this->get_poseActionData_31();
		__this->set_lastPoseActionData_32(L_1);
		// lastLocalPosition = localPosition;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_2 = SteamVR_Action_Pose_Source_get_localPosition_mE065A826D8D1A8CF44D9E7F0D038F24D70985833_inline(__this, /*hidden argument*/NULL);
		SteamVR_Action_Pose_Source_set_lastLocalPosition_m6D0A990E6188F82AC2C5C7BECC5A44EB21F1579D_inline(__this, L_2, /*hidden argument*/NULL);
		// lastLocalRotation = localRotation;
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_3 = SteamVR_Action_Pose_Source_get_localRotation_m307D9DD92DFFFCC30446A71D9BD15674A797ED2A_inline(__this, /*hidden argument*/NULL);
		SteamVR_Action_Pose_Source_set_lastLocalRotation_mCF887D640B4BF0BBD7D83276C11C921A2CE5F649_inline(__this, L_3, /*hidden argument*/NULL);
		// lastVelocity = velocity;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_4 = SteamVR_Action_Pose_Source_get_velocity_m2B71BB7981006080D113442CB374529602A310BF_inline(__this, /*hidden argument*/NULL);
		SteamVR_Action_Pose_Source_set_lastVelocity_m5DD5D60CAF5672AC910E26BA4131B6192521A874_inline(__this, L_4, /*hidden argument*/NULL);
		// lastAngularVelocity = angularVelocity;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_5 = SteamVR_Action_Pose_Source_get_angularVelocity_mACAA45CB05DB94C9292ED147F3156109DAFA0209_inline(__this, /*hidden argument*/NULL);
		SteamVR_Action_Pose_Source_set_lastAngularVelocity_m95C5214943FAA14AD6869D3E7154F5B107C99875_inline(__this, L_5, /*hidden argument*/NULL);
		// if (framesAhead == 0)
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27_il2cpp_TypeInfo_var);
		float L_6 = ((SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27_il2cpp_TypeInfo_var))->get_framesAhead_35();
		V_1 = (bool)((((float)L_6) == ((float)(0.0f)))? 1 : 0);
		bool L_7 = V_1;
		if (!L_7)
		{
			goto IL_0088;
		}
	}
	{
		// err = OpenVR.Input.GetPoseActionDataForNextFrame(handle, universeOrigin, ref poseActionData, poseActionData_size, inputSourceHandle);
		IL2CPP_RUNTIME_CLASS_INIT(OpenVR_t89189C917B539750153B18DDDCB4F7D9C8EF004D_il2cpp_TypeInfo_var);
		CVRInput_t8458E224B9D7EFD4A5B102EAA06F8F365A25A53A * L_8 = OpenVR_get_Input_mF290A715AD07D4B7F8844AA79293934B7999CE04(/*hidden argument*/NULL);
		uint64_t L_9 = SteamVR_Action_Source_get_handle_m66E0A3E9E7D6434FB905BF0D25013927B0C12791(__this, /*hidden argument*/NULL);
		int32_t L_10 = __this->get_universeOrigin_10();
		InputPoseActionData_t_tC282FD2CB85805431D2F23AF9C032BAD99683111 * L_11 = __this->get_address_of_poseActionData_31();
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27_il2cpp_TypeInfo_var);
		uint32_t L_12 = ((SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27_il2cpp_TypeInfo_var))->get_poseActionData_size_11();
		uint64_t L_13 = ((SteamVR_Action_Source_t9D7428CDE39924074518EE6233D9A4FAB0C33CB0 *)__this)->get_inputSourceHandle_1();
		NullCheck(L_8);
		int32_t L_14 = CVRInput_GetPoseActionDataForNextFrame_m2EA9535E25E060B4C24DB4947ABC493F1B0D0152(L_8, L_9, L_10, (InputPoseActionData_t_tC282FD2CB85805431D2F23AF9C032BAD99683111 *)L_11, L_12, L_13, /*hidden argument*/NULL);
		V_0 = L_14;
		goto IL_00c6;
	}

IL_0088:
	{
		// err = OpenVR.Input.GetPoseActionDataRelativeToNow(handle, universeOrigin, framesAhead * (Time.timeScale / SteamVR.instance.hmd_DisplayFrequency), ref poseActionData, poseActionData_size, inputSourceHandle);
		IL2CPP_RUNTIME_CLASS_INIT(OpenVR_t89189C917B539750153B18DDDCB4F7D9C8EF004D_il2cpp_TypeInfo_var);
		CVRInput_t8458E224B9D7EFD4A5B102EAA06F8F365A25A53A * L_15 = OpenVR_get_Input_mF290A715AD07D4B7F8844AA79293934B7999CE04(/*hidden argument*/NULL);
		uint64_t L_16 = SteamVR_Action_Source_get_handle_m66E0A3E9E7D6434FB905BF0D25013927B0C12791(__this, /*hidden argument*/NULL);
		int32_t L_17 = __this->get_universeOrigin_10();
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27_il2cpp_TypeInfo_var);
		float L_18 = ((SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27_il2cpp_TypeInfo_var))->get_framesAhead_35();
		float L_19 = Time_get_timeScale_m7E198A5814859A08FD0FFE6DD5F7ED5C907719F8(/*hidden argument*/NULL);
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_tE14648C0E73A16927B96F72915B425561B0D057F_il2cpp_TypeInfo_var);
		SteamVR_tE14648C0E73A16927B96F72915B425561B0D057F * L_20 = SteamVR_get_instance_m051B21845BD2F1EACC9DAF67416E7B898EB8E248(/*hidden argument*/NULL);
		NullCheck(L_20);
		float L_21 = SteamVR_get_hmd_DisplayFrequency_m8D1D1E8EBC56DC3C9415D1212E4B446D9A899926(L_20, /*hidden argument*/NULL);
		InputPoseActionData_t_tC282FD2CB85805431D2F23AF9C032BAD99683111 * L_22 = __this->get_address_of_poseActionData_31();
		uint32_t L_23 = ((SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27_il2cpp_TypeInfo_var))->get_poseActionData_size_11();
		uint64_t L_24 = ((SteamVR_Action_Source_t9D7428CDE39924074518EE6233D9A4FAB0C33CB0 *)__this)->get_inputSourceHandle_1();
		NullCheck(L_15);
		int32_t L_25 = CVRInput_GetPoseActionDataRelativeToNow_mBAEDD17710ECA793901F7A42DB84C84B5C3D5841(L_15, L_16, L_17, ((float)il2cpp_codegen_multiply((float)L_18, (float)((float)((float)L_19/(float)L_21)))), (InputPoseActionData_t_tC282FD2CB85805431D2F23AF9C032BAD99683111 *)L_22, L_23, L_24, /*hidden argument*/NULL);
		V_0 = L_25;
	}

IL_00c6:
	{
		// if (err != EVRInputError.None)
		int32_t L_26 = V_0;
		V_2 = (bool)((!(((uint32_t)L_26) <= ((uint32_t)0)))? 1 : 0);
		bool L_27 = V_2;
		if (!L_27)
		{
			goto IL_0143;
		}
	}
	{
		// Debug.LogError("<b>[SteamVR]</b> GetPoseActionData error (" + fullPath + "): " + err.ToString() + " Handle: " + handle.ToString() + ". Input source: " + inputSource.ToString());
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_28 = (StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E*)(StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E*)SZArrayNew(StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E_il2cpp_TypeInfo_var, (uint32_t)8);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_29 = L_28;
		NullCheck(L_29);
		ArrayElementTypeCheck (L_29, _stringLiteralA581B1C5D87FE35AA6548BD80922C973CF753D73);
		(L_29)->SetAt(static_cast<il2cpp_array_size_t>(0), (String_t*)_stringLiteralA581B1C5D87FE35AA6548BD80922C973CF753D73);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_30 = L_29;
		String_t* L_31 = SteamVR_Action_Source_get_fullPath_m9D3700AC3EB06210A52EDA613F1523A48F0A1B81(__this, /*hidden argument*/NULL);
		NullCheck(L_30);
		ArrayElementTypeCheck (L_30, L_31);
		(L_30)->SetAt(static_cast<il2cpp_array_size_t>(1), (String_t*)L_31);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_32 = L_30;
		NullCheck(L_32);
		ArrayElementTypeCheck (L_32, _stringLiteralE6D56E05F32996CA7E5AE21BC90D49044C0BF356);
		(L_32)->SetAt(static_cast<il2cpp_array_size_t>(2), (String_t*)_stringLiteralE6D56E05F32996CA7E5AE21BC90D49044C0BF356);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_33 = L_32;
		RuntimeObject * L_34 = Box(EVRInputError_tE4C895A0D1F18C0024F5C180FF3962B056DA8A71_il2cpp_TypeInfo_var, (&V_0));
		NullCheck(L_34);
		String_t* L_35 = VirtFuncInvoker0< String_t* >::Invoke(3 /* System.String System.Object::ToString() */, L_34);
		V_0 = *(int32_t*)UnBox(L_34);
		NullCheck(L_33);
		ArrayElementTypeCheck (L_33, L_35);
		(L_33)->SetAt(static_cast<il2cpp_array_size_t>(3), (String_t*)L_35);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_36 = L_33;
		NullCheck(L_36);
		ArrayElementTypeCheck (L_36, _stringLiteral3C1DAA6957F3D30C74E902B0E1239020BD2032EB);
		(L_36)->SetAt(static_cast<il2cpp_array_size_t>(4), (String_t*)_stringLiteral3C1DAA6957F3D30C74E902B0E1239020BD2032EB);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_37 = L_36;
		uint64_t L_38 = SteamVR_Action_Source_get_handle_m66E0A3E9E7D6434FB905BF0D25013927B0C12791(__this, /*hidden argument*/NULL);
		V_3 = L_38;
		String_t* L_39 = UInt64_ToString_mF0E40B7459C207B89A1C8C04CE7F183AC0E6D672((uint64_t*)(&V_3), /*hidden argument*/NULL);
		NullCheck(L_37);
		ArrayElementTypeCheck (L_37, L_39);
		(L_37)->SetAt(static_cast<il2cpp_array_size_t>(5), (String_t*)L_39);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_40 = L_37;
		NullCheck(L_40);
		ArrayElementTypeCheck (L_40, _stringLiteral3A7CDEF52D3DE29B65F025A01642173D5069CE13);
		(L_40)->SetAt(static_cast<il2cpp_array_size_t>(6), (String_t*)_stringLiteral3A7CDEF52D3DE29B65F025A01642173D5069CE13);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_41 = L_40;
		int32_t L_42 = SteamVR_Action_Source_get_inputSource_mAA1928183BB06E5C8CF950F65BA80635C25535D4_inline(__this, /*hidden argument*/NULL);
		V_4 = L_42;
		RuntimeObject * L_43 = Box(SteamVR_Input_Sources_tCE41AA589FB3B9516BDE0DFABDCB4AAEA29528F7_il2cpp_TypeInfo_var, (&V_4));
		NullCheck(L_43);
		String_t* L_44 = VirtFuncInvoker0< String_t* >::Invoke(3 /* System.String System.Object::ToString() */, L_43);
		V_4 = *(int32_t*)UnBox(L_43);
		NullCheck(L_41);
		ArrayElementTypeCheck (L_41, L_44);
		(L_41)->SetAt(static_cast<il2cpp_array_size_t>(7), (String_t*)L_44);
		String_t* L_45 = String_Concat_m232E857CA5107EA6AC52E7DD7018716C021F237B(L_41, /*hidden argument*/NULL);
		IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
		Debug_LogError_m3BCF9B78263152261565DCA9DB7D55F0C391ED29(L_45, /*hidden argument*/NULL);
	}

IL_0143:
	{
		// if (active)
		bool L_46 = VirtFuncInvoker0< bool >::Invoke(12 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_active() */, __this);
		V_5 = L_46;
		bool L_47 = V_5;
		if (!L_47)
		{
			goto IL_0165;
		}
	}
	{
		// SetCacheVariables();
		SteamVR_Action_Pose_Source_SetCacheVariables_m75B329DBF885C2F5959F2B3D58B6C0F2BD224BC6(__this, /*hidden argument*/NULL);
		// changed = GetChanged();
		bool L_48 = SteamVR_Action_Pose_Source_GetChanged_mE8C7EA7519C1AA58C1B772041E738D0E2396AC4F(__this, /*hidden argument*/NULL);
		VirtActionInvoker1< bool >::Invoke(32 /* System.Void Valve.VR.SteamVR_Action_In_Source::set_changed(System.Boolean) */, __this, L_48);
	}

IL_0165:
	{
		// if (changed)
		bool L_49 = VirtFuncInvoker0< bool >::Invoke(31 /* System.Boolean Valve.VR.SteamVR_Action_In_Source::get_changed() */, __this);
		V_6 = L_49;
		bool L_50 = V_6;
		if (!L_50)
		{
			goto IL_017e;
		}
	}
	{
		// changedTime = updateTime;
		float L_51 = SteamVR_Action_In_Source_get_updateTime_mB9F438D749D92356ACC37F9C0BCD3A304506B210_inline(__this, /*hidden argument*/NULL);
		SteamVR_Action_In_Source_set_changedTime_m68F47645CA38A2261F0694F61E3756788CFAE750_inline(__this, L_51, /*hidden argument*/NULL);
	}

IL_017e:
	{
		// if (skipStateAndEventUpdates == false)
		bool L_52 = ___skipStateAndEventUpdates0;
		V_7 = (bool)((((int32_t)L_52) == ((int32_t)0))? 1 : 0);
		bool L_53 = V_7;
		if (!L_53)
		{
			goto IL_018f;
		}
	}
	{
		// CheckAndSendEvents();
		VirtActionInvoker0::Invoke(52 /* System.Void Valve.VR.SteamVR_Action_Pose_Source::CheckAndSendEvents() */, __this);
	}

IL_018f:
	{
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Pose_Source::SetCacheVariables()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_SetCacheVariables_m75B329DBF885C2F5959F2B3D58B6C0F2BD224BC6 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method)
{
	{
		// localPosition = poseActionData.pose.mDeviceToAbsoluteTracking.GetPosition();
		InputPoseActionData_t_tC282FD2CB85805431D2F23AF9C032BAD99683111 * L_0 = __this->get_address_of_poseActionData_31();
		TrackedDevicePose_t_t42B7DC644F0F2CC1B416722EE2D63CB077F24383 * L_1 = L_0->get_address_of_pose_2();
		HmdMatrix34_t_tAD83D388E6173A848E1FE39121EE1BB9FE7F6305 * L_2 = L_1->get_address_of_mDeviceToAbsoluteTracking_0();
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_3 = HmdMatrix34_t_GetPosition_mAAB6339034207A72B318AC783E2244B07D962AB6((HmdMatrix34_t_tAD83D388E6173A848E1FE39121EE1BB9FE7F6305 *)L_2, /*hidden argument*/NULL);
		SteamVR_Action_Pose_Source_set_localPosition_m38C19E63D633A91EA065A955E770CDC43C4174C0_inline(__this, L_3, /*hidden argument*/NULL);
		// localRotation = poseActionData.pose.mDeviceToAbsoluteTracking.GetRotation();
		InputPoseActionData_t_tC282FD2CB85805431D2F23AF9C032BAD99683111 * L_4 = __this->get_address_of_poseActionData_31();
		TrackedDevicePose_t_t42B7DC644F0F2CC1B416722EE2D63CB077F24383 * L_5 = L_4->get_address_of_pose_2();
		HmdMatrix34_t_tAD83D388E6173A848E1FE39121EE1BB9FE7F6305 * L_6 = L_5->get_address_of_mDeviceToAbsoluteTracking_0();
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_7 = HmdMatrix34_t_GetRotation_mC38BF33EF009CC61DC1F5ABA90E548772DEEEF79((HmdMatrix34_t_tAD83D388E6173A848E1FE39121EE1BB9FE7F6305 *)L_6, /*hidden argument*/NULL);
		SteamVR_Action_Pose_Source_set_localRotation_mC3D82C5E3624F6FC6B4A5CAD6766C69240FC9A37_inline(__this, L_7, /*hidden argument*/NULL);
		// velocity = GetUnityCoordinateVelocity(poseActionData.pose.vVelocity);
		InputPoseActionData_t_tC282FD2CB85805431D2F23AF9C032BAD99683111 * L_8 = __this->get_address_of_poseActionData_31();
		TrackedDevicePose_t_t42B7DC644F0F2CC1B416722EE2D63CB077F24383 * L_9 = L_8->get_address_of_pose_2();
		HmdVector3_t_tEFA290D649DE2E28E5863ED6F09C667A0492FCF3  L_10 = L_9->get_vVelocity_1();
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_11 = SteamVR_Action_Pose_Source_GetUnityCoordinateVelocity_m9D03219B49FDA193DC93B6321F58B30FB36FE8A8(__this, L_10, /*hidden argument*/NULL);
		SteamVR_Action_Pose_Source_set_velocity_m0392A856C5BA77F53831D681C32FC65E8255B168_inline(__this, L_11, /*hidden argument*/NULL);
		// angularVelocity = GetUnityCoordinateAngularVelocity(poseActionData.pose.vAngularVelocity);
		InputPoseActionData_t_tC282FD2CB85805431D2F23AF9C032BAD99683111 * L_12 = __this->get_address_of_poseActionData_31();
		TrackedDevicePose_t_t42B7DC644F0F2CC1B416722EE2D63CB077F24383 * L_13 = L_12->get_address_of_pose_2();
		HmdVector3_t_tEFA290D649DE2E28E5863ED6F09C667A0492FCF3  L_14 = L_13->get_vAngularVelocity_2();
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_15 = SteamVR_Action_Pose_Source_GetUnityCoordinateAngularVelocity_mB3D973B7915A97CADFEF53AA08CEAB866BD70366(__this, L_14, /*hidden argument*/NULL);
		SteamVR_Action_Pose_Source_set_angularVelocity_m78C04A085EB6CBA58F8B20629A341DA54B5F92B4_inline(__this, L_15, /*hidden argument*/NULL);
		// updateTime = Time.realtimeSinceStartup;
		float L_16 = Time_get_realtimeSinceStartup_mCA1086EC9DFCF135F77BC46D3B7127711EA3DE03(/*hidden argument*/NULL);
		SteamVR_Action_In_Source_set_updateTime_m7EA8D127664BA76D49BB51254DB17C4428843F9C_inline(__this, L_16, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Pose_Source::GetChanged()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Pose_Source_GetChanged_mE8C7EA7519C1AA58C1B772041E738D0E2396AC4F (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_Source_GetChanged_mE8C7EA7519C1AA58C1B772041E738D0E2396AC4F_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	bool V_2 = false;
	bool V_3 = false;
	bool V_4 = false;
	{
		// if (Vector3.Distance(localPosition, lastLocalPosition) > changeTolerance)
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = SteamVR_Action_Pose_Source_get_localPosition_mE065A826D8D1A8CF44D9E7F0D038F24D70985833_inline(__this, /*hidden argument*/NULL);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_1 = SteamVR_Action_Pose_Source_get_lastLocalPosition_mB748F9D4600498E9BACCEBE5C8F00DED8125C307_inline(__this, /*hidden argument*/NULL);
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		float L_2 = Vector3_Distance_mE316E10B9B319A5C2A29F86E028740FD528149E7(L_0, L_1, /*hidden argument*/NULL);
		float L_3 = __this->get_changeTolerance_12();
		V_0 = (bool)((((float)L_2) > ((float)L_3))? 1 : 0);
		bool L_4 = V_0;
		if (!L_4)
		{
			goto IL_0022;
		}
	}
	{
		// return true;
		V_1 = (bool)1;
		goto IL_0090;
	}

IL_0022:
	{
		// else if (Mathf.Abs(Quaternion.Angle(localRotation, lastLocalRotation)) > changeTolerance)
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_5 = SteamVR_Action_Pose_Source_get_localRotation_m307D9DD92DFFFCC30446A71D9BD15674A797ED2A_inline(__this, /*hidden argument*/NULL);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_6 = SteamVR_Action_Pose_Source_get_lastLocalRotation_m15622BCE4A3D32548EBFE7DC98F8751352617660_inline(__this, /*hidden argument*/NULL);
		IL2CPP_RUNTIME_CLASS_INIT(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357_il2cpp_TypeInfo_var);
		float L_7 = Quaternion_Angle_m09599D660B724D330E5C7FE2FB1C8716161B3DD1(L_5, L_6, /*hidden argument*/NULL);
		IL2CPP_RUNTIME_CLASS_INIT(Mathf_tFBDE6467D269BFE410605C7D806FD9991D4A89CB_il2cpp_TypeInfo_var);
		float L_8 = fabsf(L_7);
		float L_9 = __this->get_changeTolerance_12();
		V_2 = (bool)((((float)L_8) > ((float)L_9))? 1 : 0);
		bool L_10 = V_2;
		if (!L_10)
		{
			goto IL_0048;
		}
	}
	{
		// return true;
		V_1 = (bool)1;
		goto IL_0090;
	}

IL_0048:
	{
		// else if (Vector3.Distance(velocity, lastVelocity) > changeTolerance)
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_11 = SteamVR_Action_Pose_Source_get_velocity_m2B71BB7981006080D113442CB374529602A310BF_inline(__this, /*hidden argument*/NULL);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_12 = SteamVR_Action_Pose_Source_get_lastVelocity_mB9FD7955140F713C63842433E1E50D498EAD0A21_inline(__this, /*hidden argument*/NULL);
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		float L_13 = Vector3_Distance_mE316E10B9B319A5C2A29F86E028740FD528149E7(L_11, L_12, /*hidden argument*/NULL);
		float L_14 = __this->get_changeTolerance_12();
		V_3 = (bool)((((float)L_13) > ((float)L_14))? 1 : 0);
		bool L_15 = V_3;
		if (!L_15)
		{
			goto IL_0069;
		}
	}
	{
		// return true;
		V_1 = (bool)1;
		goto IL_0090;
	}

IL_0069:
	{
		// else if (Vector3.Distance(angularVelocity, lastAngularVelocity) > changeTolerance)
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_16 = SteamVR_Action_Pose_Source_get_angularVelocity_mACAA45CB05DB94C9292ED147F3156109DAFA0209_inline(__this, /*hidden argument*/NULL);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_17 = SteamVR_Action_Pose_Source_get_lastAngularVelocity_m3EE729ECF16DA55CFE069E25EB9099A80667C55F_inline(__this, /*hidden argument*/NULL);
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		float L_18 = Vector3_Distance_mE316E10B9B319A5C2A29F86E028740FD528149E7(L_16, L_17, /*hidden argument*/NULL);
		float L_19 = __this->get_changeTolerance_12();
		V_4 = (bool)((((float)L_18) > ((float)L_19))? 1 : 0);
		bool L_20 = V_4;
		if (!L_20)
		{
			goto IL_008c;
		}
	}
	{
		// return true;
		V_1 = (bool)1;
		goto IL_0090;
	}

IL_008c:
	{
		// return false;
		V_1 = (bool)0;
		goto IL_0090;
	}

IL_0090:
	{
		// }
		bool L_21 = V_1;
		return L_21;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Pose_Source::GetVelocitiesAtTimeOffset(System.Single,UnityEngine.Vector3&,UnityEngine.Vector3&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Pose_Source_GetVelocitiesAtTimeOffset_m2FB2A8F8F97750A6CAD390348AAE8E9DF94B9B69 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, float ___secondsFromNow0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * ___velocityAtTime1, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * ___angularVelocityAtTime2, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_Source_GetVelocitiesAtTimeOffset_m2FB2A8F8F97750A6CAD390348AAE8E9DF94B9B69_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	bool V_1 = false;
	uint64_t V_2 = 0;
	bool V_3 = false;
	{
		// EVRInputError err = OpenVR.Input.GetPoseActionDataRelativeToNow(handle, universeOrigin, secondsFromNow, ref tempPoseActionData, poseActionData_size, inputSourceHandle);
		IL2CPP_RUNTIME_CLASS_INIT(OpenVR_t89189C917B539750153B18DDDCB4F7D9C8EF004D_il2cpp_TypeInfo_var);
		CVRInput_t8458E224B9D7EFD4A5B102EAA06F8F365A25A53A * L_0 = OpenVR_get_Input_mF290A715AD07D4B7F8844AA79293934B7999CE04(/*hidden argument*/NULL);
		uint64_t L_1 = SteamVR_Action_Source_get_handle_m66E0A3E9E7D6434FB905BF0D25013927B0C12791(__this, /*hidden argument*/NULL);
		int32_t L_2 = __this->get_universeOrigin_10();
		float L_3 = ___secondsFromNow0;
		InputPoseActionData_t_tC282FD2CB85805431D2F23AF9C032BAD99683111 * L_4 = __this->get_address_of_tempPoseActionData_33();
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27_il2cpp_TypeInfo_var);
		uint32_t L_5 = ((SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27_il2cpp_TypeInfo_var))->get_poseActionData_size_11();
		uint64_t L_6 = ((SteamVR_Action_Source_t9D7428CDE39924074518EE6233D9A4FAB0C33CB0 *)__this)->get_inputSourceHandle_1();
		NullCheck(L_0);
		int32_t L_7 = CVRInput_GetPoseActionDataRelativeToNow_mBAEDD17710ECA793901F7A42DB84C84B5C3D5841(L_0, L_1, L_2, L_3, (InputPoseActionData_t_tC282FD2CB85805431D2F23AF9C032BAD99683111 *)L_4, L_5, L_6, /*hidden argument*/NULL);
		V_0 = L_7;
		// if (err != EVRInputError.None)
		int32_t L_8 = V_0;
		V_1 = (bool)((!(((uint32_t)L_8) <= ((uint32_t)0)))? 1 : 0);
		bool L_9 = V_1;
		if (!L_9)
		{
			goto IL_00a0;
		}
	}
	{
		// Debug.LogError("<b>[SteamVR]</b> GetPoseActionData error (" + fullPath + "): " + err.ToString() + " handle: " + handle.ToString()); //todo: this should be an error
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_10 = (StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E*)(StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E*)SZArrayNew(StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E_il2cpp_TypeInfo_var, (uint32_t)6);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_11 = L_10;
		NullCheck(L_11);
		ArrayElementTypeCheck (L_11, _stringLiteralA581B1C5D87FE35AA6548BD80922C973CF753D73);
		(L_11)->SetAt(static_cast<il2cpp_array_size_t>(0), (String_t*)_stringLiteralA581B1C5D87FE35AA6548BD80922C973CF753D73);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_12 = L_11;
		String_t* L_13 = SteamVR_Action_Source_get_fullPath_m9D3700AC3EB06210A52EDA613F1523A48F0A1B81(__this, /*hidden argument*/NULL);
		NullCheck(L_12);
		ArrayElementTypeCheck (L_12, L_13);
		(L_12)->SetAt(static_cast<il2cpp_array_size_t>(1), (String_t*)L_13);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_14 = L_12;
		NullCheck(L_14);
		ArrayElementTypeCheck (L_14, _stringLiteralE6D56E05F32996CA7E5AE21BC90D49044C0BF356);
		(L_14)->SetAt(static_cast<il2cpp_array_size_t>(2), (String_t*)_stringLiteralE6D56E05F32996CA7E5AE21BC90D49044C0BF356);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_15 = L_14;
		RuntimeObject * L_16 = Box(EVRInputError_tE4C895A0D1F18C0024F5C180FF3962B056DA8A71_il2cpp_TypeInfo_var, (&V_0));
		NullCheck(L_16);
		String_t* L_17 = VirtFuncInvoker0< String_t* >::Invoke(3 /* System.String System.Object::ToString() */, L_16);
		V_0 = *(int32_t*)UnBox(L_16);
		NullCheck(L_15);
		ArrayElementTypeCheck (L_15, L_17);
		(L_15)->SetAt(static_cast<il2cpp_array_size_t>(3), (String_t*)L_17);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_18 = L_15;
		NullCheck(L_18);
		ArrayElementTypeCheck (L_18, _stringLiteral18B39452A606090B97AA8D84240CC83BE3E5D62B);
		(L_18)->SetAt(static_cast<il2cpp_array_size_t>(4), (String_t*)_stringLiteral18B39452A606090B97AA8D84240CC83BE3E5D62B);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_19 = L_18;
		uint64_t L_20 = SteamVR_Action_Source_get_handle_m66E0A3E9E7D6434FB905BF0D25013927B0C12791(__this, /*hidden argument*/NULL);
		V_2 = L_20;
		String_t* L_21 = UInt64_ToString_mF0E40B7459C207B89A1C8C04CE7F183AC0E6D672((uint64_t*)(&V_2), /*hidden argument*/NULL);
		NullCheck(L_19);
		ArrayElementTypeCheck (L_19, L_21);
		(L_19)->SetAt(static_cast<il2cpp_array_size_t>(5), (String_t*)L_21);
		String_t* L_22 = String_Concat_m232E857CA5107EA6AC52E7DD7018716C021F237B(L_19, /*hidden argument*/NULL);
		IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
		Debug_LogError_m3BCF9B78263152261565DCA9DB7D55F0C391ED29(L_22, /*hidden argument*/NULL);
		// velocityAtTime = Vector3.zero;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * L_23 = ___velocityAtTime1;
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_24 = Vector3_get_zero_m3CDDCAE94581DF3BB16C4B40A100E28E9C6649C2(/*hidden argument*/NULL);
		*(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)L_23 = L_24;
		// angularVelocityAtTime = Vector3.zero;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * L_25 = ___angularVelocityAtTime2;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_26 = Vector3_get_zero_m3CDDCAE94581DF3BB16C4B40A100E28E9C6649C2(/*hidden argument*/NULL);
		*(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)L_25 = L_26;
		// return false;
		V_3 = (bool)0;
		goto IL_00dc;
	}

IL_00a0:
	{
		// velocityAtTime = GetUnityCoordinateVelocity(tempPoseActionData.pose.vVelocity);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * L_27 = ___velocityAtTime1;
		InputPoseActionData_t_tC282FD2CB85805431D2F23AF9C032BAD99683111 * L_28 = __this->get_address_of_tempPoseActionData_33();
		TrackedDevicePose_t_t42B7DC644F0F2CC1B416722EE2D63CB077F24383 * L_29 = L_28->get_address_of_pose_2();
		HmdVector3_t_tEFA290D649DE2E28E5863ED6F09C667A0492FCF3  L_30 = L_29->get_vVelocity_1();
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_31 = SteamVR_Action_Pose_Source_GetUnityCoordinateVelocity_m9D03219B49FDA193DC93B6321F58B30FB36FE8A8(__this, L_30, /*hidden argument*/NULL);
		*(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)L_27 = L_31;
		// angularVelocityAtTime = GetUnityCoordinateAngularVelocity(tempPoseActionData.pose.vAngularVelocity);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * L_32 = ___angularVelocityAtTime2;
		InputPoseActionData_t_tC282FD2CB85805431D2F23AF9C032BAD99683111 * L_33 = __this->get_address_of_tempPoseActionData_33();
		TrackedDevicePose_t_t42B7DC644F0F2CC1B416722EE2D63CB077F24383 * L_34 = L_33->get_address_of_pose_2();
		HmdVector3_t_tEFA290D649DE2E28E5863ED6F09C667A0492FCF3  L_35 = L_34->get_vAngularVelocity_2();
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_36 = SteamVR_Action_Pose_Source_GetUnityCoordinateAngularVelocity_mB3D973B7915A97CADFEF53AA08CEAB866BD70366(__this, L_35, /*hidden argument*/NULL);
		*(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)L_32 = L_36;
		// return true;
		V_3 = (bool)1;
		goto IL_00dc;
	}

IL_00dc:
	{
		// }
		bool L_37 = V_3;
		return L_37;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Pose_Source::GetPoseAtTimeOffset(System.Single,UnityEngine.Vector3&,UnityEngine.Quaternion&,UnityEngine.Vector3&,UnityEngine.Vector3&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Pose_Source_GetPoseAtTimeOffset_mB6CC830F3A16661AADD4A98BBA70E69ED8C98480 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, float ___secondsFromNow0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * ___positionAtTime1, Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 * ___rotationAtTime2, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * ___velocityAtTime3, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * ___angularVelocityAtTime4, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_Source_GetPoseAtTimeOffset_mB6CC830F3A16661AADD4A98BBA70E69ED8C98480_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	bool V_1 = false;
	uint64_t V_2 = 0;
	bool V_3 = false;
	{
		// EVRInputError err = OpenVR.Input.GetPoseActionDataRelativeToNow(handle, universeOrigin, secondsFromNow, ref tempPoseActionData, poseActionData_size, inputSourceHandle);
		IL2CPP_RUNTIME_CLASS_INIT(OpenVR_t89189C917B539750153B18DDDCB4F7D9C8EF004D_il2cpp_TypeInfo_var);
		CVRInput_t8458E224B9D7EFD4A5B102EAA06F8F365A25A53A * L_0 = OpenVR_get_Input_mF290A715AD07D4B7F8844AA79293934B7999CE04(/*hidden argument*/NULL);
		uint64_t L_1 = SteamVR_Action_Source_get_handle_m66E0A3E9E7D6434FB905BF0D25013927B0C12791(__this, /*hidden argument*/NULL);
		int32_t L_2 = __this->get_universeOrigin_10();
		float L_3 = ___secondsFromNow0;
		InputPoseActionData_t_tC282FD2CB85805431D2F23AF9C032BAD99683111 * L_4 = __this->get_address_of_tempPoseActionData_33();
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27_il2cpp_TypeInfo_var);
		uint32_t L_5 = ((SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27_il2cpp_TypeInfo_var))->get_poseActionData_size_11();
		uint64_t L_6 = ((SteamVR_Action_Source_t9D7428CDE39924074518EE6233D9A4FAB0C33CB0 *)__this)->get_inputSourceHandle_1();
		NullCheck(L_0);
		int32_t L_7 = CVRInput_GetPoseActionDataRelativeToNow_mBAEDD17710ECA793901F7A42DB84C84B5C3D5841(L_0, L_1, L_2, L_3, (InputPoseActionData_t_tC282FD2CB85805431D2F23AF9C032BAD99683111 *)L_4, L_5, L_6, /*hidden argument*/NULL);
		V_0 = L_7;
		// if (err != EVRInputError.None)
		int32_t L_8 = V_0;
		V_1 = (bool)((!(((uint32_t)L_8) <= ((uint32_t)0)))? 1 : 0);
		bool L_9 = V_1;
		if (!L_9)
		{
			goto IL_00bb;
		}
	}
	{
		// Debug.LogError("<b>[SteamVR]</b> GetPoseActionData error (" + fullPath + "): " + err.ToString() + " handle: " + handle.ToString()); //todo: this should be an error
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_10 = (StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E*)(StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E*)SZArrayNew(StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E_il2cpp_TypeInfo_var, (uint32_t)6);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_11 = L_10;
		NullCheck(L_11);
		ArrayElementTypeCheck (L_11, _stringLiteralA581B1C5D87FE35AA6548BD80922C973CF753D73);
		(L_11)->SetAt(static_cast<il2cpp_array_size_t>(0), (String_t*)_stringLiteralA581B1C5D87FE35AA6548BD80922C973CF753D73);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_12 = L_11;
		String_t* L_13 = SteamVR_Action_Source_get_fullPath_m9D3700AC3EB06210A52EDA613F1523A48F0A1B81(__this, /*hidden argument*/NULL);
		NullCheck(L_12);
		ArrayElementTypeCheck (L_12, L_13);
		(L_12)->SetAt(static_cast<il2cpp_array_size_t>(1), (String_t*)L_13);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_14 = L_12;
		NullCheck(L_14);
		ArrayElementTypeCheck (L_14, _stringLiteralE6D56E05F32996CA7E5AE21BC90D49044C0BF356);
		(L_14)->SetAt(static_cast<il2cpp_array_size_t>(2), (String_t*)_stringLiteralE6D56E05F32996CA7E5AE21BC90D49044C0BF356);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_15 = L_14;
		RuntimeObject * L_16 = Box(EVRInputError_tE4C895A0D1F18C0024F5C180FF3962B056DA8A71_il2cpp_TypeInfo_var, (&V_0));
		NullCheck(L_16);
		String_t* L_17 = VirtFuncInvoker0< String_t* >::Invoke(3 /* System.String System.Object::ToString() */, L_16);
		V_0 = *(int32_t*)UnBox(L_16);
		NullCheck(L_15);
		ArrayElementTypeCheck (L_15, L_17);
		(L_15)->SetAt(static_cast<il2cpp_array_size_t>(3), (String_t*)L_17);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_18 = L_15;
		NullCheck(L_18);
		ArrayElementTypeCheck (L_18, _stringLiteral18B39452A606090B97AA8D84240CC83BE3E5D62B);
		(L_18)->SetAt(static_cast<il2cpp_array_size_t>(4), (String_t*)_stringLiteral18B39452A606090B97AA8D84240CC83BE3E5D62B);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_19 = L_18;
		uint64_t L_20 = SteamVR_Action_Source_get_handle_m66E0A3E9E7D6434FB905BF0D25013927B0C12791(__this, /*hidden argument*/NULL);
		V_2 = L_20;
		String_t* L_21 = UInt64_ToString_mF0E40B7459C207B89A1C8C04CE7F183AC0E6D672((uint64_t*)(&V_2), /*hidden argument*/NULL);
		NullCheck(L_19);
		ArrayElementTypeCheck (L_19, L_21);
		(L_19)->SetAt(static_cast<il2cpp_array_size_t>(5), (String_t*)L_21);
		String_t* L_22 = String_Concat_m232E857CA5107EA6AC52E7DD7018716C021F237B(L_19, /*hidden argument*/NULL);
		IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
		Debug_LogError_m3BCF9B78263152261565DCA9DB7D55F0C391ED29(L_22, /*hidden argument*/NULL);
		// velocityAtTime = Vector3.zero;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * L_23 = ___velocityAtTime3;
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_24 = Vector3_get_zero_m3CDDCAE94581DF3BB16C4B40A100E28E9C6649C2(/*hidden argument*/NULL);
		*(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)L_23 = L_24;
		// angularVelocityAtTime = Vector3.zero;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * L_25 = ___angularVelocityAtTime4;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_26 = Vector3_get_zero_m3CDDCAE94581DF3BB16C4B40A100E28E9C6649C2(/*hidden argument*/NULL);
		*(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)L_25 = L_26;
		// positionAtTime = Vector3.zero;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * L_27 = ___positionAtTime1;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_28 = Vector3_get_zero_m3CDDCAE94581DF3BB16C4B40A100E28E9C6649C2(/*hidden argument*/NULL);
		*(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)L_27 = L_28;
		// rotationAtTime = Quaternion.identity;
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 * L_29 = ___rotationAtTime2;
		IL2CPP_RUNTIME_CLASS_INIT(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357_il2cpp_TypeInfo_var);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_30 = Quaternion_get_identity_m548B37D80F2DEE60E41D1F09BF6889B557BE1A64(/*hidden argument*/NULL);
		*(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 *)L_29 = L_30;
		// return false;
		V_3 = (bool)0;
		goto IL_012f;
	}

IL_00bb:
	{
		// velocityAtTime = GetUnityCoordinateVelocity(tempPoseActionData.pose.vVelocity);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * L_31 = ___velocityAtTime3;
		InputPoseActionData_t_tC282FD2CB85805431D2F23AF9C032BAD99683111 * L_32 = __this->get_address_of_tempPoseActionData_33();
		TrackedDevicePose_t_t42B7DC644F0F2CC1B416722EE2D63CB077F24383 * L_33 = L_32->get_address_of_pose_2();
		HmdVector3_t_tEFA290D649DE2E28E5863ED6F09C667A0492FCF3  L_34 = L_33->get_vVelocity_1();
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_35 = SteamVR_Action_Pose_Source_GetUnityCoordinateVelocity_m9D03219B49FDA193DC93B6321F58B30FB36FE8A8(__this, L_34, /*hidden argument*/NULL);
		*(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)L_31 = L_35;
		// angularVelocityAtTime = GetUnityCoordinateAngularVelocity(tempPoseActionData.pose.vAngularVelocity);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * L_36 = ___angularVelocityAtTime4;
		InputPoseActionData_t_tC282FD2CB85805431D2F23AF9C032BAD99683111 * L_37 = __this->get_address_of_tempPoseActionData_33();
		TrackedDevicePose_t_t42B7DC644F0F2CC1B416722EE2D63CB077F24383 * L_38 = L_37->get_address_of_pose_2();
		HmdVector3_t_tEFA290D649DE2E28E5863ED6F09C667A0492FCF3  L_39 = L_38->get_vAngularVelocity_2();
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_40 = SteamVR_Action_Pose_Source_GetUnityCoordinateAngularVelocity_mB3D973B7915A97CADFEF53AA08CEAB866BD70366(__this, L_39, /*hidden argument*/NULL);
		*(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)L_36 = L_40;
		// positionAtTime = tempPoseActionData.pose.mDeviceToAbsoluteTracking.GetPosition();
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * L_41 = ___positionAtTime1;
		InputPoseActionData_t_tC282FD2CB85805431D2F23AF9C032BAD99683111 * L_42 = __this->get_address_of_tempPoseActionData_33();
		TrackedDevicePose_t_t42B7DC644F0F2CC1B416722EE2D63CB077F24383 * L_43 = L_42->get_address_of_pose_2();
		HmdMatrix34_t_tAD83D388E6173A848E1FE39121EE1BB9FE7F6305 * L_44 = L_43->get_address_of_mDeviceToAbsoluteTracking_0();
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_45 = HmdMatrix34_t_GetPosition_mAAB6339034207A72B318AC783E2244B07D962AB6((HmdMatrix34_t_tAD83D388E6173A848E1FE39121EE1BB9FE7F6305 *)L_44, /*hidden argument*/NULL);
		*(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)L_41 = L_45;
		// rotationAtTime = tempPoseActionData.pose.mDeviceToAbsoluteTracking.GetRotation();
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 * L_46 = ___rotationAtTime2;
		InputPoseActionData_t_tC282FD2CB85805431D2F23AF9C032BAD99683111 * L_47 = __this->get_address_of_tempPoseActionData_33();
		TrackedDevicePose_t_t42B7DC644F0F2CC1B416722EE2D63CB077F24383 * L_48 = L_47->get_address_of_pose_2();
		HmdMatrix34_t_tAD83D388E6173A848E1FE39121EE1BB9FE7F6305 * L_49 = L_48->get_address_of_mDeviceToAbsoluteTracking_0();
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_50 = HmdMatrix34_t_GetRotation_mC38BF33EF009CC61DC1F5ABA90E548772DEEEF79((HmdMatrix34_t_tAD83D388E6173A848E1FE39121EE1BB9FE7F6305 *)L_49, /*hidden argument*/NULL);
		*(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 *)L_46 = L_50;
		// return true;
		V_3 = (bool)1;
		goto IL_012f;
	}

IL_012f:
	{
		// }
		bool L_51 = V_3;
		return L_51;
	}
}
// System.Void Valve.VR.SteamVR_Action_Pose_Source::UpdateTransform(UnityEngine.Transform)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_UpdateTransform_m60BC79C7C44F4686D4C0383A14109890FBD323D4 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___transformToUpdate0, const RuntimeMethod* method)
{
	{
		// transformToUpdate.localPosition = localPosition;
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_0 = ___transformToUpdate0;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_1 = SteamVR_Action_Pose_Source_get_localPosition_mE065A826D8D1A8CF44D9E7F0D038F24D70985833_inline(__this, /*hidden argument*/NULL);
		NullCheck(L_0);
		Transform_set_localPosition_m275F5550DD939F83AFEB5E8D681131172E2E1728(L_0, L_1, /*hidden argument*/NULL);
		// transformToUpdate.localRotation = localRotation;
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_2 = ___transformToUpdate0;
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_3 = SteamVR_Action_Pose_Source_get_localRotation_m307D9DD92DFFFCC30446A71D9BD15674A797ED2A_inline(__this, /*hidden argument*/NULL);
		NullCheck(L_2);
		Transform_set_localRotation_mE2BECB0954FFC1D93FB631600D9A9BEFF41D9C8A(L_2, L_3, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Pose_Source::CheckAndSendEvents()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_CheckAndSendEvents_mB208661A3F8390614A3762EA6B2672F23F542BFE (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method)
{
	bool V_0 = false;
	bool V_1 = false;
	bool V_2 = false;
	bool V_3 = false;
	bool V_4 = false;
	bool V_5 = false;
	bool V_6 = false;
	int32_t G_B3_0 = 0;
	int32_t G_B8_0 = 0;
	int32_t G_B13_0 = 0;
	int32_t G_B18_0 = 0;
	int32_t G_B23_0 = 0;
	int32_t G_B28_0 = 0;
	{
		// if (trackingState != lastTrackingState && onTrackingChanged != null)
		int32_t L_0 = SteamVR_Action_Pose_Source_get_trackingState_m702AC7130C7E0CD7EE794221240B44EAC08BAB7D(__this, /*hidden argument*/NULL);
		int32_t L_1 = SteamVR_Action_Pose_Source_get_lastTrackingState_m38B8C3D8A8462CE12EFD78811EBBD8CCEB52FAF8(__this, /*hidden argument*/NULL);
		if ((((int32_t)L_0) == ((int32_t)L_1)))
		{
			goto IL_001a;
		}
	}
	{
		TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 * L_2 = __this->get_onTrackingChanged_17();
		G_B3_0 = ((!(((RuntimeObject*)(TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 *)L_2) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		goto IL_001b;
	}

IL_001a:
	{
		G_B3_0 = 0;
	}

IL_001b:
	{
		V_0 = (bool)G_B3_0;
		bool L_3 = V_0;
		if (!L_3)
		{
			goto IL_003d;
		}
	}
	{
		// onTrackingChanged.Invoke(poseAction, inputSource, trackingState);
		TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 * L_4 = __this->get_onTrackingChanged_17();
		SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * L_5 = __this->get_poseAction_34();
		int32_t L_6 = SteamVR_Action_Source_get_inputSource_mAA1928183BB06E5C8CF950F65BA80635C25535D4_inline(__this, /*hidden argument*/NULL);
		int32_t L_7 = SteamVR_Action_Pose_Source_get_trackingState_m702AC7130C7E0CD7EE794221240B44EAC08BAB7D(__this, /*hidden argument*/NULL);
		NullCheck(L_4);
		TrackingChangeHandler_Invoke_m380F993E23ED2D80E4B30D2B3FC42191C8FBB99D(L_4, L_5, L_6, L_7, /*hidden argument*/NULL);
	}

IL_003d:
	{
		// if (poseIsValid != lastPoseIsValid && onValidPoseChanged != null)
		bool L_8 = SteamVR_Action_Pose_Source_get_poseIsValid_m637DE37434CBBEC04B359C9FF89AF0681DA67457(__this, /*hidden argument*/NULL);
		bool L_9 = SteamVR_Action_Pose_Source_get_lastPoseIsValid_m7CC61D5F85FD1334CFC6F917EECDA224FA903D0E(__this, /*hidden argument*/NULL);
		if ((((int32_t)L_8) == ((int32_t)L_9)))
		{
			goto IL_0056;
		}
	}
	{
		ValidPoseChangeHandler_t1D487A0B0E2FB0D02C72EF5365E81BCD3E33B41A * L_10 = __this->get_onValidPoseChanged_18();
		G_B8_0 = ((!(((RuntimeObject*)(ValidPoseChangeHandler_t1D487A0B0E2FB0D02C72EF5365E81BCD3E33B41A *)L_10) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		goto IL_0057;
	}

IL_0056:
	{
		G_B8_0 = 0;
	}

IL_0057:
	{
		V_1 = (bool)G_B8_0;
		bool L_11 = V_1;
		if (!L_11)
		{
			goto IL_0079;
		}
	}
	{
		// onValidPoseChanged.Invoke(poseAction, inputSource, poseIsValid);
		ValidPoseChangeHandler_t1D487A0B0E2FB0D02C72EF5365E81BCD3E33B41A * L_12 = __this->get_onValidPoseChanged_18();
		SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * L_13 = __this->get_poseAction_34();
		int32_t L_14 = SteamVR_Action_Source_get_inputSource_mAA1928183BB06E5C8CF950F65BA80635C25535D4_inline(__this, /*hidden argument*/NULL);
		bool L_15 = SteamVR_Action_Pose_Source_get_poseIsValid_m637DE37434CBBEC04B359C9FF89AF0681DA67457(__this, /*hidden argument*/NULL);
		NullCheck(L_12);
		ValidPoseChangeHandler_Invoke_m881AD09C85F8A76B3DAC8FD9D6C1D8D2A43AE8DC(L_12, L_13, L_14, L_15, /*hidden argument*/NULL);
	}

IL_0079:
	{
		// if (deviceIsConnected != lastDeviceIsConnected && onDeviceConnectedChanged != null)
		bool L_16 = SteamVR_Action_Pose_Source_get_deviceIsConnected_m631372A24F57796D298E27F7E8BB93BFA31143EB(__this, /*hidden argument*/NULL);
		bool L_17 = SteamVR_Action_Pose_Source_get_lastDeviceIsConnected_m54D89CD952536E4C6CC1B31D732F097A78FC6D83(__this, /*hidden argument*/NULL);
		if ((((int32_t)L_16) == ((int32_t)L_17)))
		{
			goto IL_0092;
		}
	}
	{
		DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 * L_18 = __this->get_onDeviceConnectedChanged_19();
		G_B13_0 = ((!(((RuntimeObject*)(DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 *)L_18) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		goto IL_0093;
	}

IL_0092:
	{
		G_B13_0 = 0;
	}

IL_0093:
	{
		V_2 = (bool)G_B13_0;
		bool L_19 = V_2;
		if (!L_19)
		{
			goto IL_00b5;
		}
	}
	{
		// onDeviceConnectedChanged.Invoke(poseAction, inputSource, deviceIsConnected);
		DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 * L_20 = __this->get_onDeviceConnectedChanged_19();
		SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * L_21 = __this->get_poseAction_34();
		int32_t L_22 = SteamVR_Action_Source_get_inputSource_mAA1928183BB06E5C8CF950F65BA80635C25535D4_inline(__this, /*hidden argument*/NULL);
		bool L_23 = SteamVR_Action_Pose_Source_get_deviceIsConnected_m631372A24F57796D298E27F7E8BB93BFA31143EB(__this, /*hidden argument*/NULL);
		NullCheck(L_20);
		DeviceConnectedChangeHandler_Invoke_m512AF09CD9A724F720AFB1337A900BFE49B1F4F0(L_20, L_21, L_22, L_23, /*hidden argument*/NULL);
	}

IL_00b5:
	{
		// if (changed && onChange != null)
		bool L_24 = VirtFuncInvoker0< bool >::Invoke(31 /* System.Boolean Valve.VR.SteamVR_Action_In_Source::get_changed() */, __this);
		if (!L_24)
		{
			goto IL_00c8;
		}
	}
	{
		ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE * L_25 = __this->get_onChange_15();
		G_B18_0 = ((!(((RuntimeObject*)(ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE *)L_25) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		goto IL_00c9;
	}

IL_00c8:
	{
		G_B18_0 = 0;
	}

IL_00c9:
	{
		V_3 = (bool)G_B18_0;
		bool L_26 = V_3;
		if (!L_26)
		{
			goto IL_00e5;
		}
	}
	{
		// onChange.Invoke(poseAction, inputSource);
		ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE * L_27 = __this->get_onChange_15();
		SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * L_28 = __this->get_poseAction_34();
		int32_t L_29 = SteamVR_Action_Source_get_inputSource_mAA1928183BB06E5C8CF950F65BA80635C25535D4_inline(__this, /*hidden argument*/NULL);
		NullCheck(L_27);
		ChangeHandler_Invoke_m1E3883B22E580E2A82DF410B59EB44B502319DA9(L_27, L_28, L_29, /*hidden argument*/NULL);
	}

IL_00e5:
	{
		// if (active != lastActive && onActiveChange != null)
		bool L_30 = VirtFuncInvoker0< bool >::Invoke(12 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_active() */, __this);
		bool L_31 = VirtFuncInvoker0< bool >::Invoke(14 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_lastActive() */, __this);
		if ((((int32_t)L_30) == ((int32_t)L_31)))
		{
			goto IL_00fe;
		}
	}
	{
		ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * L_32 = __this->get_onActiveChange_13();
		G_B23_0 = ((!(((RuntimeObject*)(ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E *)L_32) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		goto IL_00ff;
	}

IL_00fe:
	{
		G_B23_0 = 0;
	}

IL_00ff:
	{
		V_4 = (bool)G_B23_0;
		bool L_33 = V_4;
		if (!L_33)
		{
			goto IL_0123;
		}
	}
	{
		// onActiveChange.Invoke(poseAction, inputSource, active);
		ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * L_34 = __this->get_onActiveChange_13();
		SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * L_35 = __this->get_poseAction_34();
		int32_t L_36 = SteamVR_Action_Source_get_inputSource_mAA1928183BB06E5C8CF950F65BA80635C25535D4_inline(__this, /*hidden argument*/NULL);
		bool L_37 = VirtFuncInvoker0< bool >::Invoke(12 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_active() */, __this);
		NullCheck(L_34);
		ActiveChangeHandler_Invoke_m5A1A650F2FBCBD68E1A3F5A15E6631F45A16BDAF(L_34, L_35, L_36, L_37, /*hidden argument*/NULL);
	}

IL_0123:
	{
		// if (activeBinding != lastActiveBinding && onActiveBindingChange != null)
		bool L_38 = VirtFuncInvoker0< bool >::Invoke(13 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_activeBinding() */, __this);
		bool L_39 = VirtFuncInvoker0< bool >::Invoke(16 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_lastActiveBinding() */, __this);
		if ((((int32_t)L_38) == ((int32_t)L_39)))
		{
			goto IL_013c;
		}
	}
	{
		ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * L_40 = __this->get_onActiveBindingChange_14();
		G_B28_0 = ((!(((RuntimeObject*)(ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E *)L_40) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		goto IL_013d;
	}

IL_013c:
	{
		G_B28_0 = 0;
	}

IL_013d:
	{
		V_5 = (bool)G_B28_0;
		bool L_41 = V_5;
		if (!L_41)
		{
			goto IL_0161;
		}
	}
	{
		// onActiveBindingChange.Invoke(poseAction, inputSource, activeBinding);
		ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * L_42 = __this->get_onActiveBindingChange_14();
		SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * L_43 = __this->get_poseAction_34();
		int32_t L_44 = SteamVR_Action_Source_get_inputSource_mAA1928183BB06E5C8CF950F65BA80635C25535D4_inline(__this, /*hidden argument*/NULL);
		bool L_45 = VirtFuncInvoker0< bool >::Invoke(13 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_activeBinding() */, __this);
		NullCheck(L_42);
		ActiveChangeHandler_Invoke_m5A1A650F2FBCBD68E1A3F5A15E6631F45A16BDAF(L_42, L_43, L_44, L_45, /*hidden argument*/NULL);
	}

IL_0161:
	{
		// if (onUpdate != null)
		UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 * L_46 = __this->get_onUpdate_16();
		V_6 = (bool)((!(((RuntimeObject*)(UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 *)L_46) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		bool L_47 = V_6;
		if (!L_47)
		{
			goto IL_0188;
		}
	}
	{
		// onUpdate.Invoke(poseAction, inputSource);
		UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 * L_48 = __this->get_onUpdate_16();
		SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * L_49 = __this->get_poseAction_34();
		int32_t L_50 = SteamVR_Action_Source_get_inputSource_mAA1928183BB06E5C8CF950F65BA80635C25535D4_inline(__this, /*hidden argument*/NULL);
		NullCheck(L_48);
		UpdateHandler_Invoke_m27C63AF2E42B34048A8AF0905FCB8C7129DFFB2A(L_48, L_49, L_50, /*hidden argument*/NULL);
	}

IL_0188:
	{
		// }
		return;
	}
}
// UnityEngine.Vector3 Valve.VR.SteamVR_Action_Pose_Source::GetUnityCoordinateVelocity(Valve.VR.HmdVector3_t)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SteamVR_Action_Pose_Source_GetUnityCoordinateVelocity_m9D03219B49FDA193DC93B6321F58B30FB36FE8A8 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, HmdVector3_t_tEFA290D649DE2E28E5863ED6F09C667A0492FCF3  ___vector0, const RuntimeMethod* method)
{
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_0;
	memset((&V_0), 0, sizeof(V_0));
	{
		// return GetUnityCoordinateVelocity(vector.v0, vector.v1, vector.v2);
		HmdVector3_t_tEFA290D649DE2E28E5863ED6F09C667A0492FCF3  L_0 = ___vector0;
		float L_1 = L_0.get_v0_0();
		HmdVector3_t_tEFA290D649DE2E28E5863ED6F09C667A0492FCF3  L_2 = ___vector0;
		float L_3 = L_2.get_v1_1();
		HmdVector3_t_tEFA290D649DE2E28E5863ED6F09C667A0492FCF3  L_4 = ___vector0;
		float L_5 = L_4.get_v2_2();
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_6 = SteamVR_Action_Pose_Source_GetUnityCoordinateVelocity_mBEF9FF5E7639E3298E578C1035691A3F2F14E3CC(__this, L_1, L_3, L_5, /*hidden argument*/NULL);
		V_0 = L_6;
		goto IL_001c;
	}

IL_001c:
	{
		// }
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_7 = V_0;
		return L_7;
	}
}
// UnityEngine.Vector3 Valve.VR.SteamVR_Action_Pose_Source::GetUnityCoordinateAngularVelocity(Valve.VR.HmdVector3_t)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SteamVR_Action_Pose_Source_GetUnityCoordinateAngularVelocity_mB3D973B7915A97CADFEF53AA08CEAB866BD70366 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, HmdVector3_t_tEFA290D649DE2E28E5863ED6F09C667A0492FCF3  ___vector0, const RuntimeMethod* method)
{
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_0;
	memset((&V_0), 0, sizeof(V_0));
	{
		// return GetUnityCoordinateAngularVelocity(vector.v0, vector.v1, vector.v2);
		HmdVector3_t_tEFA290D649DE2E28E5863ED6F09C667A0492FCF3  L_0 = ___vector0;
		float L_1 = L_0.get_v0_0();
		HmdVector3_t_tEFA290D649DE2E28E5863ED6F09C667A0492FCF3  L_2 = ___vector0;
		float L_3 = L_2.get_v1_1();
		HmdVector3_t_tEFA290D649DE2E28E5863ED6F09C667A0492FCF3  L_4 = ___vector0;
		float L_5 = L_4.get_v2_2();
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_6 = SteamVR_Action_Pose_Source_GetUnityCoordinateAngularVelocity_mB29B533358ECB8CAF6B4D8C3C75E61CC00BA6626(__this, L_1, L_3, L_5, /*hidden argument*/NULL);
		V_0 = L_6;
		goto IL_001c;
	}

IL_001c:
	{
		// }
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_7 = V_0;
		return L_7;
	}
}
// UnityEngine.Vector3 Valve.VR.SteamVR_Action_Pose_Source::GetUnityCoordinateVelocity(System.Single,System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SteamVR_Action_Pose_Source_GetUnityCoordinateVelocity_mBEF9FF5E7639E3298E578C1035691A3F2F14E3CC (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, float ___x0, float ___y1, float ___z2, const RuntimeMethod* method)
{
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_0;
	memset((&V_0), 0, sizeof(V_0));
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_1;
	memset((&V_1), 0, sizeof(V_1));
	{
		// Vector3 vector = new Vector3();
		il2cpp_codegen_initobj((&V_0), sizeof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 ));
		// vector.x = x;
		float L_0 = ___x0;
		(&V_0)->set_x_2(L_0);
		// vector.y = y;
		float L_1 = ___y1;
		(&V_0)->set_y_3(L_1);
		// vector.z = -z;
		float L_2 = ___z2;
		(&V_0)->set_z_4(((-L_2)));
		// return vector;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_3 = V_0;
		V_1 = L_3;
		goto IL_0026;
	}

IL_0026:
	{
		// }
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_4 = V_1;
		return L_4;
	}
}
// UnityEngine.Vector3 Valve.VR.SteamVR_Action_Pose_Source::GetUnityCoordinateAngularVelocity(System.Single,System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SteamVR_Action_Pose_Source_GetUnityCoordinateAngularVelocity_mB29B533358ECB8CAF6B4D8C3C75E61CC00BA6626 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, float ___x0, float ___y1, float ___z2, const RuntimeMethod* method)
{
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_0;
	memset((&V_0), 0, sizeof(V_0));
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_1;
	memset((&V_1), 0, sizeof(V_1));
	{
		// Vector3 vector = new Vector3();
		il2cpp_codegen_initobj((&V_0), sizeof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 ));
		// vector.x = -x;
		float L_0 = ___x0;
		(&V_0)->set_x_2(((-L_0)));
		// vector.y = -y;
		float L_1 = ___y1;
		(&V_0)->set_y_3(((-L_1)));
		// vector.z = z;
		float L_2 = ___z2;
		(&V_0)->set_z_4(L_2);
		// return vector;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_3 = V_0;
		V_1 = L_3;
		goto IL_0027;
	}

IL_0027:
	{
		// }
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_4 = V_1;
		return L_4;
	}
}
// System.Void Valve.VR.SteamVR_Action_Pose_Source::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source__ctor_mF1DE2EFD35F9F2DE84EFAEE2308E35D274D93C6E (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_Source__ctor_mF1DE2EFD35F9F2DE84EFAEE2308E35D274D93C6E_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// public ETrackingUniverseOrigin universeOrigin = ETrackingUniverseOrigin.TrackingUniverseRawAndUncalibrated;
		__this->set_universeOrigin_10(2);
		// public float changeTolerance = Mathf.Epsilon;
		IL2CPP_RUNTIME_CLASS_INIT(Mathf_tFBDE6467D269BFE410605C7D806FD9991D4A89CB_il2cpp_TypeInfo_var);
		float L_0 = ((Mathf_tFBDE6467D269BFE410605C7D806FD9991D4A89CB_StaticFields*)il2cpp_codegen_static_fields_for(Mathf_tFBDE6467D269BFE410605C7D806FD9991D4A89CB_il2cpp_TypeInfo_var))->get_Epsilon_0();
		__this->set_changeTolerance_12(L_0);
		// protected InputPoseActionData_t poseActionData = new InputPoseActionData_t();
		InputPoseActionData_t_tC282FD2CB85805431D2F23AF9C032BAD99683111 * L_1 = __this->get_address_of_poseActionData_31();
		il2cpp_codegen_initobj(L_1, sizeof(InputPoseActionData_t_tC282FD2CB85805431D2F23AF9C032BAD99683111 ));
		// protected InputPoseActionData_t lastPoseActionData = new InputPoseActionData_t();
		InputPoseActionData_t_tC282FD2CB85805431D2F23AF9C032BAD99683111 * L_2 = __this->get_address_of_lastPoseActionData_32();
		il2cpp_codegen_initobj(L_2, sizeof(InputPoseActionData_t_tC282FD2CB85805431D2F23AF9C032BAD99683111 ));
		// protected InputPoseActionData_t tempPoseActionData = new InputPoseActionData_t();
		InputPoseActionData_t_tC282FD2CB85805431D2F23AF9C032BAD99683111 * L_3 = __this->get_address_of_tempPoseActionData_33();
		il2cpp_codegen_initobj(L_3, sizeof(InputPoseActionData_t_tC282FD2CB85805431D2F23AF9C032BAD99683111 ));
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB_il2cpp_TypeInfo_var);
		SteamVR_Action_In_Source__ctor_mE238DF9510354C14124DF4D1973356C078DAE3BB(__this, /*hidden argument*/NULL);
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Pose_Source::.cctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source__cctor_m44C76531AEEB39E153C3ACC82277C93A9F5E2650 (const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_Source__cctor_m44C76531AEEB39E153C3ACC82277C93A9F5E2650_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// protected static uint poseActionData_size = 0;
		((SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27_il2cpp_TypeInfo_var))->set_poseActionData_size_11(0);
		// public static float framesAhead = 2;
		((SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27_il2cpp_TypeInfo_var))->set_framesAhead_35((2.0f));
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Action_Single::add_onChange(Valve.VR.SteamVR_Action_Single/ChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Single_add_onChange_mECD8985BBEB55C32B356FCD43A4FE50EDD2470BB (SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * __this, ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Single_add_onChange_mECD8985BBEB55C32B356FCD43A4FE50EDD2470BB_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// { add { sourceMap[SteamVR_Input_Sources.Any].onChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onChange -= value; } }
		SteamVR_Action_Single_Source_Map_tBD46D15F4FCB5A4B6BDA2B1FE96035D4DDBDBA37 * L_0 = ((SteamVR_Action_2_t6C5A72BCD96947140E949B195C2578D4AE46E170 *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * L_1 = SteamVR_Action_Source_Map_1_get_Item_m303FDBA93004D8CE7E49B6F079D27B5CB7AC9B72(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_m303FDBA93004D8CE7E49B6F079D27B5CB7AC9B72_RuntimeMethod_var);
		ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED * L_2 = ___value0;
		NullCheck(L_1);
		SteamVR_Action_Single_Source_add_onChange_m293210E1B8395F5C75302844AF1B4AE74DD2F3A8(L_1, L_2, /*hidden argument*/NULL);
		// { add { sourceMap[SteamVR_Input_Sources.Any].onChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onChange -= value; } }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Single::remove_onChange(Valve.VR.SteamVR_Action_Single/ChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Single_remove_onChange_m7044963CD35787CC64871FED9EEC3867399C4193 (SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * __this, ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Single_remove_onChange_m7044963CD35787CC64871FED9EEC3867399C4193_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// { add { sourceMap[SteamVR_Input_Sources.Any].onChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onChange -= value; } }
		SteamVR_Action_Single_Source_Map_tBD46D15F4FCB5A4B6BDA2B1FE96035D4DDBDBA37 * L_0 = ((SteamVR_Action_2_t6C5A72BCD96947140E949B195C2578D4AE46E170 *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * L_1 = SteamVR_Action_Source_Map_1_get_Item_m303FDBA93004D8CE7E49B6F079D27B5CB7AC9B72(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_m303FDBA93004D8CE7E49B6F079D27B5CB7AC9B72_RuntimeMethod_var);
		ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED * L_2 = ___value0;
		NullCheck(L_1);
		SteamVR_Action_Single_Source_remove_onChange_m416E274F58D3F80F3E2AC77BC933E1D1F8BBDECD(L_1, L_2, /*hidden argument*/NULL);
		// { add { sourceMap[SteamVR_Input_Sources.Any].onChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onChange -= value; } }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Single::add_onUpdate(Valve.VR.SteamVR_Action_Single/UpdateHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Single_add_onUpdate_m279978627CDEC1A2D24D7FFF8744184921486C5E (SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * __this, UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Single_add_onUpdate_m279978627CDEC1A2D24D7FFF8744184921486C5E_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// { add { sourceMap[SteamVR_Input_Sources.Any].onUpdate += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onUpdate -= value; } }
		SteamVR_Action_Single_Source_Map_tBD46D15F4FCB5A4B6BDA2B1FE96035D4DDBDBA37 * L_0 = ((SteamVR_Action_2_t6C5A72BCD96947140E949B195C2578D4AE46E170 *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * L_1 = SteamVR_Action_Source_Map_1_get_Item_m303FDBA93004D8CE7E49B6F079D27B5CB7AC9B72(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_m303FDBA93004D8CE7E49B6F079D27B5CB7AC9B72_RuntimeMethod_var);
		UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D * L_2 = ___value0;
		NullCheck(L_1);
		SteamVR_Action_Single_Source_add_onUpdate_m5598F5E0ABEB41135E942BD9590CA88A5E89A167(L_1, L_2, /*hidden argument*/NULL);
		// { add { sourceMap[SteamVR_Input_Sources.Any].onUpdate += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onUpdate -= value; } }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Single::remove_onUpdate(Valve.VR.SteamVR_Action_Single/UpdateHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Single_remove_onUpdate_m08F81B2DFFA8F719CBBA64BDE85E6B556DBD0BA4 (SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * __this, UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Single_remove_onUpdate_m08F81B2DFFA8F719CBBA64BDE85E6B556DBD0BA4_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// { add { sourceMap[SteamVR_Input_Sources.Any].onUpdate += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onUpdate -= value; } }
		SteamVR_Action_Single_Source_Map_tBD46D15F4FCB5A4B6BDA2B1FE96035D4DDBDBA37 * L_0 = ((SteamVR_Action_2_t6C5A72BCD96947140E949B195C2578D4AE46E170 *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * L_1 = SteamVR_Action_Source_Map_1_get_Item_m303FDBA93004D8CE7E49B6F079D27B5CB7AC9B72(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_m303FDBA93004D8CE7E49B6F079D27B5CB7AC9B72_RuntimeMethod_var);
		UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D * L_2 = ___value0;
		NullCheck(L_1);
		SteamVR_Action_Single_Source_remove_onUpdate_mB6B6416FED4DA773EFB6D97EE7E6C9ED8F4CA16C(L_1, L_2, /*hidden argument*/NULL);
		// { add { sourceMap[SteamVR_Input_Sources.Any].onUpdate += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onUpdate -= value; } }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Single::add_onAxis(Valve.VR.SteamVR_Action_Single/AxisHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Single_add_onAxis_m93232285C0B461E71935EDAA96839809879CEB7F (SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * __this, AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Single_add_onAxis_m93232285C0B461E71935EDAA96839809879CEB7F_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// { add { sourceMap[SteamVR_Input_Sources.Any].onAxis += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onAxis -= value; } }
		SteamVR_Action_Single_Source_Map_tBD46D15F4FCB5A4B6BDA2B1FE96035D4DDBDBA37 * L_0 = ((SteamVR_Action_2_t6C5A72BCD96947140E949B195C2578D4AE46E170 *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * L_1 = SteamVR_Action_Source_Map_1_get_Item_m303FDBA93004D8CE7E49B6F079D27B5CB7AC9B72(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_m303FDBA93004D8CE7E49B6F079D27B5CB7AC9B72_RuntimeMethod_var);
		AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 * L_2 = ___value0;
		NullCheck(L_1);
		SteamVR_Action_Single_Source_add_onAxis_m61631AE5B07E5BA034D52ED44590597E6A13AC24(L_1, L_2, /*hidden argument*/NULL);
		// { add { sourceMap[SteamVR_Input_Sources.Any].onAxis += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onAxis -= value; } }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Single::remove_onAxis(Valve.VR.SteamVR_Action_Single/AxisHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Single_remove_onAxis_mD089192E4070BD76C175B6F93E8D6DA41015FA01 (SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * __this, AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Single_remove_onAxis_mD089192E4070BD76C175B6F93E8D6DA41015FA01_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// { add { sourceMap[SteamVR_Input_Sources.Any].onAxis += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onAxis -= value; } }
		SteamVR_Action_Single_Source_Map_tBD46D15F4FCB5A4B6BDA2B1FE96035D4DDBDBA37 * L_0 = ((SteamVR_Action_2_t6C5A72BCD96947140E949B195C2578D4AE46E170 *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * L_1 = SteamVR_Action_Source_Map_1_get_Item_m303FDBA93004D8CE7E49B6F079D27B5CB7AC9B72(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_m303FDBA93004D8CE7E49B6F079D27B5CB7AC9B72_RuntimeMethod_var);
		AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 * L_2 = ___value0;
		NullCheck(L_1);
		SteamVR_Action_Single_Source_remove_onAxis_m75F1ECD8DFD59FAFE831C580F22F1E2A0039D742(L_1, L_2, /*hidden argument*/NULL);
		// { add { sourceMap[SteamVR_Input_Sources.Any].onAxis += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onAxis -= value; } }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Single::add_onActiveChange(Valve.VR.SteamVR_Action_Single/ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Single_add_onActiveChange_m313983387066E4AEB9EE56226D918580918D29B4 (SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * __this, ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Single_add_onActiveChange_m313983387066E4AEB9EE56226D918580918D29B4_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// { add { sourceMap[SteamVR_Input_Sources.Any].onActiveChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onActiveChange -= value; } }
		SteamVR_Action_Single_Source_Map_tBD46D15F4FCB5A4B6BDA2B1FE96035D4DDBDBA37 * L_0 = ((SteamVR_Action_2_t6C5A72BCD96947140E949B195C2578D4AE46E170 *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * L_1 = SteamVR_Action_Source_Map_1_get_Item_m303FDBA93004D8CE7E49B6F079D27B5CB7AC9B72(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_m303FDBA93004D8CE7E49B6F079D27B5CB7AC9B72_RuntimeMethod_var);
		ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * L_2 = ___value0;
		NullCheck(L_1);
		SteamVR_Action_Single_Source_add_onActiveChange_mB2A4804575E6862178A504A34B087ADCC989D383(L_1, L_2, /*hidden argument*/NULL);
		// { add { sourceMap[SteamVR_Input_Sources.Any].onActiveChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onActiveChange -= value; } }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Single::remove_onActiveChange(Valve.VR.SteamVR_Action_Single/ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Single_remove_onActiveChange_m05301F4079CAB13041B7E8117DFCA8B8BB8281BA (SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * __this, ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Single_remove_onActiveChange_m05301F4079CAB13041B7E8117DFCA8B8BB8281BA_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// { add { sourceMap[SteamVR_Input_Sources.Any].onActiveChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onActiveChange -= value; } }
		SteamVR_Action_Single_Source_Map_tBD46D15F4FCB5A4B6BDA2B1FE96035D4DDBDBA37 * L_0 = ((SteamVR_Action_2_t6C5A72BCD96947140E949B195C2578D4AE46E170 *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * L_1 = SteamVR_Action_Source_Map_1_get_Item_m303FDBA93004D8CE7E49B6F079D27B5CB7AC9B72(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_m303FDBA93004D8CE7E49B6F079D27B5CB7AC9B72_RuntimeMethod_var);
		ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * L_2 = ___value0;
		NullCheck(L_1);
		SteamVR_Action_Single_Source_remove_onActiveChange_mBE7196AA119D8715900D8D6F01D96E60801EF7E7(L_1, L_2, /*hidden argument*/NULL);
		// { add { sourceMap[SteamVR_Input_Sources.Any].onActiveChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onActiveChange -= value; } }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Single::add_onActiveBindingChange(Valve.VR.SteamVR_Action_Single/ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Single_add_onActiveBindingChange_m68FC0D2B9886A5B085973A35BE71083F0F89F2C8 (SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * __this, ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Single_add_onActiveBindingChange_m68FC0D2B9886A5B085973A35BE71083F0F89F2C8_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// { add { sourceMap[SteamVR_Input_Sources.Any].onActiveBindingChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onActiveBindingChange -= value; } }
		SteamVR_Action_Single_Source_Map_tBD46D15F4FCB5A4B6BDA2B1FE96035D4DDBDBA37 * L_0 = ((SteamVR_Action_2_t6C5A72BCD96947140E949B195C2578D4AE46E170 *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * L_1 = SteamVR_Action_Source_Map_1_get_Item_m303FDBA93004D8CE7E49B6F079D27B5CB7AC9B72(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_m303FDBA93004D8CE7E49B6F079D27B5CB7AC9B72_RuntimeMethod_var);
		ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * L_2 = ___value0;
		NullCheck(L_1);
		SteamVR_Action_Single_Source_add_onActiveBindingChange_mBC814F86ED29A7728BD85E8C212603D05F4FD282(L_1, L_2, /*hidden argument*/NULL);
		// { add { sourceMap[SteamVR_Input_Sources.Any].onActiveBindingChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onActiveBindingChange -= value; } }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Single::remove_onActiveBindingChange(Valve.VR.SteamVR_Action_Single/ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Single_remove_onActiveBindingChange_mCD7C3632A01FFA6039315EB7AAE0AF2775126519 (SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * __this, ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Single_remove_onActiveBindingChange_mCD7C3632A01FFA6039315EB7AAE0AF2775126519_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// { add { sourceMap[SteamVR_Input_Sources.Any].onActiveBindingChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onActiveBindingChange -= value; } }
		SteamVR_Action_Single_Source_Map_tBD46D15F4FCB5A4B6BDA2B1FE96035D4DDBDBA37 * L_0 = ((SteamVR_Action_2_t6C5A72BCD96947140E949B195C2578D4AE46E170 *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * L_1 = SteamVR_Action_Source_Map_1_get_Item_m303FDBA93004D8CE7E49B6F079D27B5CB7AC9B72(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_m303FDBA93004D8CE7E49B6F079D27B5CB7AC9B72_RuntimeMethod_var);
		ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * L_2 = ___value0;
		NullCheck(L_1);
		SteamVR_Action_Single_Source_remove_onActiveBindingChange_mE912C712F7759127954B79BD2D501387E3AD0DFD(L_1, L_2, /*hidden argument*/NULL);
		// { add { sourceMap[SteamVR_Input_Sources.Any].onActiveBindingChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onActiveBindingChange -= value; } }
		return;
	}
}
// System.Single Valve.VR.SteamVR_Action_Single::get_axis()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Single_get_axis_m52D0C27D2C42B7BE3518D54AB092863143B95214 (SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Single_get_axis_m52D0C27D2C42B7BE3518D54AB092863143B95214_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	float V_0 = 0.0f;
	{
		// public float axis { get { return sourceMap[SteamVR_Input_Sources.Any].axis; } }
		SteamVR_Action_Single_Source_Map_tBD46D15F4FCB5A4B6BDA2B1FE96035D4DDBDBA37 * L_0 = ((SteamVR_Action_2_t6C5A72BCD96947140E949B195C2578D4AE46E170 *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * L_1 = SteamVR_Action_Source_Map_1_get_Item_m303FDBA93004D8CE7E49B6F079D27B5CB7AC9B72(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_m303FDBA93004D8CE7E49B6F079D27B5CB7AC9B72_RuntimeMethod_var);
		NullCheck(L_1);
		float L_2 = SteamVR_Action_Single_Source_get_axis_mBA7DCD6C227E324C4B4029D020E37B1262CFB592(L_1, /*hidden argument*/NULL);
		V_0 = L_2;
		goto IL_0015;
	}

IL_0015:
	{
		// public float axis { get { return sourceMap[SteamVR_Input_Sources.Any].axis; } }
		float L_3 = V_0;
		return L_3;
	}
}
// System.Single Valve.VR.SteamVR_Action_Single::get_lastAxis()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Single_get_lastAxis_mDBBC59BDFC504DDCE1CDAD0CEB2AE7374C0733E7 (SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Single_get_lastAxis_mDBBC59BDFC504DDCE1CDAD0CEB2AE7374C0733E7_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	float V_0 = 0.0f;
	{
		// public float lastAxis { get { return sourceMap[SteamVR_Input_Sources.Any].lastAxis; } }
		SteamVR_Action_Single_Source_Map_tBD46D15F4FCB5A4B6BDA2B1FE96035D4DDBDBA37 * L_0 = ((SteamVR_Action_2_t6C5A72BCD96947140E949B195C2578D4AE46E170 *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * L_1 = SteamVR_Action_Source_Map_1_get_Item_m303FDBA93004D8CE7E49B6F079D27B5CB7AC9B72(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_m303FDBA93004D8CE7E49B6F079D27B5CB7AC9B72_RuntimeMethod_var);
		NullCheck(L_1);
		float L_2 = SteamVR_Action_Single_Source_get_lastAxis_m0E8BA1EEB9AD3414A37EB061A7DEEFE074832474(L_1, /*hidden argument*/NULL);
		V_0 = L_2;
		goto IL_0015;
	}

IL_0015:
	{
		// public float lastAxis { get { return sourceMap[SteamVR_Input_Sources.Any].lastAxis; } }
		float L_3 = V_0;
		return L_3;
	}
}
// System.Single Valve.VR.SteamVR_Action_Single::get_delta()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Single_get_delta_m158F016351CC276BEA667F77A1FD5AC6A8E69B8B (SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Single_get_delta_m158F016351CC276BEA667F77A1FD5AC6A8E69B8B_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	float V_0 = 0.0f;
	{
		// public float delta { get { return sourceMap[SteamVR_Input_Sources.Any].delta; } }
		SteamVR_Action_Single_Source_Map_tBD46D15F4FCB5A4B6BDA2B1FE96035D4DDBDBA37 * L_0 = ((SteamVR_Action_2_t6C5A72BCD96947140E949B195C2578D4AE46E170 *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * L_1 = SteamVR_Action_Source_Map_1_get_Item_m303FDBA93004D8CE7E49B6F079D27B5CB7AC9B72(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_m303FDBA93004D8CE7E49B6F079D27B5CB7AC9B72_RuntimeMethod_var);
		NullCheck(L_1);
		float L_2 = SteamVR_Action_Single_Source_get_delta_mD9BEE7AF7213499DAE270C19A1FBD5298527F1BF(L_1, /*hidden argument*/NULL);
		V_0 = L_2;
		goto IL_0015;
	}

IL_0015:
	{
		// public float delta { get { return sourceMap[SteamVR_Input_Sources.Any].delta; } }
		float L_3 = V_0;
		return L_3;
	}
}
// System.Single Valve.VR.SteamVR_Action_Single::get_lastDelta()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Single_get_lastDelta_m55BD651C44A90063AFED28254EA27A8A69AA9422 (SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Single_get_lastDelta_m55BD651C44A90063AFED28254EA27A8A69AA9422_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	float V_0 = 0.0f;
	{
		// public float lastDelta { get { return sourceMap[SteamVR_Input_Sources.Any].lastDelta; } }
		SteamVR_Action_Single_Source_Map_tBD46D15F4FCB5A4B6BDA2B1FE96035D4DDBDBA37 * L_0 = ((SteamVR_Action_2_t6C5A72BCD96947140E949B195C2578D4AE46E170 *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * L_1 = SteamVR_Action_Source_Map_1_get_Item_m303FDBA93004D8CE7E49B6F079D27B5CB7AC9B72(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_m303FDBA93004D8CE7E49B6F079D27B5CB7AC9B72_RuntimeMethod_var);
		NullCheck(L_1);
		float L_2 = SteamVR_Action_Single_Source_get_lastDelta_m1030BF40FF11089715D2A20730386FB2843AD08F(L_1, /*hidden argument*/NULL);
		V_0 = L_2;
		goto IL_0015;
	}

IL_0015:
	{
		// public float lastDelta { get { return sourceMap[SteamVR_Input_Sources.Any].lastDelta; } }
		float L_3 = V_0;
		return L_3;
	}
}
// System.Void Valve.VR.SteamVR_Action_Single::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Single__ctor_m54397AD53667A6A5F802AD03B0AE9FD5B8576EAA (SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Single__ctor_m54397AD53667A6A5F802AD03B0AE9FD5B8576EAA_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// public SteamVR_Action_Single() { }
		SteamVR_Action_In_2__ctor_m41F7AFC75B6446B69288BD50077908E1AF71C61A(__this, /*hidden argument*/SteamVR_Action_In_2__ctor_m41F7AFC75B6446B69288BD50077908E1AF71C61A_RuntimeMethod_var);
		// public SteamVR_Action_Single() { }
		return;
	}
}
// System.Single Valve.VR.SteamVR_Action_Single::GetAxis(Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Single_GetAxis_m38BBC5069E57681D2416DCD674CCD8174AF48014 (SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * __this, int32_t ___inputSource0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Single_GetAxis_m38BBC5069E57681D2416DCD674CCD8174AF48014_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	float V_0 = 0.0f;
	{
		// return sourceMap[inputSource].axis;
		SteamVR_Action_Single_Source_Map_tBD46D15F4FCB5A4B6BDA2B1FE96035D4DDBDBA37 * L_0 = ((SteamVR_Action_2_t6C5A72BCD96947140E949B195C2578D4AE46E170 *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource0;
		NullCheck(L_0);
		SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * L_2 = SteamVR_Action_Source_Map_1_get_Item_m303FDBA93004D8CE7E49B6F079D27B5CB7AC9B72(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_m303FDBA93004D8CE7E49B6F079D27B5CB7AC9B72_RuntimeMethod_var);
		NullCheck(L_2);
		float L_3 = SteamVR_Action_Single_Source_get_axis_mBA7DCD6C227E324C4B4029D020E37B1262CFB592(L_2, /*hidden argument*/NULL);
		V_0 = L_3;
		goto IL_0015;
	}

IL_0015:
	{
		// }
		float L_4 = V_0;
		return L_4;
	}
}
// System.Single Valve.VR.SteamVR_Action_Single::GetAxisDelta(Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Single_GetAxisDelta_mEE91A98FFD9F6DD3E571B23AE98D8CE0A519499E (SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * __this, int32_t ___inputSource0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Single_GetAxisDelta_mEE91A98FFD9F6DD3E571B23AE98D8CE0A519499E_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	float V_0 = 0.0f;
	{
		// return sourceMap[inputSource].delta;
		SteamVR_Action_Single_Source_Map_tBD46D15F4FCB5A4B6BDA2B1FE96035D4DDBDBA37 * L_0 = ((SteamVR_Action_2_t6C5A72BCD96947140E949B195C2578D4AE46E170 *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource0;
		NullCheck(L_0);
		SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * L_2 = SteamVR_Action_Source_Map_1_get_Item_m303FDBA93004D8CE7E49B6F079D27B5CB7AC9B72(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_m303FDBA93004D8CE7E49B6F079D27B5CB7AC9B72_RuntimeMethod_var);
		NullCheck(L_2);
		float L_3 = SteamVR_Action_Single_Source_get_delta_mD9BEE7AF7213499DAE270C19A1FBD5298527F1BF(L_2, /*hidden argument*/NULL);
		V_0 = L_3;
		goto IL_0015;
	}

IL_0015:
	{
		// }
		float L_4 = V_0;
		return L_4;
	}
}
// System.Single Valve.VR.SteamVR_Action_Single::GetLastAxis(Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Single_GetLastAxis_m23C84AFD00C95E729CD5B3AF5783A6ED5E124F63 (SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * __this, int32_t ___inputSource0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Single_GetLastAxis_m23C84AFD00C95E729CD5B3AF5783A6ED5E124F63_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	float V_0 = 0.0f;
	{
		// return sourceMap[inputSource].lastAxis;
		SteamVR_Action_Single_Source_Map_tBD46D15F4FCB5A4B6BDA2B1FE96035D4DDBDBA37 * L_0 = ((SteamVR_Action_2_t6C5A72BCD96947140E949B195C2578D4AE46E170 *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource0;
		NullCheck(L_0);
		SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * L_2 = SteamVR_Action_Source_Map_1_get_Item_m303FDBA93004D8CE7E49B6F079D27B5CB7AC9B72(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_m303FDBA93004D8CE7E49B6F079D27B5CB7AC9B72_RuntimeMethod_var);
		NullCheck(L_2);
		float L_3 = SteamVR_Action_Single_Source_get_lastAxis_m0E8BA1EEB9AD3414A37EB061A7DEEFE074832474(L_2, /*hidden argument*/NULL);
		V_0 = L_3;
		goto IL_0015;
	}

IL_0015:
	{
		// }
		float L_4 = V_0;
		return L_4;
	}
}
// System.Single Valve.VR.SteamVR_Action_Single::GetLastAxisDelta(Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Single_GetLastAxisDelta_mF6DC101084D2C6688BA68D73A16822E7A65E86CB (SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * __this, int32_t ___inputSource0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Single_GetLastAxisDelta_mF6DC101084D2C6688BA68D73A16822E7A65E86CB_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	float V_0 = 0.0f;
	{
		// return sourceMap[inputSource].lastDelta;
		SteamVR_Action_Single_Source_Map_tBD46D15F4FCB5A4B6BDA2B1FE96035D4DDBDBA37 * L_0 = ((SteamVR_Action_2_t6C5A72BCD96947140E949B195C2578D4AE46E170 *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource0;
		NullCheck(L_0);
		SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * L_2 = SteamVR_Action_Source_Map_1_get_Item_m303FDBA93004D8CE7E49B6F079D27B5CB7AC9B72(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_m303FDBA93004D8CE7E49B6F079D27B5CB7AC9B72_RuntimeMethod_var);
		NullCheck(L_2);
		float L_3 = SteamVR_Action_Single_Source_get_lastDelta_m1030BF40FF11089715D2A20730386FB2843AD08F(L_2, /*hidden argument*/NULL);
		V_0 = L_3;
		goto IL_0015;
	}

IL_0015:
	{
		// }
		float L_4 = V_0;
		return L_4;
	}
}
// System.Void Valve.VR.SteamVR_Action_Single::AddOnActiveChangeListener(Valve.VR.SteamVR_Action_Single/ActiveChangeHandler,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Single_AddOnActiveChangeListener_m5B1C1690BE86EB2B261BB42DE8D06ECE4037CFBE (SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * __this, ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * ___functionToCall0, int32_t ___inputSource1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Single_AddOnActiveChangeListener_m5B1C1690BE86EB2B261BB42DE8D06ECE4037CFBE_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// sourceMap[inputSource].onActiveChange += functionToCall;
		SteamVR_Action_Single_Source_Map_tBD46D15F4FCB5A4B6BDA2B1FE96035D4DDBDBA37 * L_0 = ((SteamVR_Action_2_t6C5A72BCD96947140E949B195C2578D4AE46E170 *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource1;
		NullCheck(L_0);
		SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * L_2 = SteamVR_Action_Source_Map_1_get_Item_m303FDBA93004D8CE7E49B6F079D27B5CB7AC9B72(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_m303FDBA93004D8CE7E49B6F079D27B5CB7AC9B72_RuntimeMethod_var);
		ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * L_3 = ___functionToCall0;
		NullCheck(L_2);
		SteamVR_Action_Single_Source_add_onActiveChange_mB2A4804575E6862178A504A34B087ADCC989D383(L_2, L_3, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Single::RemoveOnActiveChangeListener(Valve.VR.SteamVR_Action_Single/ActiveChangeHandler,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Single_RemoveOnActiveChangeListener_m8784E8A54DBA77FBD4FFFB977AD6EAB03FAB55E5 (SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * __this, ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * ___functionToStopCalling0, int32_t ___inputSource1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Single_RemoveOnActiveChangeListener_m8784E8A54DBA77FBD4FFFB977AD6EAB03FAB55E5_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// sourceMap[inputSource].onActiveChange -= functionToStopCalling;
		SteamVR_Action_Single_Source_Map_tBD46D15F4FCB5A4B6BDA2B1FE96035D4DDBDBA37 * L_0 = ((SteamVR_Action_2_t6C5A72BCD96947140E949B195C2578D4AE46E170 *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource1;
		NullCheck(L_0);
		SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * L_2 = SteamVR_Action_Source_Map_1_get_Item_m303FDBA93004D8CE7E49B6F079D27B5CB7AC9B72(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_m303FDBA93004D8CE7E49B6F079D27B5CB7AC9B72_RuntimeMethod_var);
		ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * L_3 = ___functionToStopCalling0;
		NullCheck(L_2);
		SteamVR_Action_Single_Source_remove_onActiveChange_mBE7196AA119D8715900D8D6F01D96E60801EF7E7(L_2, L_3, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Single::AddOnActiveBindingChangeListener(Valve.VR.SteamVR_Action_Single/ActiveChangeHandler,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Single_AddOnActiveBindingChangeListener_mB7CB581B0D4FAF87AE6BF8B11B21A681BA1FD38D (SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * __this, ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * ___functionToCall0, int32_t ___inputSource1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Single_AddOnActiveBindingChangeListener_mB7CB581B0D4FAF87AE6BF8B11B21A681BA1FD38D_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// sourceMap[inputSource].onActiveBindingChange += functionToCall;
		SteamVR_Action_Single_Source_Map_tBD46D15F4FCB5A4B6BDA2B1FE96035D4DDBDBA37 * L_0 = ((SteamVR_Action_2_t6C5A72BCD96947140E949B195C2578D4AE46E170 *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource1;
		NullCheck(L_0);
		SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * L_2 = SteamVR_Action_Source_Map_1_get_Item_m303FDBA93004D8CE7E49B6F079D27B5CB7AC9B72(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_m303FDBA93004D8CE7E49B6F079D27B5CB7AC9B72_RuntimeMethod_var);
		ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * L_3 = ___functionToCall0;
		NullCheck(L_2);
		SteamVR_Action_Single_Source_add_onActiveBindingChange_mBC814F86ED29A7728BD85E8C212603D05F4FD282(L_2, L_3, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Single::RemoveOnActiveBindingChangeListener(Valve.VR.SteamVR_Action_Single/ActiveChangeHandler,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Single_RemoveOnActiveBindingChangeListener_m82094ADF9218003298FB165C9513EA1104B15153 (SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * __this, ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * ___functionToStopCalling0, int32_t ___inputSource1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Single_RemoveOnActiveBindingChangeListener_m82094ADF9218003298FB165C9513EA1104B15153_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// sourceMap[inputSource].onActiveBindingChange -= functionToStopCalling;
		SteamVR_Action_Single_Source_Map_tBD46D15F4FCB5A4B6BDA2B1FE96035D4DDBDBA37 * L_0 = ((SteamVR_Action_2_t6C5A72BCD96947140E949B195C2578D4AE46E170 *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource1;
		NullCheck(L_0);
		SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * L_2 = SteamVR_Action_Source_Map_1_get_Item_m303FDBA93004D8CE7E49B6F079D27B5CB7AC9B72(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_m303FDBA93004D8CE7E49B6F079D27B5CB7AC9B72_RuntimeMethod_var);
		ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * L_3 = ___functionToStopCalling0;
		NullCheck(L_2);
		SteamVR_Action_Single_Source_remove_onActiveBindingChange_mE912C712F7759127954B79BD2D501387E3AD0DFD(L_2, L_3, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Single::AddOnChangeListener(Valve.VR.SteamVR_Action_Single/ChangeHandler,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Single_AddOnChangeListener_m7576F4BA39BACF3830CB5B61A66885570DEFDD14 (SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * __this, ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED * ___functionToCall0, int32_t ___inputSource1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Single_AddOnChangeListener_m7576F4BA39BACF3830CB5B61A66885570DEFDD14_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// sourceMap[inputSource].onChange += functionToCall;
		SteamVR_Action_Single_Source_Map_tBD46D15F4FCB5A4B6BDA2B1FE96035D4DDBDBA37 * L_0 = ((SteamVR_Action_2_t6C5A72BCD96947140E949B195C2578D4AE46E170 *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource1;
		NullCheck(L_0);
		SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * L_2 = SteamVR_Action_Source_Map_1_get_Item_m303FDBA93004D8CE7E49B6F079D27B5CB7AC9B72(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_m303FDBA93004D8CE7E49B6F079D27B5CB7AC9B72_RuntimeMethod_var);
		ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED * L_3 = ___functionToCall0;
		NullCheck(L_2);
		SteamVR_Action_Single_Source_add_onChange_m293210E1B8395F5C75302844AF1B4AE74DD2F3A8(L_2, L_3, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Single::RemoveOnChangeListener(Valve.VR.SteamVR_Action_Single/ChangeHandler,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Single_RemoveOnChangeListener_m29B1C454A213754C06A1F273D099AA3F7D1055DB (SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * __this, ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED * ___functionToStopCalling0, int32_t ___inputSource1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Single_RemoveOnChangeListener_m29B1C454A213754C06A1F273D099AA3F7D1055DB_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// sourceMap[inputSource].onChange -= functionToStopCalling;
		SteamVR_Action_Single_Source_Map_tBD46D15F4FCB5A4B6BDA2B1FE96035D4DDBDBA37 * L_0 = ((SteamVR_Action_2_t6C5A72BCD96947140E949B195C2578D4AE46E170 *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource1;
		NullCheck(L_0);
		SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * L_2 = SteamVR_Action_Source_Map_1_get_Item_m303FDBA93004D8CE7E49B6F079D27B5CB7AC9B72(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_m303FDBA93004D8CE7E49B6F079D27B5CB7AC9B72_RuntimeMethod_var);
		ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED * L_3 = ___functionToStopCalling0;
		NullCheck(L_2);
		SteamVR_Action_Single_Source_remove_onChange_m416E274F58D3F80F3E2AC77BC933E1D1F8BBDECD(L_2, L_3, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Single::AddOnUpdateListener(Valve.VR.SteamVR_Action_Single/UpdateHandler,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Single_AddOnUpdateListener_m7FFE46EEBFF0E97F275AA1BA945E757FC67D4D8E (SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * __this, UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D * ___functionToCall0, int32_t ___inputSource1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Single_AddOnUpdateListener_m7FFE46EEBFF0E97F275AA1BA945E757FC67D4D8E_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// sourceMap[inputSource].onUpdate += functionToCall;
		SteamVR_Action_Single_Source_Map_tBD46D15F4FCB5A4B6BDA2B1FE96035D4DDBDBA37 * L_0 = ((SteamVR_Action_2_t6C5A72BCD96947140E949B195C2578D4AE46E170 *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource1;
		NullCheck(L_0);
		SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * L_2 = SteamVR_Action_Source_Map_1_get_Item_m303FDBA93004D8CE7E49B6F079D27B5CB7AC9B72(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_m303FDBA93004D8CE7E49B6F079D27B5CB7AC9B72_RuntimeMethod_var);
		UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D * L_3 = ___functionToCall0;
		NullCheck(L_2);
		SteamVR_Action_Single_Source_add_onUpdate_m5598F5E0ABEB41135E942BD9590CA88A5E89A167(L_2, L_3, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Single::RemoveOnUpdateListener(Valve.VR.SteamVR_Action_Single/UpdateHandler,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Single_RemoveOnUpdateListener_mF657D750181A53DD651F4F30AE4A928CD64E5A60 (SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * __this, UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D * ___functionToStopCalling0, int32_t ___inputSource1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Single_RemoveOnUpdateListener_mF657D750181A53DD651F4F30AE4A928CD64E5A60_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// sourceMap[inputSource].onUpdate -= functionToStopCalling;
		SteamVR_Action_Single_Source_Map_tBD46D15F4FCB5A4B6BDA2B1FE96035D4DDBDBA37 * L_0 = ((SteamVR_Action_2_t6C5A72BCD96947140E949B195C2578D4AE46E170 *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource1;
		NullCheck(L_0);
		SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * L_2 = SteamVR_Action_Source_Map_1_get_Item_m303FDBA93004D8CE7E49B6F079D27B5CB7AC9B72(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_m303FDBA93004D8CE7E49B6F079D27B5CB7AC9B72_RuntimeMethod_var);
		UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D * L_3 = ___functionToStopCalling0;
		NullCheck(L_2);
		SteamVR_Action_Single_Source_remove_onUpdate_mB6B6416FED4DA773EFB6D97EE7E6C9ED8F4CA16C(L_2, L_3, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Single::AddOnAxisListener(Valve.VR.SteamVR_Action_Single/AxisHandler,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Single_AddOnAxisListener_mDC8E857CE06E2E56AF430C0DA494261B84080712 (SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * __this, AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 * ___functionToCall0, int32_t ___inputSource1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Single_AddOnAxisListener_mDC8E857CE06E2E56AF430C0DA494261B84080712_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// sourceMap[inputSource].onAxis += functionToCall;
		SteamVR_Action_Single_Source_Map_tBD46D15F4FCB5A4B6BDA2B1FE96035D4DDBDBA37 * L_0 = ((SteamVR_Action_2_t6C5A72BCD96947140E949B195C2578D4AE46E170 *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource1;
		NullCheck(L_0);
		SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * L_2 = SteamVR_Action_Source_Map_1_get_Item_m303FDBA93004D8CE7E49B6F079D27B5CB7AC9B72(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_m303FDBA93004D8CE7E49B6F079D27B5CB7AC9B72_RuntimeMethod_var);
		AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 * L_3 = ___functionToCall0;
		NullCheck(L_2);
		SteamVR_Action_Single_Source_add_onAxis_m61631AE5B07E5BA034D52ED44590597E6A13AC24(L_2, L_3, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Single::RemoveOnAxisListener(Valve.VR.SteamVR_Action_Single/AxisHandler,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Single_RemoveOnAxisListener_m5041ABB1425990602C409CE8A70889D1A649951F (SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * __this, AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 * ___functionToStopCalling0, int32_t ___inputSource1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Single_RemoveOnAxisListener_m5041ABB1425990602C409CE8A70889D1A649951F_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// sourceMap[inputSource].onAxis -= functionToStopCalling;
		SteamVR_Action_Single_Source_Map_tBD46D15F4FCB5A4B6BDA2B1FE96035D4DDBDBA37 * L_0 = ((SteamVR_Action_2_t6C5A72BCD96947140E949B195C2578D4AE46E170 *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource1;
		NullCheck(L_0);
		SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * L_2 = SteamVR_Action_Source_Map_1_get_Item_m303FDBA93004D8CE7E49B6F079D27B5CB7AC9B72(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_m303FDBA93004D8CE7E49B6F079D27B5CB7AC9B72_RuntimeMethod_var);
		AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 * L_3 = ___functionToStopCalling0;
		NullCheck(L_2);
		SteamVR_Action_Single_Source_remove_onAxis_m75F1ECD8DFD59FAFE831C580F22F1E2A0039D742(L_2, L_3, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Single::RemoveAllListeners(Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Single_RemoveAllListeners_m74BF913FA38100D5FE1F65CB66A95A9ED4D681D6 (SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * __this, int32_t ___inputSource0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Single_RemoveAllListeners_m74BF913FA38100D5FE1F65CB66A95A9ED4D681D6_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// sourceMap[inputSource].RemoveAllListeners();
		SteamVR_Action_Single_Source_Map_tBD46D15F4FCB5A4B6BDA2B1FE96035D4DDBDBA37 * L_0 = ((SteamVR_Action_2_t6C5A72BCD96947140E949B195C2578D4AE46E170 *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource0;
		NullCheck(L_0);
		SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * L_2 = SteamVR_Action_Source_Map_1_get_Item_m303FDBA93004D8CE7E49B6F079D27B5CB7AC9B72(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_m303FDBA93004D8CE7E49B6F079D27B5CB7AC9B72_RuntimeMethod_var);
		NullCheck(L_2);
		SteamVR_Action_Single_Source_RemoveAllListeners_m23CB655786F09E0A2FB8273527639C90768AF2D8(L_2, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Single::UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Single_UnityEngine_ISerializationCallbackReceiver_OnBeforeSerialize_m8706715BC0D65809DD8C2C4E94592B7992E6E948 (SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * __this, const RuntimeMethod* method)
{
	{
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Single::UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Single_UnityEngine_ISerializationCallbackReceiver_OnAfterDeserialize_mA3FB9F54BAB9C46D112D75070AB415712072E106 (SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Single_UnityEngine_ISerializationCallbackReceiver_OnAfterDeserialize_mA3FB9F54BAB9C46D112D75070AB415712072E106_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// InitAfterDeserialize();
		SteamVR_Action_2_InitAfterDeserialize_mE728FED0E8C00D51AC4197B832D5566ED4AC6B5C(__this, /*hidden argument*/SteamVR_Action_2_InitAfterDeserialize_mE728FED0E8C00D51AC4197B832D5566ED4AC6B5C_RuntimeMethod_var);
		// }
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Action_Single/ActiveChangeHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ActiveChangeHandler__ctor_m163B7F23AFF7A681B087C610CDAAC542F4FC43D6 (ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.SteamVR_Action_Single/ActiveChangeHandler::Invoke(Valve.VR.SteamVR_Action_Single,Valve.VR.SteamVR_Input_Sources,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ActiveChangeHandler_Invoke_m226C2CFA8D9BB2881E969D6FB484D106AAF0D98D (ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * __this, SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * ___fromAction0, int32_t ___fromSource1, bool ___active2, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 3)
			{
				// open
				typedef void (*FunctionPointerType) (SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 *, int32_t, bool, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___active2, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 *, int32_t, bool, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, ___active2, targetMethod);
			}
		}
		else if (___parameterCount != 3)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker2< int32_t, bool >::Invoke(targetMethod, ___fromAction0, ___fromSource1, ___active2);
					else
						GenericVirtActionInvoker2< int32_t, bool >::Invoke(targetMethod, ___fromAction0, ___fromSource1, ___active2);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker2< int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___fromAction0, ___fromSource1, ___active2);
					else
						VirtActionInvoker2< int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___fromAction0, ___fromSource1, ___active2);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___fromSource1) - 1), ___active2, targetMethod);
				}
				typedef void (*FunctionPointerType) (SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 *, int32_t, bool, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___active2, targetMethod);
			}
		}
		else
		{
			// closed
			if (targetThis != NULL && il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker3< SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 *, int32_t, bool >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1, ___active2);
					else
						GenericVirtActionInvoker3< SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 *, int32_t, bool >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1, ___active2);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker3< SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 *, int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___fromAction0, ___fromSource1, ___active2);
					else
						VirtActionInvoker3< SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 *, int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___fromAction0, ___fromSource1, ___active2);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, int32_t, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___fromAction0) - 1), ___fromSource1, ___active2, targetMethod);
				}
				if (targetThis == NULL)
				{
					typedef void (*FunctionPointerType) (SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 *, int32_t, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___active2, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 *, int32_t, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, ___active2, targetMethod);
				}
			}
		}
	}
}
// System.IAsyncResult Valve.VR.SteamVR_Action_Single/ActiveChangeHandler::BeginInvoke(Valve.VR.SteamVR_Action_Single,Valve.VR.SteamVR_Input_Sources,System.Boolean,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* ActiveChangeHandler_BeginInvoke_mD881C5A9D64A5B3F346FED4892B1BA5E19D94190 (ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * __this, SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * ___fromAction0, int32_t ___fromSource1, bool ___active2, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback3, RuntimeObject * ___object4, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ActiveChangeHandler_BeginInvoke_mD881C5A9D64A5B3F346FED4892B1BA5E19D94190_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[4] = {0};
	__d_args[0] = ___fromAction0;
	__d_args[1] = Box(SteamVR_Input_Sources_tCE41AA589FB3B9516BDE0DFABDCB4AAEA29528F7_il2cpp_TypeInfo_var, &___fromSource1);
	__d_args[2] = Box(Boolean_tB53F6830F670160873277339AA58F15CAED4399C_il2cpp_TypeInfo_var, &___active2);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback3, (RuntimeObject*)___object4);
}
// System.Void Valve.VR.SteamVR_Action_Single/ActiveChangeHandler::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ActiveChangeHandler_EndInvoke_mA731E36E9D52FA568D87519B2AE33CCE6C2B28B9 (ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Action_Single/AxisHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void AxisHandler__ctor_m13D20337BE85E01A8B0DA46EC96C10B767B0D1F7 (AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.SteamVR_Action_Single/AxisHandler::Invoke(Valve.VR.SteamVR_Action_Single,Valve.VR.SteamVR_Input_Sources,System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void AxisHandler_Invoke_mDA97876A749D05A969CA6F3E21492029C4EECD9B (AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 * __this, SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * ___fromAction0, int32_t ___fromSource1, float ___newAxis2, float ___newDelta3, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 4)
			{
				// open
				typedef void (*FunctionPointerType) (SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 *, int32_t, float, float, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___newAxis2, ___newDelta3, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 *, int32_t, float, float, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, ___newAxis2, ___newDelta3, targetMethod);
			}
		}
		else if (___parameterCount != 4)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker3< int32_t, float, float >::Invoke(targetMethod, ___fromAction0, ___fromSource1, ___newAxis2, ___newDelta3);
					else
						GenericVirtActionInvoker3< int32_t, float, float >::Invoke(targetMethod, ___fromAction0, ___fromSource1, ___newAxis2, ___newDelta3);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker3< int32_t, float, float >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___fromAction0, ___fromSource1, ___newAxis2, ___newDelta3);
					else
						VirtActionInvoker3< int32_t, float, float >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___fromAction0, ___fromSource1, ___newAxis2, ___newDelta3);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, float, float, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___fromSource1) - 1), ___newAxis2, ___newDelta3, targetMethod);
				}
				typedef void (*FunctionPointerType) (SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 *, int32_t, float, float, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___newAxis2, ___newDelta3, targetMethod);
			}
		}
		else
		{
			// closed
			if (targetThis != NULL && il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker4< SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 *, int32_t, float, float >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1, ___newAxis2, ___newDelta3);
					else
						GenericVirtActionInvoker4< SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 *, int32_t, float, float >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1, ___newAxis2, ___newDelta3);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker4< SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 *, int32_t, float, float >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___fromAction0, ___fromSource1, ___newAxis2, ___newDelta3);
					else
						VirtActionInvoker4< SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 *, int32_t, float, float >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___fromAction0, ___fromSource1, ___newAxis2, ___newDelta3);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, int32_t, float, float, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___fromAction0) - 1), ___fromSource1, ___newAxis2, ___newDelta3, targetMethod);
				}
				if (targetThis == NULL)
				{
					typedef void (*FunctionPointerType) (SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 *, int32_t, float, float, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___newAxis2, ___newDelta3, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 *, int32_t, float, float, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, ___newAxis2, ___newDelta3, targetMethod);
				}
			}
		}
	}
}
// System.IAsyncResult Valve.VR.SteamVR_Action_Single/AxisHandler::BeginInvoke(Valve.VR.SteamVR_Action_Single,Valve.VR.SteamVR_Input_Sources,System.Single,System.Single,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* AxisHandler_BeginInvoke_m913569F028FDA434D71050BCC20C82B54526B472 (AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 * __this, SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * ___fromAction0, int32_t ___fromSource1, float ___newAxis2, float ___newDelta3, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback4, RuntimeObject * ___object5, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (AxisHandler_BeginInvoke_m913569F028FDA434D71050BCC20C82B54526B472_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[5] = {0};
	__d_args[0] = ___fromAction0;
	__d_args[1] = Box(SteamVR_Input_Sources_tCE41AA589FB3B9516BDE0DFABDCB4AAEA29528F7_il2cpp_TypeInfo_var, &___fromSource1);
	__d_args[2] = Box(Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_il2cpp_TypeInfo_var, &___newAxis2);
	__d_args[3] = Box(Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_il2cpp_TypeInfo_var, &___newDelta3);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback4, (RuntimeObject*)___object5);
}
// System.Void Valve.VR.SteamVR_Action_Single/AxisHandler::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void AxisHandler_EndInvoke_mA9F3C18DA049FFD9206F56C7E9B06F29DEE94AC1 (AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Action_Single/ChangeHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ChangeHandler__ctor_mCF2663657392E7296C21F3A6E3F8DB6A77A94CAD (ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.SteamVR_Action_Single/ChangeHandler::Invoke(Valve.VR.SteamVR_Action_Single,Valve.VR.SteamVR_Input_Sources,System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ChangeHandler_Invoke_mA6FEAACAFCF036074E714B587983BF47E83DC71A (ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED * __this, SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * ___fromAction0, int32_t ___fromSource1, float ___newAxis2, float ___newDelta3, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 4)
			{
				// open
				typedef void (*FunctionPointerType) (SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 *, int32_t, float, float, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___newAxis2, ___newDelta3, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 *, int32_t, float, float, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, ___newAxis2, ___newDelta3, targetMethod);
			}
		}
		else if (___parameterCount != 4)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker3< int32_t, float, float >::Invoke(targetMethod, ___fromAction0, ___fromSource1, ___newAxis2, ___newDelta3);
					else
						GenericVirtActionInvoker3< int32_t, float, float >::Invoke(targetMethod, ___fromAction0, ___fromSource1, ___newAxis2, ___newDelta3);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker3< int32_t, float, float >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___fromAction0, ___fromSource1, ___newAxis2, ___newDelta3);
					else
						VirtActionInvoker3< int32_t, float, float >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___fromAction0, ___fromSource1, ___newAxis2, ___newDelta3);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, float, float, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___fromSource1) - 1), ___newAxis2, ___newDelta3, targetMethod);
				}
				typedef void (*FunctionPointerType) (SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 *, int32_t, float, float, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___newAxis2, ___newDelta3, targetMethod);
			}
		}
		else
		{
			// closed
			if (targetThis != NULL && il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker4< SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 *, int32_t, float, float >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1, ___newAxis2, ___newDelta3);
					else
						GenericVirtActionInvoker4< SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 *, int32_t, float, float >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1, ___newAxis2, ___newDelta3);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker4< SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 *, int32_t, float, float >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___fromAction0, ___fromSource1, ___newAxis2, ___newDelta3);
					else
						VirtActionInvoker4< SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 *, int32_t, float, float >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___fromAction0, ___fromSource1, ___newAxis2, ___newDelta3);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, int32_t, float, float, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___fromAction0) - 1), ___fromSource1, ___newAxis2, ___newDelta3, targetMethod);
				}
				if (targetThis == NULL)
				{
					typedef void (*FunctionPointerType) (SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 *, int32_t, float, float, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___newAxis2, ___newDelta3, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 *, int32_t, float, float, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, ___newAxis2, ___newDelta3, targetMethod);
				}
			}
		}
	}
}
// System.IAsyncResult Valve.VR.SteamVR_Action_Single/ChangeHandler::BeginInvoke(Valve.VR.SteamVR_Action_Single,Valve.VR.SteamVR_Input_Sources,System.Single,System.Single,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* ChangeHandler_BeginInvoke_mE21DBC72B4F883A5B3CD1CA55D2322E5773DE447 (ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED * __this, SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * ___fromAction0, int32_t ___fromSource1, float ___newAxis2, float ___newDelta3, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback4, RuntimeObject * ___object5, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ChangeHandler_BeginInvoke_mE21DBC72B4F883A5B3CD1CA55D2322E5773DE447_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[5] = {0};
	__d_args[0] = ___fromAction0;
	__d_args[1] = Box(SteamVR_Input_Sources_tCE41AA589FB3B9516BDE0DFABDCB4AAEA29528F7_il2cpp_TypeInfo_var, &___fromSource1);
	__d_args[2] = Box(Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_il2cpp_TypeInfo_var, &___newAxis2);
	__d_args[3] = Box(Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_il2cpp_TypeInfo_var, &___newDelta3);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback4, (RuntimeObject*)___object5);
}
// System.Void Valve.VR.SteamVR_Action_Single/ChangeHandler::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ChangeHandler_EndInvoke_m66110F19AECF5F6E190EE99454F0DD75309A2B67 (ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Action_Single/UpdateHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UpdateHandler__ctor_m6B04127973436C135BDB28626E480F28EF3FD6F5 (UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.SteamVR_Action_Single/UpdateHandler::Invoke(Valve.VR.SteamVR_Action_Single,Valve.VR.SteamVR_Input_Sources,System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UpdateHandler_Invoke_mC46C8434097606A7922886963544D8A3B25387BC (UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D * __this, SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * ___fromAction0, int32_t ___fromSource1, float ___newAxis2, float ___newDelta3, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 4)
			{
				// open
				typedef void (*FunctionPointerType) (SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 *, int32_t, float, float, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___newAxis2, ___newDelta3, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 *, int32_t, float, float, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, ___newAxis2, ___newDelta3, targetMethod);
			}
		}
		else if (___parameterCount != 4)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker3< int32_t, float, float >::Invoke(targetMethod, ___fromAction0, ___fromSource1, ___newAxis2, ___newDelta3);
					else
						GenericVirtActionInvoker3< int32_t, float, float >::Invoke(targetMethod, ___fromAction0, ___fromSource1, ___newAxis2, ___newDelta3);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker3< int32_t, float, float >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___fromAction0, ___fromSource1, ___newAxis2, ___newDelta3);
					else
						VirtActionInvoker3< int32_t, float, float >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___fromAction0, ___fromSource1, ___newAxis2, ___newDelta3);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, float, float, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___fromSource1) - 1), ___newAxis2, ___newDelta3, targetMethod);
				}
				typedef void (*FunctionPointerType) (SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 *, int32_t, float, float, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___newAxis2, ___newDelta3, targetMethod);
			}
		}
		else
		{
			// closed
			if (targetThis != NULL && il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker4< SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 *, int32_t, float, float >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1, ___newAxis2, ___newDelta3);
					else
						GenericVirtActionInvoker4< SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 *, int32_t, float, float >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1, ___newAxis2, ___newDelta3);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker4< SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 *, int32_t, float, float >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___fromAction0, ___fromSource1, ___newAxis2, ___newDelta3);
					else
						VirtActionInvoker4< SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 *, int32_t, float, float >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___fromAction0, ___fromSource1, ___newAxis2, ___newDelta3);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, int32_t, float, float, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___fromAction0) - 1), ___fromSource1, ___newAxis2, ___newDelta3, targetMethod);
				}
				if (targetThis == NULL)
				{
					typedef void (*FunctionPointerType) (SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 *, int32_t, float, float, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___newAxis2, ___newDelta3, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 *, int32_t, float, float, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, ___newAxis2, ___newDelta3, targetMethod);
				}
			}
		}
	}
}
// System.IAsyncResult Valve.VR.SteamVR_Action_Single/UpdateHandler::BeginInvoke(Valve.VR.SteamVR_Action_Single,Valve.VR.SteamVR_Input_Sources,System.Single,System.Single,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* UpdateHandler_BeginInvoke_m430BFA9B9645814C843942491046D82BA9A54A84 (UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D * __this, SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * ___fromAction0, int32_t ___fromSource1, float ___newAxis2, float ___newDelta3, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback4, RuntimeObject * ___object5, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (UpdateHandler_BeginInvoke_m430BFA9B9645814C843942491046D82BA9A54A84_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[5] = {0};
	__d_args[0] = ___fromAction0;
	__d_args[1] = Box(SteamVR_Input_Sources_tCE41AA589FB3B9516BDE0DFABDCB4AAEA29528F7_il2cpp_TypeInfo_var, &___fromSource1);
	__d_args[2] = Box(Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_il2cpp_TypeInfo_var, &___newAxis2);
	__d_args[3] = Box(Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_il2cpp_TypeInfo_var, &___newDelta3);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback4, (RuntimeObject*)___object5);
}
// System.Void Valve.VR.SteamVR_Action_Single/UpdateHandler::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UpdateHandler_EndInvoke_m010BB5B33B7D7201428160C40E201F0F4EDBB36E (UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Action_Single_Source::add_onAxis(Valve.VR.SteamVR_Action_Single/AxisHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Single_Source_add_onAxis_m61631AE5B07E5BA034D52ED44590597E6A13AC24 (SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * __this, AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Single_Source_add_onAxis_m61631AE5B07E5BA034D52ED44590597E6A13AC24_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 * V_0 = NULL;
	AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 * V_1 = NULL;
	AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 * V_2 = NULL;
	{
		AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 * L_0 = __this->get_onAxis_12();
		V_0 = L_0;
	}

IL_0007:
	{
		AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 * L_1 = V_0;
		V_1 = L_1;
		AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 * L_2 = V_1;
		AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Combine_mC25D2F7DECAFBA6D9A2F9EBA8A77063F0658ECF1(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 *)CastclassSealed((RuntimeObject*)L_4, AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843_il2cpp_TypeInfo_var));
		AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 ** L_5 = __this->get_address_of_onAxis_12();
		AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 * L_6 = V_2;
		AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 * L_7 = V_1;
		AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 * L_8 = InterlockedCompareExchangeImpl<AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 *>((AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 **)L_5, L_6, L_7);
		V_0 = L_8;
		AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 * L_9 = V_0;
		AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 * L_10 = V_1;
		if ((!(((RuntimeObject*)(AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 *)L_9) == ((RuntimeObject*)(AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Single_Source::remove_onAxis(Valve.VR.SteamVR_Action_Single/AxisHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Single_Source_remove_onAxis_m75F1ECD8DFD59FAFE831C580F22F1E2A0039D742 (SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * __this, AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Single_Source_remove_onAxis_m75F1ECD8DFD59FAFE831C580F22F1E2A0039D742_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 * V_0 = NULL;
	AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 * V_1 = NULL;
	AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 * V_2 = NULL;
	{
		AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 * L_0 = __this->get_onAxis_12();
		V_0 = L_0;
	}

IL_0007:
	{
		AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 * L_1 = V_0;
		V_1 = L_1;
		AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 * L_2 = V_1;
		AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Remove_m0B0DB7D1B3AF96B71AFAA72BA0EFE32FBBC2932D(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 *)CastclassSealed((RuntimeObject*)L_4, AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843_il2cpp_TypeInfo_var));
		AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 ** L_5 = __this->get_address_of_onAxis_12();
		AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 * L_6 = V_2;
		AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 * L_7 = V_1;
		AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 * L_8 = InterlockedCompareExchangeImpl<AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 *>((AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 **)L_5, L_6, L_7);
		V_0 = L_8;
		AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 * L_9 = V_0;
		AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 * L_10 = V_1;
		if ((!(((RuntimeObject*)(AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 *)L_9) == ((RuntimeObject*)(AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Single_Source::add_onActiveChange(Valve.VR.SteamVR_Action_Single/ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Single_Source_add_onActiveChange_mB2A4804575E6862178A504A34B087ADCC989D383 (SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * __this, ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Single_Source_add_onActiveChange_mB2A4804575E6862178A504A34B087ADCC989D383_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * V_0 = NULL;
	ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * V_1 = NULL;
	ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * V_2 = NULL;
	{
		ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * L_0 = __this->get_onActiveChange_13();
		V_0 = L_0;
	}

IL_0007:
	{
		ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * L_1 = V_0;
		V_1 = L_1;
		ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * L_2 = V_1;
		ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Combine_mC25D2F7DECAFBA6D9A2F9EBA8A77063F0658ECF1(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE *)CastclassSealed((RuntimeObject*)L_4, ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE_il2cpp_TypeInfo_var));
		ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE ** L_5 = __this->get_address_of_onActiveChange_13();
		ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * L_6 = V_2;
		ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * L_7 = V_1;
		ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * L_8 = InterlockedCompareExchangeImpl<ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE *>((ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE **)L_5, L_6, L_7);
		V_0 = L_8;
		ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * L_9 = V_0;
		ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * L_10 = V_1;
		if ((!(((RuntimeObject*)(ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE *)L_9) == ((RuntimeObject*)(ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Single_Source::remove_onActiveChange(Valve.VR.SteamVR_Action_Single/ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Single_Source_remove_onActiveChange_mBE7196AA119D8715900D8D6F01D96E60801EF7E7 (SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * __this, ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Single_Source_remove_onActiveChange_mBE7196AA119D8715900D8D6F01D96E60801EF7E7_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * V_0 = NULL;
	ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * V_1 = NULL;
	ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * V_2 = NULL;
	{
		ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * L_0 = __this->get_onActiveChange_13();
		V_0 = L_0;
	}

IL_0007:
	{
		ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * L_1 = V_0;
		V_1 = L_1;
		ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * L_2 = V_1;
		ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Remove_m0B0DB7D1B3AF96B71AFAA72BA0EFE32FBBC2932D(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE *)CastclassSealed((RuntimeObject*)L_4, ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE_il2cpp_TypeInfo_var));
		ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE ** L_5 = __this->get_address_of_onActiveChange_13();
		ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * L_6 = V_2;
		ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * L_7 = V_1;
		ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * L_8 = InterlockedCompareExchangeImpl<ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE *>((ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE **)L_5, L_6, L_7);
		V_0 = L_8;
		ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * L_9 = V_0;
		ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * L_10 = V_1;
		if ((!(((RuntimeObject*)(ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE *)L_9) == ((RuntimeObject*)(ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Single_Source::add_onActiveBindingChange(Valve.VR.SteamVR_Action_Single/ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Single_Source_add_onActiveBindingChange_mBC814F86ED29A7728BD85E8C212603D05F4FD282 (SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * __this, ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Single_Source_add_onActiveBindingChange_mBC814F86ED29A7728BD85E8C212603D05F4FD282_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * V_0 = NULL;
	ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * V_1 = NULL;
	ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * V_2 = NULL;
	{
		ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * L_0 = __this->get_onActiveBindingChange_14();
		V_0 = L_0;
	}

IL_0007:
	{
		ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * L_1 = V_0;
		V_1 = L_1;
		ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * L_2 = V_1;
		ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Combine_mC25D2F7DECAFBA6D9A2F9EBA8A77063F0658ECF1(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE *)CastclassSealed((RuntimeObject*)L_4, ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE_il2cpp_TypeInfo_var));
		ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE ** L_5 = __this->get_address_of_onActiveBindingChange_14();
		ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * L_6 = V_2;
		ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * L_7 = V_1;
		ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * L_8 = InterlockedCompareExchangeImpl<ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE *>((ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE **)L_5, L_6, L_7);
		V_0 = L_8;
		ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * L_9 = V_0;
		ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * L_10 = V_1;
		if ((!(((RuntimeObject*)(ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE *)L_9) == ((RuntimeObject*)(ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Single_Source::remove_onActiveBindingChange(Valve.VR.SteamVR_Action_Single/ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Single_Source_remove_onActiveBindingChange_mE912C712F7759127954B79BD2D501387E3AD0DFD (SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * __this, ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Single_Source_remove_onActiveBindingChange_mE912C712F7759127954B79BD2D501387E3AD0DFD_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * V_0 = NULL;
	ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * V_1 = NULL;
	ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * V_2 = NULL;
	{
		ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * L_0 = __this->get_onActiveBindingChange_14();
		V_0 = L_0;
	}

IL_0007:
	{
		ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * L_1 = V_0;
		V_1 = L_1;
		ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * L_2 = V_1;
		ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Remove_m0B0DB7D1B3AF96B71AFAA72BA0EFE32FBBC2932D(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE *)CastclassSealed((RuntimeObject*)L_4, ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE_il2cpp_TypeInfo_var));
		ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE ** L_5 = __this->get_address_of_onActiveBindingChange_14();
		ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * L_6 = V_2;
		ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * L_7 = V_1;
		ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * L_8 = InterlockedCompareExchangeImpl<ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE *>((ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE **)L_5, L_6, L_7);
		V_0 = L_8;
		ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * L_9 = V_0;
		ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * L_10 = V_1;
		if ((!(((RuntimeObject*)(ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE *)L_9) == ((RuntimeObject*)(ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Single_Source::add_onChange(Valve.VR.SteamVR_Action_Single/ChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Single_Source_add_onChange_m293210E1B8395F5C75302844AF1B4AE74DD2F3A8 (SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * __this, ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Single_Source_add_onChange_m293210E1B8395F5C75302844AF1B4AE74DD2F3A8_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED * V_0 = NULL;
	ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED * V_1 = NULL;
	ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED * V_2 = NULL;
	{
		ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED * L_0 = __this->get_onChange_15();
		V_0 = L_0;
	}

IL_0007:
	{
		ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED * L_1 = V_0;
		V_1 = L_1;
		ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED * L_2 = V_1;
		ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Combine_mC25D2F7DECAFBA6D9A2F9EBA8A77063F0658ECF1(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED *)CastclassSealed((RuntimeObject*)L_4, ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED_il2cpp_TypeInfo_var));
		ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED ** L_5 = __this->get_address_of_onChange_15();
		ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED * L_6 = V_2;
		ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED * L_7 = V_1;
		ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED * L_8 = InterlockedCompareExchangeImpl<ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED *>((ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED **)L_5, L_6, L_7);
		V_0 = L_8;
		ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED * L_9 = V_0;
		ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED * L_10 = V_1;
		if ((!(((RuntimeObject*)(ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED *)L_9) == ((RuntimeObject*)(ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Single_Source::remove_onChange(Valve.VR.SteamVR_Action_Single/ChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Single_Source_remove_onChange_m416E274F58D3F80F3E2AC77BC933E1D1F8BBDECD (SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * __this, ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Single_Source_remove_onChange_m416E274F58D3F80F3E2AC77BC933E1D1F8BBDECD_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED * V_0 = NULL;
	ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED * V_1 = NULL;
	ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED * V_2 = NULL;
	{
		ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED * L_0 = __this->get_onChange_15();
		V_0 = L_0;
	}

IL_0007:
	{
		ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED * L_1 = V_0;
		V_1 = L_1;
		ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED * L_2 = V_1;
		ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Remove_m0B0DB7D1B3AF96B71AFAA72BA0EFE32FBBC2932D(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED *)CastclassSealed((RuntimeObject*)L_4, ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED_il2cpp_TypeInfo_var));
		ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED ** L_5 = __this->get_address_of_onChange_15();
		ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED * L_6 = V_2;
		ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED * L_7 = V_1;
		ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED * L_8 = InterlockedCompareExchangeImpl<ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED *>((ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED **)L_5, L_6, L_7);
		V_0 = L_8;
		ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED * L_9 = V_0;
		ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED * L_10 = V_1;
		if ((!(((RuntimeObject*)(ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED *)L_9) == ((RuntimeObject*)(ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Single_Source::add_onUpdate(Valve.VR.SteamVR_Action_Single/UpdateHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Single_Source_add_onUpdate_m5598F5E0ABEB41135E942BD9590CA88A5E89A167 (SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * __this, UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Single_Source_add_onUpdate_m5598F5E0ABEB41135E942BD9590CA88A5E89A167_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D * V_0 = NULL;
	UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D * V_1 = NULL;
	UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D * V_2 = NULL;
	{
		UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D * L_0 = __this->get_onUpdate_16();
		V_0 = L_0;
	}

IL_0007:
	{
		UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D * L_1 = V_0;
		V_1 = L_1;
		UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D * L_2 = V_1;
		UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Combine_mC25D2F7DECAFBA6D9A2F9EBA8A77063F0658ECF1(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D *)CastclassSealed((RuntimeObject*)L_4, UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D_il2cpp_TypeInfo_var));
		UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D ** L_5 = __this->get_address_of_onUpdate_16();
		UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D * L_6 = V_2;
		UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D * L_7 = V_1;
		UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D * L_8 = InterlockedCompareExchangeImpl<UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D *>((UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D **)L_5, L_6, L_7);
		V_0 = L_8;
		UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D * L_9 = V_0;
		UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D * L_10 = V_1;
		if ((!(((RuntimeObject*)(UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D *)L_9) == ((RuntimeObject*)(UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Single_Source::remove_onUpdate(Valve.VR.SteamVR_Action_Single/UpdateHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Single_Source_remove_onUpdate_mB6B6416FED4DA773EFB6D97EE7E6C9ED8F4CA16C (SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * __this, UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Single_Source_remove_onUpdate_mB6B6416FED4DA773EFB6D97EE7E6C9ED8F4CA16C_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D * V_0 = NULL;
	UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D * V_1 = NULL;
	UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D * V_2 = NULL;
	{
		UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D * L_0 = __this->get_onUpdate_16();
		V_0 = L_0;
	}

IL_0007:
	{
		UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D * L_1 = V_0;
		V_1 = L_1;
		UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D * L_2 = V_1;
		UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Remove_m0B0DB7D1B3AF96B71AFAA72BA0EFE32FBBC2932D(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D *)CastclassSealed((RuntimeObject*)L_4, UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D_il2cpp_TypeInfo_var));
		UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D ** L_5 = __this->get_address_of_onUpdate_16();
		UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D * L_6 = V_2;
		UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D * L_7 = V_1;
		UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D * L_8 = InterlockedCompareExchangeImpl<UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D *>((UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D **)L_5, L_6, L_7);
		V_0 = L_8;
		UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D * L_9 = V_0;
		UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D * L_10 = V_1;
		if ((!(((RuntimeObject*)(UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D *)L_9) == ((RuntimeObject*)(UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Single Valve.VR.SteamVR_Action_Single_Source::get_axis()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Single_Source_get_axis_mBA7DCD6C227E324C4B4029D020E37B1262CFB592 (SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * __this, const RuntimeMethod* method)
{
	bool V_0 = false;
	float V_1 = 0.0f;
	{
		// public float axis { get { if (active) return actionData.x; else return 0; } }
		bool L_0 = VirtFuncInvoker0< bool >::Invoke(12 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_active() */, __this);
		V_0 = L_0;
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0019;
		}
	}
	{
		// public float axis { get { if (active) return actionData.x; else return 0; } }
		InputAnalogActionData_t_t6C7615BD7F4223A4ADA9268DDF501D09B3C808CA * L_2 = __this->get_address_of_actionData_20();
		float L_3 = L_2->get_x_2();
		V_1 = L_3;
		goto IL_0021;
	}

IL_0019:
	{
		// public float axis { get { if (active) return actionData.x; else return 0; } }
		V_1 = (0.0f);
		goto IL_0021;
	}

IL_0021:
	{
		// public float axis { get { if (active) return actionData.x; else return 0; } }
		float L_4 = V_1;
		return L_4;
	}
}
// System.Single Valve.VR.SteamVR_Action_Single_Source::get_lastAxis()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Single_Source_get_lastAxis_m0E8BA1EEB9AD3414A37EB061A7DEEFE074832474 (SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * __this, const RuntimeMethod* method)
{
	bool V_0 = false;
	float V_1 = 0.0f;
	{
		// public float lastAxis { get { if (active) return lastActionData.x; else return 0; } }
		bool L_0 = VirtFuncInvoker0< bool >::Invoke(12 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_active() */, __this);
		V_0 = L_0;
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0019;
		}
	}
	{
		// public float lastAxis { get { if (active) return lastActionData.x; else return 0; } }
		InputAnalogActionData_t_t6C7615BD7F4223A4ADA9268DDF501D09B3C808CA * L_2 = __this->get_address_of_lastActionData_21();
		float L_3 = L_2->get_x_2();
		V_1 = L_3;
		goto IL_0021;
	}

IL_0019:
	{
		// public float lastAxis { get { if (active) return lastActionData.x; else return 0; } }
		V_1 = (0.0f);
		goto IL_0021;
	}

IL_0021:
	{
		// public float lastAxis { get { if (active) return lastActionData.x; else return 0; } }
		float L_4 = V_1;
		return L_4;
	}
}
// System.Single Valve.VR.SteamVR_Action_Single_Source::get_delta()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Single_Source_get_delta_mD9BEE7AF7213499DAE270C19A1FBD5298527F1BF (SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * __this, const RuntimeMethod* method)
{
	bool V_0 = false;
	float V_1 = 0.0f;
	{
		// public float delta { get { if (active) return actionData.deltaX; else return 0; } }
		bool L_0 = VirtFuncInvoker0< bool >::Invoke(12 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_active() */, __this);
		V_0 = L_0;
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0019;
		}
	}
	{
		// public float delta { get { if (active) return actionData.deltaX; else return 0; } }
		InputAnalogActionData_t_t6C7615BD7F4223A4ADA9268DDF501D09B3C808CA * L_2 = __this->get_address_of_actionData_20();
		float L_3 = L_2->get_deltaX_5();
		V_1 = L_3;
		goto IL_0021;
	}

IL_0019:
	{
		// public float delta { get { if (active) return actionData.deltaX; else return 0; } }
		V_1 = (0.0f);
		goto IL_0021;
	}

IL_0021:
	{
		// public float delta { get { if (active) return actionData.deltaX; else return 0; } }
		float L_4 = V_1;
		return L_4;
	}
}
// System.Single Valve.VR.SteamVR_Action_Single_Source::get_lastDelta()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Single_Source_get_lastDelta_m1030BF40FF11089715D2A20730386FB2843AD08F (SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * __this, const RuntimeMethod* method)
{
	bool V_0 = false;
	float V_1 = 0.0f;
	{
		// public float lastDelta { get { if (active) return lastActionData.deltaX; else return 0; } }
		bool L_0 = VirtFuncInvoker0< bool >::Invoke(12 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_active() */, __this);
		V_0 = L_0;
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0019;
		}
	}
	{
		// public float lastDelta { get { if (active) return lastActionData.deltaX; else return 0; } }
		InputAnalogActionData_t_t6C7615BD7F4223A4ADA9268DDF501D09B3C808CA * L_2 = __this->get_address_of_lastActionData_21();
		float L_3 = L_2->get_deltaX_5();
		V_1 = L_3;
		goto IL_0021;
	}

IL_0019:
	{
		// public float lastDelta { get { if (active) return lastActionData.deltaX; else return 0; } }
		V_1 = (0.0f);
		goto IL_0021;
	}

IL_0021:
	{
		// public float lastDelta { get { if (active) return lastActionData.deltaX; else return 0; } }
		float L_4 = V_1;
		return L_4;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Single_Source::get_changed()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Single_Source_get_changed_m7F08CA6E58DDDADC8856D392B29AA4A2F3DC23A6 (SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * __this, const RuntimeMethod* method)
{
	{
		// public override bool changed { get; protected set; }
		bool L_0 = __this->get_U3CchangedU3Ek__BackingField_17();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_Action_Single_Source::set_changed(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Single_Source_set_changed_m56DD016ED620DB43AC3D8C9CADA38279C02AECE4 (SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * __this, bool ___value0, const RuntimeMethod* method)
{
	{
		// public override bool changed { get; protected set; }
		bool L_0 = ___value0;
		__this->set_U3CchangedU3Ek__BackingField_17(L_0);
		return;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Single_Source::get_lastChanged()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Single_Source_get_lastChanged_mCE3D75289E71868806B187034B7538C4EAFEC95B (SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * __this, const RuntimeMethod* method)
{
	{
		// public override bool lastChanged { get; protected set; }
		bool L_0 = __this->get_U3ClastChangedU3Ek__BackingField_18();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_Action_Single_Source::set_lastChanged(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Single_Source_set_lastChanged_mDFB25AF4D1DE7DCB666F2E61E80F9AB2C0B49ABF (SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * __this, bool ___value0, const RuntimeMethod* method)
{
	{
		// public override bool lastChanged { get; protected set; }
		bool L_0 = ___value0;
		__this->set_U3ClastChangedU3Ek__BackingField_18(L_0);
		return;
	}
}
// System.UInt64 Valve.VR.SteamVR_Action_Single_Source::get_activeOrigin()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR uint64_t SteamVR_Action_Single_Source_get_activeOrigin_mDC6D25F3386FAB97FFFEF4905BB485600754D09B (SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * __this, const RuntimeMethod* method)
{
	bool V_0 = false;
	uint64_t V_1 = 0;
	{
		// if (active)
		bool L_0 = VirtFuncInvoker0< bool >::Invoke(12 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_active() */, __this);
		V_0 = L_0;
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0019;
		}
	}
	{
		// return actionData.activeOrigin;
		InputAnalogActionData_t_t6C7615BD7F4223A4ADA9268DDF501D09B3C808CA * L_2 = __this->get_address_of_actionData_20();
		uint64_t L_3 = L_2->get_activeOrigin_1();
		V_1 = L_3;
		goto IL_001e;
	}

IL_0019:
	{
		// return 0;
		V_1 = (((int64_t)((int64_t)0)));
		goto IL_001e;
	}

IL_001e:
	{
		// }
		uint64_t L_4 = V_1;
		return L_4;
	}
}
// System.UInt64 Valve.VR.SteamVR_Action_Single_Source::get_lastActiveOrigin()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR uint64_t SteamVR_Action_Single_Source_get_lastActiveOrigin_m2F5EB2CD97A42B3A85BFF908EC2281AC9E868E2B (SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * __this, const RuntimeMethod* method)
{
	uint64_t V_0 = 0;
	{
		// public override ulong lastActiveOrigin { get { return lastActionData.activeOrigin; } }
		InputAnalogActionData_t_t6C7615BD7F4223A4ADA9268DDF501D09B3C808CA * L_0 = __this->get_address_of_lastActionData_21();
		uint64_t L_1 = L_0->get_activeOrigin_1();
		V_0 = L_1;
		goto IL_000f;
	}

IL_000f:
	{
		// public override ulong lastActiveOrigin { get { return lastActionData.activeOrigin; } }
		uint64_t L_2 = V_0;
		return L_2;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Single_Source::get_active()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Single_Source_get_active_m924FA9D1236C0CD9CA8367A1650730FA76D70F6B (SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * __this, const RuntimeMethod* method)
{
	bool V_0 = false;
	int32_t G_B3_0 = 0;
	{
		// public override bool active { get { return activeBinding && action.actionSet.IsActive(inputSource); } }
		bool L_0 = VirtFuncInvoker0< bool >::Invoke(13 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_activeBinding() */, __this);
		if (!L_0)
		{
			goto IL_0021;
		}
	}
	{
		SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * L_1 = ((SteamVR_Action_Source_t9D7428CDE39924074518EE6233D9A4FAB0C33CB0 *)__this)->get_action_2();
		NullCheck(L_1);
		SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * L_2 = VirtFuncInvoker0< SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * >::Invoke(19 /* Valve.VR.SteamVR_ActionSet Valve.VR.SteamVR_Action::get_actionSet() */, L_1);
		int32_t L_3 = SteamVR_Action_Source_get_inputSource_mAA1928183BB06E5C8CF950F65BA80635C25535D4_inline(__this, /*hidden argument*/NULL);
		NullCheck(L_2);
		bool L_4 = SteamVR_ActionSet_IsActive_m2C7FE33DC70E0D8C3D7E06F024C3409A116CE127(L_2, L_3, /*hidden argument*/NULL);
		G_B3_0 = ((int32_t)(L_4));
		goto IL_0022;
	}

IL_0021:
	{
		G_B3_0 = 0;
	}

IL_0022:
	{
		V_0 = (bool)G_B3_0;
		goto IL_0025;
	}

IL_0025:
	{
		// public override bool active { get { return activeBinding && action.actionSet.IsActive(inputSource); } }
		bool L_5 = V_0;
		return L_5;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Single_Source::get_activeBinding()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Single_Source_get_activeBinding_mFF66CB6A632F613836E5F09DDD194A638CB4855D (SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * __this, const RuntimeMethod* method)
{
	bool V_0 = false;
	{
		// public override bool activeBinding { get { return actionData.bActive; } }
		InputAnalogActionData_t_t6C7615BD7F4223A4ADA9268DDF501D09B3C808CA * L_0 = __this->get_address_of_actionData_20();
		bool L_1 = L_0->get_bActive_0();
		V_0 = L_1;
		goto IL_000f;
	}

IL_000f:
	{
		// public override bool activeBinding { get { return actionData.bActive; } }
		bool L_2 = V_0;
		return L_2;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Single_Source::get_lastActive()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Single_Source_get_lastActive_mAAAECA19B3B4679F9F971D058941D01CF244FD9A (SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * __this, const RuntimeMethod* method)
{
	{
		// public override bool lastActive { get; protected set; }
		bool L_0 = __this->get_U3ClastActiveU3Ek__BackingField_19();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_Action_Single_Source::set_lastActive(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Single_Source_set_lastActive_mA567189245AC1B8E94F4CBC83235A80A86F53F1C (SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * __this, bool ___value0, const RuntimeMethod* method)
{
	{
		// public override bool lastActive { get; protected set; }
		bool L_0 = ___value0;
		__this->set_U3ClastActiveU3Ek__BackingField_19(L_0);
		return;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Single_Source::get_lastActiveBinding()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Single_Source_get_lastActiveBinding_mB47794DD78D164821E5D5563131FA3C24E021834 (SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * __this, const RuntimeMethod* method)
{
	bool V_0 = false;
	{
		// public override bool lastActiveBinding { get { return lastActionData.bActive; } }
		InputAnalogActionData_t_t6C7615BD7F4223A4ADA9268DDF501D09B3C808CA * L_0 = __this->get_address_of_lastActionData_21();
		bool L_1 = L_0->get_bActive_0();
		V_0 = L_1;
		goto IL_000f;
	}

IL_000f:
	{
		// public override bool lastActiveBinding { get { return lastActionData.bActive; } }
		bool L_2 = V_0;
		return L_2;
	}
}
// System.Void Valve.VR.SteamVR_Action_Single_Source::Preinitialize(Valve.VR.SteamVR_Action,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Single_Source_Preinitialize_m1769FF988DBF9A4937DE8932081DD660DF809EE9 (SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * __this, SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * ___wrappingAction0, int32_t ___forInputSource1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Single_Source_Preinitialize_m1769FF988DBF9A4937DE8932081DD660DF809EE9_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// base.Preinitialize(wrappingAction, forInputSource);
		SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * L_0 = ___wrappingAction0;
		int32_t L_1 = ___forInputSource1;
		SteamVR_Action_Source_Preinitialize_mC135AE740FECE5EA34FF516A739C0F58420521F9(__this, L_0, L_1, /*hidden argument*/NULL);
		// singleAction = (SteamVR_Action_Single)wrappingAction;
		SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * L_2 = ___wrappingAction0;
		__this->set_singleAction_22(((SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 *)CastclassClass((RuntimeObject*)L_2, SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81_il2cpp_TypeInfo_var)));
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Single_Source::Initialize()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Single_Source_Initialize_m53DE9E58518352759683719B8B9E0311F7F73CB5 (SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Single_Source_Initialize_m53DE9E58518352759683719B8B9E0311F7F73CB5_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	{
		// base.Initialize();
		SteamVR_Action_In_Source_Initialize_m40F600EDA6712166E32A98C5905420F6F2DC2001(__this, /*hidden argument*/NULL);
		// if (actionData_size == 0)
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F_il2cpp_TypeInfo_var);
		uint32_t L_0 = ((SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F_il2cpp_TypeInfo_var))->get_actionData_size_10();
		V_0 = (bool)((((int32_t)L_0) == ((int32_t)0))? 1 : 0);
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0028;
		}
	}
	{
		// actionData_size = (uint)Marshal.SizeOf(typeof(InputAnalogActionData_t));
		RuntimeTypeHandle_t7B542280A22F0EC4EAC2061C29178845847A8B2D  L_2 = { reinterpret_cast<intptr_t> (InputAnalogActionData_t_t6C7615BD7F4223A4ADA9268DDF501D09B3C808CA_0_0_0_var) };
		IL2CPP_RUNTIME_CLASS_INIT(Type_t_il2cpp_TypeInfo_var);
		Type_t * L_3 = Type_GetTypeFromHandle_m9DC58ADF0512987012A8A016FB64B068F3B1AFF6(L_2, /*hidden argument*/NULL);
		IL2CPP_RUNTIME_CLASS_INIT(Marshal_tC795CE9CC2FFBA41EDB1AC1C0FEC04607DFA8A40_il2cpp_TypeInfo_var);
		int32_t L_4 = Marshal_SizeOf_m4F7DA827FA7A720395E6FDD2ABE78D4B00D43130(L_3, /*hidden argument*/NULL);
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F_il2cpp_TypeInfo_var);
		((SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F_il2cpp_TypeInfo_var))->set_actionData_size_10(L_4);
	}

IL_0028:
	{
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Single_Source::RemoveAllListeners()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Single_Source_RemoveAllListeners_m23CB655786F09E0A2FB8273527639C90768AF2D8 (SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Single_Source_RemoveAllListeners_m23CB655786F09E0A2FB8273527639C90768AF2D8_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* V_0 = NULL;
	bool V_1 = false;
	bool V_2 = false;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* V_3 = NULL;
	int32_t V_4 = 0;
	Delegate_t * V_5 = NULL;
	bool V_6 = false;
	bool V_7 = false;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* V_8 = NULL;
	int32_t V_9 = 0;
	Delegate_t * V_10 = NULL;
	bool V_11 = false;
	bool V_12 = false;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* V_13 = NULL;
	int32_t V_14 = 0;
	Delegate_t * V_15 = NULL;
	{
		// if (onAxis != null)
		AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 * L_0 = __this->get_onAxis_12();
		V_1 = (bool)((!(((RuntimeObject*)(AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 *)L_0) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		bool L_1 = V_1;
		if (!L_1)
		{
			goto IL_004d;
		}
	}
	{
		// delegates = onAxis.GetInvocationList();
		AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 * L_2 = __this->get_onAxis_12();
		NullCheck(L_2);
		DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* L_3 = VirtFuncInvoker0< DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* >::Invoke(9 /* System.Delegate[] System.Delegate::GetInvocationList() */, L_2);
		V_0 = L_3;
		// if (delegates != null)
		DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* L_4 = V_0;
		V_2 = (bool)((!(((RuntimeObject*)(DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86*)L_4) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		bool L_5 = V_2;
		if (!L_5)
		{
			goto IL_004c;
		}
	}
	{
		// foreach (Delegate existingDelegate in delegates)
		DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* L_6 = V_0;
		V_3 = L_6;
		V_4 = 0;
		goto IL_0045;
	}

IL_002b:
	{
		// foreach (Delegate existingDelegate in delegates)
		DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* L_7 = V_3;
		int32_t L_8 = V_4;
		NullCheck(L_7);
		int32_t L_9 = L_8;
		Delegate_t * L_10 = (L_7)->GetAt(static_cast<il2cpp_array_size_t>(L_9));
		V_5 = L_10;
		// onAxis -= (SteamVR_Action_Single.AxisHandler)existingDelegate;
		Delegate_t * L_11 = V_5;
		SteamVR_Action_Single_Source_remove_onAxis_m75F1ECD8DFD59FAFE831C580F22F1E2A0039D742(__this, ((AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 *)CastclassSealed((RuntimeObject*)L_11, AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843_il2cpp_TypeInfo_var)), /*hidden argument*/NULL);
		int32_t L_12 = V_4;
		V_4 = ((int32_t)il2cpp_codegen_add((int32_t)L_12, (int32_t)1));
	}

IL_0045:
	{
		// foreach (Delegate existingDelegate in delegates)
		int32_t L_13 = V_4;
		DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* L_14 = V_3;
		NullCheck(L_14);
		if ((((int32_t)L_13) < ((int32_t)(((int32_t)((int32_t)(((RuntimeArray*)L_14)->max_length)))))))
		{
			goto IL_002b;
		}
	}

IL_004c:
	{
	}

IL_004d:
	{
		// if (onUpdate != null)
		UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D * L_15 = __this->get_onUpdate_16();
		V_6 = (bool)((!(((RuntimeObject*)(UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D *)L_15) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		bool L_16 = V_6;
		if (!L_16)
		{
			goto IL_00a0;
		}
	}
	{
		// delegates = onUpdate.GetInvocationList();
		UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D * L_17 = __this->get_onUpdate_16();
		NullCheck(L_17);
		DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* L_18 = VirtFuncInvoker0< DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* >::Invoke(9 /* System.Delegate[] System.Delegate::GetInvocationList() */, L_17);
		V_0 = L_18;
		// if (delegates != null)
		DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* L_19 = V_0;
		V_7 = (bool)((!(((RuntimeObject*)(DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86*)L_19) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		bool L_20 = V_7;
		if (!L_20)
		{
			goto IL_009f;
		}
	}
	{
		// foreach (Delegate existingDelegate in delegates)
		DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* L_21 = V_0;
		V_8 = L_21;
		V_9 = 0;
		goto IL_0097;
	}

IL_007c:
	{
		// foreach (Delegate existingDelegate in delegates)
		DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* L_22 = V_8;
		int32_t L_23 = V_9;
		NullCheck(L_22);
		int32_t L_24 = L_23;
		Delegate_t * L_25 = (L_22)->GetAt(static_cast<il2cpp_array_size_t>(L_24));
		V_10 = L_25;
		// onUpdate -= (SteamVR_Action_Single.UpdateHandler)existingDelegate;
		Delegate_t * L_26 = V_10;
		SteamVR_Action_Single_Source_remove_onUpdate_mB6B6416FED4DA773EFB6D97EE7E6C9ED8F4CA16C(__this, ((UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D *)CastclassSealed((RuntimeObject*)L_26, UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D_il2cpp_TypeInfo_var)), /*hidden argument*/NULL);
		int32_t L_27 = V_9;
		V_9 = ((int32_t)il2cpp_codegen_add((int32_t)L_27, (int32_t)1));
	}

IL_0097:
	{
		// foreach (Delegate existingDelegate in delegates)
		int32_t L_28 = V_9;
		DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* L_29 = V_8;
		NullCheck(L_29);
		if ((((int32_t)L_28) < ((int32_t)(((int32_t)((int32_t)(((RuntimeArray*)L_29)->max_length)))))))
		{
			goto IL_007c;
		}
	}

IL_009f:
	{
	}

IL_00a0:
	{
		// if (onChange != null)
		ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED * L_30 = __this->get_onChange_15();
		V_11 = (bool)((!(((RuntimeObject*)(ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED *)L_30) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		bool L_31 = V_11;
		if (!L_31)
		{
			goto IL_00f3;
		}
	}
	{
		// delegates = onChange.GetInvocationList();
		ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED * L_32 = __this->get_onChange_15();
		NullCheck(L_32);
		DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* L_33 = VirtFuncInvoker0< DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* >::Invoke(9 /* System.Delegate[] System.Delegate::GetInvocationList() */, L_32);
		V_0 = L_33;
		// if (delegates != null)
		DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* L_34 = V_0;
		V_12 = (bool)((!(((RuntimeObject*)(DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86*)L_34) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		bool L_35 = V_12;
		if (!L_35)
		{
			goto IL_00f2;
		}
	}
	{
		// foreach (Delegate existingDelegate in delegates)
		DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* L_36 = V_0;
		V_13 = L_36;
		V_14 = 0;
		goto IL_00ea;
	}

IL_00cf:
	{
		// foreach (Delegate existingDelegate in delegates)
		DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* L_37 = V_13;
		int32_t L_38 = V_14;
		NullCheck(L_37);
		int32_t L_39 = L_38;
		Delegate_t * L_40 = (L_37)->GetAt(static_cast<il2cpp_array_size_t>(L_39));
		V_15 = L_40;
		// onChange -= (SteamVR_Action_Single.ChangeHandler)existingDelegate;
		Delegate_t * L_41 = V_15;
		SteamVR_Action_Single_Source_remove_onChange_m416E274F58D3F80F3E2AC77BC933E1D1F8BBDECD(__this, ((ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED *)CastclassSealed((RuntimeObject*)L_41, ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED_il2cpp_TypeInfo_var)), /*hidden argument*/NULL);
		int32_t L_42 = V_14;
		V_14 = ((int32_t)il2cpp_codegen_add((int32_t)L_42, (int32_t)1));
	}

IL_00ea:
	{
		// foreach (Delegate existingDelegate in delegates)
		int32_t L_43 = V_14;
		DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* L_44 = V_13;
		NullCheck(L_44);
		if ((((int32_t)L_43) < ((int32_t)(((int32_t)((int32_t)(((RuntimeArray*)L_44)->max_length)))))))
		{
			goto IL_00cf;
		}
	}

IL_00f2:
	{
	}

IL_00f3:
	{
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Single_Source::UpdateValue()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Single_Source_UpdateValue_m342A203285338EFB358A2140A2EC386A0E651825 (SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Single_Source_UpdateValue_m342A203285338EFB358A2140A2EC386A0E651825_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	bool V_1 = false;
	uint64_t V_2 = 0;
	bool V_3 = false;
	bool V_4 = false;
	bool V_5 = false;
	bool V_6 = false;
	bool V_7 = false;
	bool V_8 = false;
	bool V_9 = false;
	bool V_10 = false;
	int32_t G_B6_0 = 0;
	int32_t G_B20_0 = 0;
	int32_t G_B25_0 = 0;
	{
		// lastActionData = actionData;
		InputAnalogActionData_t_t6C7615BD7F4223A4ADA9268DDF501D09B3C808CA  L_0 = __this->get_actionData_20();
		__this->set_lastActionData_21(L_0);
		// lastActive = active;
		bool L_1 = VirtFuncInvoker0< bool >::Invoke(12 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_active() */, __this);
		VirtActionInvoker1< bool >::Invoke(15 /* System.Void Valve.VR.SteamVR_Action_Source::set_lastActive(System.Boolean) */, __this, L_1);
		// EVRInputError err = OpenVR.Input.GetAnalogActionData(handle, ref actionData, actionData_size, SteamVR_Input_Source.GetHandle(inputSource));
		IL2CPP_RUNTIME_CLASS_INIT(OpenVR_t89189C917B539750153B18DDDCB4F7D9C8EF004D_il2cpp_TypeInfo_var);
		CVRInput_t8458E224B9D7EFD4A5B102EAA06F8F365A25A53A * L_2 = OpenVR_get_Input_mF290A715AD07D4B7F8844AA79293934B7999CE04(/*hidden argument*/NULL);
		uint64_t L_3 = SteamVR_Action_Source_get_handle_m66E0A3E9E7D6434FB905BF0D25013927B0C12791(__this, /*hidden argument*/NULL);
		InputAnalogActionData_t_t6C7615BD7F4223A4ADA9268DDF501D09B3C808CA * L_4 = __this->get_address_of_actionData_20();
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F_il2cpp_TypeInfo_var);
		uint32_t L_5 = ((SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F_il2cpp_TypeInfo_var))->get_actionData_size_10();
		int32_t L_6 = SteamVR_Action_Source_get_inputSource_mAA1928183BB06E5C8CF950F65BA80635C25535D4_inline(__this, /*hidden argument*/NULL);
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Input_Source_tAFDB40851F8E134E08DD2DD0BC1C1770705E81D0_il2cpp_TypeInfo_var);
		uint64_t L_7 = SteamVR_Input_Source_GetHandle_m0FAD747327B66172ACE9A9C1CD14FEDF685C7D3B(L_6, /*hidden argument*/NULL);
		NullCheck(L_2);
		int32_t L_8 = CVRInput_GetAnalogActionData_m3FEB4E2D5AE96E97C2D73EEED945E547AE36741A(L_2, L_3, (InputAnalogActionData_t_t6C7615BD7F4223A4ADA9268DDF501D09B3C808CA *)L_4, L_5, L_7, /*hidden argument*/NULL);
		V_0 = L_8;
		// if (err != EVRInputError.None)
		int32_t L_9 = V_0;
		V_1 = (bool)((!(((uint32_t)L_9) <= ((uint32_t)0)))? 1 : 0);
		bool L_10 = V_1;
		if (!L_10)
		{
			goto IL_009c;
		}
	}
	{
		// Debug.LogError("<b>[SteamVR]</b> GetAnalogActionData error (" + fullPath + "): " + err.ToString() + " handle: " + handle.ToString());
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_11 = (StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E*)(StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E*)SZArrayNew(StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E_il2cpp_TypeInfo_var, (uint32_t)6);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_12 = L_11;
		NullCheck(L_12);
		ArrayElementTypeCheck (L_12, _stringLiteralAC897ED588F0446677581414C46F231807AB2556);
		(L_12)->SetAt(static_cast<il2cpp_array_size_t>(0), (String_t*)_stringLiteralAC897ED588F0446677581414C46F231807AB2556);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_13 = L_12;
		String_t* L_14 = SteamVR_Action_Source_get_fullPath_m9D3700AC3EB06210A52EDA613F1523A48F0A1B81(__this, /*hidden argument*/NULL);
		NullCheck(L_13);
		ArrayElementTypeCheck (L_13, L_14);
		(L_13)->SetAt(static_cast<il2cpp_array_size_t>(1), (String_t*)L_14);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_15 = L_13;
		NullCheck(L_15);
		ArrayElementTypeCheck (L_15, _stringLiteralE6D56E05F32996CA7E5AE21BC90D49044C0BF356);
		(L_15)->SetAt(static_cast<il2cpp_array_size_t>(2), (String_t*)_stringLiteralE6D56E05F32996CA7E5AE21BC90D49044C0BF356);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_16 = L_15;
		RuntimeObject * L_17 = Box(EVRInputError_tE4C895A0D1F18C0024F5C180FF3962B056DA8A71_il2cpp_TypeInfo_var, (&V_0));
		NullCheck(L_17);
		String_t* L_18 = VirtFuncInvoker0< String_t* >::Invoke(3 /* System.String System.Object::ToString() */, L_17);
		V_0 = *(int32_t*)UnBox(L_17);
		NullCheck(L_16);
		ArrayElementTypeCheck (L_16, L_18);
		(L_16)->SetAt(static_cast<il2cpp_array_size_t>(3), (String_t*)L_18);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_19 = L_16;
		NullCheck(L_19);
		ArrayElementTypeCheck (L_19, _stringLiteral18B39452A606090B97AA8D84240CC83BE3E5D62B);
		(L_19)->SetAt(static_cast<il2cpp_array_size_t>(4), (String_t*)_stringLiteral18B39452A606090B97AA8D84240CC83BE3E5D62B);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_20 = L_19;
		uint64_t L_21 = SteamVR_Action_Source_get_handle_m66E0A3E9E7D6434FB905BF0D25013927B0C12791(__this, /*hidden argument*/NULL);
		V_2 = L_21;
		String_t* L_22 = UInt64_ToString_mF0E40B7459C207B89A1C8C04CE7F183AC0E6D672((uint64_t*)(&V_2), /*hidden argument*/NULL);
		NullCheck(L_20);
		ArrayElementTypeCheck (L_20, L_22);
		(L_20)->SetAt(static_cast<il2cpp_array_size_t>(5), (String_t*)L_22);
		String_t* L_23 = String_Concat_m232E857CA5107EA6AC52E7DD7018716C021F237B(L_20, /*hidden argument*/NULL);
		IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
		Debug_LogError_m3BCF9B78263152261565DCA9DB7D55F0C391ED29(L_23, /*hidden argument*/NULL);
	}

IL_009c:
	{
		// updateTime = Time.realtimeSinceStartup;
		float L_24 = Time_get_realtimeSinceStartup_mCA1086EC9DFCF135F77BC46D3B7127711EA3DE03(/*hidden argument*/NULL);
		SteamVR_Action_In_Source_set_updateTime_m7EA8D127664BA76D49BB51254DB17C4428843F9C_inline(__this, L_24, /*hidden argument*/NULL);
		// changed = false;
		VirtActionInvoker1< bool >::Invoke(32 /* System.Void Valve.VR.SteamVR_Action_In_Source::set_changed(System.Boolean) */, __this, (bool)0);
		// if (active)
		bool L_25 = VirtFuncInvoker0< bool >::Invoke(12 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_active() */, __this);
		V_3 = L_25;
		bool L_26 = V_3;
		if (!L_26)
		{
			goto IL_01ba;
		}
	}
	{
		// if (delta > changeTolerance || delta < -changeTolerance)
		float L_27 = SteamVR_Action_Single_Source_get_delta_mD9BEE7AF7213499DAE270C19A1FBD5298527F1BF(__this, /*hidden argument*/NULL);
		float L_28 = __this->get_changeTolerance_11();
		if ((((float)L_27) > ((float)L_28)))
		{
			goto IL_00dd;
		}
	}
	{
		float L_29 = SteamVR_Action_Single_Source_get_delta_mD9BEE7AF7213499DAE270C19A1FBD5298527F1BF(__this, /*hidden argument*/NULL);
		float L_30 = __this->get_changeTolerance_11();
		G_B6_0 = ((((float)L_29) < ((float)((-L_30))))? 1 : 0);
		goto IL_00de;
	}

IL_00dd:
	{
		G_B6_0 = 1;
	}

IL_00de:
	{
		V_4 = (bool)G_B6_0;
		bool L_31 = V_4;
		if (!L_31)
		{
			goto IL_0139;
		}
	}
	{
		// changed = true;
		VirtActionInvoker1< bool >::Invoke(32 /* System.Void Valve.VR.SteamVR_Action_In_Source::set_changed(System.Boolean) */, __this, (bool)1);
		// changedTime = Time.realtimeSinceStartup + actionData.fUpdateTime; //fUpdateTime is the time from the time the action was called that the action changed
		float L_32 = Time_get_realtimeSinceStartup_mCA1086EC9DFCF135F77BC46D3B7127711EA3DE03(/*hidden argument*/NULL);
		InputAnalogActionData_t_t6C7615BD7F4223A4ADA9268DDF501D09B3C808CA * L_33 = __this->get_address_of_actionData_20();
		float L_34 = L_33->get_fUpdateTime_8();
		SteamVR_Action_In_Source_set_changedTime_m68F47645CA38A2261F0694F61E3756788CFAE750_inline(__this, ((float)il2cpp_codegen_add((float)L_32, (float)L_34)), /*hidden argument*/NULL);
		// if (onChange != null)
		ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED * L_35 = __this->get_onChange_15();
		V_5 = (bool)((!(((RuntimeObject*)(ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED *)L_35) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		bool L_36 = V_5;
		if (!L_36)
		{
			goto IL_0138;
		}
	}
	{
		// onChange.Invoke(singleAction, inputSource, axis, delta);
		ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED * L_37 = __this->get_onChange_15();
		SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * L_38 = __this->get_singleAction_22();
		int32_t L_39 = SteamVR_Action_Source_get_inputSource_mAA1928183BB06E5C8CF950F65BA80635C25535D4_inline(__this, /*hidden argument*/NULL);
		float L_40 = SteamVR_Action_Single_Source_get_axis_mBA7DCD6C227E324C4B4029D020E37B1262CFB592(__this, /*hidden argument*/NULL);
		float L_41 = SteamVR_Action_Single_Source_get_delta_mD9BEE7AF7213499DAE270C19A1FBD5298527F1BF(__this, /*hidden argument*/NULL);
		NullCheck(L_37);
		ChangeHandler_Invoke_mA6FEAACAFCF036074E714B587983BF47E83DC71A(L_37, L_38, L_39, L_40, L_41, /*hidden argument*/NULL);
	}

IL_0138:
	{
	}

IL_0139:
	{
		// if (axis != 0)
		float L_42 = SteamVR_Action_Single_Source_get_axis_mBA7DCD6C227E324C4B4029D020E37B1262CFB592(__this, /*hidden argument*/NULL);
		V_6 = (bool)((((int32_t)((((float)L_42) == ((float)(0.0f)))? 1 : 0)) == ((int32_t)0))? 1 : 0);
		bool L_43 = V_6;
		if (!L_43)
		{
			goto IL_0184;
		}
	}
	{
		// if (onAxis != null)
		AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 * L_44 = __this->get_onAxis_12();
		V_7 = (bool)((!(((RuntimeObject*)(AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 *)L_44) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		bool L_45 = V_7;
		if (!L_45)
		{
			goto IL_0183;
		}
	}
	{
		// onAxis.Invoke(singleAction, inputSource, axis, delta);
		AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 * L_46 = __this->get_onAxis_12();
		SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * L_47 = __this->get_singleAction_22();
		int32_t L_48 = SteamVR_Action_Source_get_inputSource_mAA1928183BB06E5C8CF950F65BA80635C25535D4_inline(__this, /*hidden argument*/NULL);
		float L_49 = SteamVR_Action_Single_Source_get_axis_mBA7DCD6C227E324C4B4029D020E37B1262CFB592(__this, /*hidden argument*/NULL);
		float L_50 = SteamVR_Action_Single_Source_get_delta_mD9BEE7AF7213499DAE270C19A1FBD5298527F1BF(__this, /*hidden argument*/NULL);
		NullCheck(L_46);
		AxisHandler_Invoke_mDA97876A749D05A969CA6F3E21492029C4EECD9B(L_46, L_47, L_48, L_49, L_50, /*hidden argument*/NULL);
	}

IL_0183:
	{
	}

IL_0184:
	{
		// if (onUpdate != null)
		UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D * L_51 = __this->get_onUpdate_16();
		V_8 = (bool)((!(((RuntimeObject*)(UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D *)L_51) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		bool L_52 = V_8;
		if (!L_52)
		{
			goto IL_01b9;
		}
	}
	{
		// onUpdate.Invoke(singleAction, inputSource, axis, delta);
		UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D * L_53 = __this->get_onUpdate_16();
		SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * L_54 = __this->get_singleAction_22();
		int32_t L_55 = SteamVR_Action_Source_get_inputSource_mAA1928183BB06E5C8CF950F65BA80635C25535D4_inline(__this, /*hidden argument*/NULL);
		float L_56 = SteamVR_Action_Single_Source_get_axis_mBA7DCD6C227E324C4B4029D020E37B1262CFB592(__this, /*hidden argument*/NULL);
		float L_57 = SteamVR_Action_Single_Source_get_delta_mD9BEE7AF7213499DAE270C19A1FBD5298527F1BF(__this, /*hidden argument*/NULL);
		NullCheck(L_53);
		UpdateHandler_Invoke_mC46C8434097606A7922886963544D8A3B25387BC(L_53, L_54, L_55, L_56, L_57, /*hidden argument*/NULL);
	}

IL_01b9:
	{
	}

IL_01ba:
	{
		// if (onActiveBindingChange != null && lastActiveBinding != activeBinding)
		ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * L_58 = __this->get_onActiveBindingChange_14();
		if (!L_58)
		{
			goto IL_01d5;
		}
	}
	{
		bool L_59 = VirtFuncInvoker0< bool >::Invoke(16 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_lastActiveBinding() */, __this);
		bool L_60 = VirtFuncInvoker0< bool >::Invoke(13 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_activeBinding() */, __this);
		G_B20_0 = ((((int32_t)((((int32_t)L_59) == ((int32_t)L_60))? 1 : 0)) == ((int32_t)0))? 1 : 0);
		goto IL_01d6;
	}

IL_01d5:
	{
		G_B20_0 = 0;
	}

IL_01d6:
	{
		V_9 = (bool)G_B20_0;
		bool L_61 = V_9;
		if (!L_61)
		{
			goto IL_01fa;
		}
	}
	{
		// onActiveBindingChange.Invoke(singleAction, inputSource, activeBinding);
		ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * L_62 = __this->get_onActiveBindingChange_14();
		SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * L_63 = __this->get_singleAction_22();
		int32_t L_64 = SteamVR_Action_Source_get_inputSource_mAA1928183BB06E5C8CF950F65BA80635C25535D4_inline(__this, /*hidden argument*/NULL);
		bool L_65 = VirtFuncInvoker0< bool >::Invoke(13 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_activeBinding() */, __this);
		NullCheck(L_62);
		ActiveChangeHandler_Invoke_m226C2CFA8D9BB2881E969D6FB484D106AAF0D98D(L_62, L_63, L_64, L_65, /*hidden argument*/NULL);
	}

IL_01fa:
	{
		// if (onActiveChange != null && lastActive != active)
		ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * L_66 = __this->get_onActiveChange_13();
		if (!L_66)
		{
			goto IL_0215;
		}
	}
	{
		bool L_67 = VirtFuncInvoker0< bool >::Invoke(14 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_lastActive() */, __this);
		bool L_68 = VirtFuncInvoker0< bool >::Invoke(12 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_active() */, __this);
		G_B25_0 = ((((int32_t)((((int32_t)L_67) == ((int32_t)L_68))? 1 : 0)) == ((int32_t)0))? 1 : 0);
		goto IL_0216;
	}

IL_0215:
	{
		G_B25_0 = 0;
	}

IL_0216:
	{
		V_10 = (bool)G_B25_0;
		bool L_69 = V_10;
		if (!L_69)
		{
			goto IL_023a;
		}
	}
	{
		// onActiveChange.Invoke(singleAction, inputSource, activeBinding);
		ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * L_70 = __this->get_onActiveChange_13();
		SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * L_71 = __this->get_singleAction_22();
		int32_t L_72 = SteamVR_Action_Source_get_inputSource_mAA1928183BB06E5C8CF950F65BA80635C25535D4_inline(__this, /*hidden argument*/NULL);
		bool L_73 = VirtFuncInvoker0< bool >::Invoke(13 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_activeBinding() */, __this);
		NullCheck(L_70);
		ActiveChangeHandler_Invoke_m226C2CFA8D9BB2881E969D6FB484D106AAF0D98D(L_70, L_71, L_72, L_73, /*hidden argument*/NULL);
	}

IL_023a:
	{
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Single_Source::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Single_Source__ctor_m6C2E2412DF45BCFEF410B2D60E41727F39C20EAE (SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Single_Source__ctor_m6C2E2412DF45BCFEF410B2D60E41727F39C20EAE_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// public float changeTolerance = Mathf.Epsilon;
		IL2CPP_RUNTIME_CLASS_INIT(Mathf_tFBDE6467D269BFE410605C7D806FD9991D4A89CB_il2cpp_TypeInfo_var);
		float L_0 = ((Mathf_tFBDE6467D269BFE410605C7D806FD9991D4A89CB_StaticFields*)il2cpp_codegen_static_fields_for(Mathf_tFBDE6467D269BFE410605C7D806FD9991D4A89CB_il2cpp_TypeInfo_var))->get_Epsilon_0();
		__this->set_changeTolerance_11(L_0);
		// protected InputAnalogActionData_t actionData = new InputAnalogActionData_t();
		InputAnalogActionData_t_t6C7615BD7F4223A4ADA9268DDF501D09B3C808CA * L_1 = __this->get_address_of_actionData_20();
		il2cpp_codegen_initobj(L_1, sizeof(InputAnalogActionData_t_t6C7615BD7F4223A4ADA9268DDF501D09B3C808CA ));
		// protected InputAnalogActionData_t lastActionData = new InputAnalogActionData_t();
		InputAnalogActionData_t_t6C7615BD7F4223A4ADA9268DDF501D09B3C808CA * L_2 = __this->get_address_of_lastActionData_21();
		il2cpp_codegen_initobj(L_2, sizeof(InputAnalogActionData_t_t6C7615BD7F4223A4ADA9268DDF501D09B3C808CA ));
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB_il2cpp_TypeInfo_var);
		SteamVR_Action_In_Source__ctor_mE238DF9510354C14124DF4D1973356C078DAE3BB(__this, /*hidden argument*/NULL);
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Single_Source::.cctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Single_Source__cctor_m4C91DF7DBD2F5909F49FC503C53D230CC4D6214E (const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Single_Source__cctor_m4C91DF7DBD2F5909F49FC503C53D230CC4D6214E_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// protected static uint actionData_size = 0;
		((SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F_il2cpp_TypeInfo_var))->set_actionData_size_10(0);
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Action_Single_Source_Map::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Single_Source_Map__ctor_m5230AC179899A005416BDED17CA57813E46D3095 (SteamVR_Action_Single_Source_Map_tBD46D15F4FCB5A4B6BDA2B1FE96035D4DDBDBA37 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Single_Source_Map__ctor_m5230AC179899A005416BDED17CA57813E46D3095_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		SteamVR_Action_In_Source_Map_1__ctor_mB77B525B66B2B2D0584C98822837286DF43B701B(__this, /*hidden argument*/SteamVR_Action_In_Source_Map_1__ctor_mB77B525B66B2B2D0584C98822837286DF43B701B_RuntimeMethod_var);
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Action_Skeleton::add_onActiveChange(Valve.VR.SteamVR_Action_Skeleton/ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_add_onActiveChange_m40D17716AE011C3C546D9311644DBD3FB039CD2A (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_add_onActiveChange_m40D17716AE011C3C546D9311644DBD3FB039CD2A_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// { add { sourceMap[SteamVR_Input_Sources.Any].onActiveChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onActiveChange -= value; } }
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * L_2 = ___value0;
		NullCheck(L_1);
		SteamVR_Action_Skeleton_Source_add_onActiveChange_m24B7A7690655124BE37A0854C004BBD11BCBB83A(L_1, L_2, /*hidden argument*/NULL);
		// { add { sourceMap[SteamVR_Input_Sources.Any].onActiveChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onActiveChange -= value; } }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton::remove_onActiveChange(Valve.VR.SteamVR_Action_Skeleton/ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_remove_onActiveChange_m339C2BDD69B4C1D1B1B7FFCA026A61BACEFD7189 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_remove_onActiveChange_m339C2BDD69B4C1D1B1B7FFCA026A61BACEFD7189_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// { add { sourceMap[SteamVR_Input_Sources.Any].onActiveChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onActiveChange -= value; } }
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * L_2 = ___value0;
		NullCheck(L_1);
		SteamVR_Action_Skeleton_Source_remove_onActiveChange_mBFD27080A2A3F94F22EB62EBD7C2680D21CF0C40(L_1, L_2, /*hidden argument*/NULL);
		// { add { sourceMap[SteamVR_Input_Sources.Any].onActiveChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onActiveChange -= value; } }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton::add_onActiveBindingChange(Valve.VR.SteamVR_Action_Skeleton/ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_add_onActiveBindingChange_m8D5A4BC261C88609DCE5DC6C6ACA319CF096AE3F (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_add_onActiveBindingChange_m8D5A4BC261C88609DCE5DC6C6ACA319CF096AE3F_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// { add { sourceMap[SteamVR_Input_Sources.Any].onActiveBindingChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onActiveBindingChange -= value; } }
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * L_2 = ___value0;
		NullCheck(L_1);
		SteamVR_Action_Skeleton_Source_add_onActiveBindingChange_mBA9217A7856EEA2B9346304FF33C00F3D35E381D(L_1, L_2, /*hidden argument*/NULL);
		// { add { sourceMap[SteamVR_Input_Sources.Any].onActiveBindingChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onActiveBindingChange -= value; } }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton::remove_onActiveBindingChange(Valve.VR.SteamVR_Action_Skeleton/ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_remove_onActiveBindingChange_m848BD10A1A87309B1DF4069572CE76F5F239F466 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_remove_onActiveBindingChange_m848BD10A1A87309B1DF4069572CE76F5F239F466_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// { add { sourceMap[SteamVR_Input_Sources.Any].onActiveBindingChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onActiveBindingChange -= value; } }
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * L_2 = ___value0;
		NullCheck(L_1);
		SteamVR_Action_Skeleton_Source_remove_onActiveBindingChange_m928BE406E004801B903336174AD71858077B4C31(L_1, L_2, /*hidden argument*/NULL);
		// { add { sourceMap[SteamVR_Input_Sources.Any].onActiveBindingChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onActiveBindingChange -= value; } }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton::add_onChange(Valve.VR.SteamVR_Action_Skeleton/ChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_add_onChange_m12A9C8A760977D5F6A2B691B27F130DDF53AC3D3 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_add_onChange_m12A9C8A760977D5F6A2B691B27F130DDF53AC3D3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// { add { sourceMap[SteamVR_Input_Sources.Any].onChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onChange -= value; } }
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 * L_2 = ___value0;
		NullCheck(L_1);
		SteamVR_Action_Skeleton_Source_add_onChange_m51211C4C14EDFC3532F9E4E205AE05A33C33B853(L_1, L_2, /*hidden argument*/NULL);
		// { add { sourceMap[SteamVR_Input_Sources.Any].onChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onChange -= value; } }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton::remove_onChange(Valve.VR.SteamVR_Action_Skeleton/ChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_remove_onChange_mDA1FBCD9AF09E3137213E323678DB53BA516C55F (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_remove_onChange_mDA1FBCD9AF09E3137213E323678DB53BA516C55F_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// { add { sourceMap[SteamVR_Input_Sources.Any].onChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onChange -= value; } }
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 * L_2 = ___value0;
		NullCheck(L_1);
		SteamVR_Action_Skeleton_Source_remove_onChange_m6ACA4D17F3A943BB1AA96322576AA634DE0D8A0B(L_1, L_2, /*hidden argument*/NULL);
		// { add { sourceMap[SteamVR_Input_Sources.Any].onChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onChange -= value; } }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton::add_onUpdate(Valve.VR.SteamVR_Action_Skeleton/UpdateHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_add_onUpdate_m89B6922E93039BB28782F32834DA94C7BCD71B93 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_add_onUpdate_m89B6922E93039BB28782F32834DA94C7BCD71B93_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// { add { sourceMap[SteamVR_Input_Sources.Any].onUpdate += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onUpdate -= value; } }
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 * L_2 = ___value0;
		NullCheck(L_1);
		SteamVR_Action_Skeleton_Source_add_onUpdate_mB78DAAB24C69C5E8AFB4AAD7BD5207D3F1A4FE61(L_1, L_2, /*hidden argument*/NULL);
		// { add { sourceMap[SteamVR_Input_Sources.Any].onUpdate += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onUpdate -= value; } }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton::remove_onUpdate(Valve.VR.SteamVR_Action_Skeleton/UpdateHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_remove_onUpdate_m0E36BACC29D6E1A0EDD1D71A7A8FCACB8AD9BE12 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_remove_onUpdate_m0E36BACC29D6E1A0EDD1D71A7A8FCACB8AD9BE12_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// { add { sourceMap[SteamVR_Input_Sources.Any].onUpdate += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onUpdate -= value; } }
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 * L_2 = ___value0;
		NullCheck(L_1);
		SteamVR_Action_Skeleton_Source_remove_onUpdate_m628C295EBD7F127757F7A4EB9CBD5563BF36C4B9(L_1, L_2, /*hidden argument*/NULL);
		// { add { sourceMap[SteamVR_Input_Sources.Any].onUpdate += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onUpdate -= value; } }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton::add_onTrackingChanged(Valve.VR.SteamVR_Action_Skeleton/TrackingChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_add_onTrackingChanged_mB96616276E5D48F8D8B4FDDC7EB5FDDBB05EC51F (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_add_onTrackingChanged_mB96616276E5D48F8D8B4FDDC7EB5FDDBB05EC51F_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// { add { sourceMap[SteamVR_Input_Sources.Any].onTrackingChanged += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onTrackingChanged -= value; } }
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 * L_2 = ___value0;
		NullCheck(L_1);
		SteamVR_Action_Skeleton_Source_add_onTrackingChanged_mE82310A9D0C5662FEC30C6BBCA210B4448D954F8(L_1, L_2, /*hidden argument*/NULL);
		// { add { sourceMap[SteamVR_Input_Sources.Any].onTrackingChanged += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onTrackingChanged -= value; } }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton::remove_onTrackingChanged(Valve.VR.SteamVR_Action_Skeleton/TrackingChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_remove_onTrackingChanged_mD222AA9F12ADA54BAE92CF73C3F29AB76394B216 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_remove_onTrackingChanged_mD222AA9F12ADA54BAE92CF73C3F29AB76394B216_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// { add { sourceMap[SteamVR_Input_Sources.Any].onTrackingChanged += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onTrackingChanged -= value; } }
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 * L_2 = ___value0;
		NullCheck(L_1);
		SteamVR_Action_Skeleton_Source_remove_onTrackingChanged_m40D169DABA55145AB54EF10974905C05237D2CA6(L_1, L_2, /*hidden argument*/NULL);
		// { add { sourceMap[SteamVR_Input_Sources.Any].onTrackingChanged += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onTrackingChanged -= value; } }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton::add_onValidPoseChanged(Valve.VR.SteamVR_Action_Skeleton/ValidPoseChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_add_onValidPoseChanged_m8A1E87644531826367E6DE4A764001078158B278 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_add_onValidPoseChanged_m8A1E87644531826367E6DE4A764001078158B278_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// { add { sourceMap[SteamVR_Input_Sources.Any].onValidPoseChanged += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onValidPoseChanged -= value; } }
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 * L_2 = ___value0;
		NullCheck(L_1);
		SteamVR_Action_Skeleton_Source_add_onValidPoseChanged_m1E9DD56A71BF38267F5BD279BAA9B378842512AE(L_1, L_2, /*hidden argument*/NULL);
		// { add { sourceMap[SteamVR_Input_Sources.Any].onValidPoseChanged += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onValidPoseChanged -= value; } }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton::remove_onValidPoseChanged(Valve.VR.SteamVR_Action_Skeleton/ValidPoseChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_remove_onValidPoseChanged_mE939F9AB63558D460288EB13C9AB8BA094CE5EAA (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_remove_onValidPoseChanged_mE939F9AB63558D460288EB13C9AB8BA094CE5EAA_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// { add { sourceMap[SteamVR_Input_Sources.Any].onValidPoseChanged += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onValidPoseChanged -= value; } }
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 * L_2 = ___value0;
		NullCheck(L_1);
		SteamVR_Action_Skeleton_Source_remove_onValidPoseChanged_mEE5E18D3BE29BAA782313154AFB6EAC448899DDE(L_1, L_2, /*hidden argument*/NULL);
		// { add { sourceMap[SteamVR_Input_Sources.Any].onValidPoseChanged += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onValidPoseChanged -= value; } }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton::add_onDeviceConnectedChanged(Valve.VR.SteamVR_Action_Skeleton/DeviceConnectedChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_add_onDeviceConnectedChanged_m2FD37E10C687951C71A4A79F55C2A0AB37599130 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_add_onDeviceConnectedChanged_m2FD37E10C687951C71A4A79F55C2A0AB37599130_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// { add { sourceMap[SteamVR_Input_Sources.Any].onDeviceConnectedChanged += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onDeviceConnectedChanged -= value; } }
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 * L_2 = ___value0;
		NullCheck(L_1);
		SteamVR_Action_Skeleton_Source_add_onDeviceConnectedChanged_m6AF65BCB16CBA635F075BFE3D42A85C1164FBC3C(L_1, L_2, /*hidden argument*/NULL);
		// { add { sourceMap[SteamVR_Input_Sources.Any].onDeviceConnectedChanged += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onDeviceConnectedChanged -= value; } }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton::remove_onDeviceConnectedChanged(Valve.VR.SteamVR_Action_Skeleton/DeviceConnectedChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_remove_onDeviceConnectedChanged_m6FBB5C7942C93C9C82500CD1A245E867B5D9BEEF (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_remove_onDeviceConnectedChanged_m6FBB5C7942C93C9C82500CD1A245E867B5D9BEEF_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// { add { sourceMap[SteamVR_Input_Sources.Any].onDeviceConnectedChanged += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onDeviceConnectedChanged -= value; } }
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 * L_2 = ___value0;
		NullCheck(L_1);
		SteamVR_Action_Skeleton_Source_remove_onDeviceConnectedChanged_m77B3EE4ABFF7936EC6951485DCD048DBEE1562BB(L_1, L_2, /*hidden argument*/NULL);
		// { add { sourceMap[SteamVR_Input_Sources.Any].onDeviceConnectedChanged += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onDeviceConnectedChanged -= value; } }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton__ctor_mE6AACBF536160DEB2EF9E0D179D7E92A652D1AAC (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton__ctor_mE6AACBF536160DEB2EF9E0D179D7E92A652D1AAC_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// public SteamVR_Action_Skeleton() { }
		SteamVR_Action_Pose_Base_2__ctor_m24086345D5295A3360CF25DCB9922CA2CC4ECF61(__this, /*hidden argument*/SteamVR_Action_Pose_Base_2__ctor_m24086345D5295A3360CF25DCB9922CA2CC4ECF61_RuntimeMethod_var);
		// public SteamVR_Action_Skeleton() { }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton::UpdateValue(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_UpdateValue_mE62B79C272C41DD238C9CA81CEF61DF2B877217F (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, bool ___skipStateAndEventUpdates0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_UpdateValue_mE62B79C272C41DD238C9CA81CEF61DF2B877217F_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// sourceMap[SteamVR_Input_Sources.Any].UpdateValue(skipStateAndEventUpdates);
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		bool L_2 = ___skipStateAndEventUpdates0;
		NullCheck(L_1);
		VirtActionInvoker1< bool >::Invoke(51 /* System.Void Valve.VR.SteamVR_Action_Pose_Source::UpdateValue(System.Boolean) */, L_1, L_2);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton::UpdateValueWithoutEvents()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_UpdateValueWithoutEvents_m80B8E2671A00A7299A9E0FEF4010A8D87B01A782 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_UpdateValueWithoutEvents_m80B8E2671A00A7299A9E0FEF4010A8D87B01A782_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// sourceMap[SteamVR_Input_Sources.Any].UpdateValue(true);
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		VirtActionInvoker1< bool >::Invoke(51 /* System.Void Valve.VR.SteamVR_Action_Pose_Source::UpdateValue(System.Boolean) */, L_1, (bool)1);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton::UpdateTransform(UnityEngine.Transform)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_UpdateTransform_mF3D00D161725EB90B155367C2485D7D092FF7650 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___transformToUpdate0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_UpdateTransform_mF3D00D161725EB90B155367C2485D7D092FF7650_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// base.UpdateTransform(SteamVR_Input_Sources.Any, transformToUpdate);
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_0 = ___transformToUpdate0;
		SteamVR_Action_Pose_Base_2_UpdateTransform_mA2326B217389FE7C35FA7067EC5CB94B949791CD(__this, 0, L_0, /*hidden argument*/SteamVR_Action_Pose_Base_2_UpdateTransform_mA2326B217389FE7C35FA7067EC5CB94B949791CD_RuntimeMethod_var);
		// }
		return;
	}
}
// UnityEngine.Vector3[] Valve.VR.SteamVR_Action_Skeleton::get_bonePositions()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* SteamVR_Action_Skeleton_get_bonePositions_m0CA06F68C8E3D40036C298CE992C74A79C7DA80B (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_get_bonePositions_m0CA06F68C8E3D40036C298CE992C74A79C7DA80B_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* V_0 = NULL;
	{
		// public Vector3[] bonePositions { get { return sourceMap[SteamVR_Input_Sources.Any].bonePositions; } }
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_2 = SteamVR_Action_Skeleton_Source_get_bonePositions_mA0C01DDB9EAB9749BBBEDBCFF72582812AB9C195_inline(L_1, /*hidden argument*/NULL);
		V_0 = L_2;
		goto IL_0015;
	}

IL_0015:
	{
		// public Vector3[] bonePositions { get { return sourceMap[SteamVR_Input_Sources.Any].bonePositions; } }
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_3 = V_0;
		return L_3;
	}
}
// UnityEngine.Quaternion[] Valve.VR.SteamVR_Action_Skeleton::get_boneRotations()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* SteamVR_Action_Skeleton_get_boneRotations_m3FF8C259CBA6EF38DF309362206C2871EB754A4E (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_get_boneRotations_m3FF8C259CBA6EF38DF309362206C2871EB754A4E_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* V_0 = NULL;
	{
		// public Quaternion[] boneRotations { get { return sourceMap[SteamVR_Input_Sources.Any].boneRotations; } }
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* L_2 = SteamVR_Action_Skeleton_Source_get_boneRotations_mCD0B038517CA7A79945AD615082F05B25B0EDA20_inline(L_1, /*hidden argument*/NULL);
		V_0 = L_2;
		goto IL_0015;
	}

IL_0015:
	{
		// public Quaternion[] boneRotations { get { return sourceMap[SteamVR_Input_Sources.Any].boneRotations; } }
		QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* L_3 = V_0;
		return L_3;
	}
}
// UnityEngine.Vector3[] Valve.VR.SteamVR_Action_Skeleton::get_lastBonePositions()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* SteamVR_Action_Skeleton_get_lastBonePositions_m5BB686C5104B6A2CC970239A84B0DD48EED00005 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_get_lastBonePositions_m5BB686C5104B6A2CC970239A84B0DD48EED00005_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* V_0 = NULL;
	{
		// public Vector3[] lastBonePositions { get { return sourceMap[SteamVR_Input_Sources.Any].lastBonePositions; } }
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_2 = SteamVR_Action_Skeleton_Source_get_lastBonePositions_m99D1C7B8A05E646777AC85CFC0ED2FF0953C3AB9_inline(L_1, /*hidden argument*/NULL);
		V_0 = L_2;
		goto IL_0015;
	}

IL_0015:
	{
		// public Vector3[] lastBonePositions { get { return sourceMap[SteamVR_Input_Sources.Any].lastBonePositions; } }
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_3 = V_0;
		return L_3;
	}
}
// UnityEngine.Quaternion[] Valve.VR.SteamVR_Action_Skeleton::get_lastBoneRotations()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* SteamVR_Action_Skeleton_get_lastBoneRotations_m116F9E698A5C9DF460DD49FBEAB7580913027F9A (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_get_lastBoneRotations_m116F9E698A5C9DF460DD49FBEAB7580913027F9A_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* V_0 = NULL;
	{
		// public Quaternion[] lastBoneRotations { get { return sourceMap[SteamVR_Input_Sources.Any].lastBoneRotations; } }
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* L_2 = SteamVR_Action_Skeleton_Source_get_lastBoneRotations_m14A98028FB99C0404733364FFD3C187D2A53261C_inline(L_1, /*hidden argument*/NULL);
		V_0 = L_2;
		goto IL_0015;
	}

IL_0015:
	{
		// public Quaternion[] lastBoneRotations { get { return sourceMap[SteamVR_Input_Sources.Any].lastBoneRotations; } }
		QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* L_3 = V_0;
		return L_3;
	}
}
// Valve.VR.EVRSkeletalMotionRange Valve.VR.SteamVR_Action_Skeleton::get_rangeOfMotion()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t SteamVR_Action_Skeleton_get_rangeOfMotion_m164E7E3524A4E441911795109FF3C8A713FE2F8B (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_get_rangeOfMotion_m164E7E3524A4E441911795109FF3C8A713FE2F8B_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	{
		// get { return sourceMap[SteamVR_Input_Sources.Any].rangeOfMotion; }
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		int32_t L_2 = SteamVR_Action_Skeleton_Source_get_rangeOfMotion_m3698046C051B2375EA956A3BDFE1BB6CA28AAD4E_inline(L_1, /*hidden argument*/NULL);
		V_0 = L_2;
		goto IL_0015;
	}

IL_0015:
	{
		// get { return sourceMap[SteamVR_Input_Sources.Any].rangeOfMotion; }
		int32_t L_3 = V_0;
		return L_3;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton::set_rangeOfMotion(Valve.VR.EVRSkeletalMotionRange)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_set_rangeOfMotion_mE9FC966C95EE20AEF5689640E39EE9856ADD0E5A (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, int32_t ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_set_rangeOfMotion_mE9FC966C95EE20AEF5689640E39EE9856ADD0E5A_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// set { sourceMap[SteamVR_Input_Sources.Any].rangeOfMotion = value; }
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		int32_t L_2 = ___value0;
		NullCheck(L_1);
		SteamVR_Action_Skeleton_Source_set_rangeOfMotion_m91A4B52E877EA5A07574CC4A7FDE89BC4B4594F9_inline(L_1, L_2, /*hidden argument*/NULL);
		// set { sourceMap[SteamVR_Input_Sources.Any].rangeOfMotion = value; }
		return;
	}
}
// Valve.VR.EVRSkeletalTransformSpace Valve.VR.SteamVR_Action_Skeleton::get_skeletalTransformSpace()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t SteamVR_Action_Skeleton_get_skeletalTransformSpace_m609F4EBCC946B2013DF3781F78AF5EEBEF0BB4BD (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_get_skeletalTransformSpace_m609F4EBCC946B2013DF3781F78AF5EEBEF0BB4BD_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	{
		// get { return sourceMap[SteamVR_Input_Sources.Any].skeletalTransformSpace; }
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		int32_t L_2 = SteamVR_Action_Skeleton_Source_get_skeletalTransformSpace_m581268DA5BEE1B2F2315A38319F75E7241F5BB21_inline(L_1, /*hidden argument*/NULL);
		V_0 = L_2;
		goto IL_0015;
	}

IL_0015:
	{
		// get { return sourceMap[SteamVR_Input_Sources.Any].skeletalTransformSpace; }
		int32_t L_3 = V_0;
		return L_3;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton::set_skeletalTransformSpace(Valve.VR.EVRSkeletalTransformSpace)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_set_skeletalTransformSpace_m4ED1658D08275F082D2DB094A2A9C4083A70CE86 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, int32_t ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_set_skeletalTransformSpace_m4ED1658D08275F082D2DB094A2A9C4083A70CE86_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// set { sourceMap[SteamVR_Input_Sources.Any].skeletalTransformSpace = value; }
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		int32_t L_2 = ___value0;
		NullCheck(L_1);
		SteamVR_Action_Skeleton_Source_set_skeletalTransformSpace_m0A466B97614EB779A0DA19E3F2DBEC0E7E8E162D_inline(L_1, L_2, /*hidden argument*/NULL);
		// set { sourceMap[SteamVR_Input_Sources.Any].skeletalTransformSpace = value; }
		return;
	}
}
// Valve.VR.EVRSummaryType Valve.VR.SteamVR_Action_Skeleton::get_summaryDataType()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t SteamVR_Action_Skeleton_get_summaryDataType_m623171EDFBF7215BCD7536B87E88905D92821B6E (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_get_summaryDataType_m623171EDFBF7215BCD7536B87E88905D92821B6E_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	{
		// get { return sourceMap[SteamVR_Input_Sources.Any].summaryDataType; }
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		int32_t L_2 = SteamVR_Action_Skeleton_Source_get_summaryDataType_m99C31EEF6D6E87C035887DE8640DC37C07D2CA79_inline(L_1, /*hidden argument*/NULL);
		V_0 = L_2;
		goto IL_0015;
	}

IL_0015:
	{
		// get { return sourceMap[SteamVR_Input_Sources.Any].summaryDataType; }
		int32_t L_3 = V_0;
		return L_3;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton::set_summaryDataType(Valve.VR.EVRSummaryType)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_set_summaryDataType_m85AD270664D25F20C965A5329F0EB80F0F8C64DA (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, int32_t ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_set_summaryDataType_m85AD270664D25F20C965A5329F0EB80F0F8C64DA_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// set { sourceMap[SteamVR_Input_Sources.Any].summaryDataType = value; }
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		int32_t L_2 = ___value0;
		NullCheck(L_1);
		SteamVR_Action_Skeleton_Source_set_summaryDataType_m772AC48620054C732E34EE86BBADE98C3EFAC365_inline(L_1, L_2, /*hidden argument*/NULL);
		// set { sourceMap[SteamVR_Input_Sources.Any].summaryDataType = value; }
		return;
	}
}
// Valve.VR.EVRSkeletalTrackingLevel Valve.VR.SteamVR_Action_Skeleton::get_skeletalTrackingLevel()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t SteamVR_Action_Skeleton_get_skeletalTrackingLevel_mB93F6FEB223A4694998A515C3F9527AFF46EF44E (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_get_skeletalTrackingLevel_mB93F6FEB223A4694998A515C3F9527AFF46EF44E_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	{
		// get { return sourceMap[SteamVR_Input_Sources.Any].skeletalTrackingLevel; }
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		int32_t L_2 = SteamVR_Action_Skeleton_Source_get_skeletalTrackingLevel_mABC82B5824C8B57C5C222A20B80E47ABE5DF7E9B(L_1, /*hidden argument*/NULL);
		V_0 = L_2;
		goto IL_0015;
	}

IL_0015:
	{
		// get { return sourceMap[SteamVR_Input_Sources.Any].skeletalTrackingLevel; }
		int32_t L_3 = V_0;
		return L_3;
	}
}
// System.Single Valve.VR.SteamVR_Action_Skeleton::get_thumbCurl()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_get_thumbCurl_m1BD464F774C52E7239B4B82F4E56084F4CC1A8CC (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_get_thumbCurl_m1BD464F774C52E7239B4B82F4E56084F4CC1A8CC_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	float V_0 = 0.0f;
	{
		// public float thumbCurl { get { return sourceMap[SteamVR_Input_Sources.Any].thumbCurl; } }
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		float L_2 = SteamVR_Action_Skeleton_Source_get_thumbCurl_m1E1B3EB8065D36CC07FD3D3F81142DE18117571D(L_1, /*hidden argument*/NULL);
		V_0 = L_2;
		goto IL_0015;
	}

IL_0015:
	{
		// public float thumbCurl { get { return sourceMap[SteamVR_Input_Sources.Any].thumbCurl; } }
		float L_3 = V_0;
		return L_3;
	}
}
// System.Single Valve.VR.SteamVR_Action_Skeleton::get_indexCurl()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_get_indexCurl_mD40CFB5149D41DB9D401BA6316815F76D18E0862 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_get_indexCurl_mD40CFB5149D41DB9D401BA6316815F76D18E0862_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	float V_0 = 0.0f;
	{
		// public float indexCurl { get { return sourceMap[SteamVR_Input_Sources.Any].indexCurl; } }
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		float L_2 = SteamVR_Action_Skeleton_Source_get_indexCurl_m23B7090B54104226A276B2DA6F9AF05D8A87F4C4(L_1, /*hidden argument*/NULL);
		V_0 = L_2;
		goto IL_0015;
	}

IL_0015:
	{
		// public float indexCurl { get { return sourceMap[SteamVR_Input_Sources.Any].indexCurl; } }
		float L_3 = V_0;
		return L_3;
	}
}
// System.Single Valve.VR.SteamVR_Action_Skeleton::get_middleCurl()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_get_middleCurl_m62D5CADF36971682033F53297E0BCCAE2F9291A6 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_get_middleCurl_m62D5CADF36971682033F53297E0BCCAE2F9291A6_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	float V_0 = 0.0f;
	{
		// public float middleCurl { get { return sourceMap[SteamVR_Input_Sources.Any].middleCurl; } }
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		float L_2 = SteamVR_Action_Skeleton_Source_get_middleCurl_mF2DB6D3C537BDA649730D9DED5FD8C158792A99E(L_1, /*hidden argument*/NULL);
		V_0 = L_2;
		goto IL_0015;
	}

IL_0015:
	{
		// public float middleCurl { get { return sourceMap[SteamVR_Input_Sources.Any].middleCurl; } }
		float L_3 = V_0;
		return L_3;
	}
}
// System.Single Valve.VR.SteamVR_Action_Skeleton::get_ringCurl()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_get_ringCurl_m772FE608FCBB514FFB5AC088EB6A8562E76EE96B (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_get_ringCurl_m772FE608FCBB514FFB5AC088EB6A8562E76EE96B_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	float V_0 = 0.0f;
	{
		// public float ringCurl { get { return sourceMap[SteamVR_Input_Sources.Any].ringCurl; } }
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		float L_2 = SteamVR_Action_Skeleton_Source_get_ringCurl_mB1080317044EB9464CBFA2AB4D579481889A4DF6(L_1, /*hidden argument*/NULL);
		V_0 = L_2;
		goto IL_0015;
	}

IL_0015:
	{
		// public float ringCurl { get { return sourceMap[SteamVR_Input_Sources.Any].ringCurl; } }
		float L_3 = V_0;
		return L_3;
	}
}
// System.Single Valve.VR.SteamVR_Action_Skeleton::get_pinkyCurl()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_get_pinkyCurl_m64F91EE4141BACF0FB606F58E150CCD42ED15685 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_get_pinkyCurl_m64F91EE4141BACF0FB606F58E150CCD42ED15685_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	float V_0 = 0.0f;
	{
		// public float pinkyCurl { get { return sourceMap[SteamVR_Input_Sources.Any].pinkyCurl; } }
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		float L_2 = SteamVR_Action_Skeleton_Source_get_pinkyCurl_mDCB73847A197AC4E4F55DF28D27857EE71F131B3(L_1, /*hidden argument*/NULL);
		V_0 = L_2;
		goto IL_0015;
	}

IL_0015:
	{
		// public float pinkyCurl { get { return sourceMap[SteamVR_Input_Sources.Any].pinkyCurl; } }
		float L_3 = V_0;
		return L_3;
	}
}
// System.Single Valve.VR.SteamVR_Action_Skeleton::get_thumbIndexSplay()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_get_thumbIndexSplay_mE7F58F6BB1309EEB6BAF6048DCEF95FD7CDB7F7F (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_get_thumbIndexSplay_mE7F58F6BB1309EEB6BAF6048DCEF95FD7CDB7F7F_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	float V_0 = 0.0f;
	{
		// public float thumbIndexSplay { get { return sourceMap[SteamVR_Input_Sources.Any].thumbIndexSplay; } }
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		float L_2 = SteamVR_Action_Skeleton_Source_get_thumbIndexSplay_m8A48CFB2D8446B92D1ACD230A06CCADEADAF90D8(L_1, /*hidden argument*/NULL);
		V_0 = L_2;
		goto IL_0015;
	}

IL_0015:
	{
		// public float thumbIndexSplay { get { return sourceMap[SteamVR_Input_Sources.Any].thumbIndexSplay; } }
		float L_3 = V_0;
		return L_3;
	}
}
// System.Single Valve.VR.SteamVR_Action_Skeleton::get_indexMiddleSplay()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_get_indexMiddleSplay_mCEF74F281F6E5AA8CEB2B6C38C4521E6A5504CD3 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_get_indexMiddleSplay_mCEF74F281F6E5AA8CEB2B6C38C4521E6A5504CD3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	float V_0 = 0.0f;
	{
		// public float indexMiddleSplay { get { return sourceMap[SteamVR_Input_Sources.Any].indexMiddleSplay; } }
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		float L_2 = SteamVR_Action_Skeleton_Source_get_indexMiddleSplay_m032F314FF2441AF7819CD080BAC24BD7EA1D25B2(L_1, /*hidden argument*/NULL);
		V_0 = L_2;
		goto IL_0015;
	}

IL_0015:
	{
		// public float indexMiddleSplay { get { return sourceMap[SteamVR_Input_Sources.Any].indexMiddleSplay; } }
		float L_3 = V_0;
		return L_3;
	}
}
// System.Single Valve.VR.SteamVR_Action_Skeleton::get_middleRingSplay()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_get_middleRingSplay_mBBA68EE0F20B15BE029B99BF161B6EF769D7D8B1 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_get_middleRingSplay_mBBA68EE0F20B15BE029B99BF161B6EF769D7D8B1_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	float V_0 = 0.0f;
	{
		// public float middleRingSplay { get { return sourceMap[SteamVR_Input_Sources.Any].middleRingSplay; } }
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		float L_2 = SteamVR_Action_Skeleton_Source_get_middleRingSplay_m8F9D81F3B1CB80C0DD82485A54DB100FF1B0E546(L_1, /*hidden argument*/NULL);
		V_0 = L_2;
		goto IL_0015;
	}

IL_0015:
	{
		// public float middleRingSplay { get { return sourceMap[SteamVR_Input_Sources.Any].middleRingSplay; } }
		float L_3 = V_0;
		return L_3;
	}
}
// System.Single Valve.VR.SteamVR_Action_Skeleton::get_ringPinkySplay()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_get_ringPinkySplay_mE8F0CDC0FEF2E9B5574DE4052C71992CE0C056E3 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_get_ringPinkySplay_mE8F0CDC0FEF2E9B5574DE4052C71992CE0C056E3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	float V_0 = 0.0f;
	{
		// public float ringPinkySplay { get { return sourceMap[SteamVR_Input_Sources.Any].ringPinkySplay; } }
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		float L_2 = SteamVR_Action_Skeleton_Source_get_ringPinkySplay_m1A57999FB132953BE3265B6C3AB7E274A1D10DE0(L_1, /*hidden argument*/NULL);
		V_0 = L_2;
		goto IL_0015;
	}

IL_0015:
	{
		// public float ringPinkySplay { get { return sourceMap[SteamVR_Input_Sources.Any].ringPinkySplay; } }
		float L_3 = V_0;
		return L_3;
	}
}
// System.Single Valve.VR.SteamVR_Action_Skeleton::get_lastThumbCurl()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_get_lastThumbCurl_mA1ADB215014FA9B424CBE9C69873CF3F0C09178F (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_get_lastThumbCurl_mA1ADB215014FA9B424CBE9C69873CF3F0C09178F_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	float V_0 = 0.0f;
	{
		// public float lastThumbCurl { get { return sourceMap[SteamVR_Input_Sources.Any].lastThumbCurl; } }
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		float L_2 = SteamVR_Action_Skeleton_Source_get_lastThumbCurl_mE893135DF37D02B74C7B190331E8A214C5350AC4(L_1, /*hidden argument*/NULL);
		V_0 = L_2;
		goto IL_0015;
	}

IL_0015:
	{
		// public float lastThumbCurl { get { return sourceMap[SteamVR_Input_Sources.Any].lastThumbCurl; } }
		float L_3 = V_0;
		return L_3;
	}
}
// System.Single Valve.VR.SteamVR_Action_Skeleton::get_lastIndexCurl()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_get_lastIndexCurl_mCB8D286E38817E71154F868F20D34781520D2342 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_get_lastIndexCurl_mCB8D286E38817E71154F868F20D34781520D2342_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	float V_0 = 0.0f;
	{
		// public float lastIndexCurl { get { return sourceMap[SteamVR_Input_Sources.Any].lastIndexCurl; } }
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		float L_2 = SteamVR_Action_Skeleton_Source_get_lastIndexCurl_mB7429964CAA0C0A16B0C98F8FEADEFFD8466CE30(L_1, /*hidden argument*/NULL);
		V_0 = L_2;
		goto IL_0015;
	}

IL_0015:
	{
		// public float lastIndexCurl { get { return sourceMap[SteamVR_Input_Sources.Any].lastIndexCurl; } }
		float L_3 = V_0;
		return L_3;
	}
}
// System.Single Valve.VR.SteamVR_Action_Skeleton::get_lastMiddleCurl()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_get_lastMiddleCurl_mC6A14E91B4ACA78451639E2A12A0236CB8D4355A (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_get_lastMiddleCurl_mC6A14E91B4ACA78451639E2A12A0236CB8D4355A_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	float V_0 = 0.0f;
	{
		// public float lastMiddleCurl { get { return sourceMap[SteamVR_Input_Sources.Any].lastMiddleCurl; } }
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		float L_2 = SteamVR_Action_Skeleton_Source_get_lastMiddleCurl_m1EC63B41C764BED847913534AFA8D939FE64686A(L_1, /*hidden argument*/NULL);
		V_0 = L_2;
		goto IL_0015;
	}

IL_0015:
	{
		// public float lastMiddleCurl { get { return sourceMap[SteamVR_Input_Sources.Any].lastMiddleCurl; } }
		float L_3 = V_0;
		return L_3;
	}
}
// System.Single Valve.VR.SteamVR_Action_Skeleton::get_lastRingCurl()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_get_lastRingCurl_m49EEA025CDB4F42177A323C4669EE312C2EA104C (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_get_lastRingCurl_m49EEA025CDB4F42177A323C4669EE312C2EA104C_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	float V_0 = 0.0f;
	{
		// public float lastRingCurl { get { return sourceMap[SteamVR_Input_Sources.Any].lastRingCurl; } }
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		float L_2 = SteamVR_Action_Skeleton_Source_get_lastRingCurl_m243A9EC6EA188AA107D23B07BA8BEFCABC3EEAA8(L_1, /*hidden argument*/NULL);
		V_0 = L_2;
		goto IL_0015;
	}

IL_0015:
	{
		// public float lastRingCurl { get { return sourceMap[SteamVR_Input_Sources.Any].lastRingCurl; } }
		float L_3 = V_0;
		return L_3;
	}
}
// System.Single Valve.VR.SteamVR_Action_Skeleton::get_lastPinkyCurl()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_get_lastPinkyCurl_mCDDB123CC3232A31CDEA442F98F1CD266DFB9473 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_get_lastPinkyCurl_mCDDB123CC3232A31CDEA442F98F1CD266DFB9473_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	float V_0 = 0.0f;
	{
		// public float lastPinkyCurl { get { return sourceMap[SteamVR_Input_Sources.Any].lastPinkyCurl; } }
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		float L_2 = SteamVR_Action_Skeleton_Source_get_lastPinkyCurl_m67226B9DF4D046AFFC83ED7FB6B9BD8678C0B306(L_1, /*hidden argument*/NULL);
		V_0 = L_2;
		goto IL_0015;
	}

IL_0015:
	{
		// public float lastPinkyCurl { get { return sourceMap[SteamVR_Input_Sources.Any].lastPinkyCurl; } }
		float L_3 = V_0;
		return L_3;
	}
}
// System.Single Valve.VR.SteamVR_Action_Skeleton::get_lastThumbIndexSplay()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_get_lastThumbIndexSplay_mAA1B4AB36A8AE75C12693D14E837471F029582D7 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_get_lastThumbIndexSplay_mAA1B4AB36A8AE75C12693D14E837471F029582D7_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	float V_0 = 0.0f;
	{
		// public float lastThumbIndexSplay { get { return sourceMap[SteamVR_Input_Sources.Any].lastThumbIndexSplay; } }
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		float L_2 = SteamVR_Action_Skeleton_Source_get_lastThumbIndexSplay_mFECABD9313D9F50354F74393A9A22B3DCF0C991B(L_1, /*hidden argument*/NULL);
		V_0 = L_2;
		goto IL_0015;
	}

IL_0015:
	{
		// public float lastThumbIndexSplay { get { return sourceMap[SteamVR_Input_Sources.Any].lastThumbIndexSplay; } }
		float L_3 = V_0;
		return L_3;
	}
}
// System.Single Valve.VR.SteamVR_Action_Skeleton::get_lastIndexMiddleSplay()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_get_lastIndexMiddleSplay_m537358EC0290F43CF54E6D59908B747203917385 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_get_lastIndexMiddleSplay_m537358EC0290F43CF54E6D59908B747203917385_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	float V_0 = 0.0f;
	{
		// public float lastIndexMiddleSplay { get { return sourceMap[SteamVR_Input_Sources.Any].lastIndexMiddleSplay; } }
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		float L_2 = SteamVR_Action_Skeleton_Source_get_lastIndexMiddleSplay_mC780C06D5EFBB2E006D57433B5813666CABE8684(L_1, /*hidden argument*/NULL);
		V_0 = L_2;
		goto IL_0015;
	}

IL_0015:
	{
		// public float lastIndexMiddleSplay { get { return sourceMap[SteamVR_Input_Sources.Any].lastIndexMiddleSplay; } }
		float L_3 = V_0;
		return L_3;
	}
}
// System.Single Valve.VR.SteamVR_Action_Skeleton::get_lastMiddleRingSplay()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_get_lastMiddleRingSplay_mC7DEA2B768D213209132AC1104490CE3A03225FF (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_get_lastMiddleRingSplay_mC7DEA2B768D213209132AC1104490CE3A03225FF_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	float V_0 = 0.0f;
	{
		// public float lastMiddleRingSplay { get { return sourceMap[SteamVR_Input_Sources.Any].lastMiddleRingSplay; } }
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		float L_2 = SteamVR_Action_Skeleton_Source_get_lastMiddleRingSplay_mF7BD21EE49B81B5326424FEA0EBB2191171BCDC6(L_1, /*hidden argument*/NULL);
		V_0 = L_2;
		goto IL_0015;
	}

IL_0015:
	{
		// public float lastMiddleRingSplay { get { return sourceMap[SteamVR_Input_Sources.Any].lastMiddleRingSplay; } }
		float L_3 = V_0;
		return L_3;
	}
}
// System.Single Valve.VR.SteamVR_Action_Skeleton::get_lastRingPinkySplay()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_get_lastRingPinkySplay_mFE5B99D86267CAE5489CC5E38E519A9B703130EA (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_get_lastRingPinkySplay_mFE5B99D86267CAE5489CC5E38E519A9B703130EA_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	float V_0 = 0.0f;
	{
		// public float lastRingPinkySplay { get { return sourceMap[SteamVR_Input_Sources.Any].lastRingPinkySplay; } }
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		float L_2 = SteamVR_Action_Skeleton_Source_get_lastRingPinkySplay_mE15C84D9E609B6A7941C2C96AAAF10514D3808B1(L_1, /*hidden argument*/NULL);
		V_0 = L_2;
		goto IL_0015;
	}

IL_0015:
	{
		// public float lastRingPinkySplay { get { return sourceMap[SteamVR_Input_Sources.Any].lastRingPinkySplay; } }
		float L_3 = V_0;
		return L_3;
	}
}
// System.Single[] Valve.VR.SteamVR_Action_Skeleton::get_fingerCurls()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* SteamVR_Action_Skeleton_get_fingerCurls_m3543777AFAE62C3BDA5BD87296938A0A35968571 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_get_fingerCurls_m3543777AFAE62C3BDA5BD87296938A0A35968571_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* V_0 = NULL;
	{
		// public float[] fingerCurls { get { return sourceMap[SteamVR_Input_Sources.Any].fingerCurls; } }
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_2 = SteamVR_Action_Skeleton_Source_get_fingerCurls_m6E0B4235B8D2B15E1BBFD7634ECA591CC77A2732_inline(L_1, /*hidden argument*/NULL);
		V_0 = L_2;
		goto IL_0015;
	}

IL_0015:
	{
		// public float[] fingerCurls { get { return sourceMap[SteamVR_Input_Sources.Any].fingerCurls; } }
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_3 = V_0;
		return L_3;
	}
}
// System.Single[] Valve.VR.SteamVR_Action_Skeleton::get_fingerSplays()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* SteamVR_Action_Skeleton_get_fingerSplays_m9832D47FA8272304A06D1EA2D5983C6A0335C727 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_get_fingerSplays_m9832D47FA8272304A06D1EA2D5983C6A0335C727_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* V_0 = NULL;
	{
		// public float[] fingerSplays { get { return sourceMap[SteamVR_Input_Sources.Any].fingerSplays; } }
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_2 = SteamVR_Action_Skeleton_Source_get_fingerSplays_m21D8D0994518AF9B7532A558E5E39A81C29ADE11_inline(L_1, /*hidden argument*/NULL);
		V_0 = L_2;
		goto IL_0015;
	}

IL_0015:
	{
		// public float[] fingerSplays { get { return sourceMap[SteamVR_Input_Sources.Any].fingerSplays; } }
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_3 = V_0;
		return L_3;
	}
}
// System.Single[] Valve.VR.SteamVR_Action_Skeleton::get_lastFingerCurls()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* SteamVR_Action_Skeleton_get_lastFingerCurls_m5845169E9581C6D1C559916C9FE6B0D3BD88F569 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_get_lastFingerCurls_m5845169E9581C6D1C559916C9FE6B0D3BD88F569_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* V_0 = NULL;
	{
		// public float[] lastFingerCurls { get { return sourceMap[SteamVR_Input_Sources.Any].lastFingerCurls; } }
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_2 = SteamVR_Action_Skeleton_Source_get_lastFingerCurls_m46C98882B5CB755BB4ADC367308E91D036E1896E_inline(L_1, /*hidden argument*/NULL);
		V_0 = L_2;
		goto IL_0015;
	}

IL_0015:
	{
		// public float[] lastFingerCurls { get { return sourceMap[SteamVR_Input_Sources.Any].lastFingerCurls; } }
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_3 = V_0;
		return L_3;
	}
}
// System.Single[] Valve.VR.SteamVR_Action_Skeleton::get_lastFingerSplays()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* SteamVR_Action_Skeleton_get_lastFingerSplays_m1E58D2AB027C4777F5CF744CB81DA5D20AAE272B (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_get_lastFingerSplays_m1E58D2AB027C4777F5CF744CB81DA5D20AAE272B_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* V_0 = NULL;
	{
		// public float[] lastFingerSplays { get { return sourceMap[SteamVR_Input_Sources.Any].lastFingerSplays; } }
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_2 = SteamVR_Action_Skeleton_Source_get_lastFingerSplays_m9DFC31F484BCD45399E9335EE8679CEC8150D3F4_inline(L_1, /*hidden argument*/NULL);
		V_0 = L_2;
		goto IL_0015;
	}

IL_0015:
	{
		// public float[] lastFingerSplays { get { return sourceMap[SteamVR_Input_Sources.Any].lastFingerSplays; } }
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_3 = V_0;
		return L_3;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Skeleton::get_poseChanged()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Skeleton_get_poseChanged_mF300E3B9442ECA6F8E85323A6273F2D2BEDE7EBA (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_get_poseChanged_mF300E3B9442ECA6F8E85323A6273F2D2BEDE7EBA_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	{
		// public bool poseChanged { get { return sourceMap[SteamVR_Input_Sources.Any].poseChanged; } }
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		bool L_2 = SteamVR_Action_Skeleton_Source_get_poseChanged_mBBFFCD8FF3AB5998C3B5053499A253E137EB6B01_inline(L_1, /*hidden argument*/NULL);
		V_0 = L_2;
		goto IL_0015;
	}

IL_0015:
	{
		// public bool poseChanged { get { return sourceMap[SteamVR_Input_Sources.Any].poseChanged; } }
		bool L_3 = V_0;
		return L_3;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Skeleton::get_onlyUpdateSummaryData()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Skeleton_get_onlyUpdateSummaryData_m57BB2B0F924B60931DB89E6519BD6D5DDC004366 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_get_onlyUpdateSummaryData_m57BB2B0F924B60931DB89E6519BD6D5DDC004366_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	{
		// public bool onlyUpdateSummaryData { get { return sourceMap[SteamVR_Input_Sources.Any].onlyUpdateSummaryData; } set { sourceMap[SteamVR_Input_Sources.Any].onlyUpdateSummaryData = value; } }
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		bool L_2 = SteamVR_Action_Skeleton_Source_get_onlyUpdateSummaryData_m3F489169E6CE022F5E46CB1D3B6EB910564C8A9A_inline(L_1, /*hidden argument*/NULL);
		V_0 = L_2;
		goto IL_0015;
	}

IL_0015:
	{
		// public bool onlyUpdateSummaryData { get { return sourceMap[SteamVR_Input_Sources.Any].onlyUpdateSummaryData; } set { sourceMap[SteamVR_Input_Sources.Any].onlyUpdateSummaryData = value; } }
		bool L_3 = V_0;
		return L_3;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton::set_onlyUpdateSummaryData(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_set_onlyUpdateSummaryData_mBE77FD96B7AE53E0FA0679F6C3F88016BF0643ED (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, bool ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_set_onlyUpdateSummaryData_mBE77FD96B7AE53E0FA0679F6C3F88016BF0643ED_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// public bool onlyUpdateSummaryData { get { return sourceMap[SteamVR_Input_Sources.Any].onlyUpdateSummaryData; } set { sourceMap[SteamVR_Input_Sources.Any].onlyUpdateSummaryData = value; } }
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		bool L_2 = ___value0;
		NullCheck(L_1);
		SteamVR_Action_Skeleton_Source_set_onlyUpdateSummaryData_m02A775C0CAB57C16D4A673019586873F7C0B3CFB_inline(L_1, L_2, /*hidden argument*/NULL);
		// public bool onlyUpdateSummaryData { get { return sourceMap[SteamVR_Input_Sources.Any].onlyUpdateSummaryData; } set { sourceMap[SteamVR_Input_Sources.Any].onlyUpdateSummaryData = value; } }
		return;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Skeleton::GetActive()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Skeleton_GetActive_m1090332A342CFB41EB88E6BA50BBF8C696743A69 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_GetActive_m1090332A342CFB41EB88E6BA50BBF8C696743A69_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	{
		// return sourceMap[SteamVR_Input_Sources.Any].active;
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		bool L_2 = VirtFuncInvoker0< bool >::Invoke(12 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_active() */, L_1);
		V_0 = L_2;
		goto IL_0015;
	}

IL_0015:
	{
		// }
		bool L_3 = V_0;
		return L_3;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Skeleton::GetSetActive()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Skeleton_GetSetActive_m99514F836DE26CBCFE97A6C63F0057396E94932B (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	bool V_0 = false;
	{
		// return actionSet.IsActive(SteamVR_Input_Sources.Any);
		SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * L_0 = VirtFuncInvoker0< SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * >::Invoke(19 /* Valve.VR.SteamVR_ActionSet Valve.VR.SteamVR_Action::get_actionSet() */, __this);
		NullCheck(L_0);
		bool L_1 = SteamVR_ActionSet_IsActive_m2C7FE33DC70E0D8C3D7E06F024C3409A116CE127(L_0, 0, /*hidden argument*/NULL);
		V_0 = L_1;
		goto IL_0010;
	}

IL_0010:
	{
		// }
		bool L_2 = V_0;
		return L_2;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Skeleton::GetVelocitiesAtTimeOffset(System.Single,UnityEngine.Vector3&,UnityEngine.Vector3&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Skeleton_GetVelocitiesAtTimeOffset_mA16A4DD85A3A182D61A4FBAA4FC09417857D6CC2 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, float ___secondsFromNow0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * ___velocity1, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * ___angularVelocity2, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_GetVelocitiesAtTimeOffset_mA16A4DD85A3A182D61A4FBAA4FC09417857D6CC2_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	{
		// return sourceMap[SteamVR_Input_Sources.Any].GetVelocitiesAtTimeOffset(secondsFromNow, out velocity, out angularVelocity);
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		float L_2 = ___secondsFromNow0;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * L_3 = ___velocity1;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * L_4 = ___angularVelocity2;
		NullCheck(L_1);
		bool L_5 = SteamVR_Action_Pose_Source_GetVelocitiesAtTimeOffset_m2FB2A8F8F97750A6CAD390348AAE8E9DF94B9B69(L_1, L_2, (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)L_3, (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)L_4, /*hidden argument*/NULL);
		V_0 = L_5;
		goto IL_0018;
	}

IL_0018:
	{
		// }
		bool L_6 = V_0;
		return L_6;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Skeleton::GetPoseAtTimeOffset(System.Single,UnityEngine.Vector3&,UnityEngine.Quaternion&,UnityEngine.Vector3&,UnityEngine.Vector3&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Skeleton_GetPoseAtTimeOffset_m180DEFDDB1EBE9F66B1E68EA11C534AE1F963844 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, float ___secondsFromNow0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * ___position1, Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 * ___rotation2, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * ___velocity3, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * ___angularVelocity4, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_GetPoseAtTimeOffset_m180DEFDDB1EBE9F66B1E68EA11C534AE1F963844_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	{
		// return sourceMap[SteamVR_Input_Sources.Any].GetPoseAtTimeOffset(secondsFromNow, out position, out rotation, out velocity, out angularVelocity);
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		float L_2 = ___secondsFromNow0;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * L_3 = ___position1;
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 * L_4 = ___rotation2;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * L_5 = ___velocity3;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * L_6 = ___angularVelocity4;
		NullCheck(L_1);
		bool L_7 = SteamVR_Action_Pose_Source_GetPoseAtTimeOffset_mB6CC830F3A16661AADD4A98BBA70E69ED8C98480(L_1, L_2, (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)L_3, (Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 *)L_4, (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)L_5, (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)L_6, /*hidden argument*/NULL);
		V_0 = L_7;
		goto IL_001c;
	}

IL_001c:
	{
		// }
		bool L_8 = V_0;
		return L_8;
	}
}
// UnityEngine.Vector3 Valve.VR.SteamVR_Action_Skeleton::GetLocalPosition()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SteamVR_Action_Skeleton_GetLocalPosition_mB9C362EEA9A30E590A62D20B986A94C98AA1FAD5 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_GetLocalPosition_mB9C362EEA9A30E590A62D20B986A94C98AA1FAD5_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_0;
	memset((&V_0), 0, sizeof(V_0));
	{
		// return sourceMap[SteamVR_Input_Sources.Any].localPosition;
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_2 = SteamVR_Action_Pose_Source_get_localPosition_mE065A826D8D1A8CF44D9E7F0D038F24D70985833_inline(L_1, /*hidden argument*/NULL);
		V_0 = L_2;
		goto IL_0015;
	}

IL_0015:
	{
		// }
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_3 = V_0;
		return L_3;
	}
}
// UnityEngine.Quaternion Valve.VR.SteamVR_Action_Skeleton::GetLocalRotation()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  SteamVR_Action_Skeleton_GetLocalRotation_m917F58C641A69D3E71DC1F48AF8B2EE2A8C143D2 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_GetLocalRotation_m917F58C641A69D3E71DC1F48AF8B2EE2A8C143D2_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  V_0;
	memset((&V_0), 0, sizeof(V_0));
	{
		// return sourceMap[SteamVR_Input_Sources.Any].localRotation;
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_2 = SteamVR_Action_Pose_Source_get_localRotation_m307D9DD92DFFFCC30446A71D9BD15674A797ED2A_inline(L_1, /*hidden argument*/NULL);
		V_0 = L_2;
		goto IL_0015;
	}

IL_0015:
	{
		// }
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_3 = V_0;
		return L_3;
	}
}
// UnityEngine.Vector3 Valve.VR.SteamVR_Action_Skeleton::GetVelocity()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SteamVR_Action_Skeleton_GetVelocity_m9E1BECFF847AF4E2FB1AEF786886D9A1A5F42E38 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_GetVelocity_m9E1BECFF847AF4E2FB1AEF786886D9A1A5F42E38_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_0;
	memset((&V_0), 0, sizeof(V_0));
	{
		// return sourceMap[SteamVR_Input_Sources.Any].velocity;
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_2 = SteamVR_Action_Pose_Source_get_velocity_m2B71BB7981006080D113442CB374529602A310BF_inline(L_1, /*hidden argument*/NULL);
		V_0 = L_2;
		goto IL_0015;
	}

IL_0015:
	{
		// }
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_3 = V_0;
		return L_3;
	}
}
// UnityEngine.Vector3 Valve.VR.SteamVR_Action_Skeleton::GetAngularVelocity()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SteamVR_Action_Skeleton_GetAngularVelocity_mFC20208B5BBBA5BA921F1541BFBD1126A2850946 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_GetAngularVelocity_mFC20208B5BBBA5BA921F1541BFBD1126A2850946_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_0;
	memset((&V_0), 0, sizeof(V_0));
	{
		// return sourceMap[SteamVR_Input_Sources.Any].angularVelocity;
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_2 = SteamVR_Action_Pose_Source_get_angularVelocity_mACAA45CB05DB94C9292ED147F3156109DAFA0209_inline(L_1, /*hidden argument*/NULL);
		V_0 = L_2;
		goto IL_0015;
	}

IL_0015:
	{
		// }
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_3 = V_0;
		return L_3;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Skeleton::GetDeviceIsConnected()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Skeleton_GetDeviceIsConnected_m2EFB10F62BBFDDCA14A353A0BFEA9DE26BFEDB72 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_GetDeviceIsConnected_m2EFB10F62BBFDDCA14A353A0BFEA9DE26BFEDB72_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	{
		// return sourceMap[SteamVR_Input_Sources.Any].deviceIsConnected;
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		bool L_2 = SteamVR_Action_Pose_Source_get_deviceIsConnected_m631372A24F57796D298E27F7E8BB93BFA31143EB(L_1, /*hidden argument*/NULL);
		V_0 = L_2;
		goto IL_0015;
	}

IL_0015:
	{
		// }
		bool L_3 = V_0;
		return L_3;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Skeleton::GetPoseIsValid()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Skeleton_GetPoseIsValid_m99410844A085C144FE9679FF756ADC2B0D030B74 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_GetPoseIsValid_m99410844A085C144FE9679FF756ADC2B0D030B74_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	{
		// return sourceMap[SteamVR_Input_Sources.Any].poseIsValid;
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		bool L_2 = SteamVR_Action_Pose_Source_get_poseIsValid_m637DE37434CBBEC04B359C9FF89AF0681DA67457(L_1, /*hidden argument*/NULL);
		V_0 = L_2;
		goto IL_0015;
	}

IL_0015:
	{
		// }
		bool L_3 = V_0;
		return L_3;
	}
}
// Valve.VR.ETrackingResult Valve.VR.SteamVR_Action_Skeleton::GetTrackingResult()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t SteamVR_Action_Skeleton_GetTrackingResult_m5BB423D6684C4A314D1D0B1E3FC27CEA96BF033B (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_GetTrackingResult_m5BB423D6684C4A314D1D0B1E3FC27CEA96BF033B_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	{
		// return sourceMap[SteamVR_Input_Sources.Any].trackingState;
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		int32_t L_2 = SteamVR_Action_Pose_Source_get_trackingState_m702AC7130C7E0CD7EE794221240B44EAC08BAB7D(L_1, /*hidden argument*/NULL);
		V_0 = L_2;
		goto IL_0015;
	}

IL_0015:
	{
		// }
		int32_t L_3 = V_0;
		return L_3;
	}
}
// UnityEngine.Vector3 Valve.VR.SteamVR_Action_Skeleton::GetLastLocalPosition()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SteamVR_Action_Skeleton_GetLastLocalPosition_m47A225F07BE521AE0BCE352D6D9DC51EB1D3C367 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_GetLastLocalPosition_m47A225F07BE521AE0BCE352D6D9DC51EB1D3C367_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_0;
	memset((&V_0), 0, sizeof(V_0));
	{
		// return sourceMap[SteamVR_Input_Sources.Any].lastLocalPosition;
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_2 = SteamVR_Action_Pose_Source_get_lastLocalPosition_mB748F9D4600498E9BACCEBE5C8F00DED8125C307_inline(L_1, /*hidden argument*/NULL);
		V_0 = L_2;
		goto IL_0015;
	}

IL_0015:
	{
		// }
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_3 = V_0;
		return L_3;
	}
}
// UnityEngine.Quaternion Valve.VR.SteamVR_Action_Skeleton::GetLastLocalRotation()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  SteamVR_Action_Skeleton_GetLastLocalRotation_m99CAC6CCFA012EAA3DEF73BA8DC2B781E6F95542 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_GetLastLocalRotation_m99CAC6CCFA012EAA3DEF73BA8DC2B781E6F95542_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  V_0;
	memset((&V_0), 0, sizeof(V_0));
	{
		// return sourceMap[SteamVR_Input_Sources.Any].lastLocalRotation;
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_2 = SteamVR_Action_Pose_Source_get_lastLocalRotation_m15622BCE4A3D32548EBFE7DC98F8751352617660_inline(L_1, /*hidden argument*/NULL);
		V_0 = L_2;
		goto IL_0015;
	}

IL_0015:
	{
		// }
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_3 = V_0;
		return L_3;
	}
}
// UnityEngine.Vector3 Valve.VR.SteamVR_Action_Skeleton::GetLastVelocity()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SteamVR_Action_Skeleton_GetLastVelocity_m578B56041101A994C9D60A31B9F360B7E0C63AAF (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_GetLastVelocity_m578B56041101A994C9D60A31B9F360B7E0C63AAF_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_0;
	memset((&V_0), 0, sizeof(V_0));
	{
		// return sourceMap[SteamVR_Input_Sources.Any].lastVelocity;
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_2 = SteamVR_Action_Pose_Source_get_lastVelocity_mB9FD7955140F713C63842433E1E50D498EAD0A21_inline(L_1, /*hidden argument*/NULL);
		V_0 = L_2;
		goto IL_0015;
	}

IL_0015:
	{
		// }
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_3 = V_0;
		return L_3;
	}
}
// UnityEngine.Vector3 Valve.VR.SteamVR_Action_Skeleton::GetLastAngularVelocity()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SteamVR_Action_Skeleton_GetLastAngularVelocity_m0F6189A5D1B1F5400F4725891F1B7FB6B6A724BD (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_GetLastAngularVelocity_m0F6189A5D1B1F5400F4725891F1B7FB6B6A724BD_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_0;
	memset((&V_0), 0, sizeof(V_0));
	{
		// return sourceMap[SteamVR_Input_Sources.Any].lastAngularVelocity;
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_2 = SteamVR_Action_Pose_Source_get_lastAngularVelocity_m3EE729ECF16DA55CFE069E25EB9099A80667C55F_inline(L_1, /*hidden argument*/NULL);
		V_0 = L_2;
		goto IL_0015;
	}

IL_0015:
	{
		// }
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_3 = V_0;
		return L_3;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Skeleton::GetLastDeviceIsConnected()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Skeleton_GetLastDeviceIsConnected_mDE11523435C378EA5D5CDFD18DA2E613A7B3C84A (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_GetLastDeviceIsConnected_mDE11523435C378EA5D5CDFD18DA2E613A7B3C84A_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	{
		// return sourceMap[SteamVR_Input_Sources.Any].lastDeviceIsConnected;
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		bool L_2 = SteamVR_Action_Pose_Source_get_lastDeviceIsConnected_m54D89CD952536E4C6CC1B31D732F097A78FC6D83(L_1, /*hidden argument*/NULL);
		V_0 = L_2;
		goto IL_0015;
	}

IL_0015:
	{
		// }
		bool L_3 = V_0;
		return L_3;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Skeleton::GetLastPoseIsValid()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Skeleton_GetLastPoseIsValid_m59F5349322FB99412B3D1169B6529CBC47045464 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_GetLastPoseIsValid_m59F5349322FB99412B3D1169B6529CBC47045464_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	{
		// return sourceMap[SteamVR_Input_Sources.Any].lastPoseIsValid;
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		bool L_2 = SteamVR_Action_Pose_Source_get_lastPoseIsValid_m7CC61D5F85FD1334CFC6F917EECDA224FA903D0E(L_1, /*hidden argument*/NULL);
		V_0 = L_2;
		goto IL_0015;
	}

IL_0015:
	{
		// }
		bool L_3 = V_0;
		return L_3;
	}
}
// Valve.VR.ETrackingResult Valve.VR.SteamVR_Action_Skeleton::GetLastTrackingResult()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t SteamVR_Action_Skeleton_GetLastTrackingResult_mDBFAC087C635E4347DC745BFB4DB19F7D02496E1 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_GetLastTrackingResult_mDBFAC087C635E4347DC745BFB4DB19F7D02496E1_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	{
		// return sourceMap[SteamVR_Input_Sources.Any].lastTrackingState;
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		int32_t L_2 = SteamVR_Action_Pose_Source_get_lastTrackingState_m38B8C3D8A8462CE12EFD78811EBBD8CCEB52FAF8(L_1, /*hidden argument*/NULL);
		V_0 = L_2;
		goto IL_0015;
	}

IL_0015:
	{
		// }
		int32_t L_3 = V_0;
		return L_3;
	}
}
// System.Int32 Valve.VR.SteamVR_Action_Skeleton::get_boneCount()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t SteamVR_Action_Skeleton_get_boneCount_mD9298F3DA3A9E0B9590359E9C79A2F382478B0AD (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	int32_t V_0 = 0;
	{
		// public int boneCount { get { return (int)GetBoneCount(); } }
		uint32_t L_0 = SteamVR_Action_Skeleton_GetBoneCount_mD2B27CC695DB970DE6F2FE9F57747306854185FC(__this, /*hidden argument*/NULL);
		V_0 = L_0;
		goto IL_000a;
	}

IL_000a:
	{
		// public int boneCount { get { return (int)GetBoneCount(); } }
		int32_t L_1 = V_0;
		return L_1;
	}
}
// UnityEngine.Vector3[] Valve.VR.SteamVR_Action_Skeleton::GetBonePositions(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* SteamVR_Action_Skeleton_GetBonePositions_m3255642E4D3CFB08DC2AE68FEA234FD6BBCCD138 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, bool ___copy0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_GetBonePositions_m3255642E4D3CFB08DC2AE68FEA234FD6BBCCD138_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* V_1 = NULL;
	{
		// if (copy)
		bool L_0 = ___copy0;
		V_0 = L_0;
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0024;
		}
	}
	{
		// return (Vector3[])sourceMap[SteamVR_Input_Sources.Any].bonePositions.Clone();
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_2 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_2);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_3 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_2, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_3);
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_4 = SteamVR_Action_Skeleton_Source_get_bonePositions_mA0C01DDB9EAB9749BBBEDBCFF72582812AB9C195_inline(L_3, /*hidden argument*/NULL);
		NullCheck((RuntimeArray *)(RuntimeArray *)L_4);
		RuntimeObject * L_5 = Array_Clone_mE8C710213E323617A6F46F2B36DCDDD4C7CF5176((RuntimeArray *)(RuntimeArray *)L_4, /*hidden argument*/NULL);
		V_1 = ((Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28*)Castclass((RuntimeObject*)L_5, Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28_il2cpp_TypeInfo_var));
		goto IL_0038;
	}

IL_0024:
	{
		// return sourceMap[SteamVR_Input_Sources.Any].bonePositions;
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_6 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_6);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_7 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_6, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_7);
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_8 = SteamVR_Action_Skeleton_Source_get_bonePositions_mA0C01DDB9EAB9749BBBEDBCFF72582812AB9C195_inline(L_7, /*hidden argument*/NULL);
		V_1 = L_8;
		goto IL_0038;
	}

IL_0038:
	{
		// }
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_9 = V_1;
		return L_9;
	}
}
// UnityEngine.Quaternion[] Valve.VR.SteamVR_Action_Skeleton::GetBoneRotations(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* SteamVR_Action_Skeleton_GetBoneRotations_mC23759032EEAB4D83EC4A90A7A438EA436291C78 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, bool ___copy0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_GetBoneRotations_mC23759032EEAB4D83EC4A90A7A438EA436291C78_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* V_1 = NULL;
	{
		// if (copy)
		bool L_0 = ___copy0;
		V_0 = L_0;
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0024;
		}
	}
	{
		// return (Quaternion[])sourceMap[SteamVR_Input_Sources.Any].boneRotations.Clone();
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_2 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_2);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_3 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_2, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_3);
		QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* L_4 = SteamVR_Action_Skeleton_Source_get_boneRotations_mCD0B038517CA7A79945AD615082F05B25B0EDA20_inline(L_3, /*hidden argument*/NULL);
		NullCheck((RuntimeArray *)(RuntimeArray *)L_4);
		RuntimeObject * L_5 = Array_Clone_mE8C710213E323617A6F46F2B36DCDDD4C7CF5176((RuntimeArray *)(RuntimeArray *)L_4, /*hidden argument*/NULL);
		V_1 = ((QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3*)Castclass((RuntimeObject*)L_5, QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3_il2cpp_TypeInfo_var));
		goto IL_0038;
	}

IL_0024:
	{
		// return sourceMap[SteamVR_Input_Sources.Any].boneRotations;
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_6 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_6);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_7 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_6, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_7);
		QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* L_8 = SteamVR_Action_Skeleton_Source_get_boneRotations_mCD0B038517CA7A79945AD615082F05B25B0EDA20_inline(L_7, /*hidden argument*/NULL);
		V_1 = L_8;
		goto IL_0038;
	}

IL_0038:
	{
		// }
		QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* L_9 = V_1;
		return L_9;
	}
}
// UnityEngine.Vector3[] Valve.VR.SteamVR_Action_Skeleton::GetLastBonePositions(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* SteamVR_Action_Skeleton_GetLastBonePositions_mE1AA5295248A42DA26F2BA67C7995CDE65111CD4 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, bool ___copy0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_GetLastBonePositions_mE1AA5295248A42DA26F2BA67C7995CDE65111CD4_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* V_1 = NULL;
	{
		// if (copy)
		bool L_0 = ___copy0;
		V_0 = L_0;
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0024;
		}
	}
	{
		// return (Vector3[])sourceMap[SteamVR_Input_Sources.Any].lastBonePositions.Clone();
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_2 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_2);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_3 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_2, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_3);
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_4 = SteamVR_Action_Skeleton_Source_get_lastBonePositions_m99D1C7B8A05E646777AC85CFC0ED2FF0953C3AB9_inline(L_3, /*hidden argument*/NULL);
		NullCheck((RuntimeArray *)(RuntimeArray *)L_4);
		RuntimeObject * L_5 = Array_Clone_mE8C710213E323617A6F46F2B36DCDDD4C7CF5176((RuntimeArray *)(RuntimeArray *)L_4, /*hidden argument*/NULL);
		V_1 = ((Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28*)Castclass((RuntimeObject*)L_5, Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28_il2cpp_TypeInfo_var));
		goto IL_0038;
	}

IL_0024:
	{
		// return sourceMap[SteamVR_Input_Sources.Any].lastBonePositions;
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_6 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_6);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_7 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_6, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_7);
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_8 = SteamVR_Action_Skeleton_Source_get_lastBonePositions_m99D1C7B8A05E646777AC85CFC0ED2FF0953C3AB9_inline(L_7, /*hidden argument*/NULL);
		V_1 = L_8;
		goto IL_0038;
	}

IL_0038:
	{
		// }
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_9 = V_1;
		return L_9;
	}
}
// UnityEngine.Quaternion[] Valve.VR.SteamVR_Action_Skeleton::GetLastBoneRotations(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* SteamVR_Action_Skeleton_GetLastBoneRotations_mA7A7CBCB0B61367EBB09C9970C85A174877AF694 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, bool ___copy0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_GetLastBoneRotations_mA7A7CBCB0B61367EBB09C9970C85A174877AF694_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* V_1 = NULL;
	{
		// if (copy)
		bool L_0 = ___copy0;
		V_0 = L_0;
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0024;
		}
	}
	{
		// return (Quaternion[])sourceMap[SteamVR_Input_Sources.Any].lastBoneRotations.Clone();
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_2 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_2);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_3 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_2, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_3);
		QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* L_4 = SteamVR_Action_Skeleton_Source_get_lastBoneRotations_m14A98028FB99C0404733364FFD3C187D2A53261C_inline(L_3, /*hidden argument*/NULL);
		NullCheck((RuntimeArray *)(RuntimeArray *)L_4);
		RuntimeObject * L_5 = Array_Clone_mE8C710213E323617A6F46F2B36DCDDD4C7CF5176((RuntimeArray *)(RuntimeArray *)L_4, /*hidden argument*/NULL);
		V_1 = ((QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3*)Castclass((RuntimeObject*)L_5, QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3_il2cpp_TypeInfo_var));
		goto IL_0038;
	}

IL_0024:
	{
		// return sourceMap[SteamVR_Input_Sources.Any].lastBoneRotations;
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_6 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_6);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_7 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_6, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_7);
		QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* L_8 = SteamVR_Action_Skeleton_Source_get_lastBoneRotations_m14A98028FB99C0404733364FFD3C187D2A53261C_inline(L_7, /*hidden argument*/NULL);
		V_1 = L_8;
		goto IL_0038;
	}

IL_0038:
	{
		// }
		QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* L_9 = V_1;
		return L_9;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton::SetRangeOfMotion(Valve.VR.EVRSkeletalMotionRange)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_SetRangeOfMotion_mB0FD356FCF72B2D9C3356B048E3C0C59A3E1BD0A (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, int32_t ___range0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_SetRangeOfMotion_mB0FD356FCF72B2D9C3356B048E3C0C59A3E1BD0A_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// sourceMap[SteamVR_Input_Sources.Any].rangeOfMotion = range;
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		int32_t L_2 = ___range0;
		NullCheck(L_1);
		SteamVR_Action_Skeleton_Source_set_rangeOfMotion_m91A4B52E877EA5A07574CC4A7FDE89BC4B4594F9_inline(L_1, L_2, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton::SetSkeletalTransformSpace(Valve.VR.EVRSkeletalTransformSpace)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_SetSkeletalTransformSpace_m9AF712F1EE4C4C5873469F8B2FA021B51808FDFE (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, int32_t ___space0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_SetSkeletalTransformSpace_m9AF712F1EE4C4C5873469F8B2FA021B51808FDFE_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// sourceMap[SteamVR_Input_Sources.Any].skeletalTransformSpace = space;
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		int32_t L_2 = ___space0;
		NullCheck(L_1);
		SteamVR_Action_Skeleton_Source_set_skeletalTransformSpace_m0A466B97614EB779A0DA19E3F2DBEC0E7E8E162D_inline(L_1, L_2, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.UInt32 Valve.VR.SteamVR_Action_Skeleton::GetBoneCount()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR uint32_t SteamVR_Action_Skeleton_GetBoneCount_mD2B27CC695DB970DE6F2FE9F57747306854185FC (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_GetBoneCount_mD2B27CC695DB970DE6F2FE9F57747306854185FC_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	uint32_t V_0 = 0;
	{
		// return sourceMap[SteamVR_Input_Sources.Any].GetBoneCount();
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		uint32_t L_2 = SteamVR_Action_Skeleton_Source_GetBoneCount_m3049CC9D5CB2C3913C467D136B8C6A9CDAAC8148(L_1, /*hidden argument*/NULL);
		V_0 = L_2;
		goto IL_0015;
	}

IL_0015:
	{
		// }
		uint32_t L_3 = V_0;
		return L_3;
	}
}
// System.Int32[] Valve.VR.SteamVR_Action_Skeleton::GetBoneHierarchy()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* SteamVR_Action_Skeleton_GetBoneHierarchy_m7D18FB8905FF1D89946B28716C590188E1F6FC10 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_GetBoneHierarchy_m7D18FB8905FF1D89946B28716C590188E1F6FC10_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* V_0 = NULL;
	{
		// return sourceMap[SteamVR_Input_Sources.Any].GetBoneHierarchy();
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* L_2 = SteamVR_Action_Skeleton_Source_GetBoneHierarchy_mC62033C6184EC1DDE31051D1F167683E8D842445(L_1, /*hidden argument*/NULL);
		V_0 = L_2;
		goto IL_0015;
	}

IL_0015:
	{
		// }
		Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* L_3 = V_0;
		return L_3;
	}
}
// System.String Valve.VR.SteamVR_Action_Skeleton::GetBoneName(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* SteamVR_Action_Skeleton_GetBoneName_mEA597D8F1EF33A996E2E155F72D403299BD01303 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, int32_t ___boneIndex0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_GetBoneName_mEA597D8F1EF33A996E2E155F72D403299BD01303_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	String_t* V_0 = NULL;
	{
		// return sourceMap[SteamVR_Input_Sources.Any].GetBoneName(boneIndex);
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		int32_t L_2 = ___boneIndex0;
		NullCheck(L_1);
		String_t* L_3 = SteamVR_Action_Skeleton_Source_GetBoneName_m464D8D3413D7782356433F03C854B062E0080488(L_1, L_2, /*hidden argument*/NULL);
		V_0 = L_3;
		goto IL_0016;
	}

IL_0016:
	{
		// }
		String_t* L_4 = V_0;
		return L_4;
	}
}
// SteamVR_Utils/RigidTransform[] Valve.VR.SteamVR_Action_Skeleton::GetReferenceTransforms(Valve.VR.EVRSkeletalTransformSpace,Valve.VR.EVRSkeletalReferencePose)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RigidTransformU5BU5D_tC98EB3576009E5D825D0D43671A65D32A2449ECC* SteamVR_Action_Skeleton_GetReferenceTransforms_mF0608EEEF82F4263849BAF18074F2109F340F437 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, int32_t ___transformSpace0, int32_t ___referencePose1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_GetReferenceTransforms_mF0608EEEF82F4263849BAF18074F2109F340F437_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	RigidTransformU5BU5D_tC98EB3576009E5D825D0D43671A65D32A2449ECC* V_0 = NULL;
	{
		// return sourceMap[SteamVR_Input_Sources.Any].GetReferenceTransforms(transformSpace, referencePose);
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		int32_t L_2 = ___transformSpace0;
		int32_t L_3 = ___referencePose1;
		NullCheck(L_1);
		RigidTransformU5BU5D_tC98EB3576009E5D825D0D43671A65D32A2449ECC* L_4 = SteamVR_Action_Skeleton_Source_GetReferenceTransforms_m81B42FB78EE3A685B9B88FD3083F07971B5EA156(L_1, L_2, L_3, /*hidden argument*/NULL);
		V_0 = L_4;
		goto IL_0017;
	}

IL_0017:
	{
		// }
		RigidTransformU5BU5D_tC98EB3576009E5D825D0D43671A65D32A2449ECC* L_5 = V_0;
		return L_5;
	}
}
// Valve.VR.EVRSkeletalTrackingLevel Valve.VR.SteamVR_Action_Skeleton::GetSkeletalTrackingLevel()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t SteamVR_Action_Skeleton_GetSkeletalTrackingLevel_m506F568104A97D2AF710929EEF208A8552F263EC (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_GetSkeletalTrackingLevel_m506F568104A97D2AF710929EEF208A8552F263EC_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	{
		// return sourceMap[SteamVR_Input_Sources.Any].GetSkeletalTrackingLevel();
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		int32_t L_2 = SteamVR_Action_Skeleton_Source_GetSkeletalTrackingLevel_mFDDD94CFD727E816757BEF9129ADCC8996495018(L_1, /*hidden argument*/NULL);
		V_0 = L_2;
		goto IL_0015;
	}

IL_0015:
	{
		// }
		int32_t L_3 = V_0;
		return L_3;
	}
}
// System.Single[] Valve.VR.SteamVR_Action_Skeleton::GetFingerCurls(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* SteamVR_Action_Skeleton_GetFingerCurls_m2C47FBB4DDBD822E30CDE306DB8C42EC1FB263EC (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, bool ___copy0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_GetFingerCurls_m2C47FBB4DDBD822E30CDE306DB8C42EC1FB263EC_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* V_1 = NULL;
	{
		// if (copy)
		bool L_0 = ___copy0;
		V_0 = L_0;
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0024;
		}
	}
	{
		// return (float[])sourceMap[SteamVR_Input_Sources.Any].fingerCurls.Clone();
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_2 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_2);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_3 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_2, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_3);
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_4 = SteamVR_Action_Skeleton_Source_get_fingerCurls_m6E0B4235B8D2B15E1BBFD7634ECA591CC77A2732_inline(L_3, /*hidden argument*/NULL);
		NullCheck((RuntimeArray *)(RuntimeArray *)L_4);
		RuntimeObject * L_5 = Array_Clone_mE8C710213E323617A6F46F2B36DCDDD4C7CF5176((RuntimeArray *)(RuntimeArray *)L_4, /*hidden argument*/NULL);
		V_1 = ((SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5*)Castclass((RuntimeObject*)L_5, SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5_il2cpp_TypeInfo_var));
		goto IL_0038;
	}

IL_0024:
	{
		// return sourceMap[SteamVR_Input_Sources.Any].fingerCurls;
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_6 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_6);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_7 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_6, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_7);
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_8 = SteamVR_Action_Skeleton_Source_get_fingerCurls_m6E0B4235B8D2B15E1BBFD7634ECA591CC77A2732_inline(L_7, /*hidden argument*/NULL);
		V_1 = L_8;
		goto IL_0038;
	}

IL_0038:
	{
		// }
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_9 = V_1;
		return L_9;
	}
}
// System.Single[] Valve.VR.SteamVR_Action_Skeleton::GetLastFingerCurls(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* SteamVR_Action_Skeleton_GetLastFingerCurls_m837D08CB5F33E924DD18D57A5336BB79C1F11E8E (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, bool ___copy0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_GetLastFingerCurls_m837D08CB5F33E924DD18D57A5336BB79C1F11E8E_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* V_1 = NULL;
	{
		// if (copy)
		bool L_0 = ___copy0;
		V_0 = L_0;
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0024;
		}
	}
	{
		// return (float[])sourceMap[SteamVR_Input_Sources.Any].lastFingerCurls.Clone();
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_2 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_2);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_3 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_2, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_3);
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_4 = SteamVR_Action_Skeleton_Source_get_lastFingerCurls_m46C98882B5CB755BB4ADC367308E91D036E1896E_inline(L_3, /*hidden argument*/NULL);
		NullCheck((RuntimeArray *)(RuntimeArray *)L_4);
		RuntimeObject * L_5 = Array_Clone_mE8C710213E323617A6F46F2B36DCDDD4C7CF5176((RuntimeArray *)(RuntimeArray *)L_4, /*hidden argument*/NULL);
		V_1 = ((SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5*)Castclass((RuntimeObject*)L_5, SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5_il2cpp_TypeInfo_var));
		goto IL_0038;
	}

IL_0024:
	{
		// return sourceMap[SteamVR_Input_Sources.Any].lastFingerCurls;
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_6 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_6);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_7 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_6, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_7);
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_8 = SteamVR_Action_Skeleton_Source_get_lastFingerCurls_m46C98882B5CB755BB4ADC367308E91D036E1896E_inline(L_7, /*hidden argument*/NULL);
		V_1 = L_8;
		goto IL_0038;
	}

IL_0038:
	{
		// }
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_9 = V_1;
		return L_9;
	}
}
// System.Single[] Valve.VR.SteamVR_Action_Skeleton::GetFingerSplays(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* SteamVR_Action_Skeleton_GetFingerSplays_mF382477166C698F55CD9295969DCB4CCC3E50358 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, bool ___copy0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_GetFingerSplays_mF382477166C698F55CD9295969DCB4CCC3E50358_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* V_1 = NULL;
	{
		// if (copy)
		bool L_0 = ___copy0;
		V_0 = L_0;
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0024;
		}
	}
	{
		// return (float[])sourceMap[SteamVR_Input_Sources.Any].fingerSplays.Clone();
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_2 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_2);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_3 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_2, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_3);
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_4 = SteamVR_Action_Skeleton_Source_get_fingerSplays_m21D8D0994518AF9B7532A558E5E39A81C29ADE11_inline(L_3, /*hidden argument*/NULL);
		NullCheck((RuntimeArray *)(RuntimeArray *)L_4);
		RuntimeObject * L_5 = Array_Clone_mE8C710213E323617A6F46F2B36DCDDD4C7CF5176((RuntimeArray *)(RuntimeArray *)L_4, /*hidden argument*/NULL);
		V_1 = ((SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5*)Castclass((RuntimeObject*)L_5, SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5_il2cpp_TypeInfo_var));
		goto IL_0038;
	}

IL_0024:
	{
		// return sourceMap[SteamVR_Input_Sources.Any].fingerSplays;
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_6 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_6);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_7 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_6, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_7);
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_8 = SteamVR_Action_Skeleton_Source_get_fingerSplays_m21D8D0994518AF9B7532A558E5E39A81C29ADE11_inline(L_7, /*hidden argument*/NULL);
		V_1 = L_8;
		goto IL_0038;
	}

IL_0038:
	{
		// }
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_9 = V_1;
		return L_9;
	}
}
// System.Single[] Valve.VR.SteamVR_Action_Skeleton::GetLastFingerSplays(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* SteamVR_Action_Skeleton_GetLastFingerSplays_mDE773B4D09E1BD573E61E51F68DBD2C539F7A5E6 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, bool ___copy0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_GetLastFingerSplays_mDE773B4D09E1BD573E61E51F68DBD2C539F7A5E6_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* V_1 = NULL;
	{
		// if (copy)
		bool L_0 = ___copy0;
		V_0 = L_0;
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0024;
		}
	}
	{
		// return (float[])sourceMap[SteamVR_Input_Sources.Any].lastFingerSplays.Clone();
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_2 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_2);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_3 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_2, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_3);
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_4 = SteamVR_Action_Skeleton_Source_get_lastFingerSplays_m9DFC31F484BCD45399E9335EE8679CEC8150D3F4_inline(L_3, /*hidden argument*/NULL);
		NullCheck((RuntimeArray *)(RuntimeArray *)L_4);
		RuntimeObject * L_5 = Array_Clone_mE8C710213E323617A6F46F2B36DCDDD4C7CF5176((RuntimeArray *)(RuntimeArray *)L_4, /*hidden argument*/NULL);
		V_1 = ((SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5*)Castclass((RuntimeObject*)L_5, SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5_il2cpp_TypeInfo_var));
		goto IL_0038;
	}

IL_0024:
	{
		// return sourceMap[SteamVR_Input_Sources.Any].lastFingerSplays;
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_6 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_6);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_7 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_6, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_7);
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_8 = SteamVR_Action_Skeleton_Source_get_lastFingerSplays_m9DFC31F484BCD45399E9335EE8679CEC8150D3F4_inline(L_7, /*hidden argument*/NULL);
		V_1 = L_8;
		goto IL_0038;
	}

IL_0038:
	{
		// }
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_9 = V_1;
		return L_9;
	}
}
// System.Single Valve.VR.SteamVR_Action_Skeleton::GetFingerCurl(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_GetFingerCurl_mC08596A16D1F47B97BFC0DC8D9089F761751C1A6 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, int32_t ___finger0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_GetFingerCurl_mC08596A16D1F47B97BFC0DC8D9089F761751C1A6_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	float V_0 = 0.0f;
	{
		// return sourceMap[SteamVR_Input_Sources.Any].fingerCurls[finger];
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_2 = SteamVR_Action_Skeleton_Source_get_fingerCurls_m6E0B4235B8D2B15E1BBFD7634ECA591CC77A2732_inline(L_1, /*hidden argument*/NULL);
		int32_t L_3 = ___finger0;
		NullCheck(L_2);
		int32_t L_4 = L_3;
		float L_5 = (L_2)->GetAt(static_cast<il2cpp_array_size_t>(L_4));
		V_0 = L_5;
		goto IL_0017;
	}

IL_0017:
	{
		// }
		float L_6 = V_0;
		return L_6;
	}
}
// System.Single Valve.VR.SteamVR_Action_Skeleton::GetSplay(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_GetSplay_m66C049355DEC070185248558C8532BA370F5B14F (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, int32_t ___fingerGapIndex0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_GetSplay_m66C049355DEC070185248558C8532BA370F5B14F_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	float V_0 = 0.0f;
	{
		// return sourceMap[SteamVR_Input_Sources.Any].fingerSplays[fingerGapIndex];
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_2 = SteamVR_Action_Skeleton_Source_get_fingerSplays_m21D8D0994518AF9B7532A558E5E39A81C29ADE11_inline(L_1, /*hidden argument*/NULL);
		int32_t L_3 = ___fingerGapIndex0;
		NullCheck(L_2);
		int32_t L_4 = L_3;
		float L_5 = (L_2)->GetAt(static_cast<il2cpp_array_size_t>(L_4));
		V_0 = L_5;
		goto IL_0017;
	}

IL_0017:
	{
		// }
		float L_6 = V_0;
		return L_6;
	}
}
// System.Single Valve.VR.SteamVR_Action_Skeleton::GetFingerCurl(Valve.VR.SteamVR_Skeleton_FingerIndexEnum)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_GetFingerCurl_mF356A74E4AA4067E7C677F7355712E8D5333CC20 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, int32_t ___finger0, const RuntimeMethod* method)
{
	float V_0 = 0.0f;
	{
		// return GetFingerCurl((int)finger);
		int32_t L_0 = ___finger0;
		float L_1 = SteamVR_Action_Skeleton_GetFingerCurl_mC08596A16D1F47B97BFC0DC8D9089F761751C1A6(__this, L_0, /*hidden argument*/NULL);
		V_0 = L_1;
		goto IL_000b;
	}

IL_000b:
	{
		// }
		float L_2 = V_0;
		return L_2;
	}
}
// System.Single Valve.VR.SteamVR_Action_Skeleton::GetSplay(Valve.VR.SteamVR_Skeleton_FingerSplayIndexEnum)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_GetSplay_m0B9CCE0033BD4171286613892126CB466820DB57 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, int32_t ___fingerSplay0, const RuntimeMethod* method)
{
	float V_0 = 0.0f;
	{
		// return GetSplay((int)fingerSplay);
		int32_t L_0 = ___fingerSplay0;
		float L_1 = SteamVR_Action_Skeleton_GetSplay_m66C049355DEC070185248558C8532BA370F5B14F(__this, L_0, /*hidden argument*/NULL);
		V_0 = L_1;
		goto IL_000b;
	}

IL_000b:
	{
		// }
		float L_2 = V_0;
		return L_2;
	}
}
// System.Single Valve.VR.SteamVR_Action_Skeleton::GetLastFingerCurl(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_GetLastFingerCurl_mEB8760CBAD65388E4ECCD999150C3D6287171762 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, int32_t ___finger0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_GetLastFingerCurl_mEB8760CBAD65388E4ECCD999150C3D6287171762_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	float V_0 = 0.0f;
	{
		// return sourceMap[SteamVR_Input_Sources.Any].lastFingerCurls[finger];
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_2 = SteamVR_Action_Skeleton_Source_get_lastFingerCurls_m46C98882B5CB755BB4ADC367308E91D036E1896E_inline(L_1, /*hidden argument*/NULL);
		int32_t L_3 = ___finger0;
		NullCheck(L_2);
		int32_t L_4 = L_3;
		float L_5 = (L_2)->GetAt(static_cast<il2cpp_array_size_t>(L_4));
		V_0 = L_5;
		goto IL_0017;
	}

IL_0017:
	{
		// }
		float L_6 = V_0;
		return L_6;
	}
}
// System.Single Valve.VR.SteamVR_Action_Skeleton::GetLastSplay(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_GetLastSplay_mD9365C49755E9D59DBB8F2F9F42EBFA2EAC6DFD5 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, int32_t ___fingerGapIndex0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_GetLastSplay_mD9365C49755E9D59DBB8F2F9F42EBFA2EAC6DFD5_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	float V_0 = 0.0f;
	{
		// return sourceMap[SteamVR_Input_Sources.Any].lastFingerSplays[fingerGapIndex];
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_1);
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_2 = SteamVR_Action_Skeleton_Source_get_lastFingerSplays_m9DFC31F484BCD45399E9335EE8679CEC8150D3F4_inline(L_1, /*hidden argument*/NULL);
		int32_t L_3 = ___fingerGapIndex0;
		NullCheck(L_2);
		int32_t L_4 = L_3;
		float L_5 = (L_2)->GetAt(static_cast<il2cpp_array_size_t>(L_4));
		V_0 = L_5;
		goto IL_0017;
	}

IL_0017:
	{
		// }
		float L_6 = V_0;
		return L_6;
	}
}
// System.Single Valve.VR.SteamVR_Action_Skeleton::GetLastFingerCurl(Valve.VR.SteamVR_Skeleton_FingerIndexEnum)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_GetLastFingerCurl_mD523348413E650711C34942D88B83E098335A539 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, int32_t ___finger0, const RuntimeMethod* method)
{
	float V_0 = 0.0f;
	{
		// return GetLastFingerCurl((int)finger);
		int32_t L_0 = ___finger0;
		float L_1 = SteamVR_Action_Skeleton_GetLastFingerCurl_mEB8760CBAD65388E4ECCD999150C3D6287171762(__this, L_0, /*hidden argument*/NULL);
		V_0 = L_1;
		goto IL_000b;
	}

IL_000b:
	{
		// }
		float L_2 = V_0;
		return L_2;
	}
}
// System.Single Valve.VR.SteamVR_Action_Skeleton::GetLastSplay(Valve.VR.SteamVR_Skeleton_FingerSplayIndexEnum)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_GetLastSplay_m4D66148602094F6F5B2E0BD20BB5F0734C17F68B (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, int32_t ___fingerSplay0, const RuntimeMethod* method)
{
	float V_0 = 0.0f;
	{
		// return GetLastSplay((int)fingerSplay);
		int32_t L_0 = ___fingerSplay0;
		float L_1 = SteamVR_Action_Skeleton_GetLastSplay_mD9365C49755E9D59DBB8F2F9F42EBFA2EAC6DFD5(__this, L_0, /*hidden argument*/NULL);
		V_0 = L_1;
		goto IL_000b;
	}

IL_000b:
	{
		// }
		float L_2 = V_0;
		return L_2;
	}
}
// System.String Valve.VR.SteamVR_Action_Skeleton::GetLocalizedName(Valve.VR.EVRInputStringBits[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* SteamVR_Action_Skeleton_GetLocalizedName_mF07AA355A8428E17B01D29C04A8EE5BD26F7BAFE (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, EVRInputStringBitsU5BU5D_t6940A5B40972263CCCE9DFDBA05F69BA9DD7B52C* ___localizedParts0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_GetLocalizedName_mF07AA355A8428E17B01D29C04A8EE5BD26F7BAFE_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	String_t* V_0 = NULL;
	{
		// return sourceMap[SteamVR_Input_Sources.Any].GetLocalizedOriginPart(localizedParts);
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		EVRInputStringBitsU5BU5D_t6940A5B40972263CCCE9DFDBA05F69BA9DD7B52C* L_2 = ___localizedParts0;
		NullCheck(L_1);
		String_t* L_3 = SteamVR_Action_In_Source_GetLocalizedOriginPart_mE7B291A4EA395AD6127DE314E7B1194270C491D7(L_1, L_2, /*hidden argument*/NULL);
		V_0 = L_3;
		goto IL_0016;
	}

IL_0016:
	{
		// }
		String_t* L_4 = V_0;
		return L_4;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton::RemoveAllListeners(Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_RemoveAllListeners_mE49DBB0C5B7D2533D419168DA403C151602E632B (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, int32_t ___input_Sources0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_RemoveAllListeners_mE49DBB0C5B7D2533D419168DA403C151602E632B_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// sourceMap[input_Sources].RemoveAllListeners();
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		int32_t L_1 = ___input_Sources0;
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_2 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		NullCheck(L_2);
		VirtActionInvoker0::Invoke(50 /* System.Void Valve.VR.SteamVR_Action_Pose_Source::RemoveAllListeners() */, L_2);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton::AddOnDeviceConnectedChanged(Valve.VR.SteamVR_Action_Skeleton/DeviceConnectedChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_AddOnDeviceConnectedChanged_m3F6920BBAA979A2A0EDB59218966A88E6668CA14 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 * ___functionToCall0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_AddOnDeviceConnectedChanged_m3F6920BBAA979A2A0EDB59218966A88E6668CA14_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// sourceMap[SteamVR_Input_Sources.Any].onDeviceConnectedChanged += functionToCall;
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 * L_2 = ___functionToCall0;
		NullCheck(L_1);
		SteamVR_Action_Skeleton_Source_add_onDeviceConnectedChanged_m6AF65BCB16CBA635F075BFE3D42A85C1164FBC3C(L_1, L_2, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton::RemoveOnDeviceConnectedChanged(Valve.VR.SteamVR_Action_Skeleton/DeviceConnectedChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_RemoveOnDeviceConnectedChanged_mA18F4C31F9CFC1776A1AAC396D3C1119A628C9F7 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 * ___functionToStopCalling0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_RemoveOnDeviceConnectedChanged_mA18F4C31F9CFC1776A1AAC396D3C1119A628C9F7_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// sourceMap[SteamVR_Input_Sources.Any].onDeviceConnectedChanged -= functionToStopCalling;
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 * L_2 = ___functionToStopCalling0;
		NullCheck(L_1);
		SteamVR_Action_Skeleton_Source_remove_onDeviceConnectedChanged_m77B3EE4ABFF7936EC6951485DCD048DBEE1562BB(L_1, L_2, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton::AddOnTrackingChanged(Valve.VR.SteamVR_Action_Skeleton/TrackingChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_AddOnTrackingChanged_m402EAA963427FA4B649E5CD85AD98003FF7AE894 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 * ___functionToCall0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_AddOnTrackingChanged_m402EAA963427FA4B649E5CD85AD98003FF7AE894_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// sourceMap[SteamVR_Input_Sources.Any].onTrackingChanged += functionToCall;
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 * L_2 = ___functionToCall0;
		NullCheck(L_1);
		SteamVR_Action_Skeleton_Source_add_onTrackingChanged_mE82310A9D0C5662FEC30C6BBCA210B4448D954F8(L_1, L_2, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton::RemoveOnTrackingChanged(Valve.VR.SteamVR_Action_Skeleton/TrackingChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_RemoveOnTrackingChanged_m84311EDF54C6CF314A1458A5E9F5770D0F03CD80 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 * ___functionToStopCalling0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_RemoveOnTrackingChanged_m84311EDF54C6CF314A1458A5E9F5770D0F03CD80_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// sourceMap[SteamVR_Input_Sources.Any].onTrackingChanged -= functionToStopCalling;
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 * L_2 = ___functionToStopCalling0;
		NullCheck(L_1);
		SteamVR_Action_Skeleton_Source_remove_onTrackingChanged_m40D169DABA55145AB54EF10974905C05237D2CA6(L_1, L_2, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton::AddOnValidPoseChanged(Valve.VR.SteamVR_Action_Skeleton/ValidPoseChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_AddOnValidPoseChanged_m0B6DFA419BB885643B320E96B7B878EBE921B39B (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 * ___functionToCall0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_AddOnValidPoseChanged_m0B6DFA419BB885643B320E96B7B878EBE921B39B_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// sourceMap[SteamVR_Input_Sources.Any].onValidPoseChanged += functionToCall;
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 * L_2 = ___functionToCall0;
		NullCheck(L_1);
		SteamVR_Action_Skeleton_Source_add_onValidPoseChanged_m1E9DD56A71BF38267F5BD279BAA9B378842512AE(L_1, L_2, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton::RemoveOnValidPoseChanged(Valve.VR.SteamVR_Action_Skeleton/ValidPoseChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_RemoveOnValidPoseChanged_mF9850F2CF5D7E5BB5227391356781343755A1A1A (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 * ___functionToStopCalling0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_RemoveOnValidPoseChanged_mF9850F2CF5D7E5BB5227391356781343755A1A1A_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// sourceMap[SteamVR_Input_Sources.Any].onValidPoseChanged -= functionToStopCalling;
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 * L_2 = ___functionToStopCalling0;
		NullCheck(L_1);
		SteamVR_Action_Skeleton_Source_remove_onValidPoseChanged_mEE5E18D3BE29BAA782313154AFB6EAC448899DDE(L_1, L_2, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton::AddOnActiveChangeListener(Valve.VR.SteamVR_Action_Skeleton/ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_AddOnActiveChangeListener_m968F5A067EEF273C13B96DA27DA642DC6A66B7C2 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * ___functionToCall0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_AddOnActiveChangeListener_m968F5A067EEF273C13B96DA27DA642DC6A66B7C2_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// sourceMap[SteamVR_Input_Sources.Any].onActiveChange += functionToCall;
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * L_2 = ___functionToCall0;
		NullCheck(L_1);
		SteamVR_Action_Skeleton_Source_add_onActiveChange_m24B7A7690655124BE37A0854C004BBD11BCBB83A(L_1, L_2, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton::RemoveOnActiveChangeListener(Valve.VR.SteamVR_Action_Skeleton/ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_RemoveOnActiveChangeListener_m5EEB8B05019E4FA1D263D5298C7BED8CC507AB70 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * ___functionToStopCalling0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_RemoveOnActiveChangeListener_m5EEB8B05019E4FA1D263D5298C7BED8CC507AB70_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// sourceMap[SteamVR_Input_Sources.Any].onActiveChange -= functionToStopCalling;
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * L_2 = ___functionToStopCalling0;
		NullCheck(L_1);
		SteamVR_Action_Skeleton_Source_remove_onActiveChange_mBFD27080A2A3F94F22EB62EBD7C2680D21CF0C40(L_1, L_2, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton::AddOnChangeListener(Valve.VR.SteamVR_Action_Skeleton/ChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_AddOnChangeListener_m015ECED2A9A19D9CB71C6EFC04BF7D1AD88D9290 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 * ___functionToCall0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_AddOnChangeListener_m015ECED2A9A19D9CB71C6EFC04BF7D1AD88D9290_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// sourceMap[SteamVR_Input_Sources.Any].onChange += functionToCall;
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 * L_2 = ___functionToCall0;
		NullCheck(L_1);
		SteamVR_Action_Skeleton_Source_add_onChange_m51211C4C14EDFC3532F9E4E205AE05A33C33B853(L_1, L_2, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton::RemoveOnChangeListener(Valve.VR.SteamVR_Action_Skeleton/ChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_RemoveOnChangeListener_mB2F9897205C80AF6D1559591895B282C44FD5EBE (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 * ___functionToStopCalling0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_RemoveOnChangeListener_mB2F9897205C80AF6D1559591895B282C44FD5EBE_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// sourceMap[SteamVR_Input_Sources.Any].onChange -= functionToStopCalling;
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 * L_2 = ___functionToStopCalling0;
		NullCheck(L_1);
		SteamVR_Action_Skeleton_Source_remove_onChange_m6ACA4D17F3A943BB1AA96322576AA634DE0D8A0B(L_1, L_2, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton::AddOnUpdateListener(Valve.VR.SteamVR_Action_Skeleton/UpdateHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_AddOnUpdateListener_mF20419DDD629D27354EF32069FE666DBF37C1883 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 * ___functionToCall0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_AddOnUpdateListener_mF20419DDD629D27354EF32069FE666DBF37C1883_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// sourceMap[SteamVR_Input_Sources.Any].onUpdate += functionToCall;
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 * L_2 = ___functionToCall0;
		NullCheck(L_1);
		SteamVR_Action_Skeleton_Source_add_onUpdate_mB78DAAB24C69C5E8AFB4AAD7BD5207D3F1A4FE61(L_1, L_2, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton::RemoveOnUpdateListener(Valve.VR.SteamVR_Action_Skeleton/UpdateHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_RemoveOnUpdateListener_m22D3BD60FDA20067C6BA839C23D845E6D8435CBC (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 * ___functionToStopCalling0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_RemoveOnUpdateListener_m22D3BD60FDA20067C6BA839C23D845E6D8435CBC_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// sourceMap[SteamVR_Input_Sources.Any].onUpdate -= functionToStopCalling;
		SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * L_0 = ((SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE6654E37CDC21CD792F0117903D14A2BF541B0E2_RuntimeMethod_var);
		UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 * L_2 = ___functionToStopCalling0;
		NullCheck(L_1);
		SteamVR_Action_Skeleton_Source_remove_onUpdate_m628C295EBD7F127757F7A4EB9CBD5563BF36C4B9(L_1, L_2, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton::UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_UnityEngine_ISerializationCallbackReceiver_OnBeforeSerialize_mA131084E41123B14C2CD67034D5049B7FD565B4E (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	{
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton::UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_UnityEngine_ISerializationCallbackReceiver_OnAfterDeserialize_mD478BABEFF9FCACC6B15E5540EEB66A8F7B4B545 (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_UnityEngine_ISerializationCallbackReceiver_OnAfterDeserialize_mD478BABEFF9FCACC6B15E5540EEB66A8F7B4B545_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// InitAfterDeserialize();
		SteamVR_Action_2_InitAfterDeserialize_m6328CD572A94DA88CD2DF7764B1C54660D864650(__this, /*hidden argument*/SteamVR_Action_2_InitAfterDeserialize_m6328CD572A94DA88CD2DF7764B1C54660D864650_RuntimeMethod_var);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton::.cctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton__cctor_m0A753A149C76699E9C1789D16079474F9935338E (const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton__cctor_m0A753A149C76699E9C1789D16079474F9935338E_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// public static Quaternion steamVRFixUpRotation = Quaternion.AngleAxis(Mathf.PI * Mathf.Rad2Deg, Vector3.up);
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = Vector3_get_up_m6309EBC4E42D6D0B3D28056BD23D0331275306F7(/*hidden argument*/NULL);
		IL2CPP_RUNTIME_CLASS_INIT(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357_il2cpp_TypeInfo_var);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_1 = Quaternion_AngleAxis_m07DACF59F0403451DABB9BC991C53EE3301E88B0((180.0f), L_0, /*hidden argument*/NULL);
		((SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504_il2cpp_TypeInfo_var))->set_steamVRFixUpRotation_7(L_1);
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Action_Skeleton/ActiveChangeHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ActiveChangeHandler__ctor_m071BCD3292886C28C53DC005ECC6897B0EB4A350 (ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.SteamVR_Action_Skeleton/ActiveChangeHandler::Invoke(Valve.VR.SteamVR_Action_Skeleton,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ActiveChangeHandler_Invoke_m8F250A3B8449F2D46328A69B028001585024506D (ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * __this, SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * ___fromAction0, bool ___active1, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 2)
			{
				// open
				typedef void (*FunctionPointerType) (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 *, bool, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___active1, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 *, bool, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___active1, targetMethod);
			}
		}
		else if (___parameterCount != 2)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker1< bool >::Invoke(targetMethod, ___fromAction0, ___active1);
					else
						GenericVirtActionInvoker1< bool >::Invoke(targetMethod, ___fromAction0, ___active1);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker1< bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___fromAction0, ___active1);
					else
						VirtActionInvoker1< bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___fromAction0, ___active1);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___active1) - 1), targetMethod);
				}
				typedef void (*FunctionPointerType) (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 *, bool, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___active1, targetMethod);
			}
		}
		else
		{
			// closed
			if (targetThis != NULL && il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker2< SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 *, bool >::Invoke(targetMethod, targetThis, ___fromAction0, ___active1);
					else
						GenericVirtActionInvoker2< SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 *, bool >::Invoke(targetMethod, targetThis, ___fromAction0, ___active1);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker2< SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 *, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___fromAction0, ___active1);
					else
						VirtActionInvoker2< SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 *, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___fromAction0, ___active1);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___fromAction0) - 1), ___active1, targetMethod);
				}
				if (targetThis == NULL)
				{
					typedef void (*FunctionPointerType) (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 *, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___active1, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 *, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___active1, targetMethod);
				}
			}
		}
	}
}
// System.IAsyncResult Valve.VR.SteamVR_Action_Skeleton/ActiveChangeHandler::BeginInvoke(Valve.VR.SteamVR_Action_Skeleton,System.Boolean,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* ActiveChangeHandler_BeginInvoke_mAE3B1385B2D13895DA61F41F44F316C1ECC3C209 (ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * __this, SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * ___fromAction0, bool ___active1, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback2, RuntimeObject * ___object3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ActiveChangeHandler_BeginInvoke_mAE3B1385B2D13895DA61F41F44F316C1ECC3C209_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[3] = {0};
	__d_args[0] = ___fromAction0;
	__d_args[1] = Box(Boolean_tB53F6830F670160873277339AA58F15CAED4399C_il2cpp_TypeInfo_var, &___active1);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback2, (RuntimeObject*)___object3);
}
// System.Void Valve.VR.SteamVR_Action_Skeleton/ActiveChangeHandler::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ActiveChangeHandler_EndInvoke_mCFD786F18C141CF9FE3EAE55BB3895A471C8E63F (ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Action_Skeleton/ChangeHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ChangeHandler__ctor_mE892C787CDC661D25C4ECD07410B943BA18A46B7 (ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.SteamVR_Action_Skeleton/ChangeHandler::Invoke(Valve.VR.SteamVR_Action_Skeleton)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ChangeHandler_Invoke_mC5722DBE5AEDF8568E9849292C01588014D154EA (ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 * __this, SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * ___fromAction0, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 1)
			{
				// open
				typedef void (*FunctionPointerType) (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 *, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 *, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, targetMethod);
			}
		}
		else if (___parameterCount != 1)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker0::Invoke(targetMethod, ___fromAction0);
					else
						GenericVirtActionInvoker0::Invoke(targetMethod, ___fromAction0);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker0::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___fromAction0);
					else
						VirtActionInvoker0::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___fromAction0);
				}
			}
			else
			{
				typedef void (*FunctionPointerType) (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 *, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, targetMethod);
			}
		}
		else
		{
			// closed
			if (targetThis != NULL && il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker1< SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * >::Invoke(targetMethod, targetThis, ___fromAction0);
					else
						GenericVirtActionInvoker1< SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * >::Invoke(targetMethod, targetThis, ___fromAction0);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker1< SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___fromAction0);
					else
						VirtActionInvoker1< SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___fromAction0);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___fromAction0) - 1), targetMethod);
				}
				if (targetThis == NULL)
				{
					typedef void (*FunctionPointerType) (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 *, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 *, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, targetMethod);
				}
			}
		}
	}
}
// System.IAsyncResult Valve.VR.SteamVR_Action_Skeleton/ChangeHandler::BeginInvoke(Valve.VR.SteamVR_Action_Skeleton,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* ChangeHandler_BeginInvoke_mB5ED4E69460674FE062FDB9B1F9A35613419708C (ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 * __this, SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * ___fromAction0, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback1, RuntimeObject * ___object2, const RuntimeMethod* method)
{
	void *__d_args[2] = {0};
	__d_args[0] = ___fromAction0;
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback1, (RuntimeObject*)___object2);
}
// System.Void Valve.VR.SteamVR_Action_Skeleton/ChangeHandler::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ChangeHandler_EndInvoke_m1629C88C6C408129CD9DE94782A3A395265B623A (ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Action_Skeleton/DeviceConnectedChangeHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DeviceConnectedChangeHandler__ctor_m166361B45CC41B8D809ADD49F49E090602BF2A09 (DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.SteamVR_Action_Skeleton/DeviceConnectedChangeHandler::Invoke(Valve.VR.SteamVR_Action_Skeleton,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DeviceConnectedChangeHandler_Invoke_mB57708EA08D45928D64D09652CE8A71248A92E1B (DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 * __this, SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * ___fromAction0, bool ___deviceConnected1, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 2)
			{
				// open
				typedef void (*FunctionPointerType) (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 *, bool, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___deviceConnected1, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 *, bool, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___deviceConnected1, targetMethod);
			}
		}
		else if (___parameterCount != 2)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker1< bool >::Invoke(targetMethod, ___fromAction0, ___deviceConnected1);
					else
						GenericVirtActionInvoker1< bool >::Invoke(targetMethod, ___fromAction0, ___deviceConnected1);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker1< bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___fromAction0, ___deviceConnected1);
					else
						VirtActionInvoker1< bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___fromAction0, ___deviceConnected1);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___deviceConnected1) - 1), targetMethod);
				}
				typedef void (*FunctionPointerType) (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 *, bool, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___deviceConnected1, targetMethod);
			}
		}
		else
		{
			// closed
			if (targetThis != NULL && il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker2< SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 *, bool >::Invoke(targetMethod, targetThis, ___fromAction0, ___deviceConnected1);
					else
						GenericVirtActionInvoker2< SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 *, bool >::Invoke(targetMethod, targetThis, ___fromAction0, ___deviceConnected1);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker2< SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 *, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___fromAction0, ___deviceConnected1);
					else
						VirtActionInvoker2< SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 *, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___fromAction0, ___deviceConnected1);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___fromAction0) - 1), ___deviceConnected1, targetMethod);
				}
				if (targetThis == NULL)
				{
					typedef void (*FunctionPointerType) (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 *, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___deviceConnected1, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 *, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___deviceConnected1, targetMethod);
				}
			}
		}
	}
}
// System.IAsyncResult Valve.VR.SteamVR_Action_Skeleton/DeviceConnectedChangeHandler::BeginInvoke(Valve.VR.SteamVR_Action_Skeleton,System.Boolean,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* DeviceConnectedChangeHandler_BeginInvoke_m209513DF91AD3196C36A63A497FF6E8225010C5F (DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 * __this, SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * ___fromAction0, bool ___deviceConnected1, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback2, RuntimeObject * ___object3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (DeviceConnectedChangeHandler_BeginInvoke_m209513DF91AD3196C36A63A497FF6E8225010C5F_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[3] = {0};
	__d_args[0] = ___fromAction0;
	__d_args[1] = Box(Boolean_tB53F6830F670160873277339AA58F15CAED4399C_il2cpp_TypeInfo_var, &___deviceConnected1);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback2, (RuntimeObject*)___object3);
}
// System.Void Valve.VR.SteamVR_Action_Skeleton/DeviceConnectedChangeHandler::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DeviceConnectedChangeHandler_EndInvoke_m453734257B244DE00E6A2448E7536265FD866651 (DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Action_Skeleton/TrackingChangeHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TrackingChangeHandler__ctor_m3260D8BCE1826F529B176F0C0269EFAB71BE23F5 (TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.SteamVR_Action_Skeleton/TrackingChangeHandler::Invoke(Valve.VR.SteamVR_Action_Skeleton,Valve.VR.ETrackingResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TrackingChangeHandler_Invoke_m32F34205F63AC5D35F1071573E7ABE849DEBE40B (TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 * __this, SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * ___fromAction0, int32_t ___trackingState1, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 2)
			{
				// open
				typedef void (*FunctionPointerType) (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 *, int32_t, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___trackingState1, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 *, int32_t, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___trackingState1, targetMethod);
			}
		}
		else if (___parameterCount != 2)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker1< int32_t >::Invoke(targetMethod, ___fromAction0, ___trackingState1);
					else
						GenericVirtActionInvoker1< int32_t >::Invoke(targetMethod, ___fromAction0, ___trackingState1);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker1< int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___fromAction0, ___trackingState1);
					else
						VirtActionInvoker1< int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___fromAction0, ___trackingState1);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___trackingState1) - 1), targetMethod);
				}
				typedef void (*FunctionPointerType) (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 *, int32_t, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___trackingState1, targetMethod);
			}
		}
		else
		{
			// closed
			if (targetThis != NULL && il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker2< SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 *, int32_t >::Invoke(targetMethod, targetThis, ___fromAction0, ___trackingState1);
					else
						GenericVirtActionInvoker2< SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 *, int32_t >::Invoke(targetMethod, targetThis, ___fromAction0, ___trackingState1);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker2< SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 *, int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___fromAction0, ___trackingState1);
					else
						VirtActionInvoker2< SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 *, int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___fromAction0, ___trackingState1);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, int32_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___fromAction0) - 1), ___trackingState1, targetMethod);
				}
				if (targetThis == NULL)
				{
					typedef void (*FunctionPointerType) (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 *, int32_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___trackingState1, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 *, int32_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___trackingState1, targetMethod);
				}
			}
		}
	}
}
// System.IAsyncResult Valve.VR.SteamVR_Action_Skeleton/TrackingChangeHandler::BeginInvoke(Valve.VR.SteamVR_Action_Skeleton,Valve.VR.ETrackingResult,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* TrackingChangeHandler_BeginInvoke_m5FA958FD035B70AD17F6510053509600700104E4 (TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 * __this, SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * ___fromAction0, int32_t ___trackingState1, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback2, RuntimeObject * ___object3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (TrackingChangeHandler_BeginInvoke_m5FA958FD035B70AD17F6510053509600700104E4_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[3] = {0};
	__d_args[0] = ___fromAction0;
	__d_args[1] = Box(ETrackingResult_tEF8D233780E244B87AFAECDB107A82C77C666E9D_il2cpp_TypeInfo_var, &___trackingState1);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback2, (RuntimeObject*)___object3);
}
// System.Void Valve.VR.SteamVR_Action_Skeleton/TrackingChangeHandler::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TrackingChangeHandler_EndInvoke_mB211677DEE43C7173013C888DD5CD08E86308B04 (TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Action_Skeleton/UpdateHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UpdateHandler__ctor_m93EACED7027418C025E8F8BE702E76D78B071CC0 (UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.SteamVR_Action_Skeleton/UpdateHandler::Invoke(Valve.VR.SteamVR_Action_Skeleton)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UpdateHandler_Invoke_m175C6770DB8B17FD5E716BA08127EEA22FDCA465 (UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 * __this, SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * ___fromAction0, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 1)
			{
				// open
				typedef void (*FunctionPointerType) (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 *, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 *, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, targetMethod);
			}
		}
		else if (___parameterCount != 1)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker0::Invoke(targetMethod, ___fromAction0);
					else
						GenericVirtActionInvoker0::Invoke(targetMethod, ___fromAction0);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker0::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___fromAction0);
					else
						VirtActionInvoker0::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___fromAction0);
				}
			}
			else
			{
				typedef void (*FunctionPointerType) (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 *, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, targetMethod);
			}
		}
		else
		{
			// closed
			if (targetThis != NULL && il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker1< SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * >::Invoke(targetMethod, targetThis, ___fromAction0);
					else
						GenericVirtActionInvoker1< SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * >::Invoke(targetMethod, targetThis, ___fromAction0);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker1< SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___fromAction0);
					else
						VirtActionInvoker1< SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___fromAction0);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___fromAction0) - 1), targetMethod);
				}
				if (targetThis == NULL)
				{
					typedef void (*FunctionPointerType) (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 *, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 *, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, targetMethod);
				}
			}
		}
	}
}
// System.IAsyncResult Valve.VR.SteamVR_Action_Skeleton/UpdateHandler::BeginInvoke(Valve.VR.SteamVR_Action_Skeleton,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* UpdateHandler_BeginInvoke_mBB5CFFB2F9E8EAD075569985D45E3BEBA4F3F96F (UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 * __this, SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * ___fromAction0, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback1, RuntimeObject * ___object2, const RuntimeMethod* method)
{
	void *__d_args[2] = {0};
	__d_args[0] = ___fromAction0;
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback1, (RuntimeObject*)___object2);
}
// System.Void Valve.VR.SteamVR_Action_Skeleton/UpdateHandler::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UpdateHandler_EndInvoke_mDE26D70E2469821BFCF9A4ED7BF3BBE237ACE9B5 (UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Action_Skeleton/ValidPoseChangeHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ValidPoseChangeHandler__ctor_m06E0A16A32CBF2F7FD1D0F7855FB45C2E2952583 (ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.SteamVR_Action_Skeleton/ValidPoseChangeHandler::Invoke(Valve.VR.SteamVR_Action_Skeleton,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ValidPoseChangeHandler_Invoke_m69178B26D45FE5B6E566495EFD02D1CD56AED888 (ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 * __this, SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * ___fromAction0, bool ___validPose1, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 2)
			{
				// open
				typedef void (*FunctionPointerType) (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 *, bool, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___validPose1, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 *, bool, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___validPose1, targetMethod);
			}
		}
		else if (___parameterCount != 2)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker1< bool >::Invoke(targetMethod, ___fromAction0, ___validPose1);
					else
						GenericVirtActionInvoker1< bool >::Invoke(targetMethod, ___fromAction0, ___validPose1);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker1< bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___fromAction0, ___validPose1);
					else
						VirtActionInvoker1< bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___fromAction0, ___validPose1);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___validPose1) - 1), targetMethod);
				}
				typedef void (*FunctionPointerType) (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 *, bool, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___validPose1, targetMethod);
			}
		}
		else
		{
			// closed
			if (targetThis != NULL && il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker2< SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 *, bool >::Invoke(targetMethod, targetThis, ___fromAction0, ___validPose1);
					else
						GenericVirtActionInvoker2< SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 *, bool >::Invoke(targetMethod, targetThis, ___fromAction0, ___validPose1);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker2< SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 *, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___fromAction0, ___validPose1);
					else
						VirtActionInvoker2< SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 *, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___fromAction0, ___validPose1);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___fromAction0) - 1), ___validPose1, targetMethod);
				}
				if (targetThis == NULL)
				{
					typedef void (*FunctionPointerType) (SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 *, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___validPose1, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 *, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___validPose1, targetMethod);
				}
			}
		}
	}
}
// System.IAsyncResult Valve.VR.SteamVR_Action_Skeleton/ValidPoseChangeHandler::BeginInvoke(Valve.VR.SteamVR_Action_Skeleton,System.Boolean,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* ValidPoseChangeHandler_BeginInvoke_m630A2F9E244998060CC71348CEA35E8537E47DE5 (ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 * __this, SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * ___fromAction0, bool ___validPose1, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback2, RuntimeObject * ___object3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ValidPoseChangeHandler_BeginInvoke_m630A2F9E244998060CC71348CEA35E8537E47DE5_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[3] = {0};
	__d_args[0] = ___fromAction0;
	__d_args[1] = Box(Boolean_tB53F6830F670160873277339AA58F15CAED4399C_il2cpp_TypeInfo_var, &___validPose1);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback2, (RuntimeObject*)___object3);
}
// System.Void Valve.VR.SteamVR_Action_Skeleton/ValidPoseChangeHandler::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ValidPoseChangeHandler_EndInvoke_mD230995BA69B035C9343927159F4FBEDD7E2C6D5 (ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::add_onActiveChange(Valve.VR.SteamVR_Action_Skeleton/ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_add_onActiveChange_m24B7A7690655124BE37A0854C004BBD11BCBB83A (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_Source_add_onActiveChange_m24B7A7690655124BE37A0854C004BBD11BCBB83A_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * V_0 = NULL;
	ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * V_1 = NULL;
	ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * V_2 = NULL;
	{
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * L_0 = __this->get_onActiveChange_37();
		V_0 = L_0;
	}

IL_0007:
	{
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * L_1 = V_0;
		V_1 = L_1;
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * L_2 = V_1;
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Combine_mC25D2F7DECAFBA6D9A2F9EBA8A77063F0658ECF1(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 *)CastclassSealed((RuntimeObject*)L_4, ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4_il2cpp_TypeInfo_var));
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 ** L_5 = __this->get_address_of_onActiveChange_37();
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * L_6 = V_2;
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * L_7 = V_1;
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * L_8 = InterlockedCompareExchangeImpl<ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 *>((ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 **)L_5, L_6, L_7);
		V_0 = L_8;
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * L_9 = V_0;
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * L_10 = V_1;
		if ((!(((RuntimeObject*)(ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 *)L_9) == ((RuntimeObject*)(ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::remove_onActiveChange(Valve.VR.SteamVR_Action_Skeleton/ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_remove_onActiveChange_mBFD27080A2A3F94F22EB62EBD7C2680D21CF0C40 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_Source_remove_onActiveChange_mBFD27080A2A3F94F22EB62EBD7C2680D21CF0C40_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * V_0 = NULL;
	ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * V_1 = NULL;
	ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * V_2 = NULL;
	{
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * L_0 = __this->get_onActiveChange_37();
		V_0 = L_0;
	}

IL_0007:
	{
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * L_1 = V_0;
		V_1 = L_1;
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * L_2 = V_1;
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Remove_m0B0DB7D1B3AF96B71AFAA72BA0EFE32FBBC2932D(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 *)CastclassSealed((RuntimeObject*)L_4, ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4_il2cpp_TypeInfo_var));
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 ** L_5 = __this->get_address_of_onActiveChange_37();
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * L_6 = V_2;
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * L_7 = V_1;
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * L_8 = InterlockedCompareExchangeImpl<ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 *>((ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 **)L_5, L_6, L_7);
		V_0 = L_8;
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * L_9 = V_0;
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * L_10 = V_1;
		if ((!(((RuntimeObject*)(ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 *)L_9) == ((RuntimeObject*)(ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::add_onActiveBindingChange(Valve.VR.SteamVR_Action_Skeleton/ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_add_onActiveBindingChange_mBA9217A7856EEA2B9346304FF33C00F3D35E381D (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_Source_add_onActiveBindingChange_mBA9217A7856EEA2B9346304FF33C00F3D35E381D_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * V_0 = NULL;
	ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * V_1 = NULL;
	ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * V_2 = NULL;
	{
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * L_0 = __this->get_onActiveBindingChange_38();
		V_0 = L_0;
	}

IL_0007:
	{
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * L_1 = V_0;
		V_1 = L_1;
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * L_2 = V_1;
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Combine_mC25D2F7DECAFBA6D9A2F9EBA8A77063F0658ECF1(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 *)CastclassSealed((RuntimeObject*)L_4, ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4_il2cpp_TypeInfo_var));
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 ** L_5 = __this->get_address_of_onActiveBindingChange_38();
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * L_6 = V_2;
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * L_7 = V_1;
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * L_8 = InterlockedCompareExchangeImpl<ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 *>((ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 **)L_5, L_6, L_7);
		V_0 = L_8;
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * L_9 = V_0;
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * L_10 = V_1;
		if ((!(((RuntimeObject*)(ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 *)L_9) == ((RuntimeObject*)(ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::remove_onActiveBindingChange(Valve.VR.SteamVR_Action_Skeleton/ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_remove_onActiveBindingChange_m928BE406E004801B903336174AD71858077B4C31 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_Source_remove_onActiveBindingChange_m928BE406E004801B903336174AD71858077B4C31_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * V_0 = NULL;
	ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * V_1 = NULL;
	ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * V_2 = NULL;
	{
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * L_0 = __this->get_onActiveBindingChange_38();
		V_0 = L_0;
	}

IL_0007:
	{
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * L_1 = V_0;
		V_1 = L_1;
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * L_2 = V_1;
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Remove_m0B0DB7D1B3AF96B71AFAA72BA0EFE32FBBC2932D(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 *)CastclassSealed((RuntimeObject*)L_4, ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4_il2cpp_TypeInfo_var));
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 ** L_5 = __this->get_address_of_onActiveBindingChange_38();
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * L_6 = V_2;
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * L_7 = V_1;
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * L_8 = InterlockedCompareExchangeImpl<ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 *>((ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 **)L_5, L_6, L_7);
		V_0 = L_8;
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * L_9 = V_0;
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * L_10 = V_1;
		if ((!(((RuntimeObject*)(ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 *)L_9) == ((RuntimeObject*)(ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::add_onChange(Valve.VR.SteamVR_Action_Skeleton/ChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_add_onChange_m51211C4C14EDFC3532F9E4E205AE05A33C33B853 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_Source_add_onChange_m51211C4C14EDFC3532F9E4E205AE05A33C33B853_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 * V_0 = NULL;
	ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 * V_1 = NULL;
	ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 * V_2 = NULL;
	{
		ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 * L_0 = __this->get_onChange_39();
		V_0 = L_0;
	}

IL_0007:
	{
		ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 * L_1 = V_0;
		V_1 = L_1;
		ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 * L_2 = V_1;
		ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Combine_mC25D2F7DECAFBA6D9A2F9EBA8A77063F0658ECF1(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 *)CastclassSealed((RuntimeObject*)L_4, ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7_il2cpp_TypeInfo_var));
		ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 ** L_5 = __this->get_address_of_onChange_39();
		ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 * L_6 = V_2;
		ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 * L_7 = V_1;
		ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 * L_8 = InterlockedCompareExchangeImpl<ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 *>((ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 **)L_5, L_6, L_7);
		V_0 = L_8;
		ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 * L_9 = V_0;
		ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 * L_10 = V_1;
		if ((!(((RuntimeObject*)(ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 *)L_9) == ((RuntimeObject*)(ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::remove_onChange(Valve.VR.SteamVR_Action_Skeleton/ChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_remove_onChange_m6ACA4D17F3A943BB1AA96322576AA634DE0D8A0B (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_Source_remove_onChange_m6ACA4D17F3A943BB1AA96322576AA634DE0D8A0B_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 * V_0 = NULL;
	ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 * V_1 = NULL;
	ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 * V_2 = NULL;
	{
		ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 * L_0 = __this->get_onChange_39();
		V_0 = L_0;
	}

IL_0007:
	{
		ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 * L_1 = V_0;
		V_1 = L_1;
		ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 * L_2 = V_1;
		ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Remove_m0B0DB7D1B3AF96B71AFAA72BA0EFE32FBBC2932D(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 *)CastclassSealed((RuntimeObject*)L_4, ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7_il2cpp_TypeInfo_var));
		ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 ** L_5 = __this->get_address_of_onChange_39();
		ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 * L_6 = V_2;
		ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 * L_7 = V_1;
		ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 * L_8 = InterlockedCompareExchangeImpl<ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 *>((ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 **)L_5, L_6, L_7);
		V_0 = L_8;
		ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 * L_9 = V_0;
		ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 * L_10 = V_1;
		if ((!(((RuntimeObject*)(ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 *)L_9) == ((RuntimeObject*)(ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::add_onUpdate(Valve.VR.SteamVR_Action_Skeleton/UpdateHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_add_onUpdate_mB78DAAB24C69C5E8AFB4AAD7BD5207D3F1A4FE61 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_Source_add_onUpdate_mB78DAAB24C69C5E8AFB4AAD7BD5207D3F1A4FE61_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 * V_0 = NULL;
	UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 * V_1 = NULL;
	UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 * V_2 = NULL;
	{
		UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 * L_0 = __this->get_onUpdate_40();
		V_0 = L_0;
	}

IL_0007:
	{
		UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 * L_1 = V_0;
		V_1 = L_1;
		UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 * L_2 = V_1;
		UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Combine_mC25D2F7DECAFBA6D9A2F9EBA8A77063F0658ECF1(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 *)CastclassSealed((RuntimeObject*)L_4, UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046_il2cpp_TypeInfo_var));
		UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 ** L_5 = __this->get_address_of_onUpdate_40();
		UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 * L_6 = V_2;
		UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 * L_7 = V_1;
		UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 * L_8 = InterlockedCompareExchangeImpl<UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 *>((UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 **)L_5, L_6, L_7);
		V_0 = L_8;
		UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 * L_9 = V_0;
		UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 * L_10 = V_1;
		if ((!(((RuntimeObject*)(UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 *)L_9) == ((RuntimeObject*)(UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::remove_onUpdate(Valve.VR.SteamVR_Action_Skeleton/UpdateHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_remove_onUpdate_m628C295EBD7F127757F7A4EB9CBD5563BF36C4B9 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_Source_remove_onUpdate_m628C295EBD7F127757F7A4EB9CBD5563BF36C4B9_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 * V_0 = NULL;
	UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 * V_1 = NULL;
	UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 * V_2 = NULL;
	{
		UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 * L_0 = __this->get_onUpdate_40();
		V_0 = L_0;
	}

IL_0007:
	{
		UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 * L_1 = V_0;
		V_1 = L_1;
		UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 * L_2 = V_1;
		UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Remove_m0B0DB7D1B3AF96B71AFAA72BA0EFE32FBBC2932D(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 *)CastclassSealed((RuntimeObject*)L_4, UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046_il2cpp_TypeInfo_var));
		UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 ** L_5 = __this->get_address_of_onUpdate_40();
		UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 * L_6 = V_2;
		UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 * L_7 = V_1;
		UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 * L_8 = InterlockedCompareExchangeImpl<UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 *>((UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 **)L_5, L_6, L_7);
		V_0 = L_8;
		UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 * L_9 = V_0;
		UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 * L_10 = V_1;
		if ((!(((RuntimeObject*)(UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 *)L_9) == ((RuntimeObject*)(UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::add_onTrackingChanged(Valve.VR.SteamVR_Action_Skeleton/TrackingChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_add_onTrackingChanged_mE82310A9D0C5662FEC30C6BBCA210B4448D954F8 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_Source_add_onTrackingChanged_mE82310A9D0C5662FEC30C6BBCA210B4448D954F8_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 * V_0 = NULL;
	TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 * V_1 = NULL;
	TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 * V_2 = NULL;
	{
		TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 * L_0 = __this->get_onTrackingChanged_41();
		V_0 = L_0;
	}

IL_0007:
	{
		TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 * L_1 = V_0;
		V_1 = L_1;
		TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 * L_2 = V_1;
		TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Combine_mC25D2F7DECAFBA6D9A2F9EBA8A77063F0658ECF1(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 *)CastclassSealed((RuntimeObject*)L_4, TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4_il2cpp_TypeInfo_var));
		TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 ** L_5 = __this->get_address_of_onTrackingChanged_41();
		TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 * L_6 = V_2;
		TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 * L_7 = V_1;
		TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 * L_8 = InterlockedCompareExchangeImpl<TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 *>((TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 **)L_5, L_6, L_7);
		V_0 = L_8;
		TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 * L_9 = V_0;
		TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 * L_10 = V_1;
		if ((!(((RuntimeObject*)(TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 *)L_9) == ((RuntimeObject*)(TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::remove_onTrackingChanged(Valve.VR.SteamVR_Action_Skeleton/TrackingChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_remove_onTrackingChanged_m40D169DABA55145AB54EF10974905C05237D2CA6 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_Source_remove_onTrackingChanged_m40D169DABA55145AB54EF10974905C05237D2CA6_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 * V_0 = NULL;
	TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 * V_1 = NULL;
	TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 * V_2 = NULL;
	{
		TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 * L_0 = __this->get_onTrackingChanged_41();
		V_0 = L_0;
	}

IL_0007:
	{
		TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 * L_1 = V_0;
		V_1 = L_1;
		TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 * L_2 = V_1;
		TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Remove_m0B0DB7D1B3AF96B71AFAA72BA0EFE32FBBC2932D(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 *)CastclassSealed((RuntimeObject*)L_4, TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4_il2cpp_TypeInfo_var));
		TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 ** L_5 = __this->get_address_of_onTrackingChanged_41();
		TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 * L_6 = V_2;
		TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 * L_7 = V_1;
		TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 * L_8 = InterlockedCompareExchangeImpl<TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 *>((TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 **)L_5, L_6, L_7);
		V_0 = L_8;
		TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 * L_9 = V_0;
		TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 * L_10 = V_1;
		if ((!(((RuntimeObject*)(TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 *)L_9) == ((RuntimeObject*)(TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::add_onValidPoseChanged(Valve.VR.SteamVR_Action_Skeleton/ValidPoseChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_add_onValidPoseChanged_m1E9DD56A71BF38267F5BD279BAA9B378842512AE (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_Source_add_onValidPoseChanged_m1E9DD56A71BF38267F5BD279BAA9B378842512AE_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 * V_0 = NULL;
	ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 * V_1 = NULL;
	ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 * V_2 = NULL;
	{
		ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 * L_0 = __this->get_onValidPoseChanged_42();
		V_0 = L_0;
	}

IL_0007:
	{
		ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 * L_1 = V_0;
		V_1 = L_1;
		ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 * L_2 = V_1;
		ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Combine_mC25D2F7DECAFBA6D9A2F9EBA8A77063F0658ECF1(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 *)CastclassSealed((RuntimeObject*)L_4, ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7_il2cpp_TypeInfo_var));
		ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 ** L_5 = __this->get_address_of_onValidPoseChanged_42();
		ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 * L_6 = V_2;
		ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 * L_7 = V_1;
		ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 * L_8 = InterlockedCompareExchangeImpl<ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 *>((ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 **)L_5, L_6, L_7);
		V_0 = L_8;
		ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 * L_9 = V_0;
		ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 * L_10 = V_1;
		if ((!(((RuntimeObject*)(ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 *)L_9) == ((RuntimeObject*)(ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::remove_onValidPoseChanged(Valve.VR.SteamVR_Action_Skeleton/ValidPoseChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_remove_onValidPoseChanged_mEE5E18D3BE29BAA782313154AFB6EAC448899DDE (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_Source_remove_onValidPoseChanged_mEE5E18D3BE29BAA782313154AFB6EAC448899DDE_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 * V_0 = NULL;
	ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 * V_1 = NULL;
	ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 * V_2 = NULL;
	{
		ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 * L_0 = __this->get_onValidPoseChanged_42();
		V_0 = L_0;
	}

IL_0007:
	{
		ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 * L_1 = V_0;
		V_1 = L_1;
		ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 * L_2 = V_1;
		ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Remove_m0B0DB7D1B3AF96B71AFAA72BA0EFE32FBBC2932D(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 *)CastclassSealed((RuntimeObject*)L_4, ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7_il2cpp_TypeInfo_var));
		ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 ** L_5 = __this->get_address_of_onValidPoseChanged_42();
		ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 * L_6 = V_2;
		ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 * L_7 = V_1;
		ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 * L_8 = InterlockedCompareExchangeImpl<ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 *>((ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 **)L_5, L_6, L_7);
		V_0 = L_8;
		ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 * L_9 = V_0;
		ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 * L_10 = V_1;
		if ((!(((RuntimeObject*)(ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 *)L_9) == ((RuntimeObject*)(ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::add_onDeviceConnectedChanged(Valve.VR.SteamVR_Action_Skeleton/DeviceConnectedChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_add_onDeviceConnectedChanged_m6AF65BCB16CBA635F075BFE3D42A85C1164FBC3C (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_Source_add_onDeviceConnectedChanged_m6AF65BCB16CBA635F075BFE3D42A85C1164FBC3C_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 * V_0 = NULL;
	DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 * V_1 = NULL;
	DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 * V_2 = NULL;
	{
		DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 * L_0 = __this->get_onDeviceConnectedChanged_43();
		V_0 = L_0;
	}

IL_0007:
	{
		DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 * L_1 = V_0;
		V_1 = L_1;
		DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 * L_2 = V_1;
		DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Combine_mC25D2F7DECAFBA6D9A2F9EBA8A77063F0658ECF1(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 *)CastclassSealed((RuntimeObject*)L_4, DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592_il2cpp_TypeInfo_var));
		DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 ** L_5 = __this->get_address_of_onDeviceConnectedChanged_43();
		DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 * L_6 = V_2;
		DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 * L_7 = V_1;
		DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 * L_8 = InterlockedCompareExchangeImpl<DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 *>((DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 **)L_5, L_6, L_7);
		V_0 = L_8;
		DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 * L_9 = V_0;
		DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 * L_10 = V_1;
		if ((!(((RuntimeObject*)(DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 *)L_9) == ((RuntimeObject*)(DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::remove_onDeviceConnectedChanged(Valve.VR.SteamVR_Action_Skeleton/DeviceConnectedChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_remove_onDeviceConnectedChanged_m77B3EE4ABFF7936EC6951485DCD048DBEE1562BB (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_Source_remove_onDeviceConnectedChanged_m77B3EE4ABFF7936EC6951485DCD048DBEE1562BB_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 * V_0 = NULL;
	DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 * V_1 = NULL;
	DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 * V_2 = NULL;
	{
		DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 * L_0 = __this->get_onDeviceConnectedChanged_43();
		V_0 = L_0;
	}

IL_0007:
	{
		DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 * L_1 = V_0;
		V_1 = L_1;
		DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 * L_2 = V_1;
		DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Remove_m0B0DB7D1B3AF96B71AFAA72BA0EFE32FBBC2932D(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 *)CastclassSealed((RuntimeObject*)L_4, DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592_il2cpp_TypeInfo_var));
		DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 ** L_5 = __this->get_address_of_onDeviceConnectedChanged_43();
		DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 * L_6 = V_2;
		DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 * L_7 = V_1;
		DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 * L_8 = InterlockedCompareExchangeImpl<DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 *>((DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 **)L_5, L_6, L_7);
		V_0 = L_8;
		DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 * L_9 = V_0;
		DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 * L_10 = V_1;
		if ((!(((RuntimeObject*)(DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 *)L_9) == ((RuntimeObject*)(DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Skeleton_Source::get_activeBinding()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Skeleton_Source_get_activeBinding_mDE64546BB0A10367E6437BEA9C1E4682BC4DEA5D (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	bool V_0 = false;
	{
		// public override bool activeBinding { get { return skeletonActionData.bActive; } }
		InputSkeletalActionData_t_tD41850247EEE1858231B43C4B3EC2B5617140C26 * L_0 = __this->get_address_of_skeletonActionData_61();
		bool L_1 = L_0->get_bActive_0();
		V_0 = L_1;
		goto IL_000f;
	}

IL_000f:
	{
		// public override bool activeBinding { get { return skeletonActionData.bActive; } }
		bool L_2 = V_0;
		return L_2;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Skeleton_Source::get_lastActiveBinding()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Skeleton_Source_get_lastActiveBinding_mC311EE8D121B05FE2F512C9B88116561CE9E61EC (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	bool V_0 = false;
	{
		// public override bool lastActiveBinding { get { return lastSkeletonActionData.bActive; } }
		InputSkeletalActionData_t_tD41850247EEE1858231B43C4B3EC2B5617140C26 * L_0 = __this->get_address_of_lastSkeletonActionData_62();
		bool L_1 = L_0->get_bActive_0();
		V_0 = L_1;
		goto IL_000f;
	}

IL_000f:
	{
		// public override bool lastActiveBinding { get { return lastSkeletonActionData.bActive; } }
		bool L_2 = V_0;
		return L_2;
	}
}
// UnityEngine.Vector3[] Valve.VR.SteamVR_Action_Skeleton_Source::get_bonePositions()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* SteamVR_Action_Skeleton_Source_get_bonePositions_mA0C01DDB9EAB9749BBBEDBCFF72582812AB9C195 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	{
		// public Vector3[] bonePositions { get; protected set; }
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_0 = __this->get_U3CbonePositionsU3Ek__BackingField_44();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::set_bonePositions(UnityEngine.Vector3[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_set_bonePositions_m96408532FED1D966DE56612099B679DA8FBBF8D9 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* ___value0, const RuntimeMethod* method)
{
	{
		// public Vector3[] bonePositions { get; protected set; }
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_0 = ___value0;
		__this->set_U3CbonePositionsU3Ek__BackingField_44(L_0);
		return;
	}
}
// UnityEngine.Quaternion[] Valve.VR.SteamVR_Action_Skeleton_Source::get_boneRotations()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* SteamVR_Action_Skeleton_Source_get_boneRotations_mCD0B038517CA7A79945AD615082F05B25B0EDA20 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	{
		// public Quaternion[] boneRotations { get; protected set; }
		QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* L_0 = __this->get_U3CboneRotationsU3Ek__BackingField_45();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::set_boneRotations(UnityEngine.Quaternion[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_set_boneRotations_m2B92E87BC6C9E456075204D69BD82CAE759F46E2 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* ___value0, const RuntimeMethod* method)
{
	{
		// public Quaternion[] boneRotations { get; protected set; }
		QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* L_0 = ___value0;
		__this->set_U3CboneRotationsU3Ek__BackingField_45(L_0);
		return;
	}
}
// UnityEngine.Vector3[] Valve.VR.SteamVR_Action_Skeleton_Source::get_lastBonePositions()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* SteamVR_Action_Skeleton_Source_get_lastBonePositions_m99D1C7B8A05E646777AC85CFC0ED2FF0953C3AB9 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	{
		// public Vector3[] lastBonePositions { get; protected set; }
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_0 = __this->get_U3ClastBonePositionsU3Ek__BackingField_46();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::set_lastBonePositions(UnityEngine.Vector3[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_set_lastBonePositions_m8E63D828A81C99EEA6A4C55BA74D48F7C7F19CBF (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* ___value0, const RuntimeMethod* method)
{
	{
		// public Vector3[] lastBonePositions { get; protected set; }
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_0 = ___value0;
		__this->set_U3ClastBonePositionsU3Ek__BackingField_46(L_0);
		return;
	}
}
// UnityEngine.Quaternion[] Valve.VR.SteamVR_Action_Skeleton_Source::get_lastBoneRotations()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* SteamVR_Action_Skeleton_Source_get_lastBoneRotations_m14A98028FB99C0404733364FFD3C187D2A53261C (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	{
		// public Quaternion[] lastBoneRotations { get; protected set; }
		QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* L_0 = __this->get_U3ClastBoneRotationsU3Ek__BackingField_47();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::set_lastBoneRotations(UnityEngine.Quaternion[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_set_lastBoneRotations_mF1526AAAFE4506F1F70D22BED03D04083E75E3F8 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* ___value0, const RuntimeMethod* method)
{
	{
		// public Quaternion[] lastBoneRotations { get; protected set; }
		QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* L_0 = ___value0;
		__this->set_U3ClastBoneRotationsU3Ek__BackingField_47(L_0);
		return;
	}
}
// Valve.VR.EVRSkeletalMotionRange Valve.VR.SteamVR_Action_Skeleton_Source::get_rangeOfMotion()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t SteamVR_Action_Skeleton_Source_get_rangeOfMotion_m3698046C051B2375EA956A3BDFE1BB6CA28AAD4E (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	{
		// public EVRSkeletalMotionRange rangeOfMotion { get; set; }
		int32_t L_0 = __this->get_U3CrangeOfMotionU3Ek__BackingField_48();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::set_rangeOfMotion(Valve.VR.EVRSkeletalMotionRange)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_set_rangeOfMotion_m91A4B52E877EA5A07574CC4A7FDE89BC4B4594F9 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, int32_t ___value0, const RuntimeMethod* method)
{
	{
		// public EVRSkeletalMotionRange rangeOfMotion { get; set; }
		int32_t L_0 = ___value0;
		__this->set_U3CrangeOfMotionU3Ek__BackingField_48(L_0);
		return;
	}
}
// Valve.VR.EVRSkeletalTransformSpace Valve.VR.SteamVR_Action_Skeleton_Source::get_skeletalTransformSpace()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t SteamVR_Action_Skeleton_Source_get_skeletalTransformSpace_m581268DA5BEE1B2F2315A38319F75E7241F5BB21 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	{
		// public EVRSkeletalTransformSpace skeletalTransformSpace { get; set; }
		int32_t L_0 = __this->get_U3CskeletalTransformSpaceU3Ek__BackingField_49();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::set_skeletalTransformSpace(Valve.VR.EVRSkeletalTransformSpace)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_set_skeletalTransformSpace_m0A466B97614EB779A0DA19E3F2DBEC0E7E8E162D (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, int32_t ___value0, const RuntimeMethod* method)
{
	{
		// public EVRSkeletalTransformSpace skeletalTransformSpace { get; set; }
		int32_t L_0 = ___value0;
		__this->set_U3CskeletalTransformSpaceU3Ek__BackingField_49(L_0);
		return;
	}
}
// Valve.VR.EVRSummaryType Valve.VR.SteamVR_Action_Skeleton_Source::get_summaryDataType()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t SteamVR_Action_Skeleton_Source_get_summaryDataType_m99C31EEF6D6E87C035887DE8640DC37C07D2CA79 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	{
		// public EVRSummaryType summaryDataType { get; set; }
		int32_t L_0 = __this->get_U3CsummaryDataTypeU3Ek__BackingField_50();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::set_summaryDataType(Valve.VR.EVRSummaryType)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_set_summaryDataType_m772AC48620054C732E34EE86BBADE98C3EFAC365 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, int32_t ___value0, const RuntimeMethod* method)
{
	{
		// public EVRSummaryType summaryDataType { get; set; }
		int32_t L_0 = ___value0;
		__this->set_U3CsummaryDataTypeU3Ek__BackingField_50(L_0);
		return;
	}
}
// System.Single Valve.VR.SteamVR_Action_Skeleton_Source::get_thumbCurl()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_Source_get_thumbCurl_m1E1B3EB8065D36CC07FD3D3F81142DE18117571D (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	float V_0 = 0.0f;
	{
		// public float thumbCurl { get { return fingerCurls[SteamVR_Skeleton_FingerIndexes.thumb]; } }
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_0 = SteamVR_Action_Skeleton_Source_get_fingerCurls_m6E0B4235B8D2B15E1BBFD7634ECA591CC77A2732_inline(__this, /*hidden argument*/NULL);
		NullCheck(L_0);
		int32_t L_1 = 0;
		float L_2 = (L_0)->GetAt(static_cast<il2cpp_array_size_t>(L_1));
		V_0 = L_2;
		goto IL_000c;
	}

IL_000c:
	{
		// public float thumbCurl { get { return fingerCurls[SteamVR_Skeleton_FingerIndexes.thumb]; } }
		float L_3 = V_0;
		return L_3;
	}
}
// System.Single Valve.VR.SteamVR_Action_Skeleton_Source::get_indexCurl()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_Source_get_indexCurl_m23B7090B54104226A276B2DA6F9AF05D8A87F4C4 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	float V_0 = 0.0f;
	{
		// public float indexCurl { get { return fingerCurls[SteamVR_Skeleton_FingerIndexes.index]; } }
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_0 = SteamVR_Action_Skeleton_Source_get_fingerCurls_m6E0B4235B8D2B15E1BBFD7634ECA591CC77A2732_inline(__this, /*hidden argument*/NULL);
		NullCheck(L_0);
		int32_t L_1 = 1;
		float L_2 = (L_0)->GetAt(static_cast<il2cpp_array_size_t>(L_1));
		V_0 = L_2;
		goto IL_000c;
	}

IL_000c:
	{
		// public float indexCurl { get { return fingerCurls[SteamVR_Skeleton_FingerIndexes.index]; } }
		float L_3 = V_0;
		return L_3;
	}
}
// System.Single Valve.VR.SteamVR_Action_Skeleton_Source::get_middleCurl()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_Source_get_middleCurl_mF2DB6D3C537BDA649730D9DED5FD8C158792A99E (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	float V_0 = 0.0f;
	{
		// public float middleCurl { get { return fingerCurls[SteamVR_Skeleton_FingerIndexes.middle]; } }
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_0 = SteamVR_Action_Skeleton_Source_get_fingerCurls_m6E0B4235B8D2B15E1BBFD7634ECA591CC77A2732_inline(__this, /*hidden argument*/NULL);
		NullCheck(L_0);
		int32_t L_1 = 2;
		float L_2 = (L_0)->GetAt(static_cast<il2cpp_array_size_t>(L_1));
		V_0 = L_2;
		goto IL_000c;
	}

IL_000c:
	{
		// public float middleCurl { get { return fingerCurls[SteamVR_Skeleton_FingerIndexes.middle]; } }
		float L_3 = V_0;
		return L_3;
	}
}
// System.Single Valve.VR.SteamVR_Action_Skeleton_Source::get_ringCurl()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_Source_get_ringCurl_mB1080317044EB9464CBFA2AB4D579481889A4DF6 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	float V_0 = 0.0f;
	{
		// public float ringCurl { get { return fingerCurls[SteamVR_Skeleton_FingerIndexes.ring]; } }
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_0 = SteamVR_Action_Skeleton_Source_get_fingerCurls_m6E0B4235B8D2B15E1BBFD7634ECA591CC77A2732_inline(__this, /*hidden argument*/NULL);
		NullCheck(L_0);
		int32_t L_1 = 3;
		float L_2 = (L_0)->GetAt(static_cast<il2cpp_array_size_t>(L_1));
		V_0 = L_2;
		goto IL_000c;
	}

IL_000c:
	{
		// public float ringCurl { get { return fingerCurls[SteamVR_Skeleton_FingerIndexes.ring]; } }
		float L_3 = V_0;
		return L_3;
	}
}
// System.Single Valve.VR.SteamVR_Action_Skeleton_Source::get_pinkyCurl()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_Source_get_pinkyCurl_mDCB73847A197AC4E4F55DF28D27857EE71F131B3 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	float V_0 = 0.0f;
	{
		// public float pinkyCurl { get { return fingerCurls[SteamVR_Skeleton_FingerIndexes.pinky]; } }
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_0 = SteamVR_Action_Skeleton_Source_get_fingerCurls_m6E0B4235B8D2B15E1BBFD7634ECA591CC77A2732_inline(__this, /*hidden argument*/NULL);
		NullCheck(L_0);
		int32_t L_1 = 4;
		float L_2 = (L_0)->GetAt(static_cast<il2cpp_array_size_t>(L_1));
		V_0 = L_2;
		goto IL_000c;
	}

IL_000c:
	{
		// public float pinkyCurl { get { return fingerCurls[SteamVR_Skeleton_FingerIndexes.pinky]; } }
		float L_3 = V_0;
		return L_3;
	}
}
// System.Single Valve.VR.SteamVR_Action_Skeleton_Source::get_thumbIndexSplay()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_Source_get_thumbIndexSplay_m8A48CFB2D8446B92D1ACD230A06CCADEADAF90D8 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	float V_0 = 0.0f;
	{
		// public float thumbIndexSplay { get { return fingerSplays[SteamVR_Skeleton_FingerSplayIndexes.thumbIndex]; } }
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_0 = SteamVR_Action_Skeleton_Source_get_fingerSplays_m21D8D0994518AF9B7532A558E5E39A81C29ADE11_inline(__this, /*hidden argument*/NULL);
		NullCheck(L_0);
		int32_t L_1 = 0;
		float L_2 = (L_0)->GetAt(static_cast<il2cpp_array_size_t>(L_1));
		V_0 = L_2;
		goto IL_000c;
	}

IL_000c:
	{
		// public float thumbIndexSplay { get { return fingerSplays[SteamVR_Skeleton_FingerSplayIndexes.thumbIndex]; } }
		float L_3 = V_0;
		return L_3;
	}
}
// System.Single Valve.VR.SteamVR_Action_Skeleton_Source::get_indexMiddleSplay()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_Source_get_indexMiddleSplay_m032F314FF2441AF7819CD080BAC24BD7EA1D25B2 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	float V_0 = 0.0f;
	{
		// public float indexMiddleSplay { get { return fingerSplays[SteamVR_Skeleton_FingerSplayIndexes.indexMiddle]; } }
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_0 = SteamVR_Action_Skeleton_Source_get_fingerSplays_m21D8D0994518AF9B7532A558E5E39A81C29ADE11_inline(__this, /*hidden argument*/NULL);
		NullCheck(L_0);
		int32_t L_1 = 1;
		float L_2 = (L_0)->GetAt(static_cast<il2cpp_array_size_t>(L_1));
		V_0 = L_2;
		goto IL_000c;
	}

IL_000c:
	{
		// public float indexMiddleSplay { get { return fingerSplays[SteamVR_Skeleton_FingerSplayIndexes.indexMiddle]; } }
		float L_3 = V_0;
		return L_3;
	}
}
// System.Single Valve.VR.SteamVR_Action_Skeleton_Source::get_middleRingSplay()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_Source_get_middleRingSplay_m8F9D81F3B1CB80C0DD82485A54DB100FF1B0E546 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	float V_0 = 0.0f;
	{
		// public float middleRingSplay { get { return fingerSplays[SteamVR_Skeleton_FingerSplayIndexes.middleRing]; } }
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_0 = SteamVR_Action_Skeleton_Source_get_fingerSplays_m21D8D0994518AF9B7532A558E5E39A81C29ADE11_inline(__this, /*hidden argument*/NULL);
		NullCheck(L_0);
		int32_t L_1 = 2;
		float L_2 = (L_0)->GetAt(static_cast<il2cpp_array_size_t>(L_1));
		V_0 = L_2;
		goto IL_000c;
	}

IL_000c:
	{
		// public float middleRingSplay { get { return fingerSplays[SteamVR_Skeleton_FingerSplayIndexes.middleRing]; } }
		float L_3 = V_0;
		return L_3;
	}
}
// System.Single Valve.VR.SteamVR_Action_Skeleton_Source::get_ringPinkySplay()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_Source_get_ringPinkySplay_m1A57999FB132953BE3265B6C3AB7E274A1D10DE0 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	float V_0 = 0.0f;
	{
		// public float ringPinkySplay { get { return fingerSplays[SteamVR_Skeleton_FingerSplayIndexes.ringPinky]; } }
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_0 = SteamVR_Action_Skeleton_Source_get_fingerSplays_m21D8D0994518AF9B7532A558E5E39A81C29ADE11_inline(__this, /*hidden argument*/NULL);
		NullCheck(L_0);
		int32_t L_1 = 3;
		float L_2 = (L_0)->GetAt(static_cast<il2cpp_array_size_t>(L_1));
		V_0 = L_2;
		goto IL_000c;
	}

IL_000c:
	{
		// public float ringPinkySplay { get { return fingerSplays[SteamVR_Skeleton_FingerSplayIndexes.ringPinky]; } }
		float L_3 = V_0;
		return L_3;
	}
}
// System.Single Valve.VR.SteamVR_Action_Skeleton_Source::get_lastThumbCurl()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_Source_get_lastThumbCurl_mE893135DF37D02B74C7B190331E8A214C5350AC4 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	float V_0 = 0.0f;
	{
		// public float lastThumbCurl { get { return lastFingerCurls[SteamVR_Skeleton_FingerIndexes.thumb]; } }
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_0 = SteamVR_Action_Skeleton_Source_get_lastFingerCurls_m46C98882B5CB755BB4ADC367308E91D036E1896E_inline(__this, /*hidden argument*/NULL);
		NullCheck(L_0);
		int32_t L_1 = 0;
		float L_2 = (L_0)->GetAt(static_cast<il2cpp_array_size_t>(L_1));
		V_0 = L_2;
		goto IL_000c;
	}

IL_000c:
	{
		// public float lastThumbCurl { get { return lastFingerCurls[SteamVR_Skeleton_FingerIndexes.thumb]; } }
		float L_3 = V_0;
		return L_3;
	}
}
// System.Single Valve.VR.SteamVR_Action_Skeleton_Source::get_lastIndexCurl()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_Source_get_lastIndexCurl_mB7429964CAA0C0A16B0C98F8FEADEFFD8466CE30 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	float V_0 = 0.0f;
	{
		// public float lastIndexCurl { get { return lastFingerCurls[SteamVR_Skeleton_FingerIndexes.index]; } }
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_0 = SteamVR_Action_Skeleton_Source_get_lastFingerCurls_m46C98882B5CB755BB4ADC367308E91D036E1896E_inline(__this, /*hidden argument*/NULL);
		NullCheck(L_0);
		int32_t L_1 = 1;
		float L_2 = (L_0)->GetAt(static_cast<il2cpp_array_size_t>(L_1));
		V_0 = L_2;
		goto IL_000c;
	}

IL_000c:
	{
		// public float lastIndexCurl { get { return lastFingerCurls[SteamVR_Skeleton_FingerIndexes.index]; } }
		float L_3 = V_0;
		return L_3;
	}
}
// System.Single Valve.VR.SteamVR_Action_Skeleton_Source::get_lastMiddleCurl()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_Source_get_lastMiddleCurl_m1EC63B41C764BED847913534AFA8D939FE64686A (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	float V_0 = 0.0f;
	{
		// public float lastMiddleCurl { get { return lastFingerCurls[SteamVR_Skeleton_FingerIndexes.middle]; } }
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_0 = SteamVR_Action_Skeleton_Source_get_lastFingerCurls_m46C98882B5CB755BB4ADC367308E91D036E1896E_inline(__this, /*hidden argument*/NULL);
		NullCheck(L_0);
		int32_t L_1 = 2;
		float L_2 = (L_0)->GetAt(static_cast<il2cpp_array_size_t>(L_1));
		V_0 = L_2;
		goto IL_000c;
	}

IL_000c:
	{
		// public float lastMiddleCurl { get { return lastFingerCurls[SteamVR_Skeleton_FingerIndexes.middle]; } }
		float L_3 = V_0;
		return L_3;
	}
}
// System.Single Valve.VR.SteamVR_Action_Skeleton_Source::get_lastRingCurl()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_Source_get_lastRingCurl_m243A9EC6EA188AA107D23B07BA8BEFCABC3EEAA8 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	float V_0 = 0.0f;
	{
		// public float lastRingCurl { get { return lastFingerCurls[SteamVR_Skeleton_FingerIndexes.ring]; } }
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_0 = SteamVR_Action_Skeleton_Source_get_lastFingerCurls_m46C98882B5CB755BB4ADC367308E91D036E1896E_inline(__this, /*hidden argument*/NULL);
		NullCheck(L_0);
		int32_t L_1 = 3;
		float L_2 = (L_0)->GetAt(static_cast<il2cpp_array_size_t>(L_1));
		V_0 = L_2;
		goto IL_000c;
	}

IL_000c:
	{
		// public float lastRingCurl { get { return lastFingerCurls[SteamVR_Skeleton_FingerIndexes.ring]; } }
		float L_3 = V_0;
		return L_3;
	}
}
// System.Single Valve.VR.SteamVR_Action_Skeleton_Source::get_lastPinkyCurl()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_Source_get_lastPinkyCurl_m67226B9DF4D046AFFC83ED7FB6B9BD8678C0B306 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	float V_0 = 0.0f;
	{
		// public float lastPinkyCurl { get { return lastFingerCurls[SteamVR_Skeleton_FingerIndexes.pinky]; } }
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_0 = SteamVR_Action_Skeleton_Source_get_lastFingerCurls_m46C98882B5CB755BB4ADC367308E91D036E1896E_inline(__this, /*hidden argument*/NULL);
		NullCheck(L_0);
		int32_t L_1 = 4;
		float L_2 = (L_0)->GetAt(static_cast<il2cpp_array_size_t>(L_1));
		V_0 = L_2;
		goto IL_000c;
	}

IL_000c:
	{
		// public float lastPinkyCurl { get { return lastFingerCurls[SteamVR_Skeleton_FingerIndexes.pinky]; } }
		float L_3 = V_0;
		return L_3;
	}
}
// System.Single Valve.VR.SteamVR_Action_Skeleton_Source::get_lastThumbIndexSplay()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_Source_get_lastThumbIndexSplay_mFECABD9313D9F50354F74393A9A22B3DCF0C991B (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	float V_0 = 0.0f;
	{
		// public float lastThumbIndexSplay { get { return lastFingerSplays[SteamVR_Skeleton_FingerSplayIndexes.thumbIndex]; } }
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_0 = SteamVR_Action_Skeleton_Source_get_lastFingerSplays_m9DFC31F484BCD45399E9335EE8679CEC8150D3F4_inline(__this, /*hidden argument*/NULL);
		NullCheck(L_0);
		int32_t L_1 = 0;
		float L_2 = (L_0)->GetAt(static_cast<il2cpp_array_size_t>(L_1));
		V_0 = L_2;
		goto IL_000c;
	}

IL_000c:
	{
		// public float lastThumbIndexSplay { get { return lastFingerSplays[SteamVR_Skeleton_FingerSplayIndexes.thumbIndex]; } }
		float L_3 = V_0;
		return L_3;
	}
}
// System.Single Valve.VR.SteamVR_Action_Skeleton_Source::get_lastIndexMiddleSplay()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_Source_get_lastIndexMiddleSplay_mC780C06D5EFBB2E006D57433B5813666CABE8684 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	float V_0 = 0.0f;
	{
		// public float lastIndexMiddleSplay { get { return lastFingerSplays[SteamVR_Skeleton_FingerSplayIndexes.indexMiddle]; } }
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_0 = SteamVR_Action_Skeleton_Source_get_lastFingerSplays_m9DFC31F484BCD45399E9335EE8679CEC8150D3F4_inline(__this, /*hidden argument*/NULL);
		NullCheck(L_0);
		int32_t L_1 = 1;
		float L_2 = (L_0)->GetAt(static_cast<il2cpp_array_size_t>(L_1));
		V_0 = L_2;
		goto IL_000c;
	}

IL_000c:
	{
		// public float lastIndexMiddleSplay { get { return lastFingerSplays[SteamVR_Skeleton_FingerSplayIndexes.indexMiddle]; } }
		float L_3 = V_0;
		return L_3;
	}
}
// System.Single Valve.VR.SteamVR_Action_Skeleton_Source::get_lastMiddleRingSplay()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_Source_get_lastMiddleRingSplay_mF7BD21EE49B81B5326424FEA0EBB2191171BCDC6 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	float V_0 = 0.0f;
	{
		// public float lastMiddleRingSplay { get { return lastFingerSplays[SteamVR_Skeleton_FingerSplayIndexes.middleRing]; } }
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_0 = SteamVR_Action_Skeleton_Source_get_lastFingerSplays_m9DFC31F484BCD45399E9335EE8679CEC8150D3F4_inline(__this, /*hidden argument*/NULL);
		NullCheck(L_0);
		int32_t L_1 = 2;
		float L_2 = (L_0)->GetAt(static_cast<il2cpp_array_size_t>(L_1));
		V_0 = L_2;
		goto IL_000c;
	}

IL_000c:
	{
		// public float lastMiddleRingSplay { get { return lastFingerSplays[SteamVR_Skeleton_FingerSplayIndexes.middleRing]; } }
		float L_3 = V_0;
		return L_3;
	}
}
// System.Single Valve.VR.SteamVR_Action_Skeleton_Source::get_lastRingPinkySplay()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Skeleton_Source_get_lastRingPinkySplay_mE15C84D9E609B6A7941C2C96AAAF10514D3808B1 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	float V_0 = 0.0f;
	{
		// public float lastRingPinkySplay { get { return lastFingerSplays[SteamVR_Skeleton_FingerSplayIndexes.ringPinky]; } }
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_0 = SteamVR_Action_Skeleton_Source_get_lastFingerSplays_m9DFC31F484BCD45399E9335EE8679CEC8150D3F4_inline(__this, /*hidden argument*/NULL);
		NullCheck(L_0);
		int32_t L_1 = 3;
		float L_2 = (L_0)->GetAt(static_cast<il2cpp_array_size_t>(L_1));
		V_0 = L_2;
		goto IL_000c;
	}

IL_000c:
	{
		// public float lastRingPinkySplay { get { return lastFingerSplays[SteamVR_Skeleton_FingerSplayIndexes.ringPinky]; } }
		float L_3 = V_0;
		return L_3;
	}
}
// System.Single[] Valve.VR.SteamVR_Action_Skeleton_Source::get_fingerCurls()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* SteamVR_Action_Skeleton_Source_get_fingerCurls_m6E0B4235B8D2B15E1BBFD7634ECA591CC77A2732 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	{
		// public float[] fingerCurls { get; protected set; }
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_0 = __this->get_U3CfingerCurlsU3Ek__BackingField_51();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::set_fingerCurls(System.Single[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_set_fingerCurls_m2A1933C7FE83EB6B654B248354B4438B1B15C0BD (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* ___value0, const RuntimeMethod* method)
{
	{
		// public float[] fingerCurls { get; protected set; }
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_0 = ___value0;
		__this->set_U3CfingerCurlsU3Ek__BackingField_51(L_0);
		return;
	}
}
// System.Single[] Valve.VR.SteamVR_Action_Skeleton_Source::get_fingerSplays()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* SteamVR_Action_Skeleton_Source_get_fingerSplays_m21D8D0994518AF9B7532A558E5E39A81C29ADE11 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	{
		// public float[] fingerSplays { get; protected set; }
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_0 = __this->get_U3CfingerSplaysU3Ek__BackingField_52();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::set_fingerSplays(System.Single[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_set_fingerSplays_mB8BA373C6A1A65E39FD6D8AF1566A31F18BA7055 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* ___value0, const RuntimeMethod* method)
{
	{
		// public float[] fingerSplays { get; protected set; }
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_0 = ___value0;
		__this->set_U3CfingerSplaysU3Ek__BackingField_52(L_0);
		return;
	}
}
// System.Single[] Valve.VR.SteamVR_Action_Skeleton_Source::get_lastFingerCurls()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* SteamVR_Action_Skeleton_Source_get_lastFingerCurls_m46C98882B5CB755BB4ADC367308E91D036E1896E (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	{
		// public float[] lastFingerCurls { get; protected set; }
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_0 = __this->get_U3ClastFingerCurlsU3Ek__BackingField_53();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::set_lastFingerCurls(System.Single[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_set_lastFingerCurls_mA6CF9BCD46F49F1A95627142A70D9FA3C4F490E5 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* ___value0, const RuntimeMethod* method)
{
	{
		// public float[] lastFingerCurls { get; protected set; }
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_0 = ___value0;
		__this->set_U3ClastFingerCurlsU3Ek__BackingField_53(L_0);
		return;
	}
}
// System.Single[] Valve.VR.SteamVR_Action_Skeleton_Source::get_lastFingerSplays()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* SteamVR_Action_Skeleton_Source_get_lastFingerSplays_m9DFC31F484BCD45399E9335EE8679CEC8150D3F4 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	{
		// public float[] lastFingerSplays { get; protected set; }
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_0 = __this->get_U3ClastFingerSplaysU3Ek__BackingField_54();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::set_lastFingerSplays(System.Single[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_set_lastFingerSplays_m1E2D198E4627EA80F69A67AB26943144BD45DC70 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* ___value0, const RuntimeMethod* method)
{
	{
		// public float[] lastFingerSplays { get; protected set; }
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_0 = ___value0;
		__this->set_U3ClastFingerSplaysU3Ek__BackingField_54(L_0);
		return;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Skeleton_Source::get_poseChanged()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Skeleton_Source_get_poseChanged_mBBFFCD8FF3AB5998C3B5053499A253E137EB6B01 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	{
		// public bool poseChanged { get; protected set; }
		bool L_0 = __this->get_U3CposeChangedU3Ek__BackingField_55();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::set_poseChanged(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_set_poseChanged_m359037EAC8B53761892E89E13D0A1FCC31A222EC (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, bool ___value0, const RuntimeMethod* method)
{
	{
		// public bool poseChanged { get; protected set; }
		bool L_0 = ___value0;
		__this->set_U3CposeChangedU3Ek__BackingField_55(L_0);
		return;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Skeleton_Source::get_onlyUpdateSummaryData()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Skeleton_Source_get_onlyUpdateSummaryData_m3F489169E6CE022F5E46CB1D3B6EB910564C8A9A (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	{
		// public bool onlyUpdateSummaryData { get; set; }
		bool L_0 = __this->get_U3ConlyUpdateSummaryDataU3Ek__BackingField_56();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::set_onlyUpdateSummaryData(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_set_onlyUpdateSummaryData_m02A775C0CAB57C16D4A673019586873F7C0B3CFB (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, bool ___value0, const RuntimeMethod* method)
{
	{
		// public bool onlyUpdateSummaryData { get; set; }
		bool L_0 = ___value0;
		__this->set_U3ConlyUpdateSummaryDataU3Ek__BackingField_56(L_0);
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::Preinitialize(Valve.VR.SteamVR_Action,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_Preinitialize_m47C2874B5006B62A17DF399E7851585E7AB8ACB5 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * ___wrappingAction0, int32_t ___forInputSource1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_Source_Preinitialize_m47C2874B5006B62A17DF399E7851585E7AB8ACB5_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// base.Preinitialize(wrappingAction, forInputSource);
		SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * L_0 = ___wrappingAction0;
		int32_t L_1 = ___forInputSource1;
		SteamVR_Action_Pose_Source_Preinitialize_mF8A86BF078F169380E7A1C75DA6C20B49380AE9B(__this, L_0, L_1, /*hidden argument*/NULL);
		// skeletonAction = (SteamVR_Action_Skeleton)wrappingAction;
		SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * L_2 = ___wrappingAction0;
		__this->set_skeletonAction_59(((SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 *)CastclassClass((RuntimeObject*)L_2, SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504_il2cpp_TypeInfo_var)));
		// bonePositions = new Vector3[SteamVR_Action_Skeleton.numBones];
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_3 = (Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28*)(Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28*)SZArrayNew(Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28_il2cpp_TypeInfo_var, (uint32_t)((int32_t)31));
		SteamVR_Action_Skeleton_Source_set_bonePositions_m96408532FED1D966DE56612099B679DA8FBBF8D9_inline(__this, L_3, /*hidden argument*/NULL);
		// lastBonePositions = new Vector3[SteamVR_Action_Skeleton.numBones];
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_4 = (Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28*)(Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28*)SZArrayNew(Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28_il2cpp_TypeInfo_var, (uint32_t)((int32_t)31));
		SteamVR_Action_Skeleton_Source_set_lastBonePositions_m8E63D828A81C99EEA6A4C55BA74D48F7C7F19CBF_inline(__this, L_4, /*hidden argument*/NULL);
		// boneRotations = new Quaternion[SteamVR_Action_Skeleton.numBones];
		QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* L_5 = (QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3*)(QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3*)SZArrayNew(QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3_il2cpp_TypeInfo_var, (uint32_t)((int32_t)31));
		SteamVR_Action_Skeleton_Source_set_boneRotations_m2B92E87BC6C9E456075204D69BD82CAE759F46E2_inline(__this, L_5, /*hidden argument*/NULL);
		// lastBoneRotations = new Quaternion[SteamVR_Action_Skeleton.numBones];
		QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* L_6 = (QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3*)(QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3*)SZArrayNew(QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3_il2cpp_TypeInfo_var, (uint32_t)((int32_t)31));
		SteamVR_Action_Skeleton_Source_set_lastBoneRotations_mF1526AAAFE4506F1F70D22BED03D04083E75E3F8_inline(__this, L_6, /*hidden argument*/NULL);
		// rangeOfMotion = EVRSkeletalMotionRange.WithController;
		SteamVR_Action_Skeleton_Source_set_rangeOfMotion_m91A4B52E877EA5A07574CC4A7FDE89BC4B4594F9_inline(__this, 0, /*hidden argument*/NULL);
		// skeletalTransformSpace = EVRSkeletalTransformSpace.Parent;
		SteamVR_Action_Skeleton_Source_set_skeletalTransformSpace_m0A466B97614EB779A0DA19E3F2DBEC0E7E8E162D_inline(__this, 1, /*hidden argument*/NULL);
		// fingerCurls = new float[SteamVR_Skeleton_FingerIndexes.enumArray.Length];
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Skeleton_FingerIndexes_t23102EBBB267071AC40CD07242EE4C746DC7F020_il2cpp_TypeInfo_var);
		SteamVR_Skeleton_FingerIndexEnumU5BU5D_t972F21E674536524E0BFB5F382CFD0ACA1714DB7* L_7 = ((SteamVR_Skeleton_FingerIndexes_t23102EBBB267071AC40CD07242EE4C746DC7F020_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Skeleton_FingerIndexes_t23102EBBB267071AC40CD07242EE4C746DC7F020_il2cpp_TypeInfo_var))->get_enumArray_5();
		NullCheck(L_7);
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_8 = (SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5*)(SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5*)SZArrayNew(SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5_il2cpp_TypeInfo_var, (uint32_t)(((int32_t)((int32_t)(((RuntimeArray*)L_7)->max_length)))));
		SteamVR_Action_Skeleton_Source_set_fingerCurls_m2A1933C7FE83EB6B654B248354B4438B1B15C0BD_inline(__this, L_8, /*hidden argument*/NULL);
		// fingerSplays = new float[SteamVR_Skeleton_FingerSplayIndexes.enumArray.Length];
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Skeleton_FingerSplayIndexes_t0141FA1AFC8CF87E917B728EEBBA9186F26D3246_il2cpp_TypeInfo_var);
		SteamVR_Skeleton_FingerSplayIndexEnumU5BU5D_t92DED5924CD2E6B494B9ABD5961F9BC65373A81B* L_9 = ((SteamVR_Skeleton_FingerSplayIndexes_t0141FA1AFC8CF87E917B728EEBBA9186F26D3246_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Skeleton_FingerSplayIndexes_t0141FA1AFC8CF87E917B728EEBBA9186F26D3246_il2cpp_TypeInfo_var))->get_enumArray_4();
		NullCheck(L_9);
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_10 = (SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5*)(SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5*)SZArrayNew(SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5_il2cpp_TypeInfo_var, (uint32_t)(((int32_t)((int32_t)(((RuntimeArray*)L_9)->max_length)))));
		SteamVR_Action_Skeleton_Source_set_fingerSplays_mB8BA373C6A1A65E39FD6D8AF1566A31F18BA7055_inline(__this, L_10, /*hidden argument*/NULL);
		// lastFingerCurls = new float[SteamVR_Skeleton_FingerIndexes.enumArray.Length];
		SteamVR_Skeleton_FingerIndexEnumU5BU5D_t972F21E674536524E0BFB5F382CFD0ACA1714DB7* L_11 = ((SteamVR_Skeleton_FingerIndexes_t23102EBBB267071AC40CD07242EE4C746DC7F020_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Skeleton_FingerIndexes_t23102EBBB267071AC40CD07242EE4C746DC7F020_il2cpp_TypeInfo_var))->get_enumArray_5();
		NullCheck(L_11);
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_12 = (SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5*)(SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5*)SZArrayNew(SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5_il2cpp_TypeInfo_var, (uint32_t)(((int32_t)((int32_t)(((RuntimeArray*)L_11)->max_length)))));
		SteamVR_Action_Skeleton_Source_set_lastFingerCurls_mA6CF9BCD46F49F1A95627142A70D9FA3C4F490E5_inline(__this, L_12, /*hidden argument*/NULL);
		// lastFingerSplays = new float[SteamVR_Skeleton_FingerSplayIndexes.enumArray.Length];
		SteamVR_Skeleton_FingerSplayIndexEnumU5BU5D_t92DED5924CD2E6B494B9ABD5961F9BC65373A81B* L_13 = ((SteamVR_Skeleton_FingerSplayIndexes_t0141FA1AFC8CF87E917B728EEBBA9186F26D3246_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Skeleton_FingerSplayIndexes_t0141FA1AFC8CF87E917B728EEBBA9186F26D3246_il2cpp_TypeInfo_var))->get_enumArray_4();
		NullCheck(L_13);
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_14 = (SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5*)(SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5*)SZArrayNew(SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5_il2cpp_TypeInfo_var, (uint32_t)(((int32_t)((int32_t)(((RuntimeArray*)L_13)->max_length)))));
		SteamVR_Action_Skeleton_Source_set_lastFingerSplays_m1E2D198E4627EA80F69A67AB26943144BD45DC70_inline(__this, L_14, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::Initialize()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_Initialize_mD90DB98AC67B0E6CCCC98FCC5D0BC9FE9F575E0E (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_Source_Initialize_mD90DB98AC67B0E6CCCC98FCC5D0BC9FE9F575E0E_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	{
		// base.Initialize();
		SteamVR_Action_Pose_Source_Initialize_m36604AB0F3E49250F5761A885B005CB8CEE2DBD1(__this, /*hidden argument*/NULL);
		// if (skeletonActionData_size == 0)
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72_il2cpp_TypeInfo_var);
		uint32_t L_0 = ((SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72_il2cpp_TypeInfo_var))->get_skeletonActionData_size_36();
		V_0 = (bool)((((int32_t)L_0) == ((int32_t)0))? 1 : 0);
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0028;
		}
	}
	{
		// skeletonActionData_size = (uint)Marshal.SizeOf(typeof(InputSkeletalActionData_t));
		RuntimeTypeHandle_t7B542280A22F0EC4EAC2061C29178845847A8B2D  L_2 = { reinterpret_cast<intptr_t> (InputSkeletalActionData_t_tD41850247EEE1858231B43C4B3EC2B5617140C26_0_0_0_var) };
		IL2CPP_RUNTIME_CLASS_INIT(Type_t_il2cpp_TypeInfo_var);
		Type_t * L_3 = Type_GetTypeFromHandle_m9DC58ADF0512987012A8A016FB64B068F3B1AFF6(L_2, /*hidden argument*/NULL);
		IL2CPP_RUNTIME_CLASS_INIT(Marshal_tC795CE9CC2FFBA41EDB1AC1C0FEC04607DFA8A40_il2cpp_TypeInfo_var);
		int32_t L_4 = Marshal_SizeOf_m4F7DA827FA7A720395E6FDD2ABE78D4B00D43130(L_3, /*hidden argument*/NULL);
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72_il2cpp_TypeInfo_var);
		((SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72_il2cpp_TypeInfo_var))->set_skeletonActionData_size_36(L_4);
	}

IL_0028:
	{
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::RemoveAllListeners()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_RemoveAllListeners_m1C7F648E9F2D3A92AE51329453DB463BA1DB7C0A (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_Source_RemoveAllListeners_m1C7F648E9F2D3A92AE51329453DB463BA1DB7C0A_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* V_0 = NULL;
	bool V_1 = false;
	bool V_2 = false;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* V_3 = NULL;
	int32_t V_4 = 0;
	Delegate_t * V_5 = NULL;
	bool V_6 = false;
	bool V_7 = false;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* V_8 = NULL;
	int32_t V_9 = 0;
	Delegate_t * V_10 = NULL;
	bool V_11 = false;
	bool V_12 = false;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* V_13 = NULL;
	int32_t V_14 = 0;
	Delegate_t * V_15 = NULL;
	bool V_16 = false;
	bool V_17 = false;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* V_18 = NULL;
	int32_t V_19 = 0;
	Delegate_t * V_20 = NULL;
	bool V_21 = false;
	bool V_22 = false;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* V_23 = NULL;
	int32_t V_24 = 0;
	Delegate_t * V_25 = NULL;
	bool V_26 = false;
	bool V_27 = false;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* V_28 = NULL;
	int32_t V_29 = 0;
	Delegate_t * V_30 = NULL;
	{
		// base.RemoveAllListeners();
		SteamVR_Action_Pose_Source_RemoveAllListeners_m07850B9C3B46C5E52AA8D2FF80B15C09E7901B9C(__this, /*hidden argument*/NULL);
		// if (onActiveChange != null)
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * L_0 = __this->get_onActiveChange_37();
		V_1 = (bool)((!(((RuntimeObject*)(ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 *)L_0) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		bool L_1 = V_1;
		if (!L_1)
		{
			goto IL_0054;
		}
	}
	{
		// delegates = onActiveChange.GetInvocationList();
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * L_2 = __this->get_onActiveChange_37();
		NullCheck(L_2);
		DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* L_3 = VirtFuncInvoker0< DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* >::Invoke(9 /* System.Delegate[] System.Delegate::GetInvocationList() */, L_2);
		V_0 = L_3;
		// if (delegates != null)
		DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* L_4 = V_0;
		V_2 = (bool)((!(((RuntimeObject*)(DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86*)L_4) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		bool L_5 = V_2;
		if (!L_5)
		{
			goto IL_0053;
		}
	}
	{
		// foreach (Delegate existingDelegate in delegates)
		DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* L_6 = V_0;
		V_3 = L_6;
		V_4 = 0;
		goto IL_004c;
	}

IL_0032:
	{
		// foreach (Delegate existingDelegate in delegates)
		DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* L_7 = V_3;
		int32_t L_8 = V_4;
		NullCheck(L_7);
		int32_t L_9 = L_8;
		Delegate_t * L_10 = (L_7)->GetAt(static_cast<il2cpp_array_size_t>(L_9));
		V_5 = L_10;
		// onActiveChange -= (SteamVR_Action_Skeleton.ActiveChangeHandler)existingDelegate;
		Delegate_t * L_11 = V_5;
		SteamVR_Action_Skeleton_Source_remove_onActiveChange_mBFD27080A2A3F94F22EB62EBD7C2680D21CF0C40(__this, ((ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 *)CastclassSealed((RuntimeObject*)L_11, ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4_il2cpp_TypeInfo_var)), /*hidden argument*/NULL);
		int32_t L_12 = V_4;
		V_4 = ((int32_t)il2cpp_codegen_add((int32_t)L_12, (int32_t)1));
	}

IL_004c:
	{
		// foreach (Delegate existingDelegate in delegates)
		int32_t L_13 = V_4;
		DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* L_14 = V_3;
		NullCheck(L_14);
		if ((((int32_t)L_13) < ((int32_t)(((int32_t)((int32_t)(((RuntimeArray*)L_14)->max_length)))))))
		{
			goto IL_0032;
		}
	}

IL_0053:
	{
	}

IL_0054:
	{
		// if (onChange != null)
		ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 * L_15 = __this->get_onChange_39();
		V_6 = (bool)((!(((RuntimeObject*)(ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 *)L_15) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		bool L_16 = V_6;
		if (!L_16)
		{
			goto IL_00a7;
		}
	}
	{
		// delegates = onChange.GetInvocationList();
		ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 * L_17 = __this->get_onChange_39();
		NullCheck(L_17);
		DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* L_18 = VirtFuncInvoker0< DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* >::Invoke(9 /* System.Delegate[] System.Delegate::GetInvocationList() */, L_17);
		V_0 = L_18;
		// if (delegates != null)
		DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* L_19 = V_0;
		V_7 = (bool)((!(((RuntimeObject*)(DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86*)L_19) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		bool L_20 = V_7;
		if (!L_20)
		{
			goto IL_00a6;
		}
	}
	{
		// foreach (Delegate existingDelegate in delegates)
		DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* L_21 = V_0;
		V_8 = L_21;
		V_9 = 0;
		goto IL_009e;
	}

IL_0083:
	{
		// foreach (Delegate existingDelegate in delegates)
		DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* L_22 = V_8;
		int32_t L_23 = V_9;
		NullCheck(L_22);
		int32_t L_24 = L_23;
		Delegate_t * L_25 = (L_22)->GetAt(static_cast<il2cpp_array_size_t>(L_24));
		V_10 = L_25;
		// onChange -= (SteamVR_Action_Skeleton.ChangeHandler)existingDelegate;
		Delegate_t * L_26 = V_10;
		SteamVR_Action_Skeleton_Source_remove_onChange_m6ACA4D17F3A943BB1AA96322576AA634DE0D8A0B(__this, ((ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 *)CastclassSealed((RuntimeObject*)L_26, ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7_il2cpp_TypeInfo_var)), /*hidden argument*/NULL);
		int32_t L_27 = V_9;
		V_9 = ((int32_t)il2cpp_codegen_add((int32_t)L_27, (int32_t)1));
	}

IL_009e:
	{
		// foreach (Delegate existingDelegate in delegates)
		int32_t L_28 = V_9;
		DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* L_29 = V_8;
		NullCheck(L_29);
		if ((((int32_t)L_28) < ((int32_t)(((int32_t)((int32_t)(((RuntimeArray*)L_29)->max_length)))))))
		{
			goto IL_0083;
		}
	}

IL_00a6:
	{
	}

IL_00a7:
	{
		// if (onUpdate != null)
		UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 * L_30 = __this->get_onUpdate_40();
		V_11 = (bool)((!(((RuntimeObject*)(UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 *)L_30) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		bool L_31 = V_11;
		if (!L_31)
		{
			goto IL_00fa;
		}
	}
	{
		// delegates = onUpdate.GetInvocationList();
		UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 * L_32 = __this->get_onUpdate_40();
		NullCheck(L_32);
		DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* L_33 = VirtFuncInvoker0< DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* >::Invoke(9 /* System.Delegate[] System.Delegate::GetInvocationList() */, L_32);
		V_0 = L_33;
		// if (delegates != null)
		DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* L_34 = V_0;
		V_12 = (bool)((!(((RuntimeObject*)(DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86*)L_34) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		bool L_35 = V_12;
		if (!L_35)
		{
			goto IL_00f9;
		}
	}
	{
		// foreach (Delegate existingDelegate in delegates)
		DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* L_36 = V_0;
		V_13 = L_36;
		V_14 = 0;
		goto IL_00f1;
	}

IL_00d6:
	{
		// foreach (Delegate existingDelegate in delegates)
		DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* L_37 = V_13;
		int32_t L_38 = V_14;
		NullCheck(L_37);
		int32_t L_39 = L_38;
		Delegate_t * L_40 = (L_37)->GetAt(static_cast<il2cpp_array_size_t>(L_39));
		V_15 = L_40;
		// onUpdate -= (SteamVR_Action_Skeleton.UpdateHandler)existingDelegate;
		Delegate_t * L_41 = V_15;
		SteamVR_Action_Skeleton_Source_remove_onUpdate_m628C295EBD7F127757F7A4EB9CBD5563BF36C4B9(__this, ((UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 *)CastclassSealed((RuntimeObject*)L_41, UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046_il2cpp_TypeInfo_var)), /*hidden argument*/NULL);
		int32_t L_42 = V_14;
		V_14 = ((int32_t)il2cpp_codegen_add((int32_t)L_42, (int32_t)1));
	}

IL_00f1:
	{
		// foreach (Delegate existingDelegate in delegates)
		int32_t L_43 = V_14;
		DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* L_44 = V_13;
		NullCheck(L_44);
		if ((((int32_t)L_43) < ((int32_t)(((int32_t)((int32_t)(((RuntimeArray*)L_44)->max_length)))))))
		{
			goto IL_00d6;
		}
	}

IL_00f9:
	{
	}

IL_00fa:
	{
		// if (onTrackingChanged != null)
		TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 * L_45 = __this->get_onTrackingChanged_41();
		V_16 = (bool)((!(((RuntimeObject*)(TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 *)L_45) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		bool L_46 = V_16;
		if (!L_46)
		{
			goto IL_014d;
		}
	}
	{
		// delegates = onTrackingChanged.GetInvocationList();
		TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 * L_47 = __this->get_onTrackingChanged_41();
		NullCheck(L_47);
		DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* L_48 = VirtFuncInvoker0< DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* >::Invoke(9 /* System.Delegate[] System.Delegate::GetInvocationList() */, L_47);
		V_0 = L_48;
		// if (delegates != null)
		DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* L_49 = V_0;
		V_17 = (bool)((!(((RuntimeObject*)(DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86*)L_49) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		bool L_50 = V_17;
		if (!L_50)
		{
			goto IL_014c;
		}
	}
	{
		// foreach (Delegate existingDelegate in delegates)
		DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* L_51 = V_0;
		V_18 = L_51;
		V_19 = 0;
		goto IL_0144;
	}

IL_0129:
	{
		// foreach (Delegate existingDelegate in delegates)
		DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* L_52 = V_18;
		int32_t L_53 = V_19;
		NullCheck(L_52);
		int32_t L_54 = L_53;
		Delegate_t * L_55 = (L_52)->GetAt(static_cast<il2cpp_array_size_t>(L_54));
		V_20 = L_55;
		// onTrackingChanged -= (SteamVR_Action_Skeleton.TrackingChangeHandler)existingDelegate;
		Delegate_t * L_56 = V_20;
		SteamVR_Action_Skeleton_Source_remove_onTrackingChanged_m40D169DABA55145AB54EF10974905C05237D2CA6(__this, ((TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 *)CastclassSealed((RuntimeObject*)L_56, TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4_il2cpp_TypeInfo_var)), /*hidden argument*/NULL);
		int32_t L_57 = V_19;
		V_19 = ((int32_t)il2cpp_codegen_add((int32_t)L_57, (int32_t)1));
	}

IL_0144:
	{
		// foreach (Delegate existingDelegate in delegates)
		int32_t L_58 = V_19;
		DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* L_59 = V_18;
		NullCheck(L_59);
		if ((((int32_t)L_58) < ((int32_t)(((int32_t)((int32_t)(((RuntimeArray*)L_59)->max_length)))))))
		{
			goto IL_0129;
		}
	}

IL_014c:
	{
	}

IL_014d:
	{
		// if (onValidPoseChanged != null)
		ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 * L_60 = __this->get_onValidPoseChanged_42();
		V_21 = (bool)((!(((RuntimeObject*)(ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 *)L_60) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		bool L_61 = V_21;
		if (!L_61)
		{
			goto IL_01a0;
		}
	}
	{
		// delegates = onValidPoseChanged.GetInvocationList();
		ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 * L_62 = __this->get_onValidPoseChanged_42();
		NullCheck(L_62);
		DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* L_63 = VirtFuncInvoker0< DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* >::Invoke(9 /* System.Delegate[] System.Delegate::GetInvocationList() */, L_62);
		V_0 = L_63;
		// if (delegates != null)
		DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* L_64 = V_0;
		V_22 = (bool)((!(((RuntimeObject*)(DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86*)L_64) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		bool L_65 = V_22;
		if (!L_65)
		{
			goto IL_019f;
		}
	}
	{
		// foreach (Delegate existingDelegate in delegates)
		DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* L_66 = V_0;
		V_23 = L_66;
		V_24 = 0;
		goto IL_0197;
	}

IL_017c:
	{
		// foreach (Delegate existingDelegate in delegates)
		DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* L_67 = V_23;
		int32_t L_68 = V_24;
		NullCheck(L_67);
		int32_t L_69 = L_68;
		Delegate_t * L_70 = (L_67)->GetAt(static_cast<il2cpp_array_size_t>(L_69));
		V_25 = L_70;
		// onValidPoseChanged -= (SteamVR_Action_Skeleton.ValidPoseChangeHandler)existingDelegate;
		Delegate_t * L_71 = V_25;
		SteamVR_Action_Skeleton_Source_remove_onValidPoseChanged_mEE5E18D3BE29BAA782313154AFB6EAC448899DDE(__this, ((ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 *)CastclassSealed((RuntimeObject*)L_71, ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7_il2cpp_TypeInfo_var)), /*hidden argument*/NULL);
		int32_t L_72 = V_24;
		V_24 = ((int32_t)il2cpp_codegen_add((int32_t)L_72, (int32_t)1));
	}

IL_0197:
	{
		// foreach (Delegate existingDelegate in delegates)
		int32_t L_73 = V_24;
		DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* L_74 = V_23;
		NullCheck(L_74);
		if ((((int32_t)L_73) < ((int32_t)(((int32_t)((int32_t)(((RuntimeArray*)L_74)->max_length)))))))
		{
			goto IL_017c;
		}
	}

IL_019f:
	{
	}

IL_01a0:
	{
		// if (onDeviceConnectedChanged != null)
		DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 * L_75 = __this->get_onDeviceConnectedChanged_43();
		V_26 = (bool)((!(((RuntimeObject*)(DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 *)L_75) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		bool L_76 = V_26;
		if (!L_76)
		{
			goto IL_01f3;
		}
	}
	{
		// delegates = onDeviceConnectedChanged.GetInvocationList();
		DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 * L_77 = __this->get_onDeviceConnectedChanged_43();
		NullCheck(L_77);
		DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* L_78 = VirtFuncInvoker0< DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* >::Invoke(9 /* System.Delegate[] System.Delegate::GetInvocationList() */, L_77);
		V_0 = L_78;
		// if (delegates != null)
		DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* L_79 = V_0;
		V_27 = (bool)((!(((RuntimeObject*)(DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86*)L_79) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		bool L_80 = V_27;
		if (!L_80)
		{
			goto IL_01f2;
		}
	}
	{
		// foreach (Delegate existingDelegate in delegates)
		DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* L_81 = V_0;
		V_28 = L_81;
		V_29 = 0;
		goto IL_01ea;
	}

IL_01cf:
	{
		// foreach (Delegate existingDelegate in delegates)
		DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* L_82 = V_28;
		int32_t L_83 = V_29;
		NullCheck(L_82);
		int32_t L_84 = L_83;
		Delegate_t * L_85 = (L_82)->GetAt(static_cast<il2cpp_array_size_t>(L_84));
		V_30 = L_85;
		// onDeviceConnectedChanged -= (SteamVR_Action_Skeleton.DeviceConnectedChangeHandler)existingDelegate;
		Delegate_t * L_86 = V_30;
		SteamVR_Action_Skeleton_Source_remove_onDeviceConnectedChanged_m77B3EE4ABFF7936EC6951485DCD048DBEE1562BB(__this, ((DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 *)CastclassSealed((RuntimeObject*)L_86, DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592_il2cpp_TypeInfo_var)), /*hidden argument*/NULL);
		int32_t L_87 = V_29;
		V_29 = ((int32_t)il2cpp_codegen_add((int32_t)L_87, (int32_t)1));
	}

IL_01ea:
	{
		// foreach (Delegate existingDelegate in delegates)
		int32_t L_88 = V_29;
		DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* L_89 = V_28;
		NullCheck(L_89);
		if ((((int32_t)L_88) < ((int32_t)(((int32_t)((int32_t)(((RuntimeArray*)L_89)->max_length)))))))
		{
			goto IL_01cf;
		}
	}

IL_01f2:
	{
	}

IL_01f3:
	{
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::UpdateValue()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_UpdateValue_mFBF6FE8BC6C28CD72C963C07A5AF4F82783CB508 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	{
		// UpdateValue(false);
		VirtActionInvoker1< bool >::Invoke(51 /* System.Void Valve.VR.SteamVR_Action_Pose_Source::UpdateValue(System.Boolean) */, __this, (bool)0);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::UpdateValue(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_UpdateValue_m4CC3C0F03604C6D5866D0F2D173B3D0E37FCD321 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, bool ___skipStateAndEventUpdates0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_Source_UpdateValue_m4CC3C0F03604C6D5866D0F2D173B3D0E37FCD321_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	bool V_1 = false;
	int32_t V_2 = 0;
	bool V_3 = false;
	int32_t V_4 = 0;
	bool V_5 = false;
	int32_t V_6 = 0;
	bool V_7 = false;
	bool V_8 = false;
	uint64_t V_9 = 0;
	bool V_10 = false;
	bool V_11 = false;
	bool V_12 = false;
	int32_t V_13 = 0;
	bool V_14 = false;
	bool V_15 = false;
	int32_t V_16 = 0;
	bool V_17 = false;
	bool V_18 = false;
	bool V_19 = false;
	bool V_20 = false;
	bool V_21 = false;
	{
		// lastActive = active;
		bool L_0 = VirtFuncInvoker0< bool >::Invoke(12 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_active() */, __this);
		VirtActionInvoker1< bool >::Invoke(15 /* System.Void Valve.VR.SteamVR_Action_Source::set_lastActive(System.Boolean) */, __this, L_0);
		// lastSkeletonActionData = skeletonActionData;
		InputSkeletalActionData_t_tD41850247EEE1858231B43C4B3EC2B5617140C26  L_1 = __this->get_skeletonActionData_61();
		__this->set_lastSkeletonActionData_62(L_1);
		// lastSkeletalSummaryData = skeletalSummaryData;
		VRSkeletalSummaryData_t_t644580EA9039A02976937652FFFEE20F90671B66  L_2 = __this->get_skeletalSummaryData_57();
		__this->set_lastSkeletalSummaryData_58(L_2);
		// if (onlyUpdateSummaryData == false)
		bool L_3 = SteamVR_Action_Skeleton_Source_get_onlyUpdateSummaryData_m3F489169E6CE022F5E46CB1D3B6EB910564C8A9A_inline(__this, /*hidden argument*/NULL);
		V_1 = (bool)((((int32_t)L_3) == ((int32_t)0))? 1 : 0);
		bool L_4 = V_1;
		if (!L_4)
		{
			goto IL_0078;
		}
	}
	{
		// for (int boneIndex = 0; boneIndex < SteamVR_Action_Skeleton.numBones; boneIndex++)
		V_2 = 0;
		goto IL_006e;
	}

IL_0038:
	{
		// lastBonePositions[boneIndex] = bonePositions[boneIndex];
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_5 = SteamVR_Action_Skeleton_Source_get_lastBonePositions_m99D1C7B8A05E646777AC85CFC0ED2FF0953C3AB9_inline(__this, /*hidden argument*/NULL);
		int32_t L_6 = V_2;
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_7 = SteamVR_Action_Skeleton_Source_get_bonePositions_mA0C01DDB9EAB9749BBBEDBCFF72582812AB9C195_inline(__this, /*hidden argument*/NULL);
		int32_t L_8 = V_2;
		NullCheck(L_7);
		int32_t L_9 = L_8;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_10 = (L_7)->GetAt(static_cast<il2cpp_array_size_t>(L_9));
		NullCheck(L_5);
		(L_5)->SetAt(static_cast<il2cpp_array_size_t>(L_6), (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 )L_10);
		// lastBoneRotations[boneIndex] = boneRotations[boneIndex];
		QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* L_11 = SteamVR_Action_Skeleton_Source_get_lastBoneRotations_m14A98028FB99C0404733364FFD3C187D2A53261C_inline(__this, /*hidden argument*/NULL);
		int32_t L_12 = V_2;
		QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* L_13 = SteamVR_Action_Skeleton_Source_get_boneRotations_mCD0B038517CA7A79945AD615082F05B25B0EDA20_inline(__this, /*hidden argument*/NULL);
		int32_t L_14 = V_2;
		NullCheck(L_13);
		int32_t L_15 = L_14;
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_16 = (L_13)->GetAt(static_cast<il2cpp_array_size_t>(L_15));
		NullCheck(L_11);
		(L_11)->SetAt(static_cast<il2cpp_array_size_t>(L_12), (Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 )L_16);
		// for (int boneIndex = 0; boneIndex < SteamVR_Action_Skeleton.numBones; boneIndex++)
		int32_t L_17 = V_2;
		V_2 = ((int32_t)il2cpp_codegen_add((int32_t)L_17, (int32_t)1));
	}

IL_006e:
	{
		// for (int boneIndex = 0; boneIndex < SteamVR_Action_Skeleton.numBones; boneIndex++)
		int32_t L_18 = V_2;
		V_3 = (bool)((((int32_t)L_18) < ((int32_t)((int32_t)31)))? 1 : 0);
		bool L_19 = V_3;
		if (L_19)
		{
			goto IL_0038;
		}
	}
	{
	}

IL_0078:
	{
		// for (int fingerIndex = 0; fingerIndex < SteamVR_Skeleton_FingerIndexes.enumArray.Length; fingerIndex++)
		V_4 = 0;
		goto IL_0097;
	}

IL_007d:
	{
		// lastFingerCurls[fingerIndex] = fingerCurls[fingerIndex];
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_20 = SteamVR_Action_Skeleton_Source_get_lastFingerCurls_m46C98882B5CB755BB4ADC367308E91D036E1896E_inline(__this, /*hidden argument*/NULL);
		int32_t L_21 = V_4;
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_22 = SteamVR_Action_Skeleton_Source_get_fingerCurls_m6E0B4235B8D2B15E1BBFD7634ECA591CC77A2732_inline(__this, /*hidden argument*/NULL);
		int32_t L_23 = V_4;
		NullCheck(L_22);
		int32_t L_24 = L_23;
		float L_25 = (L_22)->GetAt(static_cast<il2cpp_array_size_t>(L_24));
		NullCheck(L_20);
		(L_20)->SetAt(static_cast<il2cpp_array_size_t>(L_21), (float)L_25);
		// for (int fingerIndex = 0; fingerIndex < SteamVR_Skeleton_FingerIndexes.enumArray.Length; fingerIndex++)
		int32_t L_26 = V_4;
		V_4 = ((int32_t)il2cpp_codegen_add((int32_t)L_26, (int32_t)1));
	}

IL_0097:
	{
		// for (int fingerIndex = 0; fingerIndex < SteamVR_Skeleton_FingerIndexes.enumArray.Length; fingerIndex++)
		int32_t L_27 = V_4;
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Skeleton_FingerIndexes_t23102EBBB267071AC40CD07242EE4C746DC7F020_il2cpp_TypeInfo_var);
		SteamVR_Skeleton_FingerIndexEnumU5BU5D_t972F21E674536524E0BFB5F382CFD0ACA1714DB7* L_28 = ((SteamVR_Skeleton_FingerIndexes_t23102EBBB267071AC40CD07242EE4C746DC7F020_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Skeleton_FingerIndexes_t23102EBBB267071AC40CD07242EE4C746DC7F020_il2cpp_TypeInfo_var))->get_enumArray_5();
		NullCheck(L_28);
		V_5 = (bool)((((int32_t)L_27) < ((int32_t)(((int32_t)((int32_t)(((RuntimeArray*)L_28)->max_length))))))? 1 : 0);
		bool L_29 = V_5;
		if (L_29)
		{
			goto IL_007d;
		}
	}
	{
		// for (int fingerIndex = 0; fingerIndex < SteamVR_Skeleton_FingerSplayIndexes.enumArray.Length; fingerIndex++)
		V_6 = 0;
		goto IL_00c7;
	}

IL_00ad:
	{
		// lastFingerSplays[fingerIndex] = fingerSplays[fingerIndex];
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_30 = SteamVR_Action_Skeleton_Source_get_lastFingerSplays_m9DFC31F484BCD45399E9335EE8679CEC8150D3F4_inline(__this, /*hidden argument*/NULL);
		int32_t L_31 = V_6;
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_32 = SteamVR_Action_Skeleton_Source_get_fingerSplays_m21D8D0994518AF9B7532A558E5E39A81C29ADE11_inline(__this, /*hidden argument*/NULL);
		int32_t L_33 = V_6;
		NullCheck(L_32);
		int32_t L_34 = L_33;
		float L_35 = (L_32)->GetAt(static_cast<il2cpp_array_size_t>(L_34));
		NullCheck(L_30);
		(L_30)->SetAt(static_cast<il2cpp_array_size_t>(L_31), (float)L_35);
		// for (int fingerIndex = 0; fingerIndex < SteamVR_Skeleton_FingerSplayIndexes.enumArray.Length; fingerIndex++)
		int32_t L_36 = V_6;
		V_6 = ((int32_t)il2cpp_codegen_add((int32_t)L_36, (int32_t)1));
	}

IL_00c7:
	{
		// for (int fingerIndex = 0; fingerIndex < SteamVR_Skeleton_FingerSplayIndexes.enumArray.Length; fingerIndex++)
		int32_t L_37 = V_6;
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Skeleton_FingerSplayIndexes_t0141FA1AFC8CF87E917B728EEBBA9186F26D3246_il2cpp_TypeInfo_var);
		SteamVR_Skeleton_FingerSplayIndexEnumU5BU5D_t92DED5924CD2E6B494B9ABD5961F9BC65373A81B* L_38 = ((SteamVR_Skeleton_FingerSplayIndexes_t0141FA1AFC8CF87E917B728EEBBA9186F26D3246_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Skeleton_FingerSplayIndexes_t0141FA1AFC8CF87E917B728EEBBA9186F26D3246_il2cpp_TypeInfo_var))->get_enumArray_4();
		NullCheck(L_38);
		V_7 = (bool)((((int32_t)L_37) < ((int32_t)(((int32_t)((int32_t)(((RuntimeArray*)L_38)->max_length))))))? 1 : 0);
		bool L_39 = V_7;
		if (L_39)
		{
			goto IL_00ad;
		}
	}
	{
		// base.UpdateValue(true);
		SteamVR_Action_Pose_Source_UpdateValue_mC4B5455237B6CD71DD565F71267D8EB3AE3681F0(__this, (bool)1, /*hidden argument*/NULL);
		// poseChanged = changed;
		bool L_40 = VirtFuncInvoker0< bool >::Invoke(31 /* System.Boolean Valve.VR.SteamVR_Action_In_Source::get_changed() */, __this);
		SteamVR_Action_Skeleton_Source_set_poseChanged_m359037EAC8B53761892E89E13D0A1FCC31A222EC_inline(__this, L_40, /*hidden argument*/NULL);
		// EVRInputError error = OpenVR.Input.GetSkeletalActionData(handle, ref skeletonActionData, skeletonActionData_size);
		IL2CPP_RUNTIME_CLASS_INIT(OpenVR_t89189C917B539750153B18DDDCB4F7D9C8EF004D_il2cpp_TypeInfo_var);
		CVRInput_t8458E224B9D7EFD4A5B102EAA06F8F365A25A53A * L_41 = OpenVR_get_Input_mF290A715AD07D4B7F8844AA79293934B7999CE04(/*hidden argument*/NULL);
		uint64_t L_42 = SteamVR_Action_Source_get_handle_m66E0A3E9E7D6434FB905BF0D25013927B0C12791(__this, /*hidden argument*/NULL);
		InputSkeletalActionData_t_tD41850247EEE1858231B43C4B3EC2B5617140C26 * L_43 = __this->get_address_of_skeletonActionData_61();
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72_il2cpp_TypeInfo_var);
		uint32_t L_44 = ((SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72_il2cpp_TypeInfo_var))->get_skeletonActionData_size_36();
		NullCheck(L_41);
		int32_t L_45 = CVRInput_GetSkeletalActionData_mD08DD4FDBE1F6CCF87ACBB5DDC9B3C7C5FEA2BD9(L_41, L_42, (InputSkeletalActionData_t_tD41850247EEE1858231B43C4B3EC2B5617140C26 *)L_43, L_44, /*hidden argument*/NULL);
		V_0 = L_45;
		// if (error != EVRInputError.None)
		int32_t L_46 = V_0;
		V_8 = (bool)((!(((uint32_t)L_46) <= ((uint32_t)0)))? 1 : 0);
		bool L_47 = V_8;
		if (!L_47)
		{
			goto IL_016d;
		}
	}
	{
		// Debug.LogError("<b>[SteamVR]</b> GetSkeletalActionData error (" + fullPath + "): " + error.ToString() + " handle: " + handle.ToString());
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_48 = (StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E*)(StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E*)SZArrayNew(StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E_il2cpp_TypeInfo_var, (uint32_t)6);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_49 = L_48;
		NullCheck(L_49);
		ArrayElementTypeCheck (L_49, _stringLiteralA98667A476D022EB9B2CF25800415760BE586401);
		(L_49)->SetAt(static_cast<il2cpp_array_size_t>(0), (String_t*)_stringLiteralA98667A476D022EB9B2CF25800415760BE586401);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_50 = L_49;
		String_t* L_51 = SteamVR_Action_Source_get_fullPath_m9D3700AC3EB06210A52EDA613F1523A48F0A1B81(__this, /*hidden argument*/NULL);
		NullCheck(L_50);
		ArrayElementTypeCheck (L_50, L_51);
		(L_50)->SetAt(static_cast<il2cpp_array_size_t>(1), (String_t*)L_51);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_52 = L_50;
		NullCheck(L_52);
		ArrayElementTypeCheck (L_52, _stringLiteralE6D56E05F32996CA7E5AE21BC90D49044C0BF356);
		(L_52)->SetAt(static_cast<il2cpp_array_size_t>(2), (String_t*)_stringLiteralE6D56E05F32996CA7E5AE21BC90D49044C0BF356);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_53 = L_52;
		RuntimeObject * L_54 = Box(EVRInputError_tE4C895A0D1F18C0024F5C180FF3962B056DA8A71_il2cpp_TypeInfo_var, (&V_0));
		NullCheck(L_54);
		String_t* L_55 = VirtFuncInvoker0< String_t* >::Invoke(3 /* System.String System.Object::ToString() */, L_54);
		V_0 = *(int32_t*)UnBox(L_54);
		NullCheck(L_53);
		ArrayElementTypeCheck (L_53, L_55);
		(L_53)->SetAt(static_cast<il2cpp_array_size_t>(3), (String_t*)L_55);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_56 = L_53;
		NullCheck(L_56);
		ArrayElementTypeCheck (L_56, _stringLiteral18B39452A606090B97AA8D84240CC83BE3E5D62B);
		(L_56)->SetAt(static_cast<il2cpp_array_size_t>(4), (String_t*)_stringLiteral18B39452A606090B97AA8D84240CC83BE3E5D62B);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_57 = L_56;
		uint64_t L_58 = SteamVR_Action_Source_get_handle_m66E0A3E9E7D6434FB905BF0D25013927B0C12791(__this, /*hidden argument*/NULL);
		V_9 = L_58;
		String_t* L_59 = UInt64_ToString_mF0E40B7459C207B89A1C8C04CE7F183AC0E6D672((uint64_t*)(&V_9), /*hidden argument*/NULL);
		NullCheck(L_57);
		ArrayElementTypeCheck (L_57, L_59);
		(L_57)->SetAt(static_cast<il2cpp_array_size_t>(5), (String_t*)L_59);
		String_t* L_60 = String_Concat_m232E857CA5107EA6AC52E7DD7018716C021F237B(L_57, /*hidden argument*/NULL);
		IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
		Debug_LogError_m3BCF9B78263152261565DCA9DB7D55F0C391ED29(L_60, /*hidden argument*/NULL);
		// return;
		goto IL_045e;
	}

IL_016d:
	{
		// if (active)
		bool L_61 = VirtFuncInvoker0< bool >::Invoke(12 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_active() */, __this);
		V_10 = L_61;
		bool L_62 = V_10;
		if (!L_62)
		{
			goto IL_038a;
		}
	}
	{
		// if (onlyUpdateSummaryData == false)
		bool L_63 = SteamVR_Action_Skeleton_Source_get_onlyUpdateSummaryData_m3F489169E6CE022F5E46CB1D3B6EB910564C8A9A_inline(__this, /*hidden argument*/NULL);
		V_11 = (bool)((((int32_t)L_63) == ((int32_t)0))? 1 : 0);
		bool L_64 = V_11;
		if (!L_64)
		{
			goto IL_037b;
		}
	}
	{
		// error = OpenVR.Input.GetSkeletalBoneData(handle, skeletalTransformSpace, rangeOfMotion, tempBoneTransforms);
		IL2CPP_RUNTIME_CLASS_INIT(OpenVR_t89189C917B539750153B18DDDCB4F7D9C8EF004D_il2cpp_TypeInfo_var);
		CVRInput_t8458E224B9D7EFD4A5B102EAA06F8F365A25A53A * L_65 = OpenVR_get_Input_mF290A715AD07D4B7F8844AA79293934B7999CE04(/*hidden argument*/NULL);
		uint64_t L_66 = SteamVR_Action_Source_get_handle_m66E0A3E9E7D6434FB905BF0D25013927B0C12791(__this, /*hidden argument*/NULL);
		int32_t L_67 = SteamVR_Action_Skeleton_Source_get_skeletalTransformSpace_m581268DA5BEE1B2F2315A38319F75E7241F5BB21_inline(__this, /*hidden argument*/NULL);
		int32_t L_68 = SteamVR_Action_Skeleton_Source_get_rangeOfMotion_m3698046C051B2375EA956A3BDFE1BB6CA28AAD4E_inline(__this, /*hidden argument*/NULL);
		VRBoneTransform_tU5BU5D_tB5FDD0831D295612D4381D2F2D8805367FAF83F8* L_69 = __this->get_tempBoneTransforms_60();
		NullCheck(L_65);
		int32_t L_70 = CVRInput_GetSkeletalBoneData_m3008E4A3FBB4A3C03948F1EC5C54FC314399F112(L_65, L_66, L_67, L_68, L_69, /*hidden argument*/NULL);
		V_0 = L_70;
		// if (error != EVRInputError.None)
		int32_t L_71 = V_0;
		V_12 = (bool)((!(((uint32_t)L_71) <= ((uint32_t)0)))? 1 : 0);
		bool L_72 = V_12;
		if (!L_72)
		{
			goto IL_0211;
		}
	}
	{
		// Debug.LogError("<b>[SteamVR]</b> GetSkeletalBoneData error (" + fullPath + "): " + error.ToString() + " handle: " + handle.ToString());
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_73 = (StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E*)(StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E*)SZArrayNew(StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E_il2cpp_TypeInfo_var, (uint32_t)6);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_74 = L_73;
		NullCheck(L_74);
		ArrayElementTypeCheck (L_74, _stringLiteralAD66C391DC6C51CA381EB74E3DAFDAF54D01F3C2);
		(L_74)->SetAt(static_cast<il2cpp_array_size_t>(0), (String_t*)_stringLiteralAD66C391DC6C51CA381EB74E3DAFDAF54D01F3C2);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_75 = L_74;
		String_t* L_76 = SteamVR_Action_Source_get_fullPath_m9D3700AC3EB06210A52EDA613F1523A48F0A1B81(__this, /*hidden argument*/NULL);
		NullCheck(L_75);
		ArrayElementTypeCheck (L_75, L_76);
		(L_75)->SetAt(static_cast<il2cpp_array_size_t>(1), (String_t*)L_76);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_77 = L_75;
		NullCheck(L_77);
		ArrayElementTypeCheck (L_77, _stringLiteralE6D56E05F32996CA7E5AE21BC90D49044C0BF356);
		(L_77)->SetAt(static_cast<il2cpp_array_size_t>(2), (String_t*)_stringLiteralE6D56E05F32996CA7E5AE21BC90D49044C0BF356);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_78 = L_77;
		RuntimeObject * L_79 = Box(EVRInputError_tE4C895A0D1F18C0024F5C180FF3962B056DA8A71_il2cpp_TypeInfo_var, (&V_0));
		NullCheck(L_79);
		String_t* L_80 = VirtFuncInvoker0< String_t* >::Invoke(3 /* System.String System.Object::ToString() */, L_79);
		V_0 = *(int32_t*)UnBox(L_79);
		NullCheck(L_78);
		ArrayElementTypeCheck (L_78, L_80);
		(L_78)->SetAt(static_cast<il2cpp_array_size_t>(3), (String_t*)L_80);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_81 = L_78;
		NullCheck(L_81);
		ArrayElementTypeCheck (L_81, _stringLiteral18B39452A606090B97AA8D84240CC83BE3E5D62B);
		(L_81)->SetAt(static_cast<il2cpp_array_size_t>(4), (String_t*)_stringLiteral18B39452A606090B97AA8D84240CC83BE3E5D62B);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_82 = L_81;
		uint64_t L_83 = SteamVR_Action_Source_get_handle_m66E0A3E9E7D6434FB905BF0D25013927B0C12791(__this, /*hidden argument*/NULL);
		V_9 = L_83;
		String_t* L_84 = UInt64_ToString_mF0E40B7459C207B89A1C8C04CE7F183AC0E6D672((uint64_t*)(&V_9), /*hidden argument*/NULL);
		NullCheck(L_82);
		ArrayElementTypeCheck (L_82, L_84);
		(L_82)->SetAt(static_cast<il2cpp_array_size_t>(5), (String_t*)L_84);
		String_t* L_85 = String_Concat_m232E857CA5107EA6AC52E7DD7018716C021F237B(L_82, /*hidden argument*/NULL);
		IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
		Debug_LogError_m3BCF9B78263152261565DCA9DB7D55F0C391ED29(L_85, /*hidden argument*/NULL);
	}

IL_0211:
	{
		// for (int boneIndex = 0; boneIndex < tempBoneTransforms.Length; boneIndex++)
		V_13 = 0;
		goto IL_0343;
	}

IL_0219:
	{
		// bonePositions[boneIndex].x = -tempBoneTransforms[boneIndex].position.v0;
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_86 = SteamVR_Action_Skeleton_Source_get_bonePositions_mA0C01DDB9EAB9749BBBEDBCFF72582812AB9C195_inline(__this, /*hidden argument*/NULL);
		int32_t L_87 = V_13;
		NullCheck(L_86);
		VRBoneTransform_tU5BU5D_tB5FDD0831D295612D4381D2F2D8805367FAF83F8* L_88 = __this->get_tempBoneTransforms_60();
		int32_t L_89 = V_13;
		NullCheck(L_88);
		HmdVector4_t_tBA2A305DD2E705FAAC9CC5D2FD13B64202A381F3 * L_90 = ((L_88)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_89)))->get_address_of_position_0();
		float L_91 = L_90->get_v0_0();
		((L_86)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_87)))->set_x_2(((-L_91)));
		// bonePositions[boneIndex].y = tempBoneTransforms[boneIndex].position.v1;
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_92 = SteamVR_Action_Skeleton_Source_get_bonePositions_mA0C01DDB9EAB9749BBBEDBCFF72582812AB9C195_inline(__this, /*hidden argument*/NULL);
		int32_t L_93 = V_13;
		NullCheck(L_92);
		VRBoneTransform_tU5BU5D_tB5FDD0831D295612D4381D2F2D8805367FAF83F8* L_94 = __this->get_tempBoneTransforms_60();
		int32_t L_95 = V_13;
		NullCheck(L_94);
		HmdVector4_t_tBA2A305DD2E705FAAC9CC5D2FD13B64202A381F3 * L_96 = ((L_94)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_95)))->get_address_of_position_0();
		float L_97 = L_96->get_v1_1();
		((L_92)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_93)))->set_y_3(L_97);
		// bonePositions[boneIndex].z = tempBoneTransforms[boneIndex].position.v2;
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_98 = SteamVR_Action_Skeleton_Source_get_bonePositions_mA0C01DDB9EAB9749BBBEDBCFF72582812AB9C195_inline(__this, /*hidden argument*/NULL);
		int32_t L_99 = V_13;
		NullCheck(L_98);
		VRBoneTransform_tU5BU5D_tB5FDD0831D295612D4381D2F2D8805367FAF83F8* L_100 = __this->get_tempBoneTransforms_60();
		int32_t L_101 = V_13;
		NullCheck(L_100);
		HmdVector4_t_tBA2A305DD2E705FAAC9CC5D2FD13B64202A381F3 * L_102 = ((L_100)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_101)))->get_address_of_position_0();
		float L_103 = L_102->get_v2_2();
		((L_98)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_99)))->set_z_4(L_103);
		// boneRotations[boneIndex].x = tempBoneTransforms[boneIndex].orientation.x;
		QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* L_104 = SteamVR_Action_Skeleton_Source_get_boneRotations_mCD0B038517CA7A79945AD615082F05B25B0EDA20_inline(__this, /*hidden argument*/NULL);
		int32_t L_105 = V_13;
		NullCheck(L_104);
		VRBoneTransform_tU5BU5D_tB5FDD0831D295612D4381D2F2D8805367FAF83F8* L_106 = __this->get_tempBoneTransforms_60();
		int32_t L_107 = V_13;
		NullCheck(L_106);
		HmdQuaternionf_t_tCE0ACBA93E70AA544844617F487F6A634A9E4A70 * L_108 = ((L_106)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_107)))->get_address_of_orientation_1();
		float L_109 = L_108->get_x_1();
		((L_104)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_105)))->set_x_0(L_109);
		// boneRotations[boneIndex].y = -tempBoneTransforms[boneIndex].orientation.y;
		QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* L_110 = SteamVR_Action_Skeleton_Source_get_boneRotations_mCD0B038517CA7A79945AD615082F05B25B0EDA20_inline(__this, /*hidden argument*/NULL);
		int32_t L_111 = V_13;
		NullCheck(L_110);
		VRBoneTransform_tU5BU5D_tB5FDD0831D295612D4381D2F2D8805367FAF83F8* L_112 = __this->get_tempBoneTransforms_60();
		int32_t L_113 = V_13;
		NullCheck(L_112);
		HmdQuaternionf_t_tCE0ACBA93E70AA544844617F487F6A634A9E4A70 * L_114 = ((L_112)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_113)))->get_address_of_orientation_1();
		float L_115 = L_114->get_y_2();
		((L_110)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_111)))->set_y_1(((-L_115)));
		// boneRotations[boneIndex].z = -tempBoneTransforms[boneIndex].orientation.z;
		QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* L_116 = SteamVR_Action_Skeleton_Source_get_boneRotations_mCD0B038517CA7A79945AD615082F05B25B0EDA20_inline(__this, /*hidden argument*/NULL);
		int32_t L_117 = V_13;
		NullCheck(L_116);
		VRBoneTransform_tU5BU5D_tB5FDD0831D295612D4381D2F2D8805367FAF83F8* L_118 = __this->get_tempBoneTransforms_60();
		int32_t L_119 = V_13;
		NullCheck(L_118);
		HmdQuaternionf_t_tCE0ACBA93E70AA544844617F487F6A634A9E4A70 * L_120 = ((L_118)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_119)))->get_address_of_orientation_1();
		float L_121 = L_120->get_z_3();
		((L_116)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_117)))->set_z_2(((-L_121)));
		// boneRotations[boneIndex].w = tempBoneTransforms[boneIndex].orientation.w;
		QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* L_122 = SteamVR_Action_Skeleton_Source_get_boneRotations_mCD0B038517CA7A79945AD615082F05B25B0EDA20_inline(__this, /*hidden argument*/NULL);
		int32_t L_123 = V_13;
		NullCheck(L_122);
		VRBoneTransform_tU5BU5D_tB5FDD0831D295612D4381D2F2D8805367FAF83F8* L_124 = __this->get_tempBoneTransforms_60();
		int32_t L_125 = V_13;
		NullCheck(L_124);
		HmdQuaternionf_t_tCE0ACBA93E70AA544844617F487F6A634A9E4A70 * L_126 = ((L_124)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_125)))->get_address_of_orientation_1();
		float L_127 = L_126->get_w_0();
		((L_122)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_123)))->set_w_3(L_127);
		// for (int boneIndex = 0; boneIndex < tempBoneTransforms.Length; boneIndex++)
		int32_t L_128 = V_13;
		V_13 = ((int32_t)il2cpp_codegen_add((int32_t)L_128, (int32_t)1));
	}

IL_0343:
	{
		// for (int boneIndex = 0; boneIndex < tempBoneTransforms.Length; boneIndex++)
		int32_t L_129 = V_13;
		VRBoneTransform_tU5BU5D_tB5FDD0831D295612D4381D2F2D8805367FAF83F8* L_130 = __this->get_tempBoneTransforms_60();
		NullCheck(L_130);
		V_14 = (bool)((((int32_t)L_129) < ((int32_t)(((int32_t)((int32_t)(((RuntimeArray*)L_130)->max_length))))))? 1 : 0);
		bool L_131 = V_14;
		if (L_131)
		{
			goto IL_0219;
		}
	}
	{
		// boneRotations[0] = SteamVR_Action_Skeleton.steamVRFixUpRotation * boneRotations[0];
		QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* L_132 = SteamVR_Action_Skeleton_Source_get_boneRotations_mCD0B038517CA7A79945AD615082F05B25B0EDA20_inline(__this, /*hidden argument*/NULL);
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504_il2cpp_TypeInfo_var);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_133 = ((SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504_il2cpp_TypeInfo_var))->get_steamVRFixUpRotation_7();
		QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* L_134 = SteamVR_Action_Skeleton_Source_get_boneRotations_mCD0B038517CA7A79945AD615082F05B25B0EDA20_inline(__this, /*hidden argument*/NULL);
		NullCheck(L_134);
		int32_t L_135 = 0;
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_136 = (L_134)->GetAt(static_cast<il2cpp_array_size_t>(L_135));
		IL2CPP_RUNTIME_CLASS_INIT(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357_il2cpp_TypeInfo_var);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_137 = Quaternion_op_Multiply_mDB9F738AA8160E3D85549F4FEDA23BC658B5A790(L_133, L_136, /*hidden argument*/NULL);
		NullCheck(L_132);
		(L_132)->SetAt(static_cast<il2cpp_array_size_t>(0), (Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 )L_137);
	}

IL_037b:
	{
		// UpdateSkeletalSummaryData(summaryDataType, true);
		int32_t L_138 = SteamVR_Action_Skeleton_Source_get_summaryDataType_m99C31EEF6D6E87C035887DE8640DC37C07D2CA79_inline(__this, /*hidden argument*/NULL);
		SteamVR_Action_Skeleton_Source_UpdateSkeletalSummaryData_m5649DAF4900617BF2B608028C8382A7A22A1F41E(__this, L_138, (bool)1, /*hidden argument*/NULL);
	}

IL_038a:
	{
		// if (changed == false)
		bool L_139 = VirtFuncInvoker0< bool >::Invoke(31 /* System.Boolean Valve.VR.SteamVR_Action_In_Source::get_changed() */, __this);
		V_15 = (bool)((((int32_t)L_139) == ((int32_t)0))? 1 : 0);
		bool L_140 = V_15;
		if (!L_140)
		{
			goto IL_0435;
		}
	}
	{
		// for (int boneIndex = 0; boneIndex < tempBoneTransforms.Length; boneIndex++)
		V_16 = 0;
		goto IL_041f;
	}

IL_03a2:
	{
		// if (Vector3.Distance(lastBonePositions[boneIndex], bonePositions[boneIndex]) > changeTolerance)
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_141 = SteamVR_Action_Skeleton_Source_get_lastBonePositions_m99D1C7B8A05E646777AC85CFC0ED2FF0953C3AB9_inline(__this, /*hidden argument*/NULL);
		int32_t L_142 = V_16;
		NullCheck(L_141);
		int32_t L_143 = L_142;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_144 = (L_141)->GetAt(static_cast<il2cpp_array_size_t>(L_143));
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_145 = SteamVR_Action_Skeleton_Source_get_bonePositions_mA0C01DDB9EAB9749BBBEDBCFF72582812AB9C195_inline(__this, /*hidden argument*/NULL);
		int32_t L_146 = V_16;
		NullCheck(L_145);
		int32_t L_147 = L_146;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_148 = (L_145)->GetAt(static_cast<il2cpp_array_size_t>(L_147));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		float L_149 = Vector3_Distance_mE316E10B9B319A5C2A29F86E028740FD528149E7(L_144, L_148, /*hidden argument*/NULL);
		float L_150 = ((SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 *)__this)->get_changeTolerance_12();
		V_17 = (bool)((((float)L_149) > ((float)L_150))? 1 : 0);
		bool L_151 = V_17;
		if (!L_151)
		{
			goto IL_03db;
		}
	}
	{
		// changed = true;
		VirtActionInvoker1< bool >::Invoke(32 /* System.Void Valve.VR.SteamVR_Action_In_Source::set_changed(System.Boolean) */, __this, (bool)1);
		// break;
		goto IL_0434;
	}

IL_03db:
	{
		// if (Mathf.Abs(Quaternion.Angle(lastBoneRotations[boneIndex], boneRotations[boneIndex])) > changeTolerance)
		QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* L_152 = SteamVR_Action_Skeleton_Source_get_lastBoneRotations_m14A98028FB99C0404733364FFD3C187D2A53261C_inline(__this, /*hidden argument*/NULL);
		int32_t L_153 = V_16;
		NullCheck(L_152);
		int32_t L_154 = L_153;
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_155 = (L_152)->GetAt(static_cast<il2cpp_array_size_t>(L_154));
		QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* L_156 = SteamVR_Action_Skeleton_Source_get_boneRotations_mCD0B038517CA7A79945AD615082F05B25B0EDA20_inline(__this, /*hidden argument*/NULL);
		int32_t L_157 = V_16;
		NullCheck(L_156);
		int32_t L_158 = L_157;
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_159 = (L_156)->GetAt(static_cast<il2cpp_array_size_t>(L_158));
		IL2CPP_RUNTIME_CLASS_INIT(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357_il2cpp_TypeInfo_var);
		float L_160 = Quaternion_Angle_m09599D660B724D330E5C7FE2FB1C8716161B3DD1(L_155, L_159, /*hidden argument*/NULL);
		IL2CPP_RUNTIME_CLASS_INIT(Mathf_tFBDE6467D269BFE410605C7D806FD9991D4A89CB_il2cpp_TypeInfo_var);
		float L_161 = fabsf(L_160);
		float L_162 = ((SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 *)__this)->get_changeTolerance_12();
		V_18 = (bool)((((float)L_161) > ((float)L_162))? 1 : 0);
		bool L_163 = V_18;
		if (!L_163)
		{
			goto IL_0418;
		}
	}
	{
		// changed = true;
		VirtActionInvoker1< bool >::Invoke(32 /* System.Void Valve.VR.SteamVR_Action_In_Source::set_changed(System.Boolean) */, __this, (bool)1);
		// break;
		goto IL_0434;
	}

IL_0418:
	{
		// for (int boneIndex = 0; boneIndex < tempBoneTransforms.Length; boneIndex++)
		int32_t L_164 = V_16;
		V_16 = ((int32_t)il2cpp_codegen_add((int32_t)L_164, (int32_t)1));
	}

IL_041f:
	{
		// for (int boneIndex = 0; boneIndex < tempBoneTransforms.Length; boneIndex++)
		int32_t L_165 = V_16;
		VRBoneTransform_tU5BU5D_tB5FDD0831D295612D4381D2F2D8805367FAF83F8* L_166 = __this->get_tempBoneTransforms_60();
		NullCheck(L_166);
		V_19 = (bool)((((int32_t)L_165) < ((int32_t)(((int32_t)((int32_t)(((RuntimeArray*)L_166)->max_length))))))? 1 : 0);
		bool L_167 = V_19;
		if (L_167)
		{
			goto IL_03a2;
		}
	}

IL_0434:
	{
	}

IL_0435:
	{
		// if (changed)
		bool L_168 = VirtFuncInvoker0< bool >::Invoke(31 /* System.Boolean Valve.VR.SteamVR_Action_In_Source::get_changed() */, __this);
		V_20 = L_168;
		bool L_169 = V_20;
		if (!L_169)
		{
			goto IL_044d;
		}
	}
	{
		// changedTime = Time.realtimeSinceStartup;
		float L_170 = Time_get_realtimeSinceStartup_mCA1086EC9DFCF135F77BC46D3B7127711EA3DE03(/*hidden argument*/NULL);
		SteamVR_Action_In_Source_set_changedTime_m68F47645CA38A2261F0694F61E3756788CFAE750_inline(__this, L_170, /*hidden argument*/NULL);
	}

IL_044d:
	{
		// if (skipStateAndEventUpdates == false)
		bool L_171 = ___skipStateAndEventUpdates0;
		V_21 = (bool)((((int32_t)L_171) == ((int32_t)0))? 1 : 0);
		bool L_172 = V_21;
		if (!L_172)
		{
			goto IL_045e;
		}
	}
	{
		// CheckAndSendEvents();
		VirtActionInvoker0::Invoke(52 /* System.Void Valve.VR.SteamVR_Action_Pose_Source::CheckAndSendEvents() */, __this);
	}

IL_045e:
	{
		// }
		return;
	}
}
// System.Int32 Valve.VR.SteamVR_Action_Skeleton_Source::get_boneCount()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t SteamVR_Action_Skeleton_Source_get_boneCount_m5344AA8CD1F0418967470D4A9B1998B64DA95CB3 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	int32_t V_0 = 0;
	{
		// public int boneCount { get { return (int)GetBoneCount(); } }
		uint32_t L_0 = SteamVR_Action_Skeleton_Source_GetBoneCount_m3049CC9D5CB2C3913C467D136B8C6A9CDAAC8148(__this, /*hidden argument*/NULL);
		V_0 = L_0;
		goto IL_000a;
	}

IL_000a:
	{
		// public int boneCount { get { return (int)GetBoneCount(); } }
		int32_t L_1 = V_0;
		return L_1;
	}
}
// System.UInt32 Valve.VR.SteamVR_Action_Skeleton_Source::GetBoneCount()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR uint32_t SteamVR_Action_Skeleton_Source_GetBoneCount_m3049CC9D5CB2C3913C467D136B8C6A9CDAAC8148 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_Source_GetBoneCount_m3049CC9D5CB2C3913C467D136B8C6A9CDAAC8148_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	uint32_t V_0 = 0;
	int32_t V_1 = 0;
	bool V_2 = false;
	uint64_t V_3 = 0;
	uint32_t V_4 = 0;
	{
		// uint boneCount = 0;
		V_0 = 0;
		// EVRInputError error = OpenVR.Input.GetBoneCount(handle, ref boneCount);
		IL2CPP_RUNTIME_CLASS_INIT(OpenVR_t89189C917B539750153B18DDDCB4F7D9C8EF004D_il2cpp_TypeInfo_var);
		CVRInput_t8458E224B9D7EFD4A5B102EAA06F8F365A25A53A * L_0 = OpenVR_get_Input_mF290A715AD07D4B7F8844AA79293934B7999CE04(/*hidden argument*/NULL);
		uint64_t L_1 = SteamVR_Action_Source_get_handle_m66E0A3E9E7D6434FB905BF0D25013927B0C12791(__this, /*hidden argument*/NULL);
		NullCheck(L_0);
		int32_t L_2 = CVRInput_GetBoneCount_m8EB7B9FA9695F9D7D48ACE6C9FEBC27B0D0D6F7B(L_0, L_1, (uint32_t*)(&V_0), /*hidden argument*/NULL);
		V_1 = L_2;
		// if (error != EVRInputError.None)
		int32_t L_3 = V_1;
		V_2 = (bool)((!(((uint32_t)L_3) <= ((uint32_t)0)))? 1 : 0);
		bool L_4 = V_2;
		if (!L_4)
		{
			goto IL_0071;
		}
	}
	{
		// Debug.LogError("<b>[SteamVR]</b> GetBoneCount error (" + fullPath + "): " + error.ToString() + " handle: " + handle.ToString());
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_5 = (StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E*)(StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E*)SZArrayNew(StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E_il2cpp_TypeInfo_var, (uint32_t)6);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_6 = L_5;
		NullCheck(L_6);
		ArrayElementTypeCheck (L_6, _stringLiteral74FBFA22F0AC7FDD2F060A9187A8A74078A10F16);
		(L_6)->SetAt(static_cast<il2cpp_array_size_t>(0), (String_t*)_stringLiteral74FBFA22F0AC7FDD2F060A9187A8A74078A10F16);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_7 = L_6;
		String_t* L_8 = SteamVR_Action_Source_get_fullPath_m9D3700AC3EB06210A52EDA613F1523A48F0A1B81(__this, /*hidden argument*/NULL);
		NullCheck(L_7);
		ArrayElementTypeCheck (L_7, L_8);
		(L_7)->SetAt(static_cast<il2cpp_array_size_t>(1), (String_t*)L_8);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_9 = L_7;
		NullCheck(L_9);
		ArrayElementTypeCheck (L_9, _stringLiteralE6D56E05F32996CA7E5AE21BC90D49044C0BF356);
		(L_9)->SetAt(static_cast<il2cpp_array_size_t>(2), (String_t*)_stringLiteralE6D56E05F32996CA7E5AE21BC90D49044C0BF356);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_10 = L_9;
		RuntimeObject * L_11 = Box(EVRInputError_tE4C895A0D1F18C0024F5C180FF3962B056DA8A71_il2cpp_TypeInfo_var, (&V_1));
		NullCheck(L_11);
		String_t* L_12 = VirtFuncInvoker0< String_t* >::Invoke(3 /* System.String System.Object::ToString() */, L_11);
		V_1 = *(int32_t*)UnBox(L_11);
		NullCheck(L_10);
		ArrayElementTypeCheck (L_10, L_12);
		(L_10)->SetAt(static_cast<il2cpp_array_size_t>(3), (String_t*)L_12);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_13 = L_10;
		NullCheck(L_13);
		ArrayElementTypeCheck (L_13, _stringLiteral18B39452A606090B97AA8D84240CC83BE3E5D62B);
		(L_13)->SetAt(static_cast<il2cpp_array_size_t>(4), (String_t*)_stringLiteral18B39452A606090B97AA8D84240CC83BE3E5D62B);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_14 = L_13;
		uint64_t L_15 = SteamVR_Action_Source_get_handle_m66E0A3E9E7D6434FB905BF0D25013927B0C12791(__this, /*hidden argument*/NULL);
		V_3 = L_15;
		String_t* L_16 = UInt64_ToString_mF0E40B7459C207B89A1C8C04CE7F183AC0E6D672((uint64_t*)(&V_3), /*hidden argument*/NULL);
		NullCheck(L_14);
		ArrayElementTypeCheck (L_14, L_16);
		(L_14)->SetAt(static_cast<il2cpp_array_size_t>(5), (String_t*)L_16);
		String_t* L_17 = String_Concat_m232E857CA5107EA6AC52E7DD7018716C021F237B(L_14, /*hidden argument*/NULL);
		IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
		Debug_LogError_m3BCF9B78263152261565DCA9DB7D55F0C391ED29(L_17, /*hidden argument*/NULL);
	}

IL_0071:
	{
		// return boneCount;
		uint32_t L_18 = V_0;
		V_4 = L_18;
		goto IL_0076;
	}

IL_0076:
	{
		// }
		uint32_t L_19 = V_4;
		return L_19;
	}
}
// System.Int32[] Valve.VR.SteamVR_Action_Skeleton_Source::get_boneHierarchy()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* SteamVR_Action_Skeleton_Source_get_boneHierarchy_mF4338EC5D815552326E76B1E4C1205EA9C29AEC8 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* V_0 = NULL;
	{
		// public int[] boneHierarchy { get { return GetBoneHierarchy(); } }
		Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* L_0 = SteamVR_Action_Skeleton_Source_GetBoneHierarchy_mC62033C6184EC1DDE31051D1F167683E8D842445(__this, /*hidden argument*/NULL);
		V_0 = L_0;
		goto IL_000a;
	}

IL_000a:
	{
		// public int[] boneHierarchy { get { return GetBoneHierarchy(); } }
		Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* L_1 = V_0;
		return L_1;
	}
}
// System.Int32[] Valve.VR.SteamVR_Action_Skeleton_Source::GetBoneHierarchy()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* SteamVR_Action_Skeleton_Source_GetBoneHierarchy_mC62033C6184EC1DDE31051D1F167683E8D842445 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_Source_GetBoneHierarchy_mC62033C6184EC1DDE31051D1F167683E8D842445_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* V_1 = NULL;
	int32_t V_2 = 0;
	bool V_3 = false;
	uint64_t V_4 = 0;
	Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* V_5 = NULL;
	{
		// int boneCount = (int)GetBoneCount();
		uint32_t L_0 = SteamVR_Action_Skeleton_Source_GetBoneCount_m3049CC9D5CB2C3913C467D136B8C6A9CDAAC8148(__this, /*hidden argument*/NULL);
		V_0 = L_0;
		// int[] parentIndicies = new int[boneCount];
		int32_t L_1 = V_0;
		Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* L_2 = (Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83*)(Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83*)SZArrayNew(Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83_il2cpp_TypeInfo_var, (uint32_t)L_1);
		V_1 = L_2;
		// EVRInputError error = OpenVR.Input.GetBoneHierarchy(handle, parentIndicies);
		IL2CPP_RUNTIME_CLASS_INIT(OpenVR_t89189C917B539750153B18DDDCB4F7D9C8EF004D_il2cpp_TypeInfo_var);
		CVRInput_t8458E224B9D7EFD4A5B102EAA06F8F365A25A53A * L_3 = OpenVR_get_Input_mF290A715AD07D4B7F8844AA79293934B7999CE04(/*hidden argument*/NULL);
		uint64_t L_4 = SteamVR_Action_Source_get_handle_m66E0A3E9E7D6434FB905BF0D25013927B0C12791(__this, /*hidden argument*/NULL);
		Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* L_5 = V_1;
		NullCheck(L_3);
		int32_t L_6 = CVRInput_GetBoneHierarchy_mBDD91998A6017809EFA6B91E8F6DC726974D2E0D(L_3, L_4, L_5, /*hidden argument*/NULL);
		V_2 = L_6;
		// if (error != EVRInputError.None)
		int32_t L_7 = V_2;
		V_3 = (bool)((!(((uint32_t)L_7) <= ((uint32_t)0)))? 1 : 0);
		bool L_8 = V_3;
		if (!L_8)
		{
			goto IL_007d;
		}
	}
	{
		// Debug.LogError("<b>[SteamVR]</b> GetBoneHierarchy error (" + fullPath + "): " + error.ToString() + " handle: " + handle.ToString());
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_9 = (StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E*)(StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E*)SZArrayNew(StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E_il2cpp_TypeInfo_var, (uint32_t)6);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_10 = L_9;
		NullCheck(L_10);
		ArrayElementTypeCheck (L_10, _stringLiteral973389CC7163D5EF9A40BE4685E4E55B5CBBC66F);
		(L_10)->SetAt(static_cast<il2cpp_array_size_t>(0), (String_t*)_stringLiteral973389CC7163D5EF9A40BE4685E4E55B5CBBC66F);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_11 = L_10;
		String_t* L_12 = SteamVR_Action_Source_get_fullPath_m9D3700AC3EB06210A52EDA613F1523A48F0A1B81(__this, /*hidden argument*/NULL);
		NullCheck(L_11);
		ArrayElementTypeCheck (L_11, L_12);
		(L_11)->SetAt(static_cast<il2cpp_array_size_t>(1), (String_t*)L_12);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_13 = L_11;
		NullCheck(L_13);
		ArrayElementTypeCheck (L_13, _stringLiteralE6D56E05F32996CA7E5AE21BC90D49044C0BF356);
		(L_13)->SetAt(static_cast<il2cpp_array_size_t>(2), (String_t*)_stringLiteralE6D56E05F32996CA7E5AE21BC90D49044C0BF356);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_14 = L_13;
		RuntimeObject * L_15 = Box(EVRInputError_tE4C895A0D1F18C0024F5C180FF3962B056DA8A71_il2cpp_TypeInfo_var, (&V_2));
		NullCheck(L_15);
		String_t* L_16 = VirtFuncInvoker0< String_t* >::Invoke(3 /* System.String System.Object::ToString() */, L_15);
		V_2 = *(int32_t*)UnBox(L_15);
		NullCheck(L_14);
		ArrayElementTypeCheck (L_14, L_16);
		(L_14)->SetAt(static_cast<il2cpp_array_size_t>(3), (String_t*)L_16);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_17 = L_14;
		NullCheck(L_17);
		ArrayElementTypeCheck (L_17, _stringLiteral18B39452A606090B97AA8D84240CC83BE3E5D62B);
		(L_17)->SetAt(static_cast<il2cpp_array_size_t>(4), (String_t*)_stringLiteral18B39452A606090B97AA8D84240CC83BE3E5D62B);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_18 = L_17;
		uint64_t L_19 = SteamVR_Action_Source_get_handle_m66E0A3E9E7D6434FB905BF0D25013927B0C12791(__this, /*hidden argument*/NULL);
		V_4 = L_19;
		String_t* L_20 = UInt64_ToString_mF0E40B7459C207B89A1C8C04CE7F183AC0E6D672((uint64_t*)(&V_4), /*hidden argument*/NULL);
		NullCheck(L_18);
		ArrayElementTypeCheck (L_18, L_20);
		(L_18)->SetAt(static_cast<il2cpp_array_size_t>(5), (String_t*)L_20);
		String_t* L_21 = String_Concat_m232E857CA5107EA6AC52E7DD7018716C021F237B(L_18, /*hidden argument*/NULL);
		IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
		Debug_LogError_m3BCF9B78263152261565DCA9DB7D55F0C391ED29(L_21, /*hidden argument*/NULL);
	}

IL_007d:
	{
		// return parentIndicies;
		Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* L_22 = V_1;
		V_5 = L_22;
		goto IL_0082;
	}

IL_0082:
	{
		// }
		Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* L_23 = V_5;
		return L_23;
	}
}
// System.String Valve.VR.SteamVR_Action_Skeleton_Source::GetBoneName(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* SteamVR_Action_Skeleton_Source_GetBoneName_m464D8D3413D7782356433F03C854B062E0080488 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, int32_t ___boneIndex0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_Source_GetBoneName_m464D8D3413D7782356433F03C854B062E0080488_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	StringBuilder_t * V_0 = NULL;
	int32_t V_1 = 0;
	bool V_2 = false;
	uint64_t V_3 = 0;
	String_t* V_4 = NULL;
	{
		// StringBuilder stringBuilder = new StringBuilder(255);
		StringBuilder_t * L_0 = (StringBuilder_t *)il2cpp_codegen_object_new(StringBuilder_t_il2cpp_TypeInfo_var);
		StringBuilder__ctor_m1C0F2D97B838537A2D0F64033AE4EF02D150A956(L_0, ((int32_t)255), /*hidden argument*/NULL);
		V_0 = L_0;
		// EVRInputError error = OpenVR.Input.GetBoneName(handle, boneIndex, stringBuilder, 255);
		IL2CPP_RUNTIME_CLASS_INIT(OpenVR_t89189C917B539750153B18DDDCB4F7D9C8EF004D_il2cpp_TypeInfo_var);
		CVRInput_t8458E224B9D7EFD4A5B102EAA06F8F365A25A53A * L_1 = OpenVR_get_Input_mF290A715AD07D4B7F8844AA79293934B7999CE04(/*hidden argument*/NULL);
		uint64_t L_2 = SteamVR_Action_Source_get_handle_m66E0A3E9E7D6434FB905BF0D25013927B0C12791(__this, /*hidden argument*/NULL);
		int32_t L_3 = ___boneIndex0;
		StringBuilder_t * L_4 = V_0;
		NullCheck(L_1);
		int32_t L_5 = CVRInput_GetBoneName_mBAE82D02F085E0B3DDCE21EA4BDCEB94A1A72297(L_1, L_2, L_3, L_4, ((int32_t)255), /*hidden argument*/NULL);
		V_1 = L_5;
		// if (error != EVRInputError.None)
		int32_t L_6 = V_1;
		V_2 = (bool)((!(((uint32_t)L_6) <= ((uint32_t)0)))? 1 : 0);
		bool L_7 = V_2;
		if (!L_7)
		{
			goto IL_007f;
		}
	}
	{
		// Debug.LogError("<b>[SteamVR]</b> GetBoneName error (" + fullPath + "): " + error.ToString() + " handle: " + handle.ToString());
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_8 = (StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E*)(StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E*)SZArrayNew(StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E_il2cpp_TypeInfo_var, (uint32_t)6);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_9 = L_8;
		NullCheck(L_9);
		ArrayElementTypeCheck (L_9, _stringLiteral7025DBCB2822E392650101D811F717F7B853C54B);
		(L_9)->SetAt(static_cast<il2cpp_array_size_t>(0), (String_t*)_stringLiteral7025DBCB2822E392650101D811F717F7B853C54B);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_10 = L_9;
		String_t* L_11 = SteamVR_Action_Source_get_fullPath_m9D3700AC3EB06210A52EDA613F1523A48F0A1B81(__this, /*hidden argument*/NULL);
		NullCheck(L_10);
		ArrayElementTypeCheck (L_10, L_11);
		(L_10)->SetAt(static_cast<il2cpp_array_size_t>(1), (String_t*)L_11);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_12 = L_10;
		NullCheck(L_12);
		ArrayElementTypeCheck (L_12, _stringLiteralE6D56E05F32996CA7E5AE21BC90D49044C0BF356);
		(L_12)->SetAt(static_cast<il2cpp_array_size_t>(2), (String_t*)_stringLiteralE6D56E05F32996CA7E5AE21BC90D49044C0BF356);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_13 = L_12;
		RuntimeObject * L_14 = Box(EVRInputError_tE4C895A0D1F18C0024F5C180FF3962B056DA8A71_il2cpp_TypeInfo_var, (&V_1));
		NullCheck(L_14);
		String_t* L_15 = VirtFuncInvoker0< String_t* >::Invoke(3 /* System.String System.Object::ToString() */, L_14);
		V_1 = *(int32_t*)UnBox(L_14);
		NullCheck(L_13);
		ArrayElementTypeCheck (L_13, L_15);
		(L_13)->SetAt(static_cast<il2cpp_array_size_t>(3), (String_t*)L_15);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_16 = L_13;
		NullCheck(L_16);
		ArrayElementTypeCheck (L_16, _stringLiteral18B39452A606090B97AA8D84240CC83BE3E5D62B);
		(L_16)->SetAt(static_cast<il2cpp_array_size_t>(4), (String_t*)_stringLiteral18B39452A606090B97AA8D84240CC83BE3E5D62B);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_17 = L_16;
		uint64_t L_18 = SteamVR_Action_Source_get_handle_m66E0A3E9E7D6434FB905BF0D25013927B0C12791(__this, /*hidden argument*/NULL);
		V_3 = L_18;
		String_t* L_19 = UInt64_ToString_mF0E40B7459C207B89A1C8C04CE7F183AC0E6D672((uint64_t*)(&V_3), /*hidden argument*/NULL);
		NullCheck(L_17);
		ArrayElementTypeCheck (L_17, L_19);
		(L_17)->SetAt(static_cast<il2cpp_array_size_t>(5), (String_t*)L_19);
		String_t* L_20 = String_Concat_m232E857CA5107EA6AC52E7DD7018716C021F237B(L_17, /*hidden argument*/NULL);
		IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
		Debug_LogError_m3BCF9B78263152261565DCA9DB7D55F0C391ED29(L_20, /*hidden argument*/NULL);
	}

IL_007f:
	{
		// return stringBuilder.ToString();
		StringBuilder_t * L_21 = V_0;
		NullCheck(L_21);
		String_t* L_22 = VirtFuncInvoker0< String_t* >::Invoke(3 /* System.String System.Object::ToString() */, L_21);
		V_4 = L_22;
		goto IL_0089;
	}

IL_0089:
	{
		// }
		String_t* L_23 = V_4;
		return L_23;
	}
}
// SteamVR_Utils/RigidTransform[] Valve.VR.SteamVR_Action_Skeleton_Source::GetReferenceTransforms(Valve.VR.EVRSkeletalTransformSpace,Valve.VR.EVRSkeletalReferencePose)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RigidTransformU5BU5D_tC98EB3576009E5D825D0D43671A65D32A2449ECC* SteamVR_Action_Skeleton_Source_GetReferenceTransforms_m81B42FB78EE3A685B9B88FD3083F07971B5EA156 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, int32_t ___transformSpace0, int32_t ___referencePose1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_Source_GetReferenceTransforms_m81B42FB78EE3A685B9B88FD3083F07971B5EA156_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	RigidTransformU5BU5D_tC98EB3576009E5D825D0D43671A65D32A2449ECC* V_0 = NULL;
	VRBoneTransform_tU5BU5D_tB5FDD0831D295612D4381D2F2D8805367FAF83F8* V_1 = NULL;
	int32_t V_2 = 0;
	bool V_3 = false;
	uint64_t V_4 = 0;
	int32_t V_5 = 0;
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_6;
	memset((&V_6), 0, sizeof(V_6));
	Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  V_7;
	memset((&V_7), 0, sizeof(V_7));
	bool V_8 = false;
	bool V_9 = false;
	Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  V_10;
	memset((&V_10), 0, sizeof(V_10));
	RigidTransformU5BU5D_tC98EB3576009E5D825D0D43671A65D32A2449ECC* V_11 = NULL;
	{
		// SteamVR_Utils.RigidTransform[] transforms = new SteamVR_Utils.RigidTransform[GetBoneCount()];
		uint32_t L_0 = SteamVR_Action_Skeleton_Source_GetBoneCount_m3049CC9D5CB2C3913C467D136B8C6A9CDAAC8148(__this, /*hidden argument*/NULL);
		RigidTransformU5BU5D_tC98EB3576009E5D825D0D43671A65D32A2449ECC* L_1 = (RigidTransformU5BU5D_tC98EB3576009E5D825D0D43671A65D32A2449ECC*)(RigidTransformU5BU5D_tC98EB3576009E5D825D0D43671A65D32A2449ECC*)SZArrayNew(RigidTransformU5BU5D_tC98EB3576009E5D825D0D43671A65D32A2449ECC_il2cpp_TypeInfo_var, (uint32_t)L_0);
		V_0 = L_1;
		// VRBoneTransform_t[] boneTransforms = new VRBoneTransform_t[transforms.Length];
		RigidTransformU5BU5D_tC98EB3576009E5D825D0D43671A65D32A2449ECC* L_2 = V_0;
		NullCheck(L_2);
		VRBoneTransform_tU5BU5D_tB5FDD0831D295612D4381D2F2D8805367FAF83F8* L_3 = (VRBoneTransform_tU5BU5D_tB5FDD0831D295612D4381D2F2D8805367FAF83F8*)(VRBoneTransform_tU5BU5D_tB5FDD0831D295612D4381D2F2D8805367FAF83F8*)SZArrayNew(VRBoneTransform_tU5BU5D_tB5FDD0831D295612D4381D2F2D8805367FAF83F8_il2cpp_TypeInfo_var, (uint32_t)(((int32_t)((int32_t)(((RuntimeArray*)L_2)->max_length)))));
		V_1 = L_3;
		// EVRInputError error = OpenVR.Input.GetSkeletalReferenceTransforms(handle, transformSpace, referencePose, boneTransforms);
		IL2CPP_RUNTIME_CLASS_INIT(OpenVR_t89189C917B539750153B18DDDCB4F7D9C8EF004D_il2cpp_TypeInfo_var);
		CVRInput_t8458E224B9D7EFD4A5B102EAA06F8F365A25A53A * L_4 = OpenVR_get_Input_mF290A715AD07D4B7F8844AA79293934B7999CE04(/*hidden argument*/NULL);
		uint64_t L_5 = SteamVR_Action_Source_get_handle_m66E0A3E9E7D6434FB905BF0D25013927B0C12791(__this, /*hidden argument*/NULL);
		int32_t L_6 = ___transformSpace0;
		int32_t L_7 = ___referencePose1;
		VRBoneTransform_tU5BU5D_tB5FDD0831D295612D4381D2F2D8805367FAF83F8* L_8 = V_1;
		NullCheck(L_4);
		int32_t L_9 = CVRInput_GetSkeletalReferenceTransforms_m39DC7D8210062B9512F7CECF5F60E361C1D729AF(L_4, L_5, L_6, L_7, L_8, /*hidden argument*/NULL);
		V_2 = L_9;
		// if (error != EVRInputError.None)
		int32_t L_10 = V_2;
		V_3 = (bool)((!(((uint32_t)L_10) <= ((uint32_t)0)))? 1 : 0);
		bool L_11 = V_3;
		if (!L_11)
		{
			goto IL_0086;
		}
	}
	{
		// Debug.LogError("<b>[SteamVR]</b> GetSkeletalReferenceTransforms error (" + fullPath + "): " + error.ToString() + " handle: " + handle.ToString());
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_12 = (StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E*)(StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E*)SZArrayNew(StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E_il2cpp_TypeInfo_var, (uint32_t)6);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_13 = L_12;
		NullCheck(L_13);
		ArrayElementTypeCheck (L_13, _stringLiteral1315AF0D095A22997AA7C177E47A3203C2139E1F);
		(L_13)->SetAt(static_cast<il2cpp_array_size_t>(0), (String_t*)_stringLiteral1315AF0D095A22997AA7C177E47A3203C2139E1F);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_14 = L_13;
		String_t* L_15 = SteamVR_Action_Source_get_fullPath_m9D3700AC3EB06210A52EDA613F1523A48F0A1B81(__this, /*hidden argument*/NULL);
		NullCheck(L_14);
		ArrayElementTypeCheck (L_14, L_15);
		(L_14)->SetAt(static_cast<il2cpp_array_size_t>(1), (String_t*)L_15);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_16 = L_14;
		NullCheck(L_16);
		ArrayElementTypeCheck (L_16, _stringLiteralE6D56E05F32996CA7E5AE21BC90D49044C0BF356);
		(L_16)->SetAt(static_cast<il2cpp_array_size_t>(2), (String_t*)_stringLiteralE6D56E05F32996CA7E5AE21BC90D49044C0BF356);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_17 = L_16;
		RuntimeObject * L_18 = Box(EVRInputError_tE4C895A0D1F18C0024F5C180FF3962B056DA8A71_il2cpp_TypeInfo_var, (&V_2));
		NullCheck(L_18);
		String_t* L_19 = VirtFuncInvoker0< String_t* >::Invoke(3 /* System.String System.Object::ToString() */, L_18);
		V_2 = *(int32_t*)UnBox(L_18);
		NullCheck(L_17);
		ArrayElementTypeCheck (L_17, L_19);
		(L_17)->SetAt(static_cast<il2cpp_array_size_t>(3), (String_t*)L_19);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_20 = L_17;
		NullCheck(L_20);
		ArrayElementTypeCheck (L_20, _stringLiteral18B39452A606090B97AA8D84240CC83BE3E5D62B);
		(L_20)->SetAt(static_cast<il2cpp_array_size_t>(4), (String_t*)_stringLiteral18B39452A606090B97AA8D84240CC83BE3E5D62B);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_21 = L_20;
		uint64_t L_22 = SteamVR_Action_Source_get_handle_m66E0A3E9E7D6434FB905BF0D25013927B0C12791(__this, /*hidden argument*/NULL);
		V_4 = L_22;
		String_t* L_23 = UInt64_ToString_mF0E40B7459C207B89A1C8C04CE7F183AC0E6D672((uint64_t*)(&V_4), /*hidden argument*/NULL);
		NullCheck(L_21);
		ArrayElementTypeCheck (L_21, L_23);
		(L_21)->SetAt(static_cast<il2cpp_array_size_t>(5), (String_t*)L_23);
		String_t* L_24 = String_Concat_m232E857CA5107EA6AC52E7DD7018716C021F237B(L_21, /*hidden argument*/NULL);
		IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
		Debug_LogError_m3BCF9B78263152261565DCA9DB7D55F0C391ED29(L_24, /*hidden argument*/NULL);
	}

IL_0086:
	{
		// for (int transformIndex = 0; transformIndex < boneTransforms.Length; transformIndex++)
		V_5 = 0;
		goto IL_0136;
	}

IL_008e:
	{
		// Vector3 position = new Vector3(-boneTransforms[transformIndex].position.v0, boneTransforms[transformIndex].position.v1, boneTransforms[transformIndex].position.v2);
		VRBoneTransform_tU5BU5D_tB5FDD0831D295612D4381D2F2D8805367FAF83F8* L_25 = V_1;
		int32_t L_26 = V_5;
		NullCheck(L_25);
		HmdVector4_t_tBA2A305DD2E705FAAC9CC5D2FD13B64202A381F3 * L_27 = ((L_25)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_26)))->get_address_of_position_0();
		float L_28 = L_27->get_v0_0();
		VRBoneTransform_tU5BU5D_tB5FDD0831D295612D4381D2F2D8805367FAF83F8* L_29 = V_1;
		int32_t L_30 = V_5;
		NullCheck(L_29);
		HmdVector4_t_tBA2A305DD2E705FAAC9CC5D2FD13B64202A381F3 * L_31 = ((L_29)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_30)))->get_address_of_position_0();
		float L_32 = L_31->get_v1_1();
		VRBoneTransform_tU5BU5D_tB5FDD0831D295612D4381D2F2D8805367FAF83F8* L_33 = V_1;
		int32_t L_34 = V_5;
		NullCheck(L_33);
		HmdVector4_t_tBA2A305DD2E705FAAC9CC5D2FD13B64202A381F3 * L_35 = ((L_33)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_34)))->get_address_of_position_0();
		float L_36 = L_35->get_v2_2();
		Vector3__ctor_m08F61F548AA5836D8789843ACB4A81E4963D2EE1((Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)(&V_6), ((-L_28)), L_32, L_36, /*hidden argument*/NULL);
		// Quaternion rotation = new Quaternion(boneTransforms[transformIndex].orientation.x, -boneTransforms[transformIndex].orientation.y, -boneTransforms[transformIndex].orientation.z, boneTransforms[transformIndex].orientation.w);
		VRBoneTransform_tU5BU5D_tB5FDD0831D295612D4381D2F2D8805367FAF83F8* L_37 = V_1;
		int32_t L_38 = V_5;
		NullCheck(L_37);
		HmdQuaternionf_t_tCE0ACBA93E70AA544844617F487F6A634A9E4A70 * L_39 = ((L_37)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_38)))->get_address_of_orientation_1();
		float L_40 = L_39->get_x_1();
		VRBoneTransform_tU5BU5D_tB5FDD0831D295612D4381D2F2D8805367FAF83F8* L_41 = V_1;
		int32_t L_42 = V_5;
		NullCheck(L_41);
		HmdQuaternionf_t_tCE0ACBA93E70AA544844617F487F6A634A9E4A70 * L_43 = ((L_41)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_42)))->get_address_of_orientation_1();
		float L_44 = L_43->get_y_2();
		VRBoneTransform_tU5BU5D_tB5FDD0831D295612D4381D2F2D8805367FAF83F8* L_45 = V_1;
		int32_t L_46 = V_5;
		NullCheck(L_45);
		HmdQuaternionf_t_tCE0ACBA93E70AA544844617F487F6A634A9E4A70 * L_47 = ((L_45)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_46)))->get_address_of_orientation_1();
		float L_48 = L_47->get_z_3();
		VRBoneTransform_tU5BU5D_tB5FDD0831D295612D4381D2F2D8805367FAF83F8* L_49 = V_1;
		int32_t L_50 = V_5;
		NullCheck(L_49);
		HmdQuaternionf_t_tCE0ACBA93E70AA544844617F487F6A634A9E4A70 * L_51 = ((L_49)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_50)))->get_address_of_orientation_1();
		float L_52 = L_51->get_w_0();
		Quaternion__ctor_m7502F0C38E04C6DE24C965D1CAF278DDD02B9D61((Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 *)(&V_7), L_40, ((-L_44)), ((-L_48)), L_52, /*hidden argument*/NULL);
		// transforms[transformIndex] = new SteamVR_Utils.RigidTransform(position, rotation);
		RigidTransformU5BU5D_tC98EB3576009E5D825D0D43671A65D32A2449ECC* L_53 = V_0;
		int32_t L_54 = V_5;
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_55 = V_6;
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_56 = V_7;
		RigidTransform_t0E8A00F7013270B6B2254F29B4FFEAA6783CD905  L_57;
		memset((&L_57), 0, sizeof(L_57));
		RigidTransform__ctor_mD0AE3AAF6BDAE1EC463E2EA22DD1988DCA16A62B((&L_57), L_55, L_56, /*hidden argument*/NULL);
		NullCheck(L_53);
		(L_53)->SetAt(static_cast<il2cpp_array_size_t>(L_54), (RigidTransform_t0E8A00F7013270B6B2254F29B4FFEAA6783CD905 )L_57);
		// for (int transformIndex = 0; transformIndex < boneTransforms.Length; transformIndex++)
		int32_t L_58 = V_5;
		V_5 = ((int32_t)il2cpp_codegen_add((int32_t)L_58, (int32_t)1));
	}

IL_0136:
	{
		// for (int transformIndex = 0; transformIndex < boneTransforms.Length; transformIndex++)
		int32_t L_59 = V_5;
		VRBoneTransform_tU5BU5D_tB5FDD0831D295612D4381D2F2D8805367FAF83F8* L_60 = V_1;
		NullCheck(L_60);
		V_8 = (bool)((((int32_t)L_59) < ((int32_t)(((int32_t)((int32_t)(((RuntimeArray*)L_60)->max_length))))))? 1 : 0);
		bool L_61 = V_8;
		if (L_61)
		{
			goto IL_008e;
		}
	}
	{
		// if (transforms.Length > 0)
		RigidTransformU5BU5D_tC98EB3576009E5D825D0D43671A65D32A2449ECC* L_62 = V_0;
		NullCheck(L_62);
		V_9 = (bool)((!(((uint32_t)(((RuntimeArray*)L_62)->max_length)) <= ((uint32_t)0)))? 1 : 0);
		bool L_63 = V_9;
		if (!L_63)
		{
			goto IL_0183;
		}
	}
	{
		// Quaternion qFixUpRot = Quaternion.AngleAxis(Mathf.PI * Mathf.Rad2Deg, Vector3.up);
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_64 = Vector3_get_up_m6309EBC4E42D6D0B3D28056BD23D0331275306F7(/*hidden argument*/NULL);
		IL2CPP_RUNTIME_CLASS_INIT(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357_il2cpp_TypeInfo_var);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_65 = Quaternion_AngleAxis_m07DACF59F0403451DABB9BC991C53EE3301E88B0((180.0f), L_64, /*hidden argument*/NULL);
		V_10 = L_65;
		// transforms[0].rot = qFixUpRot * transforms[0].rot;
		RigidTransformU5BU5D_tC98EB3576009E5D825D0D43671A65D32A2449ECC* L_66 = V_0;
		NullCheck(L_66);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_67 = V_10;
		RigidTransformU5BU5D_tC98EB3576009E5D825D0D43671A65D32A2449ECC* L_68 = V_0;
		NullCheck(L_68);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_69 = ((L_68)->GetAddressAt(static_cast<il2cpp_array_size_t>(0)))->get_rot_1();
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_70 = Quaternion_op_Multiply_mDB9F738AA8160E3D85549F4FEDA23BC658B5A790(L_67, L_69, /*hidden argument*/NULL);
		((L_66)->GetAddressAt(static_cast<il2cpp_array_size_t>(0)))->set_rot_1(L_70);
	}

IL_0183:
	{
		// return transforms;
		RigidTransformU5BU5D_tC98EB3576009E5D825D0D43671A65D32A2449ECC* L_71 = V_0;
		V_11 = L_71;
		goto IL_0188;
	}

IL_0188:
	{
		// }
		RigidTransformU5BU5D_tC98EB3576009E5D825D0D43671A65D32A2449ECC* L_72 = V_11;
		return L_72;
	}
}
// Valve.VR.EVRSkeletalTrackingLevel Valve.VR.SteamVR_Action_Skeleton_Source::get_skeletalTrackingLevel()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t SteamVR_Action_Skeleton_Source_get_skeletalTrackingLevel_mABC82B5824C8B57C5C222A20B80E47ABE5DF7E9B (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	int32_t V_0 = 0;
	{
		// public EVRSkeletalTrackingLevel skeletalTrackingLevel { get { return GetSkeletalTrackingLevel(); } }
		int32_t L_0 = SteamVR_Action_Skeleton_Source_GetSkeletalTrackingLevel_mFDDD94CFD727E816757BEF9129ADCC8996495018(__this, /*hidden argument*/NULL);
		V_0 = L_0;
		goto IL_000a;
	}

IL_000a:
	{
		// public EVRSkeletalTrackingLevel skeletalTrackingLevel { get { return GetSkeletalTrackingLevel(); } }
		int32_t L_1 = V_0;
		return L_1;
	}
}
// Valve.VR.EVRSkeletalTrackingLevel Valve.VR.SteamVR_Action_Skeleton_Source::GetSkeletalTrackingLevel()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t SteamVR_Action_Skeleton_Source_GetSkeletalTrackingLevel_mFDDD94CFD727E816757BEF9129ADCC8996495018 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_Source_GetSkeletalTrackingLevel_mFDDD94CFD727E816757BEF9129ADCC8996495018_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	int32_t V_1 = 0;
	bool V_2 = false;
	uint64_t V_3 = 0;
	int32_t V_4 = 0;
	{
		// EVRSkeletalTrackingLevel skeletalTrackingLevel = EVRSkeletalTrackingLevel.VRSkeletalTracking_Estimated;
		V_0 = 0;
		// EVRInputError error = OpenVR.Input.GetSkeletalTrackingLevel(handle, ref skeletalTrackingLevel);
		IL2CPP_RUNTIME_CLASS_INIT(OpenVR_t89189C917B539750153B18DDDCB4F7D9C8EF004D_il2cpp_TypeInfo_var);
		CVRInput_t8458E224B9D7EFD4A5B102EAA06F8F365A25A53A * L_0 = OpenVR_get_Input_mF290A715AD07D4B7F8844AA79293934B7999CE04(/*hidden argument*/NULL);
		uint64_t L_1 = SteamVR_Action_Source_get_handle_m66E0A3E9E7D6434FB905BF0D25013927B0C12791(__this, /*hidden argument*/NULL);
		NullCheck(L_0);
		int32_t L_2 = CVRInput_GetSkeletalTrackingLevel_m47B8F2D722E0599DCFEA1E815F878C0A9439F6CC(L_0, L_1, (int32_t*)(&V_0), /*hidden argument*/NULL);
		V_1 = L_2;
		// if (error != EVRInputError.None)
		int32_t L_3 = V_1;
		V_2 = (bool)((!(((uint32_t)L_3) <= ((uint32_t)0)))? 1 : 0);
		bool L_4 = V_2;
		if (!L_4)
		{
			goto IL_0071;
		}
	}
	{
		// Debug.LogError("<b>[SteamVR]</b> GetSkeletalTrackingLevel error (" + fullPath + "): " + error.ToString() + " handle: " + handle.ToString());
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_5 = (StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E*)(StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E*)SZArrayNew(StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E_il2cpp_TypeInfo_var, (uint32_t)6);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_6 = L_5;
		NullCheck(L_6);
		ArrayElementTypeCheck (L_6, _stringLiteral465EC1A5848524F5DC24880091A15CDE065E1E7E);
		(L_6)->SetAt(static_cast<il2cpp_array_size_t>(0), (String_t*)_stringLiteral465EC1A5848524F5DC24880091A15CDE065E1E7E);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_7 = L_6;
		String_t* L_8 = SteamVR_Action_Source_get_fullPath_m9D3700AC3EB06210A52EDA613F1523A48F0A1B81(__this, /*hidden argument*/NULL);
		NullCheck(L_7);
		ArrayElementTypeCheck (L_7, L_8);
		(L_7)->SetAt(static_cast<il2cpp_array_size_t>(1), (String_t*)L_8);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_9 = L_7;
		NullCheck(L_9);
		ArrayElementTypeCheck (L_9, _stringLiteralE6D56E05F32996CA7E5AE21BC90D49044C0BF356);
		(L_9)->SetAt(static_cast<il2cpp_array_size_t>(2), (String_t*)_stringLiteralE6D56E05F32996CA7E5AE21BC90D49044C0BF356);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_10 = L_9;
		RuntimeObject * L_11 = Box(EVRInputError_tE4C895A0D1F18C0024F5C180FF3962B056DA8A71_il2cpp_TypeInfo_var, (&V_1));
		NullCheck(L_11);
		String_t* L_12 = VirtFuncInvoker0< String_t* >::Invoke(3 /* System.String System.Object::ToString() */, L_11);
		V_1 = *(int32_t*)UnBox(L_11);
		NullCheck(L_10);
		ArrayElementTypeCheck (L_10, L_12);
		(L_10)->SetAt(static_cast<il2cpp_array_size_t>(3), (String_t*)L_12);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_13 = L_10;
		NullCheck(L_13);
		ArrayElementTypeCheck (L_13, _stringLiteral18B39452A606090B97AA8D84240CC83BE3E5D62B);
		(L_13)->SetAt(static_cast<il2cpp_array_size_t>(4), (String_t*)_stringLiteral18B39452A606090B97AA8D84240CC83BE3E5D62B);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_14 = L_13;
		uint64_t L_15 = SteamVR_Action_Source_get_handle_m66E0A3E9E7D6434FB905BF0D25013927B0C12791(__this, /*hidden argument*/NULL);
		V_3 = L_15;
		String_t* L_16 = UInt64_ToString_mF0E40B7459C207B89A1C8C04CE7F183AC0E6D672((uint64_t*)(&V_3), /*hidden argument*/NULL);
		NullCheck(L_14);
		ArrayElementTypeCheck (L_14, L_16);
		(L_14)->SetAt(static_cast<il2cpp_array_size_t>(5), (String_t*)L_16);
		String_t* L_17 = String_Concat_m232E857CA5107EA6AC52E7DD7018716C021F237B(L_14, /*hidden argument*/NULL);
		IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
		Debug_LogError_m3BCF9B78263152261565DCA9DB7D55F0C391ED29(L_17, /*hidden argument*/NULL);
	}

IL_0071:
	{
		// return skeletalTrackingLevel;
		int32_t L_18 = V_0;
		V_4 = L_18;
		goto IL_0076;
	}

IL_0076:
	{
		// }
		int32_t L_19 = V_4;
		return L_19;
	}
}
// Valve.VR.VRSkeletalSummaryData_t Valve.VR.SteamVR_Action_Skeleton_Source::GetSkeletalSummaryData(Valve.VR.EVRSummaryType,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR VRSkeletalSummaryData_t_t644580EA9039A02976937652FFFEE20F90671B66  SteamVR_Action_Skeleton_Source_GetSkeletalSummaryData_m1D3E3856B7FA82E2AFB36E00D7285A3B00A8C00D (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, int32_t ___summaryType0, bool ___force1, const RuntimeMethod* method)
{
	VRSkeletalSummaryData_t_t644580EA9039A02976937652FFFEE20F90671B66  V_0;
	memset((&V_0), 0, sizeof(V_0));
	{
		// UpdateSkeletalSummaryData(summaryType, force);
		int32_t L_0 = ___summaryType0;
		bool L_1 = ___force1;
		SteamVR_Action_Skeleton_Source_UpdateSkeletalSummaryData_m5649DAF4900617BF2B608028C8382A7A22A1F41E(__this, L_0, L_1, /*hidden argument*/NULL);
		// return skeletalSummaryData;
		VRSkeletalSummaryData_t_t644580EA9039A02976937652FFFEE20F90671B66  L_2 = __this->get_skeletalSummaryData_57();
		V_0 = L_2;
		goto IL_0013;
	}

IL_0013:
	{
		// }
		VRSkeletalSummaryData_t_t644580EA9039A02976937652FFFEE20F90671B66  L_3 = V_0;
		return L_3;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::UpdateSkeletalSummaryData(Valve.VR.EVRSummaryType,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_UpdateSkeletalSummaryData_m5649DAF4900617BF2B608028C8382A7A22A1F41E (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, int32_t ___summaryType0, bool ___force1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_Source_UpdateSkeletalSummaryData_m5649DAF4900617BF2B608028C8382A7A22A1F41E_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	int32_t V_1 = 0;
	bool V_2 = false;
	uint64_t V_3 = 0;
	int32_t G_B4_0 = 0;
	int32_t G_B6_0 = 0;
	{
		// if (force || this.summaryDataType != summaryDataType && active)
		bool L_0 = ___force1;
		if (L_0)
		{
			goto IL_001d;
		}
	}
	{
		int32_t L_1 = SteamVR_Action_Skeleton_Source_get_summaryDataType_m99C31EEF6D6E87C035887DE8640DC37C07D2CA79_inline(__this, /*hidden argument*/NULL);
		int32_t L_2 = SteamVR_Action_Skeleton_Source_get_summaryDataType_m99C31EEF6D6E87C035887DE8640DC37C07D2CA79_inline(__this, /*hidden argument*/NULL);
		if ((((int32_t)L_1) == ((int32_t)L_2)))
		{
			goto IL_001a;
		}
	}
	{
		bool L_3 = VirtFuncInvoker0< bool >::Invoke(12 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_active() */, __this);
		G_B4_0 = ((int32_t)(L_3));
		goto IL_001b;
	}

IL_001a:
	{
		G_B4_0 = 0;
	}

IL_001b:
	{
		G_B6_0 = G_B4_0;
		goto IL_001e;
	}

IL_001d:
	{
		G_B6_0 = 1;
	}

IL_001e:
	{
		V_0 = (bool)G_B6_0;
		bool L_4 = V_0;
		if (!L_4)
		{
			goto IL_0145;
		}
	}
	{
		// EVRInputError error = OpenVR.Input.GetSkeletalSummaryData(handle, summaryType, ref skeletalSummaryData);
		IL2CPP_RUNTIME_CLASS_INIT(OpenVR_t89189C917B539750153B18DDDCB4F7D9C8EF004D_il2cpp_TypeInfo_var);
		CVRInput_t8458E224B9D7EFD4A5B102EAA06F8F365A25A53A * L_5 = OpenVR_get_Input_mF290A715AD07D4B7F8844AA79293934B7999CE04(/*hidden argument*/NULL);
		uint64_t L_6 = SteamVR_Action_Source_get_handle_m66E0A3E9E7D6434FB905BF0D25013927B0C12791(__this, /*hidden argument*/NULL);
		int32_t L_7 = ___summaryType0;
		VRSkeletalSummaryData_t_t644580EA9039A02976937652FFFEE20F90671B66 * L_8 = __this->get_address_of_skeletalSummaryData_57();
		NullCheck(L_5);
		int32_t L_9 = CVRInput_GetSkeletalSummaryData_mF6F87A491E5F5A4C029BB33E77BCE55BC326D44C(L_5, L_6, L_7, (VRSkeletalSummaryData_t_t644580EA9039A02976937652FFFEE20F90671B66 *)L_8, /*hidden argument*/NULL);
		V_1 = L_9;
		// if (error != EVRInputError.None)
		int32_t L_10 = V_1;
		V_2 = (bool)((!(((uint32_t)L_10) <= ((uint32_t)0)))? 1 : 0);
		bool L_11 = V_2;
		if (!L_11)
		{
			goto IL_0099;
		}
	}
	{
		// Debug.LogError("<b>[SteamVR]</b> GetSkeletalSummaryData error (" + fullPath + "): " + error.ToString() + " handle: " + handle.ToString());
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_12 = (StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E*)(StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E*)SZArrayNew(StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E_il2cpp_TypeInfo_var, (uint32_t)6);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_13 = L_12;
		NullCheck(L_13);
		ArrayElementTypeCheck (L_13, _stringLiteral29F677B20F6C547FF7CEF8CAE9CF922165E48458);
		(L_13)->SetAt(static_cast<il2cpp_array_size_t>(0), (String_t*)_stringLiteral29F677B20F6C547FF7CEF8CAE9CF922165E48458);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_14 = L_13;
		String_t* L_15 = SteamVR_Action_Source_get_fullPath_m9D3700AC3EB06210A52EDA613F1523A48F0A1B81(__this, /*hidden argument*/NULL);
		NullCheck(L_14);
		ArrayElementTypeCheck (L_14, L_15);
		(L_14)->SetAt(static_cast<il2cpp_array_size_t>(1), (String_t*)L_15);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_16 = L_14;
		NullCheck(L_16);
		ArrayElementTypeCheck (L_16, _stringLiteralE6D56E05F32996CA7E5AE21BC90D49044C0BF356);
		(L_16)->SetAt(static_cast<il2cpp_array_size_t>(2), (String_t*)_stringLiteralE6D56E05F32996CA7E5AE21BC90D49044C0BF356);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_17 = L_16;
		RuntimeObject * L_18 = Box(EVRInputError_tE4C895A0D1F18C0024F5C180FF3962B056DA8A71_il2cpp_TypeInfo_var, (&V_1));
		NullCheck(L_18);
		String_t* L_19 = VirtFuncInvoker0< String_t* >::Invoke(3 /* System.String System.Object::ToString() */, L_18);
		V_1 = *(int32_t*)UnBox(L_18);
		NullCheck(L_17);
		ArrayElementTypeCheck (L_17, L_19);
		(L_17)->SetAt(static_cast<il2cpp_array_size_t>(3), (String_t*)L_19);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_20 = L_17;
		NullCheck(L_20);
		ArrayElementTypeCheck (L_20, _stringLiteral18B39452A606090B97AA8D84240CC83BE3E5D62B);
		(L_20)->SetAt(static_cast<il2cpp_array_size_t>(4), (String_t*)_stringLiteral18B39452A606090B97AA8D84240CC83BE3E5D62B);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_21 = L_20;
		uint64_t L_22 = SteamVR_Action_Source_get_handle_m66E0A3E9E7D6434FB905BF0D25013927B0C12791(__this, /*hidden argument*/NULL);
		V_3 = L_22;
		String_t* L_23 = UInt64_ToString_mF0E40B7459C207B89A1C8C04CE7F183AC0E6D672((uint64_t*)(&V_3), /*hidden argument*/NULL);
		NullCheck(L_21);
		ArrayElementTypeCheck (L_21, L_23);
		(L_21)->SetAt(static_cast<il2cpp_array_size_t>(5), (String_t*)L_23);
		String_t* L_24 = String_Concat_m232E857CA5107EA6AC52E7DD7018716C021F237B(L_21, /*hidden argument*/NULL);
		IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
		Debug_LogError_m3BCF9B78263152261565DCA9DB7D55F0C391ED29(L_24, /*hidden argument*/NULL);
	}

IL_0099:
	{
		// fingerCurls[0] = skeletalSummaryData.flFingerCurl0;
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_25 = SteamVR_Action_Skeleton_Source_get_fingerCurls_m6E0B4235B8D2B15E1BBFD7634ECA591CC77A2732_inline(__this, /*hidden argument*/NULL);
		VRSkeletalSummaryData_t_t644580EA9039A02976937652FFFEE20F90671B66 * L_26 = __this->get_address_of_skeletalSummaryData_57();
		float L_27 = L_26->get_flFingerCurl0_0();
		NullCheck(L_25);
		(L_25)->SetAt(static_cast<il2cpp_array_size_t>(0), (float)L_27);
		// fingerCurls[1] = skeletalSummaryData.flFingerCurl1;
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_28 = SteamVR_Action_Skeleton_Source_get_fingerCurls_m6E0B4235B8D2B15E1BBFD7634ECA591CC77A2732_inline(__this, /*hidden argument*/NULL);
		VRSkeletalSummaryData_t_t644580EA9039A02976937652FFFEE20F90671B66 * L_29 = __this->get_address_of_skeletalSummaryData_57();
		float L_30 = L_29->get_flFingerCurl1_1();
		NullCheck(L_28);
		(L_28)->SetAt(static_cast<il2cpp_array_size_t>(1), (float)L_30);
		// fingerCurls[2] = skeletalSummaryData.flFingerCurl2;
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_31 = SteamVR_Action_Skeleton_Source_get_fingerCurls_m6E0B4235B8D2B15E1BBFD7634ECA591CC77A2732_inline(__this, /*hidden argument*/NULL);
		VRSkeletalSummaryData_t_t644580EA9039A02976937652FFFEE20F90671B66 * L_32 = __this->get_address_of_skeletalSummaryData_57();
		float L_33 = L_32->get_flFingerCurl2_2();
		NullCheck(L_31);
		(L_31)->SetAt(static_cast<il2cpp_array_size_t>(2), (float)L_33);
		// fingerCurls[3] = skeletalSummaryData.flFingerCurl3;
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_34 = SteamVR_Action_Skeleton_Source_get_fingerCurls_m6E0B4235B8D2B15E1BBFD7634ECA591CC77A2732_inline(__this, /*hidden argument*/NULL);
		VRSkeletalSummaryData_t_t644580EA9039A02976937652FFFEE20F90671B66 * L_35 = __this->get_address_of_skeletalSummaryData_57();
		float L_36 = L_35->get_flFingerCurl3_3();
		NullCheck(L_34);
		(L_34)->SetAt(static_cast<il2cpp_array_size_t>(3), (float)L_36);
		// fingerCurls[4] = skeletalSummaryData.flFingerCurl4;
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_37 = SteamVR_Action_Skeleton_Source_get_fingerCurls_m6E0B4235B8D2B15E1BBFD7634ECA591CC77A2732_inline(__this, /*hidden argument*/NULL);
		VRSkeletalSummaryData_t_t644580EA9039A02976937652FFFEE20F90671B66 * L_38 = __this->get_address_of_skeletalSummaryData_57();
		float L_39 = L_38->get_flFingerCurl4_4();
		NullCheck(L_37);
		(L_37)->SetAt(static_cast<il2cpp_array_size_t>(4), (float)L_39);
		// fingerSplays[0] = skeletalSummaryData.flFingerSplay0;
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_40 = SteamVR_Action_Skeleton_Source_get_fingerSplays_m21D8D0994518AF9B7532A558E5E39A81C29ADE11_inline(__this, /*hidden argument*/NULL);
		VRSkeletalSummaryData_t_t644580EA9039A02976937652FFFEE20F90671B66 * L_41 = __this->get_address_of_skeletalSummaryData_57();
		float L_42 = L_41->get_flFingerSplay0_5();
		NullCheck(L_40);
		(L_40)->SetAt(static_cast<il2cpp_array_size_t>(0), (float)L_42);
		// fingerSplays[1] = skeletalSummaryData.flFingerSplay1;
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_43 = SteamVR_Action_Skeleton_Source_get_fingerSplays_m21D8D0994518AF9B7532A558E5E39A81C29ADE11_inline(__this, /*hidden argument*/NULL);
		VRSkeletalSummaryData_t_t644580EA9039A02976937652FFFEE20F90671B66 * L_44 = __this->get_address_of_skeletalSummaryData_57();
		float L_45 = L_44->get_flFingerSplay1_6();
		NullCheck(L_43);
		(L_43)->SetAt(static_cast<il2cpp_array_size_t>(1), (float)L_45);
		// fingerSplays[2] = skeletalSummaryData.flFingerSplay2;
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_46 = SteamVR_Action_Skeleton_Source_get_fingerSplays_m21D8D0994518AF9B7532A558E5E39A81C29ADE11_inline(__this, /*hidden argument*/NULL);
		VRSkeletalSummaryData_t_t644580EA9039A02976937652FFFEE20F90671B66 * L_47 = __this->get_address_of_skeletalSummaryData_57();
		float L_48 = L_47->get_flFingerSplay2_7();
		NullCheck(L_46);
		(L_46)->SetAt(static_cast<il2cpp_array_size_t>(2), (float)L_48);
		// fingerSplays[3] = skeletalSummaryData.flFingerSplay3;
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_49 = SteamVR_Action_Skeleton_Source_get_fingerSplays_m21D8D0994518AF9B7532A558E5E39A81C29ADE11_inline(__this, /*hidden argument*/NULL);
		VRSkeletalSummaryData_t_t644580EA9039A02976937652FFFEE20F90671B66 * L_50 = __this->get_address_of_skeletalSummaryData_57();
		float L_51 = L_50->get_flFingerSplay3_8();
		NullCheck(L_49);
		(L_49)->SetAt(static_cast<il2cpp_array_size_t>(3), (float)L_51);
	}

IL_0145:
	{
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::CheckAndSendEvents()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_CheckAndSendEvents_m8D7F293957C6D208053AE2B462B55EAD9D3A0285 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	bool V_0 = false;
	bool V_1 = false;
	bool V_2 = false;
	bool V_3 = false;
	bool V_4 = false;
	bool V_5 = false;
	bool V_6 = false;
	int32_t G_B3_0 = 0;
	int32_t G_B8_0 = 0;
	int32_t G_B13_0 = 0;
	int32_t G_B18_0 = 0;
	int32_t G_B23_0 = 0;
	int32_t G_B28_0 = 0;
	{
		// if (trackingState != lastTrackingState && onTrackingChanged != null)
		int32_t L_0 = SteamVR_Action_Pose_Source_get_trackingState_m702AC7130C7E0CD7EE794221240B44EAC08BAB7D(__this, /*hidden argument*/NULL);
		int32_t L_1 = SteamVR_Action_Pose_Source_get_lastTrackingState_m38B8C3D8A8462CE12EFD78811EBBD8CCEB52FAF8(__this, /*hidden argument*/NULL);
		if ((((int32_t)L_0) == ((int32_t)L_1)))
		{
			goto IL_001a;
		}
	}
	{
		TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 * L_2 = __this->get_onTrackingChanged_41();
		G_B3_0 = ((!(((RuntimeObject*)(TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 *)L_2) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		goto IL_001b;
	}

IL_001a:
	{
		G_B3_0 = 0;
	}

IL_001b:
	{
		V_0 = (bool)G_B3_0;
		bool L_3 = V_0;
		if (!L_3)
		{
			goto IL_0037;
		}
	}
	{
		// onTrackingChanged.Invoke(skeletonAction, trackingState);
		TrackingChangeHandler_t8AD34E45FED47F362BB0D3E5B6B950708A0EC6B4 * L_4 = __this->get_onTrackingChanged_41();
		SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * L_5 = __this->get_skeletonAction_59();
		int32_t L_6 = SteamVR_Action_Pose_Source_get_trackingState_m702AC7130C7E0CD7EE794221240B44EAC08BAB7D(__this, /*hidden argument*/NULL);
		NullCheck(L_4);
		TrackingChangeHandler_Invoke_m32F34205F63AC5D35F1071573E7ABE849DEBE40B(L_4, L_5, L_6, /*hidden argument*/NULL);
	}

IL_0037:
	{
		// if (poseIsValid != lastPoseIsValid && onValidPoseChanged != null)
		bool L_7 = SteamVR_Action_Pose_Source_get_poseIsValid_m637DE37434CBBEC04B359C9FF89AF0681DA67457(__this, /*hidden argument*/NULL);
		bool L_8 = SteamVR_Action_Pose_Source_get_lastPoseIsValid_m7CC61D5F85FD1334CFC6F917EECDA224FA903D0E(__this, /*hidden argument*/NULL);
		if ((((int32_t)L_7) == ((int32_t)L_8)))
		{
			goto IL_0050;
		}
	}
	{
		ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 * L_9 = __this->get_onValidPoseChanged_42();
		G_B8_0 = ((!(((RuntimeObject*)(ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 *)L_9) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		goto IL_0051;
	}

IL_0050:
	{
		G_B8_0 = 0;
	}

IL_0051:
	{
		V_1 = (bool)G_B8_0;
		bool L_10 = V_1;
		if (!L_10)
		{
			goto IL_006d;
		}
	}
	{
		// onValidPoseChanged.Invoke(skeletonAction, poseIsValid);
		ValidPoseChangeHandler_t66871BEC340B3CC65074111BDD9A4FF2794D17B7 * L_11 = __this->get_onValidPoseChanged_42();
		SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * L_12 = __this->get_skeletonAction_59();
		bool L_13 = SteamVR_Action_Pose_Source_get_poseIsValid_m637DE37434CBBEC04B359C9FF89AF0681DA67457(__this, /*hidden argument*/NULL);
		NullCheck(L_11);
		ValidPoseChangeHandler_Invoke_m69178B26D45FE5B6E566495EFD02D1CD56AED888(L_11, L_12, L_13, /*hidden argument*/NULL);
	}

IL_006d:
	{
		// if (deviceIsConnected != lastDeviceIsConnected && onDeviceConnectedChanged != null)
		bool L_14 = SteamVR_Action_Pose_Source_get_deviceIsConnected_m631372A24F57796D298E27F7E8BB93BFA31143EB(__this, /*hidden argument*/NULL);
		bool L_15 = SteamVR_Action_Pose_Source_get_lastDeviceIsConnected_m54D89CD952536E4C6CC1B31D732F097A78FC6D83(__this, /*hidden argument*/NULL);
		if ((((int32_t)L_14) == ((int32_t)L_15)))
		{
			goto IL_0086;
		}
	}
	{
		DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 * L_16 = __this->get_onDeviceConnectedChanged_43();
		G_B13_0 = ((!(((RuntimeObject*)(DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 *)L_16) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		goto IL_0087;
	}

IL_0086:
	{
		G_B13_0 = 0;
	}

IL_0087:
	{
		V_2 = (bool)G_B13_0;
		bool L_17 = V_2;
		if (!L_17)
		{
			goto IL_00a3;
		}
	}
	{
		// onDeviceConnectedChanged.Invoke(skeletonAction, deviceIsConnected);
		DeviceConnectedChangeHandler_tA531478A75E2F7B0C49D41DADBB9FD7BD46C4592 * L_18 = __this->get_onDeviceConnectedChanged_43();
		SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * L_19 = __this->get_skeletonAction_59();
		bool L_20 = SteamVR_Action_Pose_Source_get_deviceIsConnected_m631372A24F57796D298E27F7E8BB93BFA31143EB(__this, /*hidden argument*/NULL);
		NullCheck(L_18);
		DeviceConnectedChangeHandler_Invoke_mB57708EA08D45928D64D09652CE8A71248A92E1B(L_18, L_19, L_20, /*hidden argument*/NULL);
	}

IL_00a3:
	{
		// if (changed && onChange != null)
		bool L_21 = VirtFuncInvoker0< bool >::Invoke(31 /* System.Boolean Valve.VR.SteamVR_Action_In_Source::get_changed() */, __this);
		if (!L_21)
		{
			goto IL_00b6;
		}
	}
	{
		ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 * L_22 = __this->get_onChange_39();
		G_B18_0 = ((!(((RuntimeObject*)(ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 *)L_22) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		goto IL_00b7;
	}

IL_00b6:
	{
		G_B18_0 = 0;
	}

IL_00b7:
	{
		V_3 = (bool)G_B18_0;
		bool L_23 = V_3;
		if (!L_23)
		{
			goto IL_00cd;
		}
	}
	{
		// onChange.Invoke(skeletonAction);
		ChangeHandler_tDC8DC867F411FB9DEE35044438893BCCF94311C7 * L_24 = __this->get_onChange_39();
		SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * L_25 = __this->get_skeletonAction_59();
		NullCheck(L_24);
		ChangeHandler_Invoke_mC5722DBE5AEDF8568E9849292C01588014D154EA(L_24, L_25, /*hidden argument*/NULL);
	}

IL_00cd:
	{
		// if (active != lastActive && onActiveChange != null)
		bool L_26 = VirtFuncInvoker0< bool >::Invoke(12 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_active() */, __this);
		bool L_27 = VirtFuncInvoker0< bool >::Invoke(14 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_lastActive() */, __this);
		if ((((int32_t)L_26) == ((int32_t)L_27)))
		{
			goto IL_00e6;
		}
	}
	{
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * L_28 = __this->get_onActiveChange_37();
		G_B23_0 = ((!(((RuntimeObject*)(ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 *)L_28) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		goto IL_00e7;
	}

IL_00e6:
	{
		G_B23_0 = 0;
	}

IL_00e7:
	{
		V_4 = (bool)G_B23_0;
		bool L_29 = V_4;
		if (!L_29)
		{
			goto IL_0105;
		}
	}
	{
		// onActiveChange.Invoke(skeletonAction, active);
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * L_30 = __this->get_onActiveChange_37();
		SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * L_31 = __this->get_skeletonAction_59();
		bool L_32 = VirtFuncInvoker0< bool >::Invoke(12 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_active() */, __this);
		NullCheck(L_30);
		ActiveChangeHandler_Invoke_m8F250A3B8449F2D46328A69B028001585024506D(L_30, L_31, L_32, /*hidden argument*/NULL);
	}

IL_0105:
	{
		// if (activeBinding != lastActiveBinding && onActiveBindingChange != null)
		bool L_33 = VirtFuncInvoker0< bool >::Invoke(13 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_activeBinding() */, __this);
		bool L_34 = VirtFuncInvoker0< bool >::Invoke(16 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_lastActiveBinding() */, __this);
		if ((((int32_t)L_33) == ((int32_t)L_34)))
		{
			goto IL_011e;
		}
	}
	{
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * L_35 = __this->get_onActiveBindingChange_38();
		G_B28_0 = ((!(((RuntimeObject*)(ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 *)L_35) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		goto IL_011f;
	}

IL_011e:
	{
		G_B28_0 = 0;
	}

IL_011f:
	{
		V_5 = (bool)G_B28_0;
		bool L_36 = V_5;
		if (!L_36)
		{
			goto IL_013d;
		}
	}
	{
		// onActiveBindingChange.Invoke(skeletonAction, activeBinding);
		ActiveChangeHandler_t74981863B279B2B59EAC4C480B2FFDAE6D9056D4 * L_37 = __this->get_onActiveBindingChange_38();
		SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * L_38 = __this->get_skeletonAction_59();
		bool L_39 = VirtFuncInvoker0< bool >::Invoke(13 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_activeBinding() */, __this);
		NullCheck(L_37);
		ActiveChangeHandler_Invoke_m8F250A3B8449F2D46328A69B028001585024506D(L_37, L_38, L_39, /*hidden argument*/NULL);
	}

IL_013d:
	{
		// if (onUpdate != null)
		UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 * L_40 = __this->get_onUpdate_40();
		V_6 = (bool)((!(((RuntimeObject*)(UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 *)L_40) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		bool L_41 = V_6;
		if (!L_41)
		{
			goto IL_015e;
		}
	}
	{
		// onUpdate.Invoke(skeletonAction);
		UpdateHandler_t1759DCFEC7A161071F6E72470CC7515CE2FE8046 * L_42 = __this->get_onUpdate_40();
		SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * L_43 = __this->get_skeletonAction_59();
		NullCheck(L_42);
		UpdateHandler_Invoke_m175C6770DB8B17FD5E716BA08127EEA22FDCA465(L_42, L_43, /*hidden argument*/NULL);
	}

IL_015e:
	{
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source__ctor_m93B62239D040E4627952B767DE40BCC4FDBB7E58 (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_Source__ctor_m93B62239D040E4627952B767DE40BCC4FDBB7E58_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// protected VRSkeletalSummaryData_t skeletalSummaryData = new VRSkeletalSummaryData_t();
		VRSkeletalSummaryData_t_t644580EA9039A02976937652FFFEE20F90671B66 * L_0 = __this->get_address_of_skeletalSummaryData_57();
		il2cpp_codegen_initobj(L_0, sizeof(VRSkeletalSummaryData_t_t644580EA9039A02976937652FFFEE20F90671B66 ));
		// protected VRSkeletalSummaryData_t lastSkeletalSummaryData = new VRSkeletalSummaryData_t();
		VRSkeletalSummaryData_t_t644580EA9039A02976937652FFFEE20F90671B66 * L_1 = __this->get_address_of_lastSkeletalSummaryData_58();
		il2cpp_codegen_initobj(L_1, sizeof(VRSkeletalSummaryData_t_t644580EA9039A02976937652FFFEE20F90671B66 ));
		// protected VRBoneTransform_t[] tempBoneTransforms = new VRBoneTransform_t[SteamVR_Action_Skeleton.numBones];
		VRBoneTransform_tU5BU5D_tB5FDD0831D295612D4381D2F2D8805367FAF83F8* L_2 = (VRBoneTransform_tU5BU5D_tB5FDD0831D295612D4381D2F2D8805367FAF83F8*)(VRBoneTransform_tU5BU5D_tB5FDD0831D295612D4381D2F2D8805367FAF83F8*)SZArrayNew(VRBoneTransform_tU5BU5D_tB5FDD0831D295612D4381D2F2D8805367FAF83F8_il2cpp_TypeInfo_var, (uint32_t)((int32_t)31));
		__this->set_tempBoneTransforms_60(L_2);
		// protected InputSkeletalActionData_t skeletonActionData = new InputSkeletalActionData_t();
		InputSkeletalActionData_t_tD41850247EEE1858231B43C4B3EC2B5617140C26 * L_3 = __this->get_address_of_skeletonActionData_61();
		il2cpp_codegen_initobj(L_3, sizeof(InputSkeletalActionData_t_tD41850247EEE1858231B43C4B3EC2B5617140C26 ));
		// protected InputSkeletalActionData_t lastSkeletonActionData = new InputSkeletalActionData_t();
		InputSkeletalActionData_t_tD41850247EEE1858231B43C4B3EC2B5617140C26 * L_4 = __this->get_address_of_lastSkeletonActionData_62();
		il2cpp_codegen_initobj(L_4, sizeof(InputSkeletalActionData_t_tD41850247EEE1858231B43C4B3EC2B5617140C26 ));
		// protected InputSkeletalActionData_t tempSkeletonActionData = new InputSkeletalActionData_t();
		InputSkeletalActionData_t_tD41850247EEE1858231B43C4B3EC2B5617140C26 * L_5 = __this->get_address_of_tempSkeletonActionData_63();
		il2cpp_codegen_initobj(L_5, sizeof(InputSkeletalActionData_t_tD41850247EEE1858231B43C4B3EC2B5617140C26 ));
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27_il2cpp_TypeInfo_var);
		SteamVR_Action_Pose_Source__ctor_mF1DE2EFD35F9F2DE84EFAEE2308E35D274D93C6E(__this, /*hidden argument*/NULL);
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source::.cctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source__cctor_m37A7364F8A5DFA7EEDE4BF41168A4C3EFE848C7A (const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_Source__cctor_m37A7364F8A5DFA7EEDE4BF41168A4C3EFE848C7A_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// protected static uint skeletonActionData_size = 0;
		((SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72_il2cpp_TypeInfo_var))->set_skeletonActionData_size_36(0);
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// Valve.VR.SteamVR_Action_Skeleton_Source Valve.VR.SteamVR_Action_Skeleton_Source_Map::GetSourceElementForIndexer(Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * SteamVR_Action_Skeleton_Source_Map_GetSourceElementForIndexer_mFB38E3EBD97606F62D6A3960F54D1C320CCEBD4E (SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * __this, int32_t ___inputSource0, const RuntimeMethod* method)
{
	SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * V_0 = NULL;
	{
		// return sources[0]; //just in case somebody tries to access a different element, redirect them to the correct one.
		SteamVR_Action_Skeleton_SourceU5BU5D_tD7F80DE17D413EA1E866B222C9A63AEBFF0CE5D4* L_0 = ((SteamVR_Action_Source_Map_1_t27BBF2BA23BB14D6B7B203EF8ABFEF3D68E13AB1 *)__this)->get_sources_7();
		NullCheck(L_0);
		int32_t L_1 = 0;
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_2 = (L_0)->GetAt(static_cast<il2cpp_array_size_t>(L_1));
		V_0 = L_2;
		goto IL_000c;
	}

IL_000c:
	{
		// }
		SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * L_3 = V_0;
		return L_3;
	}
}
// System.Void Valve.VR.SteamVR_Action_Skeleton_Source_Map::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_Map__ctor_m94EBD8B1E2B39C473A26A199467C31E19BB0875E (SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Skeleton_Source_Map__ctor_m94EBD8B1E2B39C473A26A199467C31E19BB0875E_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		SteamVR_Action_Pose_Source_Map_1__ctor_m01AFE5DB1C492BA28D7FDCC30F55DF0575D12510(__this, /*hidden argument*/SteamVR_Action_Pose_Source_Map_1__ctor_m01AFE5DB1C492BA28D7FDCC30F55DF0575D12510_RuntimeMethod_var);
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.String Valve.VR.SteamVR_Action_Source::get_fullPath()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* SteamVR_Action_Source_get_fullPath_m9D3700AC3EB06210A52EDA613F1523A48F0A1B81 (SteamVR_Action_Source_t9D7428CDE39924074518EE6233D9A4FAB0C33CB0 * __this, const RuntimeMethod* method)
{
	String_t* V_0 = NULL;
	{
		// public string fullPath { get { return action.fullPath; } }
		SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * L_0 = __this->get_action_2();
		NullCheck(L_0);
		String_t* L_1 = VirtFuncInvoker0< String_t* >::Invoke(17 /* System.String Valve.VR.SteamVR_Action::get_fullPath() */, L_0);
		V_0 = L_1;
		goto IL_000f;
	}

IL_000f:
	{
		// public string fullPath { get { return action.fullPath; } }
		String_t* L_2 = V_0;
		return L_2;
	}
}
// System.UInt64 Valve.VR.SteamVR_Action_Source::get_handle()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR uint64_t SteamVR_Action_Source_get_handle_m66E0A3E9E7D6434FB905BF0D25013927B0C12791 (SteamVR_Action_Source_t9D7428CDE39924074518EE6233D9A4FAB0C33CB0 * __this, const RuntimeMethod* method)
{
	uint64_t V_0 = 0;
	{
		// public ulong handle { get { return action.handle; } }
		SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * L_0 = __this->get_action_2();
		NullCheck(L_0);
		uint64_t L_1 = VirtFuncInvoker0< uint64_t >::Invoke(18 /* System.UInt64 Valve.VR.SteamVR_Action::get_handle() */, L_0);
		V_0 = L_1;
		goto IL_000f;
	}

IL_000f:
	{
		// public ulong handle { get { return action.handle; } }
		uint64_t L_2 = V_0;
		return L_2;
	}
}
// Valve.VR.SteamVR_ActionSet Valve.VR.SteamVR_Action_Source::get_actionSet()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * SteamVR_Action_Source_get_actionSet_mF2BE8CE30F960A11115AD000921BBF16088CF5B2 (SteamVR_Action_Source_t9D7428CDE39924074518EE6233D9A4FAB0C33CB0 * __this, const RuntimeMethod* method)
{
	SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * V_0 = NULL;
	{
		// public SteamVR_ActionSet actionSet { get { return action.actionSet; } }
		SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * L_0 = __this->get_action_2();
		NullCheck(L_0);
		SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * L_1 = VirtFuncInvoker0< SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * >::Invoke(19 /* Valve.VR.SteamVR_ActionSet Valve.VR.SteamVR_Action::get_actionSet() */, L_0);
		V_0 = L_1;
		goto IL_000f;
	}

IL_000f:
	{
		// public SteamVR_ActionSet actionSet { get { return action.actionSet; } }
		SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * L_2 = V_0;
		return L_2;
	}
}
// Valve.VR.SteamVR_ActionDirections Valve.VR.SteamVR_Action_Source::get_direction()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t SteamVR_Action_Source_get_direction_mDB8ACACE7D1530509D256AD658745A03218C0572 (SteamVR_Action_Source_t9D7428CDE39924074518EE6233D9A4FAB0C33CB0 * __this, const RuntimeMethod* method)
{
	int32_t V_0 = 0;
	{
		// public SteamVR_ActionDirections direction { get { return action.direction; } }
		SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * L_0 = __this->get_action_2();
		NullCheck(L_0);
		int32_t L_1 = VirtFuncInvoker0< int32_t >::Invoke(20 /* Valve.VR.SteamVR_ActionDirections Valve.VR.SteamVR_Action::get_direction() */, L_0);
		V_0 = L_1;
		goto IL_000f;
	}

IL_000f:
	{
		// public SteamVR_ActionDirections direction { get { return action.direction; } }
		int32_t L_2 = V_0;
		return L_2;
	}
}
// Valve.VR.SteamVR_Input_Sources Valve.VR.SteamVR_Action_Source::get_inputSource()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t SteamVR_Action_Source_get_inputSource_mAA1928183BB06E5C8CF950F65BA80635C25535D4 (SteamVR_Action_Source_t9D7428CDE39924074518EE6233D9A4FAB0C33CB0 * __this, const RuntimeMethod* method)
{
	{
		// public SteamVR_Input_Sources inputSource { get; protected set; }
		int32_t L_0 = __this->get_U3CinputSourceU3Ek__BackingField_0();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_Action_Source::set_inputSource(Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Source_set_inputSource_m9871BD4130FD7649FAF628248DCAEAE32B19236E (SteamVR_Action_Source_t9D7428CDE39924074518EE6233D9A4FAB0C33CB0 * __this, int32_t ___value0, const RuntimeMethod* method)
{
	{
		// public SteamVR_Input_Sources inputSource { get; protected set; }
		int32_t L_0 = ___value0;
		__this->set_U3CinputSourceU3Ek__BackingField_0(L_0);
		return;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Source::get_setActive()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Source_get_setActive_mB8D4F2911446984A8CE574F8A13206FCD3AD9125 (SteamVR_Action_Source_t9D7428CDE39924074518EE6233D9A4FAB0C33CB0 * __this, const RuntimeMethod* method)
{
	bool V_0 = false;
	{
		// public bool setActive { get { return actionSet.IsActive(inputSource); } }
		SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * L_0 = SteamVR_Action_Source_get_actionSet_mF2BE8CE30F960A11115AD000921BBF16088CF5B2(__this, /*hidden argument*/NULL);
		int32_t L_1 = SteamVR_Action_Source_get_inputSource_mAA1928183BB06E5C8CF950F65BA80635C25535D4_inline(__this, /*hidden argument*/NULL);
		NullCheck(L_0);
		bool L_2 = SteamVR_ActionSet_IsActive_m2C7FE33DC70E0D8C3D7E06F024C3409A116CE127(L_0, L_1, /*hidden argument*/NULL);
		V_0 = L_2;
		goto IL_0015;
	}

IL_0015:
	{
		// public bool setActive { get { return actionSet.IsActive(inputSource); } }
		bool L_3 = V_0;
		return L_3;
	}
}
// System.Void Valve.VR.SteamVR_Action_Source::Preinitialize(Valve.VR.SteamVR_Action,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Source_Preinitialize_mC135AE740FECE5EA34FF516A739C0F58420521F9 (SteamVR_Action_Source_t9D7428CDE39924074518EE6233D9A4FAB0C33CB0 * __this, SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * ___wrappingAction0, int32_t ___forInputSource1, const RuntimeMethod* method)
{
	{
		// action = wrappingAction;
		SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * L_0 = ___wrappingAction0;
		__this->set_action_2(L_0);
		// inputSource = forInputSource;
		int32_t L_1 = ___forInputSource1;
		SteamVR_Action_Source_set_inputSource_m9871BD4130FD7649FAF628248DCAEAE32B19236E_inline(__this, L_1, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Source::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Source__ctor_mE39BAB3469E03218CEC35F563C2B9B36ADD3D2A1 (SteamVR_Action_Source_t9D7428CDE39924074518EE6233D9A4FAB0C33CB0 * __this, const RuntimeMethod* method)
{
	{
		// public SteamVR_Action_Source() { }
		Object__ctor_m925ECA5E85CA100E3FB86A4F9E15C120E9A184C0(__this, /*hidden argument*/NULL);
		// public SteamVR_Action_Source() { }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Source::Initialize()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Source_Initialize_m2F3A973A4338854E06EA51D28CA96DAB1E5D29C9 (SteamVR_Action_Source_t9D7428CDE39924074518EE6233D9A4FAB0C33CB0 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Source_Initialize_m2F3A973A4338854E06EA51D28CA96DAB1E5D29C9_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// inputSourceHandle = SteamVR_Input_Source.GetHandle(inputSource);
		int32_t L_0 = SteamVR_Action_Source_get_inputSource_mAA1928183BB06E5C8CF950F65BA80635C25535D4_inline(__this, /*hidden argument*/NULL);
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Input_Source_tAFDB40851F8E134E08DD2DD0BC1C1770705E81D0_il2cpp_TypeInfo_var);
		uint64_t L_1 = SteamVR_Input_Source_GetHandle_m0FAD747327B66172ACE9A9C1CD14FEDF685C7D3B(L_0, /*hidden argument*/NULL);
		__this->set_inputSourceHandle_1(L_1);
		// }
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.String Valve.VR.SteamVR_Action_Source_Map::get_fullPath()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* SteamVR_Action_Source_Map_get_fullPath_m59D22AC4A2ADB2B88085A1B676D686350CE1EE2A (SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17 * __this, const RuntimeMethod* method)
{
	{
		// public string fullPath { get; protected set; }
		String_t* L_0 = __this->get_U3CfullPathU3Ek__BackingField_0();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_Action_Source_Map::set_fullPath(System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Source_Map_set_fullPath_m7532C77C62FC0CE955B4CF3581815398179B33EF (SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17 * __this, String_t* ___value0, const RuntimeMethod* method)
{
	{
		// public string fullPath { get; protected set; }
		String_t* L_0 = ___value0;
		__this->set_U3CfullPathU3Ek__BackingField_0(L_0);
		return;
	}
}
// System.UInt64 Valve.VR.SteamVR_Action_Source_Map::get_handle()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR uint64_t SteamVR_Action_Source_Map_get_handle_m4D0B503DEA30F420E162BD5ECBD57D7BD1033E0F (SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17 * __this, const RuntimeMethod* method)
{
	{
		// public ulong handle { get; protected set; }
		uint64_t L_0 = __this->get_U3ChandleU3Ek__BackingField_1();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_Action_Source_Map::set_handle(System.UInt64)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Source_Map_set_handle_mD2434905F9AA79607DC207C7C7855E0DCDFAF417 (SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17 * __this, uint64_t ___value0, const RuntimeMethod* method)
{
	{
		// public ulong handle { get; protected set; }
		uint64_t L_0 = ___value0;
		__this->set_U3ChandleU3Ek__BackingField_1(L_0);
		return;
	}
}
// Valve.VR.SteamVR_ActionSet Valve.VR.SteamVR_Action_Source_Map::get_actionSet()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * SteamVR_Action_Source_Map_get_actionSet_mE10477F66D710B36A4DB0BDEF9DC7788CD86D893 (SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17 * __this, const RuntimeMethod* method)
{
	{
		// public SteamVR_ActionSet actionSet { get; protected set; }
		SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * L_0 = __this->get_U3CactionSetU3Ek__BackingField_2();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_Action_Source_Map::set_actionSet(Valve.VR.SteamVR_ActionSet)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Source_Map_set_actionSet_mB40E957F963E0E3755C77F78B2094A06834B366F (SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17 * __this, SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * ___value0, const RuntimeMethod* method)
{
	{
		// public SteamVR_ActionSet actionSet { get; protected set; }
		SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * L_0 = ___value0;
		__this->set_U3CactionSetU3Ek__BackingField_2(L_0);
		return;
	}
}
// Valve.VR.SteamVR_ActionDirections Valve.VR.SteamVR_Action_Source_Map::get_direction()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t SteamVR_Action_Source_Map_get_direction_m57FCD20566320667DDD47CCF0743E7AF33971413 (SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17 * __this, const RuntimeMethod* method)
{
	{
		// public SteamVR_ActionDirections direction { get; protected set; }
		int32_t L_0 = __this->get_U3CdirectionU3Ek__BackingField_3();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_Action_Source_Map::set_direction(Valve.VR.SteamVR_ActionDirections)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Source_Map_set_direction_m952BA1C44972F3D692FB1E5A53B275A397B86F02 (SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17 * __this, int32_t ___value0, const RuntimeMethod* method)
{
	{
		// public SteamVR_ActionDirections direction { get; protected set; }
		int32_t L_0 = ___value0;
		__this->set_U3CdirectionU3Ek__BackingField_3(L_0);
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Source_Map::PreInitialize(Valve.VR.SteamVR_Action,System.String,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Source_Map_PreInitialize_m92B10A3664CE21397144BE519EB0F549E43DAE5F (SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17 * __this, SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * ___wrappingAction0, String_t* ___actionPath1, bool ___throwErrors2, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Source_Map_PreInitialize_m92B10A3664CE21397144BE519EB0F549E43DAE5F_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	SteamVR_Input_SourcesU5BU5D_t735048547A8599BA461FE16B1BC029194E1F184A* V_0 = NULL;
	int32_t V_1 = 0;
	bool V_2 = false;
	{
		// fullPath = actionPath;
		String_t* L_0 = ___actionPath1;
		SteamVR_Action_Source_Map_set_fullPath_m7532C77C62FC0CE955B4CF3581815398179B33EF_inline(__this, L_0, /*hidden argument*/NULL);
		// action = wrappingAction;
		SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * L_1 = ___wrappingAction0;
		__this->set_action_4(L_1);
		// actionSet = SteamVR_Input.GetActionSetFromPath(GetActionSetPath());
		String_t* L_2 = SteamVR_Action_Source_Map_GetActionSetPath_m9313321D0AA1100C49D6281C5078CABA46ABA787(__this, /*hidden argument*/NULL);
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Input_tCE4A1EC6C51592CB9DCD7B860984CB2C4DD937BF_il2cpp_TypeInfo_var);
		SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * L_3 = SteamVR_Input_GetActionSetFromPath_mC6422D2A975439C138435CAFF70D2277EA94CA61(L_2, (bool)0, /*hidden argument*/NULL);
		SteamVR_Action_Source_Map_set_actionSet_mB40E957F963E0E3755C77F78B2094A06834B366F_inline(__this, L_3, /*hidden argument*/NULL);
		// direction = GetActionDirection();
		int32_t L_4 = SteamVR_Action_Source_Map_GetActionDirection_mA48BA216E276F882C863341B7197E590B6471119(__this, /*hidden argument*/NULL);
		SteamVR_Action_Source_Map_set_direction_m952BA1C44972F3D692FB1E5A53B275A397B86F02_inline(__this, L_4, /*hidden argument*/NULL);
		// SteamVR_Input_Sources[] sources = SteamVR_Input_Source.GetAllSources();
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Input_Source_tAFDB40851F8E134E08DD2DD0BC1C1770705E81D0_il2cpp_TypeInfo_var);
		SteamVR_Input_SourcesU5BU5D_t735048547A8599BA461FE16B1BC029194E1F184A* L_5 = SteamVR_Input_Source_GetAllSources_m3FEDAE791D389B6ED4E1A7665B1F6381780C8352(/*hidden argument*/NULL);
		V_0 = L_5;
		// for (int sourceIndex = 0; sourceIndex < sources.Length; sourceIndex++)
		V_1 = 0;
		goto IL_004b;
	}

IL_003a:
	{
		// PreinitializeMap(sources[sourceIndex], wrappingAction);
		SteamVR_Input_SourcesU5BU5D_t735048547A8599BA461FE16B1BC029194E1F184A* L_6 = V_0;
		int32_t L_7 = V_1;
		NullCheck(L_6);
		int32_t L_8 = L_7;
		int32_t L_9 = (int32_t)(L_6)->GetAt(static_cast<il2cpp_array_size_t>(L_8));
		SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * L_10 = ___wrappingAction0;
		VirtActionInvoker2< int32_t, SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * >::Invoke(5 /* System.Void Valve.VR.SteamVR_Action_Source_Map::PreinitializeMap(Valve.VR.SteamVR_Input_Sources,Valve.VR.SteamVR_Action) */, __this, L_9, L_10);
		// for (int sourceIndex = 0; sourceIndex < sources.Length; sourceIndex++)
		int32_t L_11 = V_1;
		V_1 = ((int32_t)il2cpp_codegen_add((int32_t)L_11, (int32_t)1));
	}

IL_004b:
	{
		// for (int sourceIndex = 0; sourceIndex < sources.Length; sourceIndex++)
		int32_t L_12 = V_1;
		SteamVR_Input_SourcesU5BU5D_t735048547A8599BA461FE16B1BC029194E1F184A* L_13 = V_0;
		NullCheck(L_13);
		V_2 = (bool)((((int32_t)L_12) < ((int32_t)(((int32_t)((int32_t)(((RuntimeArray*)L_13)->max_length))))))? 1 : 0);
		bool L_14 = V_2;
		if (L_14)
		{
			goto IL_003a;
		}
	}
	{
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Source_Map::Initialize()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Source_Map_Initialize_m026286BBD5EDFADDDD6493E5E6B632914BDD7384 (SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Source_Map_Initialize_m026286BBD5EDFADDDD6493E5E6B632914BDD7384_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	uint64_t V_0 = 0;
	int32_t V_1 = 0;
	bool V_2 = false;
	{
		// ulong newHandle = 0;
		V_0 = (((int64_t)((int64_t)0)));
		// EVRInputError err = OpenVR.Input.GetActionHandle(fullPath.ToLowerInvariant(), ref newHandle);
		IL2CPP_RUNTIME_CLASS_INIT(OpenVR_t89189C917B539750153B18DDDCB4F7D9C8EF004D_il2cpp_TypeInfo_var);
		CVRInput_t8458E224B9D7EFD4A5B102EAA06F8F365A25A53A * L_0 = OpenVR_get_Input_mF290A715AD07D4B7F8844AA79293934B7999CE04(/*hidden argument*/NULL);
		String_t* L_1 = SteamVR_Action_Source_Map_get_fullPath_m59D22AC4A2ADB2B88085A1B676D686350CE1EE2A_inline(__this, /*hidden argument*/NULL);
		NullCheck(L_1);
		String_t* L_2 = String_ToLowerInvariant_m197BD65B6582DC546FF1BC398161EEFA708F799E(L_1, /*hidden argument*/NULL);
		NullCheck(L_0);
		int32_t L_3 = CVRInput_GetActionHandle_mF3DB37B5ED5E47F0E024CB4CDA9CC952CFFABF36(L_0, L_2, (uint64_t*)(&V_0), /*hidden argument*/NULL);
		V_1 = L_3;
		// handle = newHandle;
		uint64_t L_4 = V_0;
		SteamVR_Action_Source_Map_set_handle_mD2434905F9AA79607DC207C7C7855E0DCDFAF417_inline(__this, L_4, /*hidden argument*/NULL);
		// if (err != EVRInputError.None)
		int32_t L_5 = V_1;
		V_2 = (bool)((!(((uint32_t)L_5) <= ((uint32_t)0)))? 1 : 0);
		bool L_6 = V_2;
		if (!L_6)
		{
			goto IL_0059;
		}
	}
	{
		// Debug.LogError("<b>[SteamVR]</b> GetActionHandle (" + fullPath.ToLowerInvariant() + ") error: " + err.ToString());
		String_t* L_7 = SteamVR_Action_Source_Map_get_fullPath_m59D22AC4A2ADB2B88085A1B676D686350CE1EE2A_inline(__this, /*hidden argument*/NULL);
		NullCheck(L_7);
		String_t* L_8 = String_ToLowerInvariant_m197BD65B6582DC546FF1BC398161EEFA708F799E(L_7, /*hidden argument*/NULL);
		RuntimeObject * L_9 = Box(EVRInputError_tE4C895A0D1F18C0024F5C180FF3962B056DA8A71_il2cpp_TypeInfo_var, (&V_1));
		NullCheck(L_9);
		String_t* L_10 = VirtFuncInvoker0< String_t* >::Invoke(3 /* System.String System.Object::ToString() */, L_9);
		V_1 = *(int32_t*)UnBox(L_9);
		String_t* L_11 = String_Concat_mDD2E38332DED3A8C088D38D78A0E0BEB5091DA64(_stringLiteral1085AA8DD5D0232F772D5CA5EA871BBE2F761FB0, L_8, _stringLiteral82053ECBCAD6503F26FE33F5976A1604F67CDD45, L_10, /*hidden argument*/NULL);
		IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
		Debug_LogError_m3BCF9B78263152261565DCA9DB7D55F0C391ED29(L_11, /*hidden argument*/NULL);
	}

IL_0059:
	{
		// }
		return;
	}
}
// System.String Valve.VR.SteamVR_Action_Source_Map::GetActionSetPath()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* SteamVR_Action_Source_Map_GetActionSetPath_m9313321D0AA1100C49D6281C5078CABA46ABA787 (SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17 * __this, const RuntimeMethod* method)
{
	int32_t V_0 = 0;
	int32_t V_1 = 0;
	int32_t V_2 = 0;
	int32_t V_3 = 0;
	String_t* V_4 = NULL;
	{
		// int actionsEndIndex = fullPath.IndexOf('/', 1);
		String_t* L_0 = SteamVR_Action_Source_Map_get_fullPath_m59D22AC4A2ADB2B88085A1B676D686350CE1EE2A_inline(__this, /*hidden argument*/NULL);
		NullCheck(L_0);
		int32_t L_1 = String_IndexOf_m66F6178DB4B2F61F4FAFD8B75787D0AB142ADD7D(L_0, ((int32_t)47), 1, /*hidden argument*/NULL);
		V_0 = L_1;
		// int setStartIndex = actionsEndIndex + 1;
		int32_t L_2 = V_0;
		V_1 = ((int32_t)il2cpp_codegen_add((int32_t)L_2, (int32_t)1));
		// int setEndIndex = fullPath.IndexOf('/', setStartIndex);
		String_t* L_3 = SteamVR_Action_Source_Map_get_fullPath_m59D22AC4A2ADB2B88085A1B676D686350CE1EE2A_inline(__this, /*hidden argument*/NULL);
		int32_t L_4 = V_1;
		NullCheck(L_3);
		int32_t L_5 = String_IndexOf_m66F6178DB4B2F61F4FAFD8B75787D0AB142ADD7D(L_3, ((int32_t)47), L_4, /*hidden argument*/NULL);
		V_2 = L_5;
		// int count = setEndIndex;
		int32_t L_6 = V_2;
		V_3 = L_6;
		// return fullPath.Substring(0, count);
		String_t* L_7 = SteamVR_Action_Source_Map_get_fullPath_m59D22AC4A2ADB2B88085A1B676D686350CE1EE2A_inline(__this, /*hidden argument*/NULL);
		int32_t L_8 = V_3;
		NullCheck(L_7);
		String_t* L_9 = String_Substring_mB593C0A320C683E6E47EFFC0A12B7A465E5E43BB(L_7, 0, L_8, /*hidden argument*/NULL);
		V_4 = L_9;
		goto IL_0036;
	}

IL_0036:
	{
		// }
		String_t* L_10 = V_4;
		return L_10;
	}
}
// Valve.VR.SteamVR_ActionDirections Valve.VR.SteamVR_Action_Source_Map::GetActionDirection()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t SteamVR_Action_Source_Map_GetActionDirection_mA48BA216E276F882C863341B7197E590B6471119 (SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Source_Map_GetActionDirection_mA48BA216E276F882C863341B7197E590B6471119_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	int32_t V_1 = 0;
	int32_t V_2 = 0;
	int32_t V_3 = 0;
	int32_t V_4 = 0;
	String_t* V_5 = NULL;
	bool V_6 = false;
	int32_t V_7 = 0;
	bool V_8 = false;
	{
		// int actionsEndIndex = fullPath.IndexOf('/', 1);
		String_t* L_0 = SteamVR_Action_Source_Map_get_fullPath_m59D22AC4A2ADB2B88085A1B676D686350CE1EE2A_inline(__this, /*hidden argument*/NULL);
		NullCheck(L_0);
		int32_t L_1 = String_IndexOf_m66F6178DB4B2F61F4FAFD8B75787D0AB142ADD7D(L_0, ((int32_t)47), 1, /*hidden argument*/NULL);
		V_0 = L_1;
		// int setStartIndex = actionsEndIndex + 1;
		int32_t L_2 = V_0;
		V_1 = ((int32_t)il2cpp_codegen_add((int32_t)L_2, (int32_t)1));
		// int setEndIndex = fullPath.IndexOf('/', setStartIndex);
		String_t* L_3 = SteamVR_Action_Source_Map_get_fullPath_m59D22AC4A2ADB2B88085A1B676D686350CE1EE2A_inline(__this, /*hidden argument*/NULL);
		int32_t L_4 = V_1;
		NullCheck(L_3);
		int32_t L_5 = String_IndexOf_m66F6178DB4B2F61F4FAFD8B75787D0AB142ADD7D(L_3, ((int32_t)47), L_4, /*hidden argument*/NULL);
		V_2 = L_5;
		// int directionEndIndex = fullPath.IndexOf('/', setEndIndex + 1);
		String_t* L_6 = SteamVR_Action_Source_Map_get_fullPath_m59D22AC4A2ADB2B88085A1B676D686350CE1EE2A_inline(__this, /*hidden argument*/NULL);
		int32_t L_7 = V_2;
		NullCheck(L_6);
		int32_t L_8 = String_IndexOf_m66F6178DB4B2F61F4FAFD8B75787D0AB142ADD7D(L_6, ((int32_t)47), ((int32_t)il2cpp_codegen_add((int32_t)L_7, (int32_t)1)), /*hidden argument*/NULL);
		V_3 = L_8;
		// int count = directionEndIndex - setEndIndex - 1;
		int32_t L_9 = V_3;
		int32_t L_10 = V_2;
		V_4 = ((int32_t)il2cpp_codegen_subtract((int32_t)((int32_t)il2cpp_codegen_subtract((int32_t)L_9, (int32_t)L_10)), (int32_t)1));
		// string direction = fullPath.Substring(setEndIndex + 1, count);
		String_t* L_11 = SteamVR_Action_Source_Map_get_fullPath_m59D22AC4A2ADB2B88085A1B676D686350CE1EE2A_inline(__this, /*hidden argument*/NULL);
		int32_t L_12 = V_2;
		int32_t L_13 = V_4;
		NullCheck(L_11);
		String_t* L_14 = String_Substring_mB593C0A320C683E6E47EFFC0A12B7A465E5E43BB(L_11, ((int32_t)il2cpp_codegen_add((int32_t)L_12, (int32_t)1)), L_13, /*hidden argument*/NULL);
		V_5 = L_14;
		// if (direction == inLowered)
		String_t* L_15 = V_5;
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17_il2cpp_TypeInfo_var);
		String_t* L_16 = ((SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17_il2cpp_TypeInfo_var))->get_inLowered_5();
		bool L_17 = String_op_Equality_m139F0E4195AE2F856019E63B241F36F016997FCE(L_15, L_16, /*hidden argument*/NULL);
		V_6 = L_17;
		bool L_18 = V_6;
		if (!L_18)
		{
			goto IL_0064;
		}
	}
	{
		// return SteamVR_ActionDirections.In;
		V_7 = 0;
		goto IL_0092;
	}

IL_0064:
	{
		// else if (direction == outLowered)
		String_t* L_19 = V_5;
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17_il2cpp_TypeInfo_var);
		String_t* L_20 = ((SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17_il2cpp_TypeInfo_var))->get_outLowered_6();
		bool L_21 = String_op_Equality_m139F0E4195AE2F856019E63B241F36F016997FCE(L_19, L_20, /*hidden argument*/NULL);
		V_8 = L_21;
		bool L_22 = V_8;
		if (!L_22)
		{
			goto IL_007b;
		}
	}
	{
		// return SteamVR_ActionDirections.Out;
		V_7 = 1;
		goto IL_0092;
	}

IL_007b:
	{
		// Debug.LogError("Could not find match for direction: " + direction);
		String_t* L_23 = V_5;
		String_t* L_24 = String_Concat_mB78D0094592718DA6D5DB6C712A9C225631666BE(_stringLiteral258E23932207BA363BB8C0D5C6F463CBDBE1EFC5, L_23, /*hidden argument*/NULL);
		IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
		Debug_LogError_m3BCF9B78263152261565DCA9DB7D55F0C391ED29(L_24, /*hidden argument*/NULL);
		// return SteamVR_ActionDirections.In;
		V_7 = 0;
		goto IL_0092;
	}

IL_0092:
	{
		// }
		int32_t L_25 = V_7;
		return L_25;
	}
}
// System.Void Valve.VR.SteamVR_Action_Source_Map::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Source_Map__ctor_m447250764F35CA25B89A1133E402FA825A68ADF2 (SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17 * __this, const RuntimeMethod* method)
{
	{
		Object__ctor_m925ECA5E85CA100E3FB86A4F9E15C120E9A184C0(__this, /*hidden argument*/NULL);
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Source_Map::.cctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Source_Map__cctor_mA2B070AE1F0DA7660630C182FFE245986C0CF8DF (const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Source_Map__cctor_mA2B070AE1F0DA7660630C182FFE245986C0CF8DF_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// private static string inLowered = "IN".ToLower(System.Globalization.CultureInfo.CurrentCulture);
		IL2CPP_RUNTIME_CLASS_INIT(CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F_il2cpp_TypeInfo_var);
		CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F * L_0 = CultureInfo_get_CurrentCulture_mD86F3D8E5D332FB304F80D9B9CA4DE849C2A6831(/*hidden argument*/NULL);
		NullCheck(_stringLiteral6FCA55CA3C828A46BFE96A10E69F572B61CE540C);
		String_t* L_1 = String_ToLower_m91732DBE4AE31B77EA3BB2C185E66513919968A5(_stringLiteral6FCA55CA3C828A46BFE96A10E69F572B61CE540C, L_0, /*hidden argument*/NULL);
		((SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17_il2cpp_TypeInfo_var))->set_inLowered_5(L_1);
		// private static string outLowered = "OUT".ToLower(System.Globalization.CultureInfo.CurrentCulture);
		CultureInfo_t345AC6924134F039ED9A11F3E03F8E91B6A3225F * L_2 = CultureInfo_get_CurrentCulture_mD86F3D8E5D332FB304F80D9B9CA4DE849C2A6831(/*hidden argument*/NULL);
		NullCheck(_stringLiteral5D84EB9E92DC661A577D3ADFBA33F1D74C56B13F);
		String_t* L_3 = String_ToLower_m91732DBE4AE31B77EA3BB2C185E66513919968A5(_stringLiteral5D84EB9E92DC661A577D3ADFBA33F1D74C56B13F, L_2, /*hidden argument*/NULL);
		((SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17_il2cpp_TypeInfo_var))->set_outLowered_6(L_3);
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Action_Vector2::add_onChange(Valve.VR.SteamVR_Action_Vector2/ChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_add_onChange_m2E54BCC55EB640613E93BD19303BE637F65A92E2 (SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * __this, ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector2_add_onChange_m2E54BCC55EB640613E93BD19303BE637F65A92E2_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// { add { sourceMap[SteamVR_Input_Sources.Any].onChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onChange -= value; } }
		SteamVR_Action_Vector2_Source_Map_tA43BF0AE8C89C3094C8375D1A82AE8676DA218D3 * L_0 = ((SteamVR_Action_2_t83C041411A0CA61D62EE3A4F510D83333D049258 *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573_RuntimeMethod_var);
		ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 * L_2 = ___value0;
		NullCheck(L_1);
		SteamVR_Action_Vector2_Source_add_onChange_m6C1A0066B7F15BFA3348848BFC482FE665B0649E(L_1, L_2, /*hidden argument*/NULL);
		// { add { sourceMap[SteamVR_Input_Sources.Any].onChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onChange -= value; } }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector2::remove_onChange(Valve.VR.SteamVR_Action_Vector2/ChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_remove_onChange_m77DB5FCCDE335AD1CA8C3C2AF3C40837EC43F1F0 (SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * __this, ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector2_remove_onChange_m77DB5FCCDE335AD1CA8C3C2AF3C40837EC43F1F0_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// { add { sourceMap[SteamVR_Input_Sources.Any].onChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onChange -= value; } }
		SteamVR_Action_Vector2_Source_Map_tA43BF0AE8C89C3094C8375D1A82AE8676DA218D3 * L_0 = ((SteamVR_Action_2_t83C041411A0CA61D62EE3A4F510D83333D049258 *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573_RuntimeMethod_var);
		ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 * L_2 = ___value0;
		NullCheck(L_1);
		SteamVR_Action_Vector2_Source_remove_onChange_m4A6174FB66AC722D2DDA3F70045A3AE0B7578C13(L_1, L_2, /*hidden argument*/NULL);
		// { add { sourceMap[SteamVR_Input_Sources.Any].onChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onChange -= value; } }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector2::add_onUpdate(Valve.VR.SteamVR_Action_Vector2/UpdateHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_add_onUpdate_mCA2F84092B776F04C0FA3E8461B5DADA42E43906 (SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * __this, UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector2_add_onUpdate_mCA2F84092B776F04C0FA3E8461B5DADA42E43906_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// { add { sourceMap[SteamVR_Input_Sources.Any].onUpdate += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onUpdate -= value; } }
		SteamVR_Action_Vector2_Source_Map_tA43BF0AE8C89C3094C8375D1A82AE8676DA218D3 * L_0 = ((SteamVR_Action_2_t83C041411A0CA61D62EE3A4F510D83333D049258 *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573_RuntimeMethod_var);
		UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 * L_2 = ___value0;
		NullCheck(L_1);
		SteamVR_Action_Vector2_Source_add_onUpdate_m9172BD3EC7BDD734F533EC8BDF91C1D2F1B3D94D(L_1, L_2, /*hidden argument*/NULL);
		// { add { sourceMap[SteamVR_Input_Sources.Any].onUpdate += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onUpdate -= value; } }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector2::remove_onUpdate(Valve.VR.SteamVR_Action_Vector2/UpdateHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_remove_onUpdate_m4BD84B90D18629BEB3A1280A09F3A0D5D8515465 (SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * __this, UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector2_remove_onUpdate_m4BD84B90D18629BEB3A1280A09F3A0D5D8515465_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// { add { sourceMap[SteamVR_Input_Sources.Any].onUpdate += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onUpdate -= value; } }
		SteamVR_Action_Vector2_Source_Map_tA43BF0AE8C89C3094C8375D1A82AE8676DA218D3 * L_0 = ((SteamVR_Action_2_t83C041411A0CA61D62EE3A4F510D83333D049258 *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573_RuntimeMethod_var);
		UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 * L_2 = ___value0;
		NullCheck(L_1);
		SteamVR_Action_Vector2_Source_remove_onUpdate_m54A0BCD658A033B1D95FEAA48FCA4165F8E33CD3(L_1, L_2, /*hidden argument*/NULL);
		// { add { sourceMap[SteamVR_Input_Sources.Any].onUpdate += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onUpdate -= value; } }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector2::add_onAxis(Valve.VR.SteamVR_Action_Vector2/AxisHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_add_onAxis_mD6AD44E8467900BFC690827ACC860F9BDC6213C6 (SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * __this, AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector2_add_onAxis_mD6AD44E8467900BFC690827ACC860F9BDC6213C6_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// { add { sourceMap[SteamVR_Input_Sources.Any].onAxis += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onAxis -= value; } }
		SteamVR_Action_Vector2_Source_Map_tA43BF0AE8C89C3094C8375D1A82AE8676DA218D3 * L_0 = ((SteamVR_Action_2_t83C041411A0CA61D62EE3A4F510D83333D049258 *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573_RuntimeMethod_var);
		AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 * L_2 = ___value0;
		NullCheck(L_1);
		SteamVR_Action_Vector2_Source_add_onAxis_mDB5D5F366F588EC53B657FE1E8E76AD98D31FE92(L_1, L_2, /*hidden argument*/NULL);
		// { add { sourceMap[SteamVR_Input_Sources.Any].onAxis += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onAxis -= value; } }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector2::remove_onAxis(Valve.VR.SteamVR_Action_Vector2/AxisHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_remove_onAxis_mD9B1611CF8ABF8163817BF48CAF68C8F9184687F (SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * __this, AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector2_remove_onAxis_mD9B1611CF8ABF8163817BF48CAF68C8F9184687F_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// { add { sourceMap[SteamVR_Input_Sources.Any].onAxis += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onAxis -= value; } }
		SteamVR_Action_Vector2_Source_Map_tA43BF0AE8C89C3094C8375D1A82AE8676DA218D3 * L_0 = ((SteamVR_Action_2_t83C041411A0CA61D62EE3A4F510D83333D049258 *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573_RuntimeMethod_var);
		AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 * L_2 = ___value0;
		NullCheck(L_1);
		SteamVR_Action_Vector2_Source_remove_onAxis_m0C77619D89CD25BCD1475F3E1FF3F40B112D0E8B(L_1, L_2, /*hidden argument*/NULL);
		// { add { sourceMap[SteamVR_Input_Sources.Any].onAxis += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onAxis -= value; } }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector2::add_onActiveChange(Valve.VR.SteamVR_Action_Vector2/ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_add_onActiveChange_m9EA2FF019B7968EB2BA9BF053F590FD97F20EE92 (SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * __this, ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector2_add_onActiveChange_m9EA2FF019B7968EB2BA9BF053F590FD97F20EE92_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// { add { sourceMap[SteamVR_Input_Sources.Any].onActiveChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onActiveChange -= value; } }
		SteamVR_Action_Vector2_Source_Map_tA43BF0AE8C89C3094C8375D1A82AE8676DA218D3 * L_0 = ((SteamVR_Action_2_t83C041411A0CA61D62EE3A4F510D83333D049258 *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573_RuntimeMethod_var);
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * L_2 = ___value0;
		NullCheck(L_1);
		SteamVR_Action_Vector2_Source_add_onActiveChange_mF1C9AA7D52BB851FC037A050CA2E477248691A7E(L_1, L_2, /*hidden argument*/NULL);
		// { add { sourceMap[SteamVR_Input_Sources.Any].onActiveChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onActiveChange -= value; } }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector2::remove_onActiveChange(Valve.VR.SteamVR_Action_Vector2/ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_remove_onActiveChange_mAEC443E675E12BF7B828ABBC60434149D960F1A7 (SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * __this, ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector2_remove_onActiveChange_mAEC443E675E12BF7B828ABBC60434149D960F1A7_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// { add { sourceMap[SteamVR_Input_Sources.Any].onActiveChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onActiveChange -= value; } }
		SteamVR_Action_Vector2_Source_Map_tA43BF0AE8C89C3094C8375D1A82AE8676DA218D3 * L_0 = ((SteamVR_Action_2_t83C041411A0CA61D62EE3A4F510D83333D049258 *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573_RuntimeMethod_var);
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * L_2 = ___value0;
		NullCheck(L_1);
		SteamVR_Action_Vector2_Source_remove_onActiveChange_m59715CB9C8767EEA397A11B60489B7A7767462CF(L_1, L_2, /*hidden argument*/NULL);
		// { add { sourceMap[SteamVR_Input_Sources.Any].onActiveChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onActiveChange -= value; } }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector2::add_onActiveBindingChange(Valve.VR.SteamVR_Action_Vector2/ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_add_onActiveBindingChange_m963BB4FE60F0CDE3896183F29151E51F079A24A7 (SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * __this, ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector2_add_onActiveBindingChange_m963BB4FE60F0CDE3896183F29151E51F079A24A7_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// { add { sourceMap[SteamVR_Input_Sources.Any].onActiveBindingChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onActiveBindingChange -= value; } }
		SteamVR_Action_Vector2_Source_Map_tA43BF0AE8C89C3094C8375D1A82AE8676DA218D3 * L_0 = ((SteamVR_Action_2_t83C041411A0CA61D62EE3A4F510D83333D049258 *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573_RuntimeMethod_var);
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * L_2 = ___value0;
		NullCheck(L_1);
		SteamVR_Action_Vector2_Source_add_onActiveBindingChange_m20A8F56D533537F5F8A266864F0D28DB6975ECA9(L_1, L_2, /*hidden argument*/NULL);
		// { add { sourceMap[SteamVR_Input_Sources.Any].onActiveBindingChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onActiveBindingChange -= value; } }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector2::remove_onActiveBindingChange(Valve.VR.SteamVR_Action_Vector2/ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_remove_onActiveBindingChange_m7500E9F9BDA0A03ACEEB0B9D181748D4BAF775D7 (SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * __this, ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector2_remove_onActiveBindingChange_m7500E9F9BDA0A03ACEEB0B9D181748D4BAF775D7_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// { add { sourceMap[SteamVR_Input_Sources.Any].onActiveBindingChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onActiveBindingChange -= value; } }
		SteamVR_Action_Vector2_Source_Map_tA43BF0AE8C89C3094C8375D1A82AE8676DA218D3 * L_0 = ((SteamVR_Action_2_t83C041411A0CA61D62EE3A4F510D83333D049258 *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573_RuntimeMethod_var);
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * L_2 = ___value0;
		NullCheck(L_1);
		SteamVR_Action_Vector2_Source_remove_onActiveBindingChange_m061B7C87671943E15EACAA99CC379C3C335702D5(L_1, L_2, /*hidden argument*/NULL);
		// { add { sourceMap[SteamVR_Input_Sources.Any].onActiveBindingChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onActiveBindingChange -= value; } }
		return;
	}
}
// UnityEngine.Vector2 Valve.VR.SteamVR_Action_Vector2::get_axis()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  SteamVR_Action_Vector2_get_axis_mE421CADA54F41607E4F071B793BD5C55171812FB (SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector2_get_axis_mE421CADA54F41607E4F071B793BD5C55171812FB_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  V_0;
	memset((&V_0), 0, sizeof(V_0));
	{
		// public Vector2 axis { get { return sourceMap[SteamVR_Input_Sources.Any].axis; } }
		SteamVR_Action_Vector2_Source_Map_tA43BF0AE8C89C3094C8375D1A82AE8676DA218D3 * L_0 = ((SteamVR_Action_2_t83C041411A0CA61D62EE3A4F510D83333D049258 *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573_RuntimeMethod_var);
		NullCheck(L_1);
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_2 = SteamVR_Action_Vector2_Source_get_axis_mCEB6E517ED0E10BE513D22B23A69F1BE3D5DA2BA_inline(L_1, /*hidden argument*/NULL);
		V_0 = L_2;
		goto IL_0015;
	}

IL_0015:
	{
		// public Vector2 axis { get { return sourceMap[SteamVR_Input_Sources.Any].axis; } }
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_3 = V_0;
		return L_3;
	}
}
// UnityEngine.Vector2 Valve.VR.SteamVR_Action_Vector2::get_lastAxis()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  SteamVR_Action_Vector2_get_lastAxis_m746D1B31C63B141A97FBD0F4138D703FC5F9DEF0 (SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector2_get_lastAxis_m746D1B31C63B141A97FBD0F4138D703FC5F9DEF0_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  V_0;
	memset((&V_0), 0, sizeof(V_0));
	{
		// public Vector2 lastAxis { get { return sourceMap[SteamVR_Input_Sources.Any].lastAxis; } }
		SteamVR_Action_Vector2_Source_Map_tA43BF0AE8C89C3094C8375D1A82AE8676DA218D3 * L_0 = ((SteamVR_Action_2_t83C041411A0CA61D62EE3A4F510D83333D049258 *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573_RuntimeMethod_var);
		NullCheck(L_1);
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_2 = SteamVR_Action_Vector2_Source_get_lastAxis_mD0A1188D33FAD9AAB16CBCC0C073796C76616460_inline(L_1, /*hidden argument*/NULL);
		V_0 = L_2;
		goto IL_0015;
	}

IL_0015:
	{
		// public Vector2 lastAxis { get { return sourceMap[SteamVR_Input_Sources.Any].lastAxis; } }
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_3 = V_0;
		return L_3;
	}
}
// UnityEngine.Vector2 Valve.VR.SteamVR_Action_Vector2::get_delta()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  SteamVR_Action_Vector2_get_delta_m368E3DEDCCE873F323FCB9B85C72103971A2B1E9 (SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector2_get_delta_m368E3DEDCCE873F323FCB9B85C72103971A2B1E9_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  V_0;
	memset((&V_0), 0, sizeof(V_0));
	{
		// public Vector2 delta { get { return sourceMap[SteamVR_Input_Sources.Any].delta; } }
		SteamVR_Action_Vector2_Source_Map_tA43BF0AE8C89C3094C8375D1A82AE8676DA218D3 * L_0 = ((SteamVR_Action_2_t83C041411A0CA61D62EE3A4F510D83333D049258 *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573_RuntimeMethod_var);
		NullCheck(L_1);
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_2 = SteamVR_Action_Vector2_Source_get_delta_m19CFFF4B8014BD4ED43D0C5EDDD909A2F1DF1908_inline(L_1, /*hidden argument*/NULL);
		V_0 = L_2;
		goto IL_0015;
	}

IL_0015:
	{
		// public Vector2 delta { get { return sourceMap[SteamVR_Input_Sources.Any].delta; } }
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_3 = V_0;
		return L_3;
	}
}
// UnityEngine.Vector2 Valve.VR.SteamVR_Action_Vector2::get_lastDelta()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  SteamVR_Action_Vector2_get_lastDelta_mDDAC2B9F3DB61F8B1015F22B61CDD9591FEEEDD7 (SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector2_get_lastDelta_mDDAC2B9F3DB61F8B1015F22B61CDD9591FEEEDD7_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  V_0;
	memset((&V_0), 0, sizeof(V_0));
	{
		// public Vector2 lastDelta { get { return sourceMap[SteamVR_Input_Sources.Any].lastDelta; } }
		SteamVR_Action_Vector2_Source_Map_tA43BF0AE8C89C3094C8375D1A82AE8676DA218D3 * L_0 = ((SteamVR_Action_2_t83C041411A0CA61D62EE3A4F510D83333D049258 *)__this)->get_sourceMap_4();
		NullCheck(L_0);
		SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573_RuntimeMethod_var);
		NullCheck(L_1);
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_2 = SteamVR_Action_Vector2_Source_get_lastDelta_mE21D07B848010D30A36B3C7338B5B615B81598AC_inline(L_1, /*hidden argument*/NULL);
		V_0 = L_2;
		goto IL_0015;
	}

IL_0015:
	{
		// public Vector2 lastDelta { get { return sourceMap[SteamVR_Input_Sources.Any].lastDelta; } }
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_3 = V_0;
		return L_3;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector2::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2__ctor_mD1E4556AF2B0DFA3D91AD96685F317978593D46C (SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector2__ctor_mD1E4556AF2B0DFA3D91AD96685F317978593D46C_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// public SteamVR_Action_Vector2() { }
		SteamVR_Action_In_2__ctor_mC337EE2FE20E16CE0DE3BC0FB61364B227330B64(__this, /*hidden argument*/SteamVR_Action_In_2__ctor_mC337EE2FE20E16CE0DE3BC0FB61364B227330B64_RuntimeMethod_var);
		// public SteamVR_Action_Vector2() { }
		return;
	}
}
// UnityEngine.Vector2 Valve.VR.SteamVR_Action_Vector2::GetAxis(Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  SteamVR_Action_Vector2_GetAxis_m8A479C238CC933D200B7011F525F49CF84C42BC2 (SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * __this, int32_t ___inputSource0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector2_GetAxis_m8A479C238CC933D200B7011F525F49CF84C42BC2_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  V_0;
	memset((&V_0), 0, sizeof(V_0));
	{
		// return sourceMap[inputSource].axis;
		SteamVR_Action_Vector2_Source_Map_tA43BF0AE8C89C3094C8375D1A82AE8676DA218D3 * L_0 = ((SteamVR_Action_2_t83C041411A0CA61D62EE3A4F510D83333D049258 *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource0;
		NullCheck(L_0);
		SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * L_2 = SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573_RuntimeMethod_var);
		NullCheck(L_2);
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_3 = SteamVR_Action_Vector2_Source_get_axis_mCEB6E517ED0E10BE513D22B23A69F1BE3D5DA2BA_inline(L_2, /*hidden argument*/NULL);
		V_0 = L_3;
		goto IL_0015;
	}

IL_0015:
	{
		// }
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_4 = V_0;
		return L_4;
	}
}
// UnityEngine.Vector2 Valve.VR.SteamVR_Action_Vector2::GetAxisDelta(Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  SteamVR_Action_Vector2_GetAxisDelta_m28C52C9103D70A67727BE8BA93551C07951670B0 (SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * __this, int32_t ___inputSource0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector2_GetAxisDelta_m28C52C9103D70A67727BE8BA93551C07951670B0_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  V_0;
	memset((&V_0), 0, sizeof(V_0));
	{
		// return sourceMap[inputSource].delta;
		SteamVR_Action_Vector2_Source_Map_tA43BF0AE8C89C3094C8375D1A82AE8676DA218D3 * L_0 = ((SteamVR_Action_2_t83C041411A0CA61D62EE3A4F510D83333D049258 *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource0;
		NullCheck(L_0);
		SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * L_2 = SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573_RuntimeMethod_var);
		NullCheck(L_2);
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_3 = SteamVR_Action_Vector2_Source_get_delta_m19CFFF4B8014BD4ED43D0C5EDDD909A2F1DF1908_inline(L_2, /*hidden argument*/NULL);
		V_0 = L_3;
		goto IL_0015;
	}

IL_0015:
	{
		// }
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_4 = V_0;
		return L_4;
	}
}
// UnityEngine.Vector2 Valve.VR.SteamVR_Action_Vector2::GetLastAxis(Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  SteamVR_Action_Vector2_GetLastAxis_m4B679A6140787156C4E740F9A68D03D919111484 (SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * __this, int32_t ___inputSource0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector2_GetLastAxis_m4B679A6140787156C4E740F9A68D03D919111484_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  V_0;
	memset((&V_0), 0, sizeof(V_0));
	{
		// return sourceMap[inputSource].lastAxis;
		SteamVR_Action_Vector2_Source_Map_tA43BF0AE8C89C3094C8375D1A82AE8676DA218D3 * L_0 = ((SteamVR_Action_2_t83C041411A0CA61D62EE3A4F510D83333D049258 *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource0;
		NullCheck(L_0);
		SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * L_2 = SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573_RuntimeMethod_var);
		NullCheck(L_2);
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_3 = SteamVR_Action_Vector2_Source_get_lastAxis_mD0A1188D33FAD9AAB16CBCC0C073796C76616460_inline(L_2, /*hidden argument*/NULL);
		V_0 = L_3;
		goto IL_0015;
	}

IL_0015:
	{
		// }
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_4 = V_0;
		return L_4;
	}
}
// UnityEngine.Vector2 Valve.VR.SteamVR_Action_Vector2::GetLastAxisDelta(Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  SteamVR_Action_Vector2_GetLastAxisDelta_mFB4F219149889D017084BD189D659164E91E90C6 (SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * __this, int32_t ___inputSource0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector2_GetLastAxisDelta_mFB4F219149889D017084BD189D659164E91E90C6_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  V_0;
	memset((&V_0), 0, sizeof(V_0));
	{
		// return sourceMap[inputSource].lastDelta;
		SteamVR_Action_Vector2_Source_Map_tA43BF0AE8C89C3094C8375D1A82AE8676DA218D3 * L_0 = ((SteamVR_Action_2_t83C041411A0CA61D62EE3A4F510D83333D049258 *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource0;
		NullCheck(L_0);
		SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * L_2 = SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573_RuntimeMethod_var);
		NullCheck(L_2);
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_3 = SteamVR_Action_Vector2_Source_get_lastDelta_mE21D07B848010D30A36B3C7338B5B615B81598AC_inline(L_2, /*hidden argument*/NULL);
		V_0 = L_3;
		goto IL_0015;
	}

IL_0015:
	{
		// }
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_4 = V_0;
		return L_4;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector2::AddOnActiveChangeListener(Valve.VR.SteamVR_Action_Vector2/ActiveChangeHandler,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_AddOnActiveChangeListener_mB482EE4DEBAFBA46414DEBBC39ED9AC8FC7F3690 (SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * __this, ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * ___functionToCall0, int32_t ___inputSource1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector2_AddOnActiveChangeListener_mB482EE4DEBAFBA46414DEBBC39ED9AC8FC7F3690_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// sourceMap[inputSource].onActiveChange += functionToCall;
		SteamVR_Action_Vector2_Source_Map_tA43BF0AE8C89C3094C8375D1A82AE8676DA218D3 * L_0 = ((SteamVR_Action_2_t83C041411A0CA61D62EE3A4F510D83333D049258 *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource1;
		NullCheck(L_0);
		SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * L_2 = SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573_RuntimeMethod_var);
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * L_3 = ___functionToCall0;
		NullCheck(L_2);
		SteamVR_Action_Vector2_Source_add_onActiveChange_mF1C9AA7D52BB851FC037A050CA2E477248691A7E(L_2, L_3, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector2::RemoveOnActiveChangeListener(Valve.VR.SteamVR_Action_Vector2/ActiveChangeHandler,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_RemoveOnActiveChangeListener_m46F423A97CF4BB520CDB40A179E5971C977B7F0B (SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * __this, ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * ___functionToStopCalling0, int32_t ___inputSource1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector2_RemoveOnActiveChangeListener_m46F423A97CF4BB520CDB40A179E5971C977B7F0B_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// sourceMap[inputSource].onActiveChange -= functionToStopCalling;
		SteamVR_Action_Vector2_Source_Map_tA43BF0AE8C89C3094C8375D1A82AE8676DA218D3 * L_0 = ((SteamVR_Action_2_t83C041411A0CA61D62EE3A4F510D83333D049258 *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource1;
		NullCheck(L_0);
		SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * L_2 = SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573_RuntimeMethod_var);
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * L_3 = ___functionToStopCalling0;
		NullCheck(L_2);
		SteamVR_Action_Vector2_Source_remove_onActiveChange_m59715CB9C8767EEA397A11B60489B7A7767462CF(L_2, L_3, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector2::AddOnActiveBindingChangeListener(Valve.VR.SteamVR_Action_Vector2/ActiveChangeHandler,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_AddOnActiveBindingChangeListener_m782C7E1662D5992F1FC16F8AE5277261C8CF190A (SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * __this, ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * ___functionToCall0, int32_t ___inputSource1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector2_AddOnActiveBindingChangeListener_m782C7E1662D5992F1FC16F8AE5277261C8CF190A_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// sourceMap[inputSource].onActiveBindingChange += functionToCall;
		SteamVR_Action_Vector2_Source_Map_tA43BF0AE8C89C3094C8375D1A82AE8676DA218D3 * L_0 = ((SteamVR_Action_2_t83C041411A0CA61D62EE3A4F510D83333D049258 *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource1;
		NullCheck(L_0);
		SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * L_2 = SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573_RuntimeMethod_var);
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * L_3 = ___functionToCall0;
		NullCheck(L_2);
		SteamVR_Action_Vector2_Source_add_onActiveBindingChange_m20A8F56D533537F5F8A266864F0D28DB6975ECA9(L_2, L_3, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector2::RemoveOnActiveBindingChangeListener(Valve.VR.SteamVR_Action_Vector2/ActiveChangeHandler,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_RemoveOnActiveBindingChangeListener_m3136E04858B1362DC1D5D51CE1FA27DF160A89E1 (SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * __this, ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * ___functionToStopCalling0, int32_t ___inputSource1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector2_RemoveOnActiveBindingChangeListener_m3136E04858B1362DC1D5D51CE1FA27DF160A89E1_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// sourceMap[inputSource].onActiveBindingChange -= functionToStopCalling;
		SteamVR_Action_Vector2_Source_Map_tA43BF0AE8C89C3094C8375D1A82AE8676DA218D3 * L_0 = ((SteamVR_Action_2_t83C041411A0CA61D62EE3A4F510D83333D049258 *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource1;
		NullCheck(L_0);
		SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * L_2 = SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573_RuntimeMethod_var);
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * L_3 = ___functionToStopCalling0;
		NullCheck(L_2);
		SteamVR_Action_Vector2_Source_remove_onActiveBindingChange_m061B7C87671943E15EACAA99CC379C3C335702D5(L_2, L_3, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector2::AddOnChangeListener(Valve.VR.SteamVR_Action_Vector2/ChangeHandler,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_AddOnChangeListener_m64A46A34B927694B2F168690057D360C05CB482A (SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * __this, ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 * ___functionToCall0, int32_t ___inputSource1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector2_AddOnChangeListener_m64A46A34B927694B2F168690057D360C05CB482A_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// sourceMap[inputSource].onChange += functionToCall;
		SteamVR_Action_Vector2_Source_Map_tA43BF0AE8C89C3094C8375D1A82AE8676DA218D3 * L_0 = ((SteamVR_Action_2_t83C041411A0CA61D62EE3A4F510D83333D049258 *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource1;
		NullCheck(L_0);
		SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * L_2 = SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573_RuntimeMethod_var);
		ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 * L_3 = ___functionToCall0;
		NullCheck(L_2);
		SteamVR_Action_Vector2_Source_add_onChange_m6C1A0066B7F15BFA3348848BFC482FE665B0649E(L_2, L_3, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector2::RemoveOnChangeListener(Valve.VR.SteamVR_Action_Vector2/ChangeHandler,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_RemoveOnChangeListener_m0365B74847AF715BC567B7896894340AAF36CD9A (SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * __this, ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 * ___functionToStopCalling0, int32_t ___inputSource1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector2_RemoveOnChangeListener_m0365B74847AF715BC567B7896894340AAF36CD9A_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// sourceMap[inputSource].onChange -= functionToStopCalling;
		SteamVR_Action_Vector2_Source_Map_tA43BF0AE8C89C3094C8375D1A82AE8676DA218D3 * L_0 = ((SteamVR_Action_2_t83C041411A0CA61D62EE3A4F510D83333D049258 *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource1;
		NullCheck(L_0);
		SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * L_2 = SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573_RuntimeMethod_var);
		ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 * L_3 = ___functionToStopCalling0;
		NullCheck(L_2);
		SteamVR_Action_Vector2_Source_remove_onChange_m4A6174FB66AC722D2DDA3F70045A3AE0B7578C13(L_2, L_3, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector2::AddOnUpdateListener(Valve.VR.SteamVR_Action_Vector2/UpdateHandler,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_AddOnUpdateListener_m44C545B1A2FFCBF62436D4573D2933241EE5C02F (SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * __this, UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 * ___functionToCall0, int32_t ___inputSource1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector2_AddOnUpdateListener_m44C545B1A2FFCBF62436D4573D2933241EE5C02F_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// sourceMap[inputSource].onUpdate += functionToCall;
		SteamVR_Action_Vector2_Source_Map_tA43BF0AE8C89C3094C8375D1A82AE8676DA218D3 * L_0 = ((SteamVR_Action_2_t83C041411A0CA61D62EE3A4F510D83333D049258 *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource1;
		NullCheck(L_0);
		SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * L_2 = SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573_RuntimeMethod_var);
		UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 * L_3 = ___functionToCall0;
		NullCheck(L_2);
		SteamVR_Action_Vector2_Source_add_onUpdate_m9172BD3EC7BDD734F533EC8BDF91C1D2F1B3D94D(L_2, L_3, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector2::RemoveOnUpdateListener(Valve.VR.SteamVR_Action_Vector2/UpdateHandler,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_RemoveOnUpdateListener_m72B61CC091D476EB3C4BAC150E9F2A15C3F0C7CD (SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * __this, UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 * ___functionToStopCalling0, int32_t ___inputSource1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector2_RemoveOnUpdateListener_m72B61CC091D476EB3C4BAC150E9F2A15C3F0C7CD_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// sourceMap[inputSource].onUpdate -= functionToStopCalling;
		SteamVR_Action_Vector2_Source_Map_tA43BF0AE8C89C3094C8375D1A82AE8676DA218D3 * L_0 = ((SteamVR_Action_2_t83C041411A0CA61D62EE3A4F510D83333D049258 *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource1;
		NullCheck(L_0);
		SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * L_2 = SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573_RuntimeMethod_var);
		UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 * L_3 = ___functionToStopCalling0;
		NullCheck(L_2);
		SteamVR_Action_Vector2_Source_remove_onUpdate_m54A0BCD658A033B1D95FEAA48FCA4165F8E33CD3(L_2, L_3, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector2::AddOnAxisListener(Valve.VR.SteamVR_Action_Vector2/AxisHandler,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_AddOnAxisListener_m41DCCC8C19E06128A5587638761C43B0F3DE54D3 (SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * __this, AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 * ___functionToCall0, int32_t ___inputSource1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector2_AddOnAxisListener_m41DCCC8C19E06128A5587638761C43B0F3DE54D3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// sourceMap[inputSource].onAxis += functionToCall;
		SteamVR_Action_Vector2_Source_Map_tA43BF0AE8C89C3094C8375D1A82AE8676DA218D3 * L_0 = ((SteamVR_Action_2_t83C041411A0CA61D62EE3A4F510D83333D049258 *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource1;
		NullCheck(L_0);
		SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * L_2 = SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573_RuntimeMethod_var);
		AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 * L_3 = ___functionToCall0;
		NullCheck(L_2);
		SteamVR_Action_Vector2_Source_add_onAxis_mDB5D5F366F588EC53B657FE1E8E76AD98D31FE92(L_2, L_3, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector2::RemoveOnAxisListener(Valve.VR.SteamVR_Action_Vector2/AxisHandler,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_RemoveOnAxisListener_m5DA6BC281F67A62D6396C9C22181A1AAD96925BC (SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * __this, AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 * ___functionToStopCalling0, int32_t ___inputSource1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector2_RemoveOnAxisListener_m5DA6BC281F67A62D6396C9C22181A1AAD96925BC_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// sourceMap[inputSource].onAxis -= functionToStopCalling;
		SteamVR_Action_Vector2_Source_Map_tA43BF0AE8C89C3094C8375D1A82AE8676DA218D3 * L_0 = ((SteamVR_Action_2_t83C041411A0CA61D62EE3A4F510D83333D049258 *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource1;
		NullCheck(L_0);
		SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * L_2 = SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573_RuntimeMethod_var);
		AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 * L_3 = ___functionToStopCalling0;
		NullCheck(L_2);
		SteamVR_Action_Vector2_Source_remove_onAxis_m0C77619D89CD25BCD1475F3E1FF3F40B112D0E8B(L_2, L_3, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector2::RemoveAllListeners(Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_RemoveAllListeners_m49919B1004E61AA9B3F681AD68E0FA3AF8E5DAB5 (SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * __this, int32_t ___input_Sources0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector2_RemoveAllListeners_m49919B1004E61AA9B3F681AD68E0FA3AF8E5DAB5_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// sourceMap[input_Sources].RemoveAllListeners();
		SteamVR_Action_Vector2_Source_Map_tA43BF0AE8C89C3094C8375D1A82AE8676DA218D3 * L_0 = ((SteamVR_Action_2_t83C041411A0CA61D62EE3A4F510D83333D049258 *)__this)->get_sourceMap_4();
		int32_t L_1 = ___input_Sources0;
		NullCheck(L_0);
		SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * L_2 = SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mEDF32C5B66B3E92A4C4B24DF0ECF75210AC18573_RuntimeMethod_var);
		NullCheck(L_2);
		SteamVR_Action_Vector2_Source_RemoveAllListeners_m0564DE9124B7CBF7D9B6002104B86394AB98C479(L_2, /*hidden argument*/NULL);
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector2::UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_UnityEngine_ISerializationCallbackReceiver_OnBeforeSerialize_mFB677FEB8EA3464C89EA3972E1DEF20FAD52E40B (SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * __this, const RuntimeMethod* method)
{
	{
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector2::UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_UnityEngine_ISerializationCallbackReceiver_OnAfterDeserialize_mCC1A059E602FABC67D24682DD3533CBC66564596 (SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector2_UnityEngine_ISerializationCallbackReceiver_OnAfterDeserialize_mCC1A059E602FABC67D24682DD3533CBC66564596_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// InitAfterDeserialize();
		SteamVR_Action_2_InitAfterDeserialize_mF196A84C3451B66EB3C0442338565F96747D1BDD(__this, /*hidden argument*/SteamVR_Action_2_InitAfterDeserialize_mF196A84C3451B66EB3C0442338565F96747D1BDD_RuntimeMethod_var);
		// }
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Action_Vector2/ActiveChangeHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ActiveChangeHandler__ctor_mE2B05B9DD5DD8EFF088DFEF6271F65EB3CED7EF7 (ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.SteamVR_Action_Vector2/ActiveChangeHandler::Invoke(Valve.VR.SteamVR_Action_Vector2,Valve.VR.SteamVR_Input_Sources,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ActiveChangeHandler_Invoke_m5A3352BD144AFB3158E26F423D73B6392B2138A5 (ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * __this, SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * ___fromAction0, int32_t ___fromSource1, bool ___active2, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 3)
			{
				// open
				typedef void (*FunctionPointerType) (SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 *, int32_t, bool, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___active2, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 *, int32_t, bool, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, ___active2, targetMethod);
			}
		}
		else if (___parameterCount != 3)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker2< int32_t, bool >::Invoke(targetMethod, ___fromAction0, ___fromSource1, ___active2);
					else
						GenericVirtActionInvoker2< int32_t, bool >::Invoke(targetMethod, ___fromAction0, ___fromSource1, ___active2);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker2< int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___fromAction0, ___fromSource1, ___active2);
					else
						VirtActionInvoker2< int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___fromAction0, ___fromSource1, ___active2);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___fromSource1) - 1), ___active2, targetMethod);
				}
				typedef void (*FunctionPointerType) (SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 *, int32_t, bool, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___active2, targetMethod);
			}
		}
		else
		{
			// closed
			if (targetThis != NULL && il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker3< SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 *, int32_t, bool >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1, ___active2);
					else
						GenericVirtActionInvoker3< SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 *, int32_t, bool >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1, ___active2);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker3< SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 *, int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___fromAction0, ___fromSource1, ___active2);
					else
						VirtActionInvoker3< SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 *, int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___fromAction0, ___fromSource1, ___active2);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, int32_t, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___fromAction0) - 1), ___fromSource1, ___active2, targetMethod);
				}
				if (targetThis == NULL)
				{
					typedef void (*FunctionPointerType) (SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 *, int32_t, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___active2, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 *, int32_t, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, ___active2, targetMethod);
				}
			}
		}
	}
}
// System.IAsyncResult Valve.VR.SteamVR_Action_Vector2/ActiveChangeHandler::BeginInvoke(Valve.VR.SteamVR_Action_Vector2,Valve.VR.SteamVR_Input_Sources,System.Boolean,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* ActiveChangeHandler_BeginInvoke_m8BA8582E8229FBEBD3D4EA1F30EF9D848C8CD8A1 (ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * __this, SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * ___fromAction0, int32_t ___fromSource1, bool ___active2, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback3, RuntimeObject * ___object4, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ActiveChangeHandler_BeginInvoke_m8BA8582E8229FBEBD3D4EA1F30EF9D848C8CD8A1_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[4] = {0};
	__d_args[0] = ___fromAction0;
	__d_args[1] = Box(SteamVR_Input_Sources_tCE41AA589FB3B9516BDE0DFABDCB4AAEA29528F7_il2cpp_TypeInfo_var, &___fromSource1);
	__d_args[2] = Box(Boolean_tB53F6830F670160873277339AA58F15CAED4399C_il2cpp_TypeInfo_var, &___active2);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback3, (RuntimeObject*)___object4);
}
// System.Void Valve.VR.SteamVR_Action_Vector2/ActiveChangeHandler::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ActiveChangeHandler_EndInvoke_m5056BC85E698EFDFB486206A27851070A14EDC68 (ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Action_Vector2/AxisHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void AxisHandler__ctor_m5EA71E3F8667B07D8D3C4E5B80BDAB08F26F38AB (AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.SteamVR_Action_Vector2/AxisHandler::Invoke(Valve.VR.SteamVR_Action_Vector2,Valve.VR.SteamVR_Input_Sources,UnityEngine.Vector2,UnityEngine.Vector2)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void AxisHandler_Invoke_m483B11CC81D9E82CDE50D9629D580788C464A29C (AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 * __this, SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * ___fromAction0, int32_t ___fromSource1, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___axis2, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___delta3, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 4)
			{
				// open
				typedef void (*FunctionPointerType) (SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 *, int32_t, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___axis2, ___delta3, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 *, int32_t, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, ___axis2, ___delta3, targetMethod);
			}
		}
		else if (___parameterCount != 4)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker3< int32_t, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  >::Invoke(targetMethod, ___fromAction0, ___fromSource1, ___axis2, ___delta3);
					else
						GenericVirtActionInvoker3< int32_t, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  >::Invoke(targetMethod, ___fromAction0, ___fromSource1, ___axis2, ___delta3);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker3< int32_t, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___fromAction0, ___fromSource1, ___axis2, ___delta3);
					else
						VirtActionInvoker3< int32_t, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___fromAction0, ___fromSource1, ___axis2, ___delta3);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___fromSource1) - 1), ___axis2, ___delta3, targetMethod);
				}
				typedef void (*FunctionPointerType) (SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 *, int32_t, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___axis2, ___delta3, targetMethod);
			}
		}
		else
		{
			// closed
			if (targetThis != NULL && il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker4< SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 *, int32_t, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1, ___axis2, ___delta3);
					else
						GenericVirtActionInvoker4< SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 *, int32_t, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1, ___axis2, ___delta3);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker4< SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 *, int32_t, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___fromAction0, ___fromSource1, ___axis2, ___delta3);
					else
						VirtActionInvoker4< SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 *, int32_t, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___fromAction0, ___fromSource1, ___axis2, ___delta3);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, int32_t, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___fromAction0) - 1), ___fromSource1, ___axis2, ___delta3, targetMethod);
				}
				if (targetThis == NULL)
				{
					typedef void (*FunctionPointerType) (SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 *, int32_t, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___axis2, ___delta3, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 *, int32_t, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, ___axis2, ___delta3, targetMethod);
				}
			}
		}
	}
}
// System.IAsyncResult Valve.VR.SteamVR_Action_Vector2/AxisHandler::BeginInvoke(Valve.VR.SteamVR_Action_Vector2,Valve.VR.SteamVR_Input_Sources,UnityEngine.Vector2,UnityEngine.Vector2,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* AxisHandler_BeginInvoke_m4FE79547E75F92C873C63002FE5EB08EBC37E2C2 (AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 * __this, SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * ___fromAction0, int32_t ___fromSource1, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___axis2, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___delta3, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback4, RuntimeObject * ___object5, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (AxisHandler_BeginInvoke_m4FE79547E75F92C873C63002FE5EB08EBC37E2C2_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[5] = {0};
	__d_args[0] = ___fromAction0;
	__d_args[1] = Box(SteamVR_Input_Sources_tCE41AA589FB3B9516BDE0DFABDCB4AAEA29528F7_il2cpp_TypeInfo_var, &___fromSource1);
	__d_args[2] = Box(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_il2cpp_TypeInfo_var, &___axis2);
	__d_args[3] = Box(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_il2cpp_TypeInfo_var, &___delta3);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback4, (RuntimeObject*)___object5);
}
// System.Void Valve.VR.SteamVR_Action_Vector2/AxisHandler::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void AxisHandler_EndInvoke_m56E6CD51D94410279C799126EBA07900B226335F (AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Action_Vector2/ChangeHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ChangeHandler__ctor_mAC1B1D7823B724FE1D815A26935FEEA76EDF91BA (ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.SteamVR_Action_Vector2/ChangeHandler::Invoke(Valve.VR.SteamVR_Action_Vector2,Valve.VR.SteamVR_Input_Sources,UnityEngine.Vector2,UnityEngine.Vector2)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ChangeHandler_Invoke_m664C8AE96DAF8EAB9BD99C79452FCD0B50D91645 (ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 * __this, SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * ___fromAction0, int32_t ___fromSource1, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___axis2, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___delta3, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 4)
			{
				// open
				typedef void (*FunctionPointerType) (SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 *, int32_t, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___axis2, ___delta3, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 *, int32_t, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, ___axis2, ___delta3, targetMethod);
			}
		}
		else if (___parameterCount != 4)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker3< int32_t, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  >::Invoke(targetMethod, ___fromAction0, ___fromSource1, ___axis2, ___delta3);
					else
						GenericVirtActionInvoker3< int32_t, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  >::Invoke(targetMethod, ___fromAction0, ___fromSource1, ___axis2, ___delta3);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker3< int32_t, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___fromAction0, ___fromSource1, ___axis2, ___delta3);
					else
						VirtActionInvoker3< int32_t, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___fromAction0, ___fromSource1, ___axis2, ___delta3);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___fromSource1) - 1), ___axis2, ___delta3, targetMethod);
				}
				typedef void (*FunctionPointerType) (SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 *, int32_t, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___axis2, ___delta3, targetMethod);
			}
		}
		else
		{
			// closed
			if (targetThis != NULL && il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker4< SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 *, int32_t, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1, ___axis2, ___delta3);
					else
						GenericVirtActionInvoker4< SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 *, int32_t, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1, ___axis2, ___delta3);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker4< SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 *, int32_t, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___fromAction0, ___fromSource1, ___axis2, ___delta3);
					else
						VirtActionInvoker4< SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 *, int32_t, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___fromAction0, ___fromSource1, ___axis2, ___delta3);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, int32_t, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___fromAction0) - 1), ___fromSource1, ___axis2, ___delta3, targetMethod);
				}
				if (targetThis == NULL)
				{
					typedef void (*FunctionPointerType) (SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 *, int32_t, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___axis2, ___delta3, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 *, int32_t, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, ___axis2, ___delta3, targetMethod);
				}
			}
		}
	}
}
// System.IAsyncResult Valve.VR.SteamVR_Action_Vector2/ChangeHandler::BeginInvoke(Valve.VR.SteamVR_Action_Vector2,Valve.VR.SteamVR_Input_Sources,UnityEngine.Vector2,UnityEngine.Vector2,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* ChangeHandler_BeginInvoke_m64CE8AD95AFF7D63BB705D05EE591FD010443899 (ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 * __this, SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * ___fromAction0, int32_t ___fromSource1, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___axis2, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___delta3, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback4, RuntimeObject * ___object5, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ChangeHandler_BeginInvoke_m64CE8AD95AFF7D63BB705D05EE591FD010443899_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[5] = {0};
	__d_args[0] = ___fromAction0;
	__d_args[1] = Box(SteamVR_Input_Sources_tCE41AA589FB3B9516BDE0DFABDCB4AAEA29528F7_il2cpp_TypeInfo_var, &___fromSource1);
	__d_args[2] = Box(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_il2cpp_TypeInfo_var, &___axis2);
	__d_args[3] = Box(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_il2cpp_TypeInfo_var, &___delta3);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback4, (RuntimeObject*)___object5);
}
// System.Void Valve.VR.SteamVR_Action_Vector2/ChangeHandler::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ChangeHandler_EndInvoke_m7222EDB6CC7B92BA42993CDF77798A081F6D70AE (ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Action_Vector2/UpdateHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UpdateHandler__ctor_m1D37B398391AD0AB6877E223F01A3DB09D94F7C3 (UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.SteamVR_Action_Vector2/UpdateHandler::Invoke(Valve.VR.SteamVR_Action_Vector2,Valve.VR.SteamVR_Input_Sources,UnityEngine.Vector2,UnityEngine.Vector2)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UpdateHandler_Invoke_m5BB2427CCB8050DF5F86E52782DBE6A180B6481C (UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 * __this, SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * ___fromAction0, int32_t ___fromSource1, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___axis2, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___delta3, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 4)
			{
				// open
				typedef void (*FunctionPointerType) (SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 *, int32_t, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___axis2, ___delta3, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 *, int32_t, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, ___axis2, ___delta3, targetMethod);
			}
		}
		else if (___parameterCount != 4)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker3< int32_t, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  >::Invoke(targetMethod, ___fromAction0, ___fromSource1, ___axis2, ___delta3);
					else
						GenericVirtActionInvoker3< int32_t, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  >::Invoke(targetMethod, ___fromAction0, ___fromSource1, ___axis2, ___delta3);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker3< int32_t, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___fromAction0, ___fromSource1, ___axis2, ___delta3);
					else
						VirtActionInvoker3< int32_t, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___fromAction0, ___fromSource1, ___axis2, ___delta3);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___fromSource1) - 1), ___axis2, ___delta3, targetMethod);
				}
				typedef void (*FunctionPointerType) (SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 *, int32_t, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___axis2, ___delta3, targetMethod);
			}
		}
		else
		{
			// closed
			if (targetThis != NULL && il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker4< SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 *, int32_t, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1, ___axis2, ___delta3);
					else
						GenericVirtActionInvoker4< SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 *, int32_t, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1, ___axis2, ___delta3);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker4< SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 *, int32_t, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___fromAction0, ___fromSource1, ___axis2, ___delta3);
					else
						VirtActionInvoker4< SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 *, int32_t, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___fromAction0, ___fromSource1, ___axis2, ___delta3);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, int32_t, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___fromAction0) - 1), ___fromSource1, ___axis2, ___delta3, targetMethod);
				}
				if (targetThis == NULL)
				{
					typedef void (*FunctionPointerType) (SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 *, int32_t, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___axis2, ___delta3, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 *, int32_t, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , Vector2_tA85D2DD88578276CA8A8796756458277E72D073D , const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, ___axis2, ___delta3, targetMethod);
				}
			}
		}
	}
}
// System.IAsyncResult Valve.VR.SteamVR_Action_Vector2/UpdateHandler::BeginInvoke(Valve.VR.SteamVR_Action_Vector2,Valve.VR.SteamVR_Input_Sources,UnityEngine.Vector2,UnityEngine.Vector2,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* UpdateHandler_BeginInvoke_m64FF27DC0A666F058A491BA34AFE54460466D6CE (UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 * __this, SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * ___fromAction0, int32_t ___fromSource1, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___axis2, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___delta3, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback4, RuntimeObject * ___object5, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (UpdateHandler_BeginInvoke_m64FF27DC0A666F058A491BA34AFE54460466D6CE_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[5] = {0};
	__d_args[0] = ___fromAction0;
	__d_args[1] = Box(SteamVR_Input_Sources_tCE41AA589FB3B9516BDE0DFABDCB4AAEA29528F7_il2cpp_TypeInfo_var, &___fromSource1);
	__d_args[2] = Box(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_il2cpp_TypeInfo_var, &___axis2);
	__d_args[3] = Box(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_il2cpp_TypeInfo_var, &___delta3);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback4, (RuntimeObject*)___object5);
}
// System.Void Valve.VR.SteamVR_Action_Vector2/UpdateHandler::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UpdateHandler_EndInvoke_m4646B80E9620F453374D9182B31093CB67A7584E (UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Action_Vector2_Source::add_onAxis(Valve.VR.SteamVR_Action_Vector2/AxisHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_Source_add_onAxis_mDB5D5F366F588EC53B657FE1E8E76AD98D31FE92 (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector2_Source_add_onAxis_mDB5D5F366F588EC53B657FE1E8E76AD98D31FE92_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 * V_0 = NULL;
	AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 * V_1 = NULL;
	AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 * V_2 = NULL;
	{
		AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 * L_0 = __this->get_onAxis_12();
		V_0 = L_0;
	}

IL_0007:
	{
		AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 * L_1 = V_0;
		V_1 = L_1;
		AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 * L_2 = V_1;
		AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Combine_mC25D2F7DECAFBA6D9A2F9EBA8A77063F0658ECF1(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 *)CastclassSealed((RuntimeObject*)L_4, AxisHandler_t97FB692AF5465040A2929AB663941933E3567689_il2cpp_TypeInfo_var));
		AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 ** L_5 = __this->get_address_of_onAxis_12();
		AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 * L_6 = V_2;
		AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 * L_7 = V_1;
		AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 * L_8 = InterlockedCompareExchangeImpl<AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 *>((AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 **)L_5, L_6, L_7);
		V_0 = L_8;
		AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 * L_9 = V_0;
		AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 * L_10 = V_1;
		if ((!(((RuntimeObject*)(AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 *)L_9) == ((RuntimeObject*)(AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector2_Source::remove_onAxis(Valve.VR.SteamVR_Action_Vector2/AxisHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_Source_remove_onAxis_m0C77619D89CD25BCD1475F3E1FF3F40B112D0E8B (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector2_Source_remove_onAxis_m0C77619D89CD25BCD1475F3E1FF3F40B112D0E8B_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 * V_0 = NULL;
	AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 * V_1 = NULL;
	AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 * V_2 = NULL;
	{
		AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 * L_0 = __this->get_onAxis_12();
		V_0 = L_0;
	}

IL_0007:
	{
		AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 * L_1 = V_0;
		V_1 = L_1;
		AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 * L_2 = V_1;
		AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Remove_m0B0DB7D1B3AF96B71AFAA72BA0EFE32FBBC2932D(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 *)CastclassSealed((RuntimeObject*)L_4, AxisHandler_t97FB692AF5465040A2929AB663941933E3567689_il2cpp_TypeInfo_var));
		AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 ** L_5 = __this->get_address_of_onAxis_12();
		AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 * L_6 = V_2;
		AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 * L_7 = V_1;
		AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 * L_8 = InterlockedCompareExchangeImpl<AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 *>((AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 **)L_5, L_6, L_7);
		V_0 = L_8;
		AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 * L_9 = V_0;
		AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 * L_10 = V_1;
		if ((!(((RuntimeObject*)(AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 *)L_9) == ((RuntimeObject*)(AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector2_Source::add_onActiveChange(Valve.VR.SteamVR_Action_Vector2/ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_Source_add_onActiveChange_mF1C9AA7D52BB851FC037A050CA2E477248691A7E (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector2_Source_add_onActiveChange_mF1C9AA7D52BB851FC037A050CA2E477248691A7E_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * V_0 = NULL;
	ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * V_1 = NULL;
	ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * V_2 = NULL;
	{
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * L_0 = __this->get_onActiveChange_13();
		V_0 = L_0;
	}

IL_0007:
	{
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * L_1 = V_0;
		V_1 = L_1;
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * L_2 = V_1;
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Combine_mC25D2F7DECAFBA6D9A2F9EBA8A77063F0658ECF1(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 *)CastclassSealed((RuntimeObject*)L_4, ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2_il2cpp_TypeInfo_var));
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 ** L_5 = __this->get_address_of_onActiveChange_13();
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * L_6 = V_2;
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * L_7 = V_1;
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * L_8 = InterlockedCompareExchangeImpl<ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 *>((ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 **)L_5, L_6, L_7);
		V_0 = L_8;
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * L_9 = V_0;
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * L_10 = V_1;
		if ((!(((RuntimeObject*)(ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 *)L_9) == ((RuntimeObject*)(ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector2_Source::remove_onActiveChange(Valve.VR.SteamVR_Action_Vector2/ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_Source_remove_onActiveChange_m59715CB9C8767EEA397A11B60489B7A7767462CF (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector2_Source_remove_onActiveChange_m59715CB9C8767EEA397A11B60489B7A7767462CF_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * V_0 = NULL;
	ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * V_1 = NULL;
	ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * V_2 = NULL;
	{
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * L_0 = __this->get_onActiveChange_13();
		V_0 = L_0;
	}

IL_0007:
	{
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * L_1 = V_0;
		V_1 = L_1;
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * L_2 = V_1;
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Remove_m0B0DB7D1B3AF96B71AFAA72BA0EFE32FBBC2932D(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 *)CastclassSealed((RuntimeObject*)L_4, ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2_il2cpp_TypeInfo_var));
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 ** L_5 = __this->get_address_of_onActiveChange_13();
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * L_6 = V_2;
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * L_7 = V_1;
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * L_8 = InterlockedCompareExchangeImpl<ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 *>((ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 **)L_5, L_6, L_7);
		V_0 = L_8;
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * L_9 = V_0;
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * L_10 = V_1;
		if ((!(((RuntimeObject*)(ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 *)L_9) == ((RuntimeObject*)(ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector2_Source::add_onActiveBindingChange(Valve.VR.SteamVR_Action_Vector2/ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_Source_add_onActiveBindingChange_m20A8F56D533537F5F8A266864F0D28DB6975ECA9 (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector2_Source_add_onActiveBindingChange_m20A8F56D533537F5F8A266864F0D28DB6975ECA9_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * V_0 = NULL;
	ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * V_1 = NULL;
	ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * V_2 = NULL;
	{
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * L_0 = __this->get_onActiveBindingChange_14();
		V_0 = L_0;
	}

IL_0007:
	{
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * L_1 = V_0;
		V_1 = L_1;
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * L_2 = V_1;
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Combine_mC25D2F7DECAFBA6D9A2F9EBA8A77063F0658ECF1(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 *)CastclassSealed((RuntimeObject*)L_4, ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2_il2cpp_TypeInfo_var));
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 ** L_5 = __this->get_address_of_onActiveBindingChange_14();
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * L_6 = V_2;
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * L_7 = V_1;
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * L_8 = InterlockedCompareExchangeImpl<ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 *>((ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 **)L_5, L_6, L_7);
		V_0 = L_8;
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * L_9 = V_0;
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * L_10 = V_1;
		if ((!(((RuntimeObject*)(ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 *)L_9) == ((RuntimeObject*)(ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector2_Source::remove_onActiveBindingChange(Valve.VR.SteamVR_Action_Vector2/ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_Source_remove_onActiveBindingChange_m061B7C87671943E15EACAA99CC379C3C335702D5 (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector2_Source_remove_onActiveBindingChange_m061B7C87671943E15EACAA99CC379C3C335702D5_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * V_0 = NULL;
	ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * V_1 = NULL;
	ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * V_2 = NULL;
	{
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * L_0 = __this->get_onActiveBindingChange_14();
		V_0 = L_0;
	}

IL_0007:
	{
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * L_1 = V_0;
		V_1 = L_1;
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * L_2 = V_1;
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Remove_m0B0DB7D1B3AF96B71AFAA72BA0EFE32FBBC2932D(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 *)CastclassSealed((RuntimeObject*)L_4, ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2_il2cpp_TypeInfo_var));
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 ** L_5 = __this->get_address_of_onActiveBindingChange_14();
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * L_6 = V_2;
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * L_7 = V_1;
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * L_8 = InterlockedCompareExchangeImpl<ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 *>((ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 **)L_5, L_6, L_7);
		V_0 = L_8;
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * L_9 = V_0;
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * L_10 = V_1;
		if ((!(((RuntimeObject*)(ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 *)L_9) == ((RuntimeObject*)(ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector2_Source::add_onChange(Valve.VR.SteamVR_Action_Vector2/ChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_Source_add_onChange_m6C1A0066B7F15BFA3348848BFC482FE665B0649E (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector2_Source_add_onChange_m6C1A0066B7F15BFA3348848BFC482FE665B0649E_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 * V_0 = NULL;
	ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 * V_1 = NULL;
	ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 * V_2 = NULL;
	{
		ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 * L_0 = __this->get_onChange_15();
		V_0 = L_0;
	}

IL_0007:
	{
		ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 * L_1 = V_0;
		V_1 = L_1;
		ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 * L_2 = V_1;
		ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Combine_mC25D2F7DECAFBA6D9A2F9EBA8A77063F0658ECF1(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 *)CastclassSealed((RuntimeObject*)L_4, ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6_il2cpp_TypeInfo_var));
		ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 ** L_5 = __this->get_address_of_onChange_15();
		ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 * L_6 = V_2;
		ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 * L_7 = V_1;
		ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 * L_8 = InterlockedCompareExchangeImpl<ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 *>((ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 **)L_5, L_6, L_7);
		V_0 = L_8;
		ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 * L_9 = V_0;
		ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 * L_10 = V_1;
		if ((!(((RuntimeObject*)(ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 *)L_9) == ((RuntimeObject*)(ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector2_Source::remove_onChange(Valve.VR.SteamVR_Action_Vector2/ChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_Source_remove_onChange_m4A6174FB66AC722D2DDA3F70045A3AE0B7578C13 (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector2_Source_remove_onChange_m4A6174FB66AC722D2DDA3F70045A3AE0B7578C13_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 * V_0 = NULL;
	ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 * V_1 = NULL;
	ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 * V_2 = NULL;
	{
		ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 * L_0 = __this->get_onChange_15();
		V_0 = L_0;
	}

IL_0007:
	{
		ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 * L_1 = V_0;
		V_1 = L_1;
		ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 * L_2 = V_1;
		ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Remove_m0B0DB7D1B3AF96B71AFAA72BA0EFE32FBBC2932D(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 *)CastclassSealed((RuntimeObject*)L_4, ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6_il2cpp_TypeInfo_var));
		ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 ** L_5 = __this->get_address_of_onChange_15();
		ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 * L_6 = V_2;
		ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 * L_7 = V_1;
		ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 * L_8 = InterlockedCompareExchangeImpl<ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 *>((ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 **)L_5, L_6, L_7);
		V_0 = L_8;
		ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 * L_9 = V_0;
		ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 * L_10 = V_1;
		if ((!(((RuntimeObject*)(ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 *)L_9) == ((RuntimeObject*)(ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector2_Source::add_onUpdate(Valve.VR.SteamVR_Action_Vector2/UpdateHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_Source_add_onUpdate_m9172BD3EC7BDD734F533EC8BDF91C1D2F1B3D94D (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector2_Source_add_onUpdate_m9172BD3EC7BDD734F533EC8BDF91C1D2F1B3D94D_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 * V_0 = NULL;
	UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 * V_1 = NULL;
	UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 * V_2 = NULL;
	{
		UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 * L_0 = __this->get_onUpdate_16();
		V_0 = L_0;
	}

IL_0007:
	{
		UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 * L_1 = V_0;
		V_1 = L_1;
		UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 * L_2 = V_1;
		UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Combine_mC25D2F7DECAFBA6D9A2F9EBA8A77063F0658ECF1(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 *)CastclassSealed((RuntimeObject*)L_4, UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177_il2cpp_TypeInfo_var));
		UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 ** L_5 = __this->get_address_of_onUpdate_16();
		UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 * L_6 = V_2;
		UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 * L_7 = V_1;
		UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 * L_8 = InterlockedCompareExchangeImpl<UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 *>((UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 **)L_5, L_6, L_7);
		V_0 = L_8;
		UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 * L_9 = V_0;
		UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 * L_10 = V_1;
		if ((!(((RuntimeObject*)(UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 *)L_9) == ((RuntimeObject*)(UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector2_Source::remove_onUpdate(Valve.VR.SteamVR_Action_Vector2/UpdateHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_Source_remove_onUpdate_m54A0BCD658A033B1D95FEAA48FCA4165F8E33CD3 (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector2_Source_remove_onUpdate_m54A0BCD658A033B1D95FEAA48FCA4165F8E33CD3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 * V_0 = NULL;
	UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 * V_1 = NULL;
	UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 * V_2 = NULL;
	{
		UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 * L_0 = __this->get_onUpdate_16();
		V_0 = L_0;
	}

IL_0007:
	{
		UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 * L_1 = V_0;
		V_1 = L_1;
		UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 * L_2 = V_1;
		UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Remove_m0B0DB7D1B3AF96B71AFAA72BA0EFE32FBBC2932D(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 *)CastclassSealed((RuntimeObject*)L_4, UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177_il2cpp_TypeInfo_var));
		UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 ** L_5 = __this->get_address_of_onUpdate_16();
		UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 * L_6 = V_2;
		UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 * L_7 = V_1;
		UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 * L_8 = InterlockedCompareExchangeImpl<UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 *>((UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 **)L_5, L_6, L_7);
		V_0 = L_8;
		UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 * L_9 = V_0;
		UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 * L_10 = V_1;
		if ((!(((RuntimeObject*)(UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 *)L_9) == ((RuntimeObject*)(UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// UnityEngine.Vector2 Valve.VR.SteamVR_Action_Vector2_Source::get_axis()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  SteamVR_Action_Vector2_Source_get_axis_mCEB6E517ED0E10BE513D22B23A69F1BE3D5DA2BA (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, const RuntimeMethod* method)
{
	{
		// public Vector2 axis { get; protected set; }
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_0 = __this->get_U3CaxisU3Ek__BackingField_17();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector2_Source::set_axis(UnityEngine.Vector2)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_Source_set_axis_m5714B37391AC92E5DB0BB3E1D600280B054A063D (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___value0, const RuntimeMethod* method)
{
	{
		// public Vector2 axis { get; protected set; }
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_0 = ___value0;
		__this->set_U3CaxisU3Ek__BackingField_17(L_0);
		return;
	}
}
// UnityEngine.Vector2 Valve.VR.SteamVR_Action_Vector2_Source::get_lastAxis()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  SteamVR_Action_Vector2_Source_get_lastAxis_mD0A1188D33FAD9AAB16CBCC0C073796C76616460 (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, const RuntimeMethod* method)
{
	{
		// public Vector2 lastAxis { get; protected set; }
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_0 = __this->get_U3ClastAxisU3Ek__BackingField_18();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector2_Source::set_lastAxis(UnityEngine.Vector2)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_Source_set_lastAxis_m28E7093728C01D3ABBF9871752E734D022101498 (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___value0, const RuntimeMethod* method)
{
	{
		// public Vector2 lastAxis { get; protected set; }
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_0 = ___value0;
		__this->set_U3ClastAxisU3Ek__BackingField_18(L_0);
		return;
	}
}
// UnityEngine.Vector2 Valve.VR.SteamVR_Action_Vector2_Source::get_delta()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  SteamVR_Action_Vector2_Source_get_delta_m19CFFF4B8014BD4ED43D0C5EDDD909A2F1DF1908 (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, const RuntimeMethod* method)
{
	{
		// public Vector2 delta { get; protected set; }
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_0 = __this->get_U3CdeltaU3Ek__BackingField_19();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector2_Source::set_delta(UnityEngine.Vector2)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_Source_set_delta_mE23EC73FCF0BFAAE785BFED2A3E3DF99A7A0A824 (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___value0, const RuntimeMethod* method)
{
	{
		// public Vector2 delta { get; protected set; }
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_0 = ___value0;
		__this->set_U3CdeltaU3Ek__BackingField_19(L_0);
		return;
	}
}
// UnityEngine.Vector2 Valve.VR.SteamVR_Action_Vector2_Source::get_lastDelta()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  SteamVR_Action_Vector2_Source_get_lastDelta_mE21D07B848010D30A36B3C7338B5B615B81598AC (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, const RuntimeMethod* method)
{
	{
		// public Vector2 lastDelta { get; protected set; }
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_0 = __this->get_U3ClastDeltaU3Ek__BackingField_20();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector2_Source::set_lastDelta(UnityEngine.Vector2)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_Source_set_lastDelta_m1140772DB3236B7C53E1B0723623DC3F564FC5BE (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___value0, const RuntimeMethod* method)
{
	{
		// public Vector2 lastDelta { get; protected set; }
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_0 = ___value0;
		__this->set_U3ClastDeltaU3Ek__BackingField_20(L_0);
		return;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Vector2_Source::get_changed()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Vector2_Source_get_changed_m9023294DEC5E983CBFFEA1C5834ED22E5C6FDC06 (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, const RuntimeMethod* method)
{
	{
		// public override bool changed { get; protected set; }
		bool L_0 = __this->get_U3CchangedU3Ek__BackingField_21();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector2_Source::set_changed(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_Source_set_changed_m575FBE57696855BE8F49EDA79BECD1722929EA1F (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, bool ___value0, const RuntimeMethod* method)
{
	{
		// public override bool changed { get; protected set; }
		bool L_0 = ___value0;
		__this->set_U3CchangedU3Ek__BackingField_21(L_0);
		return;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Vector2_Source::get_lastChanged()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Vector2_Source_get_lastChanged_mEA7D81FAA12045C035DC33DF5C199FE0FDB796C5 (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, const RuntimeMethod* method)
{
	{
		// public override bool lastChanged { get; protected set; }
		bool L_0 = __this->get_U3ClastChangedU3Ek__BackingField_22();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector2_Source::set_lastChanged(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_Source_set_lastChanged_mB18FB99134F9B872EF935883B6E655E10DB5B029 (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, bool ___value0, const RuntimeMethod* method)
{
	{
		// public override bool lastChanged { get; protected set; }
		bool L_0 = ___value0;
		__this->set_U3ClastChangedU3Ek__BackingField_22(L_0);
		return;
	}
}
// System.UInt64 Valve.VR.SteamVR_Action_Vector2_Source::get_activeOrigin()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR uint64_t SteamVR_Action_Vector2_Source_get_activeOrigin_mD905FBA2F4411E82CEF5B63E96DD6CBDD982DFB8 (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, const RuntimeMethod* method)
{
	bool V_0 = false;
	uint64_t V_1 = 0;
	{
		// if (active)
		bool L_0 = VirtFuncInvoker0< bool >::Invoke(12 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_active() */, __this);
		V_0 = L_0;
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0019;
		}
	}
	{
		// return actionData.activeOrigin;
		InputAnalogActionData_t_t6C7615BD7F4223A4ADA9268DDF501D09B3C808CA * L_2 = __this->get_address_of_actionData_24();
		uint64_t L_3 = L_2->get_activeOrigin_1();
		V_1 = L_3;
		goto IL_001e;
	}

IL_0019:
	{
		// return 0;
		V_1 = (((int64_t)((int64_t)0)));
		goto IL_001e;
	}

IL_001e:
	{
		// }
		uint64_t L_4 = V_1;
		return L_4;
	}
}
// System.UInt64 Valve.VR.SteamVR_Action_Vector2_Source::get_lastActiveOrigin()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR uint64_t SteamVR_Action_Vector2_Source_get_lastActiveOrigin_m4061DC1DB23410A75091322497E7E4D2F83216DC (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, const RuntimeMethod* method)
{
	uint64_t V_0 = 0;
	{
		// public override ulong lastActiveOrigin { get { return lastActionData.activeOrigin; } }
		InputAnalogActionData_t_t6C7615BD7F4223A4ADA9268DDF501D09B3C808CA * L_0 = __this->get_address_of_lastActionData_25();
		uint64_t L_1 = L_0->get_activeOrigin_1();
		V_0 = L_1;
		goto IL_000f;
	}

IL_000f:
	{
		// public override ulong lastActiveOrigin { get { return lastActionData.activeOrigin; } }
		uint64_t L_2 = V_0;
		return L_2;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Vector2_Source::get_active()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Vector2_Source_get_active_m1F0AA8E0031D68099D0C4B7DB97701EE250A61E5 (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, const RuntimeMethod* method)
{
	bool V_0 = false;
	int32_t G_B3_0 = 0;
	{
		// public override bool active { get { return activeBinding && action.actionSet.IsActive(inputSource); } }
		bool L_0 = VirtFuncInvoker0< bool >::Invoke(13 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_activeBinding() */, __this);
		if (!L_0)
		{
			goto IL_0021;
		}
	}
	{
		SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * L_1 = ((SteamVR_Action_Source_t9D7428CDE39924074518EE6233D9A4FAB0C33CB0 *)__this)->get_action_2();
		NullCheck(L_1);
		SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * L_2 = VirtFuncInvoker0< SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * >::Invoke(19 /* Valve.VR.SteamVR_ActionSet Valve.VR.SteamVR_Action::get_actionSet() */, L_1);
		int32_t L_3 = SteamVR_Action_Source_get_inputSource_mAA1928183BB06E5C8CF950F65BA80635C25535D4_inline(__this, /*hidden argument*/NULL);
		NullCheck(L_2);
		bool L_4 = SteamVR_ActionSet_IsActive_m2C7FE33DC70E0D8C3D7E06F024C3409A116CE127(L_2, L_3, /*hidden argument*/NULL);
		G_B3_0 = ((int32_t)(L_4));
		goto IL_0022;
	}

IL_0021:
	{
		G_B3_0 = 0;
	}

IL_0022:
	{
		V_0 = (bool)G_B3_0;
		goto IL_0025;
	}

IL_0025:
	{
		// public override bool active { get { return activeBinding && action.actionSet.IsActive(inputSource); } }
		bool L_5 = V_0;
		return L_5;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Vector2_Source::get_activeBinding()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Vector2_Source_get_activeBinding_m9C707F1BE1B1305D7A2C124ECB43EB763005DC6B (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, const RuntimeMethod* method)
{
	bool V_0 = false;
	{
		// public override bool activeBinding { get { return actionData.bActive; } }
		InputAnalogActionData_t_t6C7615BD7F4223A4ADA9268DDF501D09B3C808CA * L_0 = __this->get_address_of_actionData_24();
		bool L_1 = L_0->get_bActive_0();
		V_0 = L_1;
		goto IL_000f;
	}

IL_000f:
	{
		// public override bool activeBinding { get { return actionData.bActive; } }
		bool L_2 = V_0;
		return L_2;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Vector2_Source::get_lastActive()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Vector2_Source_get_lastActive_m79E58A042EBDEEBE52BF7B4ECFB3E0220D4EC9E1 (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, const RuntimeMethod* method)
{
	{
		// public override bool lastActive { get; protected set; }
		bool L_0 = __this->get_U3ClastActiveU3Ek__BackingField_23();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector2_Source::set_lastActive(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_Source_set_lastActive_mE023671BFA07AB8F03535FAE36088E57B9F880A1 (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, bool ___value0, const RuntimeMethod* method)
{
	{
		// public override bool lastActive { get; protected set; }
		bool L_0 = ___value0;
		__this->set_U3ClastActiveU3Ek__BackingField_23(L_0);
		return;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Vector2_Source::get_lastActiveBinding()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Vector2_Source_get_lastActiveBinding_m67F389BB226AA3D984A8E36D3C0ED61EC13F0C59 (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, const RuntimeMethod* method)
{
	bool V_0 = false;
	{
		// public override bool lastActiveBinding { get { return lastActionData.bActive; } }
		InputAnalogActionData_t_t6C7615BD7F4223A4ADA9268DDF501D09B3C808CA * L_0 = __this->get_address_of_lastActionData_25();
		bool L_1 = L_0->get_bActive_0();
		V_0 = L_1;
		goto IL_000f;
	}

IL_000f:
	{
		// public override bool lastActiveBinding { get { return lastActionData.bActive; } }
		bool L_2 = V_0;
		return L_2;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector2_Source::Preinitialize(Valve.VR.SteamVR_Action,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_Source_Preinitialize_m39F0990901BECE7D2D6DB17C641DD2E3568446A7 (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * ___wrappingAction0, int32_t ___forInputSource1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector2_Source_Preinitialize_m39F0990901BECE7D2D6DB17C641DD2E3568446A7_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// base.Preinitialize(wrappingAction, forInputSource);
		SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * L_0 = ___wrappingAction0;
		int32_t L_1 = ___forInputSource1;
		SteamVR_Action_Source_Preinitialize_mC135AE740FECE5EA34FF516A739C0F58420521F9(__this, L_0, L_1, /*hidden argument*/NULL);
		// vector2Action = (SteamVR_Action_Vector2)wrappingAction;
		SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * L_2 = ___wrappingAction0;
		__this->set_vector2Action_26(((SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 *)CastclassClass((RuntimeObject*)L_2, SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37_il2cpp_TypeInfo_var)));
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector2_Source::Initialize()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_Source_Initialize_m90A49D5DF367619ED0E44D8BBA576C462EA60BE5 (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector2_Source_Initialize_m90A49D5DF367619ED0E44D8BBA576C462EA60BE5_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	{
		// base.Initialize();
		SteamVR_Action_In_Source_Initialize_m40F600EDA6712166E32A98C5905420F6F2DC2001(__this, /*hidden argument*/NULL);
		// if (actionData_size == 0)
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1_il2cpp_TypeInfo_var);
		uint32_t L_0 = ((SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1_il2cpp_TypeInfo_var))->get_actionData_size_10();
		V_0 = (bool)((((int32_t)L_0) == ((int32_t)0))? 1 : 0);
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0028;
		}
	}
	{
		// actionData_size = (uint)Marshal.SizeOf(typeof(InputAnalogActionData_t));
		RuntimeTypeHandle_t7B542280A22F0EC4EAC2061C29178845847A8B2D  L_2 = { reinterpret_cast<intptr_t> (InputAnalogActionData_t_t6C7615BD7F4223A4ADA9268DDF501D09B3C808CA_0_0_0_var) };
		IL2CPP_RUNTIME_CLASS_INIT(Type_t_il2cpp_TypeInfo_var);
		Type_t * L_3 = Type_GetTypeFromHandle_m9DC58ADF0512987012A8A016FB64B068F3B1AFF6(L_2, /*hidden argument*/NULL);
		IL2CPP_RUNTIME_CLASS_INIT(Marshal_tC795CE9CC2FFBA41EDB1AC1C0FEC04607DFA8A40_il2cpp_TypeInfo_var);
		int32_t L_4 = Marshal_SizeOf_m4F7DA827FA7A720395E6FDD2ABE78D4B00D43130(L_3, /*hidden argument*/NULL);
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1_il2cpp_TypeInfo_var);
		((SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1_il2cpp_TypeInfo_var))->set_actionData_size_10(L_4);
	}

IL_0028:
	{
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector2_Source::RemoveAllListeners()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_Source_RemoveAllListeners_m0564DE9124B7CBF7D9B6002104B86394AB98C479 (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector2_Source_RemoveAllListeners_m0564DE9124B7CBF7D9B6002104B86394AB98C479_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* V_0 = NULL;
	bool V_1 = false;
	bool V_2 = false;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* V_3 = NULL;
	int32_t V_4 = 0;
	Delegate_t * V_5 = NULL;
	bool V_6 = false;
	bool V_7 = false;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* V_8 = NULL;
	int32_t V_9 = 0;
	Delegate_t * V_10 = NULL;
	bool V_11 = false;
	bool V_12 = false;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* V_13 = NULL;
	int32_t V_14 = 0;
	Delegate_t * V_15 = NULL;
	{
		// if (onAxis != null)
		AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 * L_0 = __this->get_onAxis_12();
		V_1 = (bool)((!(((RuntimeObject*)(AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 *)L_0) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		bool L_1 = V_1;
		if (!L_1)
		{
			goto IL_004d;
		}
	}
	{
		// delegates = onAxis.GetInvocationList();
		AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 * L_2 = __this->get_onAxis_12();
		NullCheck(L_2);
		DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* L_3 = VirtFuncInvoker0< DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* >::Invoke(9 /* System.Delegate[] System.Delegate::GetInvocationList() */, L_2);
		V_0 = L_3;
		// if (delegates != null)
		DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* L_4 = V_0;
		V_2 = (bool)((!(((RuntimeObject*)(DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86*)L_4) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		bool L_5 = V_2;
		if (!L_5)
		{
			goto IL_004c;
		}
	}
	{
		// foreach (Delegate existingDelegate in delegates)
		DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* L_6 = V_0;
		V_3 = L_6;
		V_4 = 0;
		goto IL_0045;
	}

IL_002b:
	{
		// foreach (Delegate existingDelegate in delegates)
		DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* L_7 = V_3;
		int32_t L_8 = V_4;
		NullCheck(L_7);
		int32_t L_9 = L_8;
		Delegate_t * L_10 = (L_7)->GetAt(static_cast<il2cpp_array_size_t>(L_9));
		V_5 = L_10;
		// onAxis -= (SteamVR_Action_Vector2.AxisHandler)existingDelegate;
		Delegate_t * L_11 = V_5;
		SteamVR_Action_Vector2_Source_remove_onAxis_m0C77619D89CD25BCD1475F3E1FF3F40B112D0E8B(__this, ((AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 *)CastclassSealed((RuntimeObject*)L_11, AxisHandler_t97FB692AF5465040A2929AB663941933E3567689_il2cpp_TypeInfo_var)), /*hidden argument*/NULL);
		int32_t L_12 = V_4;
		V_4 = ((int32_t)il2cpp_codegen_add((int32_t)L_12, (int32_t)1));
	}

IL_0045:
	{
		// foreach (Delegate existingDelegate in delegates)
		int32_t L_13 = V_4;
		DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* L_14 = V_3;
		NullCheck(L_14);
		if ((((int32_t)L_13) < ((int32_t)(((int32_t)((int32_t)(((RuntimeArray*)L_14)->max_length)))))))
		{
			goto IL_002b;
		}
	}

IL_004c:
	{
	}

IL_004d:
	{
		// if (onUpdate != null)
		UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 * L_15 = __this->get_onUpdate_16();
		V_6 = (bool)((!(((RuntimeObject*)(UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 *)L_15) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		bool L_16 = V_6;
		if (!L_16)
		{
			goto IL_00a0;
		}
	}
	{
		// delegates = onUpdate.GetInvocationList();
		UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 * L_17 = __this->get_onUpdate_16();
		NullCheck(L_17);
		DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* L_18 = VirtFuncInvoker0< DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* >::Invoke(9 /* System.Delegate[] System.Delegate::GetInvocationList() */, L_17);
		V_0 = L_18;
		// if (delegates != null)
		DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* L_19 = V_0;
		V_7 = (bool)((!(((RuntimeObject*)(DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86*)L_19) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		bool L_20 = V_7;
		if (!L_20)
		{
			goto IL_009f;
		}
	}
	{
		// foreach (Delegate existingDelegate in delegates)
		DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* L_21 = V_0;
		V_8 = L_21;
		V_9 = 0;
		goto IL_0097;
	}

IL_007c:
	{
		// foreach (Delegate existingDelegate in delegates)
		DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* L_22 = V_8;
		int32_t L_23 = V_9;
		NullCheck(L_22);
		int32_t L_24 = L_23;
		Delegate_t * L_25 = (L_22)->GetAt(static_cast<il2cpp_array_size_t>(L_24));
		V_10 = L_25;
		// onUpdate -= (SteamVR_Action_Vector2.UpdateHandler)existingDelegate;
		Delegate_t * L_26 = V_10;
		SteamVR_Action_Vector2_Source_remove_onUpdate_m54A0BCD658A033B1D95FEAA48FCA4165F8E33CD3(__this, ((UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 *)CastclassSealed((RuntimeObject*)L_26, UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177_il2cpp_TypeInfo_var)), /*hidden argument*/NULL);
		int32_t L_27 = V_9;
		V_9 = ((int32_t)il2cpp_codegen_add((int32_t)L_27, (int32_t)1));
	}

IL_0097:
	{
		// foreach (Delegate existingDelegate in delegates)
		int32_t L_28 = V_9;
		DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* L_29 = V_8;
		NullCheck(L_29);
		if ((((int32_t)L_28) < ((int32_t)(((int32_t)((int32_t)(((RuntimeArray*)L_29)->max_length)))))))
		{
			goto IL_007c;
		}
	}

IL_009f:
	{
	}

IL_00a0:
	{
		// if (onChange != null)
		ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 * L_30 = __this->get_onChange_15();
		V_11 = (bool)((!(((RuntimeObject*)(ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 *)L_30) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		bool L_31 = V_11;
		if (!L_31)
		{
			goto IL_00f3;
		}
	}
	{
		// delegates = onChange.GetInvocationList();
		ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 * L_32 = __this->get_onChange_15();
		NullCheck(L_32);
		DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* L_33 = VirtFuncInvoker0< DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* >::Invoke(9 /* System.Delegate[] System.Delegate::GetInvocationList() */, L_32);
		V_0 = L_33;
		// if (delegates != null)
		DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* L_34 = V_0;
		V_12 = (bool)((!(((RuntimeObject*)(DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86*)L_34) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		bool L_35 = V_12;
		if (!L_35)
		{
			goto IL_00f2;
		}
	}
	{
		// foreach (Delegate existingDelegate in delegates)
		DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* L_36 = V_0;
		V_13 = L_36;
		V_14 = 0;
		goto IL_00ea;
	}

IL_00cf:
	{
		// foreach (Delegate existingDelegate in delegates)
		DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* L_37 = V_13;
		int32_t L_38 = V_14;
		NullCheck(L_37);
		int32_t L_39 = L_38;
		Delegate_t * L_40 = (L_37)->GetAt(static_cast<il2cpp_array_size_t>(L_39));
		V_15 = L_40;
		// onChange -= (SteamVR_Action_Vector2.ChangeHandler)existingDelegate;
		Delegate_t * L_41 = V_15;
		SteamVR_Action_Vector2_Source_remove_onChange_m4A6174FB66AC722D2DDA3F70045A3AE0B7578C13(__this, ((ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 *)CastclassSealed((RuntimeObject*)L_41, ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6_il2cpp_TypeInfo_var)), /*hidden argument*/NULL);
		int32_t L_42 = V_14;
		V_14 = ((int32_t)il2cpp_codegen_add((int32_t)L_42, (int32_t)1));
	}

IL_00ea:
	{
		// foreach (Delegate existingDelegate in delegates)
		int32_t L_43 = V_14;
		DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* L_44 = V_13;
		NullCheck(L_44);
		if ((((int32_t)L_43) < ((int32_t)(((int32_t)((int32_t)(((RuntimeArray*)L_44)->max_length)))))))
		{
			goto IL_00cf;
		}
	}

IL_00f2:
	{
	}

IL_00f3:
	{
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector2_Source::UpdateValue()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_Source_UpdateValue_mEEAE61A19D6A526B51C6C58470E2C4138E622F70 (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector2_Source_UpdateValue_mEEAE61A19D6A526B51C6C58470E2C4138E622F70_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	bool V_1 = false;
	uint64_t V_2 = 0;
	bool V_3 = false;
	bool V_4 = false;
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  V_5;
	memset((&V_5), 0, sizeof(V_5));
	bool V_6 = false;
	bool V_7 = false;
	bool V_8 = false;
	bool V_9 = false;
	bool V_10 = false;
	bool V_11 = false;
	int32_t G_B17_0 = 0;
	int32_t G_B22_0 = 0;
	{
		// lastActionData = actionData;
		InputAnalogActionData_t_t6C7615BD7F4223A4ADA9268DDF501D09B3C808CA  L_0 = __this->get_actionData_24();
		__this->set_lastActionData_25(L_0);
		// lastActive = active;
		bool L_1 = VirtFuncInvoker0< bool >::Invoke(12 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_active() */, __this);
		VirtActionInvoker1< bool >::Invoke(15 /* System.Void Valve.VR.SteamVR_Action_Source::set_lastActive(System.Boolean) */, __this, L_1);
		// lastAxis = axis;
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_2 = SteamVR_Action_Vector2_Source_get_axis_mCEB6E517ED0E10BE513D22B23A69F1BE3D5DA2BA_inline(__this, /*hidden argument*/NULL);
		SteamVR_Action_Vector2_Source_set_lastAxis_m28E7093728C01D3ABBF9871752E734D022101498_inline(__this, L_2, /*hidden argument*/NULL);
		// lastDelta = delta;
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_3 = SteamVR_Action_Vector2_Source_get_delta_m19CFFF4B8014BD4ED43D0C5EDDD909A2F1DF1908_inline(__this, /*hidden argument*/NULL);
		SteamVR_Action_Vector2_Source_set_lastDelta_m1140772DB3236B7C53E1B0723623DC3F564FC5BE_inline(__this, L_3, /*hidden argument*/NULL);
		// EVRInputError err = OpenVR.Input.GetAnalogActionData(handle, ref actionData, actionData_size, SteamVR_Input_Source.GetHandle(inputSource));
		IL2CPP_RUNTIME_CLASS_INIT(OpenVR_t89189C917B539750153B18DDDCB4F7D9C8EF004D_il2cpp_TypeInfo_var);
		CVRInput_t8458E224B9D7EFD4A5B102EAA06F8F365A25A53A * L_4 = OpenVR_get_Input_mF290A715AD07D4B7F8844AA79293934B7999CE04(/*hidden argument*/NULL);
		uint64_t L_5 = SteamVR_Action_Source_get_handle_m66E0A3E9E7D6434FB905BF0D25013927B0C12791(__this, /*hidden argument*/NULL);
		InputAnalogActionData_t_t6C7615BD7F4223A4ADA9268DDF501D09B3C808CA * L_6 = __this->get_address_of_actionData_24();
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1_il2cpp_TypeInfo_var);
		uint32_t L_7 = ((SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1_il2cpp_TypeInfo_var))->get_actionData_size_10();
		int32_t L_8 = SteamVR_Action_Source_get_inputSource_mAA1928183BB06E5C8CF950F65BA80635C25535D4_inline(__this, /*hidden argument*/NULL);
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Input_Source_tAFDB40851F8E134E08DD2DD0BC1C1770705E81D0_il2cpp_TypeInfo_var);
		uint64_t L_9 = SteamVR_Input_Source_GetHandle_m0FAD747327B66172ACE9A9C1CD14FEDF685C7D3B(L_8, /*hidden argument*/NULL);
		NullCheck(L_4);
		int32_t L_10 = CVRInput_GetAnalogActionData_m3FEB4E2D5AE96E97C2D73EEED945E547AE36741A(L_4, L_5, (InputAnalogActionData_t_t6C7615BD7F4223A4ADA9268DDF501D09B3C808CA *)L_6, L_7, L_9, /*hidden argument*/NULL);
		V_0 = L_10;
		// if (err != EVRInputError.None)
		int32_t L_11 = V_0;
		V_1 = (bool)((!(((uint32_t)L_11) <= ((uint32_t)0)))? 1 : 0);
		bool L_12 = V_1;
		if (!L_12)
		{
			goto IL_00b6;
		}
	}
	{
		// Debug.LogError("<b>[SteamVR]</b> GetAnalogActionData error (" + fullPath + "): " + err.ToString() + " handle: " + handle.ToString());
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_13 = (StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E*)(StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E*)SZArrayNew(StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E_il2cpp_TypeInfo_var, (uint32_t)6);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_14 = L_13;
		NullCheck(L_14);
		ArrayElementTypeCheck (L_14, _stringLiteralAC897ED588F0446677581414C46F231807AB2556);
		(L_14)->SetAt(static_cast<il2cpp_array_size_t>(0), (String_t*)_stringLiteralAC897ED588F0446677581414C46F231807AB2556);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_15 = L_14;
		String_t* L_16 = SteamVR_Action_Source_get_fullPath_m9D3700AC3EB06210A52EDA613F1523A48F0A1B81(__this, /*hidden argument*/NULL);
		NullCheck(L_15);
		ArrayElementTypeCheck (L_15, L_16);
		(L_15)->SetAt(static_cast<il2cpp_array_size_t>(1), (String_t*)L_16);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_17 = L_15;
		NullCheck(L_17);
		ArrayElementTypeCheck (L_17, _stringLiteralE6D56E05F32996CA7E5AE21BC90D49044C0BF356);
		(L_17)->SetAt(static_cast<il2cpp_array_size_t>(2), (String_t*)_stringLiteralE6D56E05F32996CA7E5AE21BC90D49044C0BF356);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_18 = L_17;
		RuntimeObject * L_19 = Box(EVRInputError_tE4C895A0D1F18C0024F5C180FF3962B056DA8A71_il2cpp_TypeInfo_var, (&V_0));
		NullCheck(L_19);
		String_t* L_20 = VirtFuncInvoker0< String_t* >::Invoke(3 /* System.String System.Object::ToString() */, L_19);
		V_0 = *(int32_t*)UnBox(L_19);
		NullCheck(L_18);
		ArrayElementTypeCheck (L_18, L_20);
		(L_18)->SetAt(static_cast<il2cpp_array_size_t>(3), (String_t*)L_20);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_21 = L_18;
		NullCheck(L_21);
		ArrayElementTypeCheck (L_21, _stringLiteral18B39452A606090B97AA8D84240CC83BE3E5D62B);
		(L_21)->SetAt(static_cast<il2cpp_array_size_t>(4), (String_t*)_stringLiteral18B39452A606090B97AA8D84240CC83BE3E5D62B);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_22 = L_21;
		uint64_t L_23 = SteamVR_Action_Source_get_handle_m66E0A3E9E7D6434FB905BF0D25013927B0C12791(__this, /*hidden argument*/NULL);
		V_2 = L_23;
		String_t* L_24 = UInt64_ToString_mF0E40B7459C207B89A1C8C04CE7F183AC0E6D672((uint64_t*)(&V_2), /*hidden argument*/NULL);
		NullCheck(L_22);
		ArrayElementTypeCheck (L_22, L_24);
		(L_22)->SetAt(static_cast<il2cpp_array_size_t>(5), (String_t*)L_24);
		String_t* L_25 = String_Concat_m232E857CA5107EA6AC52E7DD7018716C021F237B(L_22, /*hidden argument*/NULL);
		IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
		Debug_LogError_m3BCF9B78263152261565DCA9DB7D55F0C391ED29(L_25, /*hidden argument*/NULL);
	}

IL_00b6:
	{
		// updateTime = Time.realtimeSinceStartup;
		float L_26 = Time_get_realtimeSinceStartup_mCA1086EC9DFCF135F77BC46D3B7127711EA3DE03(/*hidden argument*/NULL);
		SteamVR_Action_In_Source_set_updateTime_m7EA8D127664BA76D49BB51254DB17C4428843F9C_inline(__this, L_26, /*hidden argument*/NULL);
		// axis = new Vector2(actionData.x, actionData.y);
		InputAnalogActionData_t_t6C7615BD7F4223A4ADA9268DDF501D09B3C808CA * L_27 = __this->get_address_of_actionData_24();
		float L_28 = L_27->get_x_2();
		InputAnalogActionData_t_t6C7615BD7F4223A4ADA9268DDF501D09B3C808CA * L_29 = __this->get_address_of_actionData_24();
		float L_30 = L_29->get_y_3();
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_31;
		memset((&L_31), 0, sizeof(L_31));
		Vector2__ctor_mEE8FB117AB1F8DB746FB8B3EB4C0DA3BF2A230D0((&L_31), L_28, L_30, /*hidden argument*/NULL);
		SteamVR_Action_Vector2_Source_set_axis_m5714B37391AC92E5DB0BB3E1D600280B054A063D_inline(__this, L_31, /*hidden argument*/NULL);
		// delta = new Vector2(actionData.deltaX, actionData.deltaY);
		InputAnalogActionData_t_t6C7615BD7F4223A4ADA9268DDF501D09B3C808CA * L_32 = __this->get_address_of_actionData_24();
		float L_33 = L_32->get_deltaX_5();
		InputAnalogActionData_t_t6C7615BD7F4223A4ADA9268DDF501D09B3C808CA * L_34 = __this->get_address_of_actionData_24();
		float L_35 = L_34->get_deltaY_6();
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_36;
		memset((&L_36), 0, sizeof(L_36));
		Vector2__ctor_mEE8FB117AB1F8DB746FB8B3EB4C0DA3BF2A230D0((&L_36), L_33, L_35, /*hidden argument*/NULL);
		SteamVR_Action_Vector2_Source_set_delta_mE23EC73FCF0BFAAE785BFED2A3E3DF99A7A0A824_inline(__this, L_36, /*hidden argument*/NULL);
		// changed = false;
		VirtActionInvoker1< bool >::Invoke(32 /* System.Void Valve.VR.SteamVR_Action_In_Source::set_changed(System.Boolean) */, __this, (bool)0);
		// if (active)
		bool L_37 = VirtFuncInvoker0< bool >::Invoke(12 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_active() */, __this);
		V_3 = L_37;
		bool L_38 = V_3;
		if (!L_38)
		{
			goto IL_020f;
		}
	}
	{
		// if (delta.magnitude > changeTolerance)
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_39 = SteamVR_Action_Vector2_Source_get_delta_m19CFFF4B8014BD4ED43D0C5EDDD909A2F1DF1908_inline(__this, /*hidden argument*/NULL);
		V_5 = L_39;
		float L_40 = Vector2_get_magnitude_m66097AFDF9696BD3E88467D4398D4F82B8A4C7DF((Vector2_tA85D2DD88578276CA8A8796756458277E72D073D *)(&V_5), /*hidden argument*/NULL);
		float L_41 = __this->get_changeTolerance_11();
		V_4 = (bool)((((float)L_40) > ((float)L_41))? 1 : 0);
		bool L_42 = V_4;
		if (!L_42)
		{
			goto IL_018e;
		}
	}
	{
		// changed = true;
		VirtActionInvoker1< bool >::Invoke(32 /* System.Void Valve.VR.SteamVR_Action_In_Source::set_changed(System.Boolean) */, __this, (bool)1);
		// changedTime = Time.realtimeSinceStartup + actionData.fUpdateTime; //fUpdateTime is the time from the time the action was called that the action changed
		float L_43 = Time_get_realtimeSinceStartup_mCA1086EC9DFCF135F77BC46D3B7127711EA3DE03(/*hidden argument*/NULL);
		InputAnalogActionData_t_t6C7615BD7F4223A4ADA9268DDF501D09B3C808CA * L_44 = __this->get_address_of_actionData_24();
		float L_45 = L_44->get_fUpdateTime_8();
		SteamVR_Action_In_Source_set_changedTime_m68F47645CA38A2261F0694F61E3756788CFAE750_inline(__this, ((float)il2cpp_codegen_add((float)L_43, (float)L_45)), /*hidden argument*/NULL);
		// if (onChange != null)
		ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 * L_46 = __this->get_onChange_15();
		V_6 = (bool)((!(((RuntimeObject*)(ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 *)L_46) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		bool L_47 = V_6;
		if (!L_47)
		{
			goto IL_018d;
		}
	}
	{
		// onChange.Invoke(vector2Action, inputSource, axis, delta);
		ChangeHandler_t716932883EC2BC15936E355D02A9D68B8F9EA6B6 * L_48 = __this->get_onChange_15();
		SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * L_49 = __this->get_vector2Action_26();
		int32_t L_50 = SteamVR_Action_Source_get_inputSource_mAA1928183BB06E5C8CF950F65BA80635C25535D4_inline(__this, /*hidden argument*/NULL);
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_51 = SteamVR_Action_Vector2_Source_get_axis_mCEB6E517ED0E10BE513D22B23A69F1BE3D5DA2BA_inline(__this, /*hidden argument*/NULL);
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_52 = SteamVR_Action_Vector2_Source_get_delta_m19CFFF4B8014BD4ED43D0C5EDDD909A2F1DF1908_inline(__this, /*hidden argument*/NULL);
		NullCheck(L_48);
		ChangeHandler_Invoke_m664C8AE96DAF8EAB9BD99C79452FCD0B50D91645(L_48, L_49, L_50, L_51, L_52, /*hidden argument*/NULL);
	}

IL_018d:
	{
	}

IL_018e:
	{
		// if (axis != Vector2.zero)
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_53 = SteamVR_Action_Vector2_Source_get_axis_mCEB6E517ED0E10BE513D22B23A69F1BE3D5DA2BA_inline(__this, /*hidden argument*/NULL);
		IL2CPP_RUNTIME_CLASS_INIT(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_il2cpp_TypeInfo_var);
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_54 = Vector2_get_zero_mFE0C3213BB698130D6C5247AB4B887A59074D0A8(/*hidden argument*/NULL);
		bool L_55 = Vector2_op_Inequality_mC16161C640C89D98A00800924F83FF09FD7C100E(L_53, L_54, /*hidden argument*/NULL);
		V_7 = L_55;
		bool L_56 = V_7;
		if (!L_56)
		{
			goto IL_01d9;
		}
	}
	{
		// if (onAxis != null)
		AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 * L_57 = __this->get_onAxis_12();
		V_8 = (bool)((!(((RuntimeObject*)(AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 *)L_57) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		bool L_58 = V_8;
		if (!L_58)
		{
			goto IL_01d8;
		}
	}
	{
		// onAxis.Invoke(vector2Action, inputSource, axis, delta);
		AxisHandler_t97FB692AF5465040A2929AB663941933E3567689 * L_59 = __this->get_onAxis_12();
		SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * L_60 = __this->get_vector2Action_26();
		int32_t L_61 = SteamVR_Action_Source_get_inputSource_mAA1928183BB06E5C8CF950F65BA80635C25535D4_inline(__this, /*hidden argument*/NULL);
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_62 = SteamVR_Action_Vector2_Source_get_axis_mCEB6E517ED0E10BE513D22B23A69F1BE3D5DA2BA_inline(__this, /*hidden argument*/NULL);
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_63 = SteamVR_Action_Vector2_Source_get_delta_m19CFFF4B8014BD4ED43D0C5EDDD909A2F1DF1908_inline(__this, /*hidden argument*/NULL);
		NullCheck(L_59);
		AxisHandler_Invoke_m483B11CC81D9E82CDE50D9629D580788C464A29C(L_59, L_60, L_61, L_62, L_63, /*hidden argument*/NULL);
	}

IL_01d8:
	{
	}

IL_01d9:
	{
		// if (onUpdate != null)
		UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 * L_64 = __this->get_onUpdate_16();
		V_9 = (bool)((!(((RuntimeObject*)(UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 *)L_64) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		bool L_65 = V_9;
		if (!L_65)
		{
			goto IL_020e;
		}
	}
	{
		// onUpdate.Invoke(vector2Action, inputSource, axis, delta);
		UpdateHandler_t5CC79EAAED92D106A0FBE46F2E73949A31CDA177 * L_66 = __this->get_onUpdate_16();
		SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * L_67 = __this->get_vector2Action_26();
		int32_t L_68 = SteamVR_Action_Source_get_inputSource_mAA1928183BB06E5C8CF950F65BA80635C25535D4_inline(__this, /*hidden argument*/NULL);
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_69 = SteamVR_Action_Vector2_Source_get_axis_mCEB6E517ED0E10BE513D22B23A69F1BE3D5DA2BA_inline(__this, /*hidden argument*/NULL);
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_70 = SteamVR_Action_Vector2_Source_get_delta_m19CFFF4B8014BD4ED43D0C5EDDD909A2F1DF1908_inline(__this, /*hidden argument*/NULL);
		NullCheck(L_66);
		UpdateHandler_Invoke_m5BB2427CCB8050DF5F86E52782DBE6A180B6481C(L_66, L_67, L_68, L_69, L_70, /*hidden argument*/NULL);
	}

IL_020e:
	{
	}

IL_020f:
	{
		// if (onActiveBindingChange != null && lastActiveBinding != activeBinding)
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * L_71 = __this->get_onActiveBindingChange_14();
		if (!L_71)
		{
			goto IL_022a;
		}
	}
	{
		bool L_72 = VirtFuncInvoker0< bool >::Invoke(16 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_lastActiveBinding() */, __this);
		bool L_73 = VirtFuncInvoker0< bool >::Invoke(13 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_activeBinding() */, __this);
		G_B17_0 = ((((int32_t)((((int32_t)L_72) == ((int32_t)L_73))? 1 : 0)) == ((int32_t)0))? 1 : 0);
		goto IL_022b;
	}

IL_022a:
	{
		G_B17_0 = 0;
	}

IL_022b:
	{
		V_10 = (bool)G_B17_0;
		bool L_74 = V_10;
		if (!L_74)
		{
			goto IL_024f;
		}
	}
	{
		// onActiveBindingChange.Invoke(vector2Action, inputSource, activeBinding);
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * L_75 = __this->get_onActiveBindingChange_14();
		SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * L_76 = __this->get_vector2Action_26();
		int32_t L_77 = SteamVR_Action_Source_get_inputSource_mAA1928183BB06E5C8CF950F65BA80635C25535D4_inline(__this, /*hidden argument*/NULL);
		bool L_78 = VirtFuncInvoker0< bool >::Invoke(13 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_activeBinding() */, __this);
		NullCheck(L_75);
		ActiveChangeHandler_Invoke_m5A3352BD144AFB3158E26F423D73B6392B2138A5(L_75, L_76, L_77, L_78, /*hidden argument*/NULL);
	}

IL_024f:
	{
		// if (onActiveChange != null && lastActive != active)
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * L_79 = __this->get_onActiveChange_13();
		if (!L_79)
		{
			goto IL_026a;
		}
	}
	{
		bool L_80 = VirtFuncInvoker0< bool >::Invoke(14 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_lastActive() */, __this);
		bool L_81 = VirtFuncInvoker0< bool >::Invoke(12 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_active() */, __this);
		G_B22_0 = ((((int32_t)((((int32_t)L_80) == ((int32_t)L_81))? 1 : 0)) == ((int32_t)0))? 1 : 0);
		goto IL_026b;
	}

IL_026a:
	{
		G_B22_0 = 0;
	}

IL_026b:
	{
		V_11 = (bool)G_B22_0;
		bool L_82 = V_11;
		if (!L_82)
		{
			goto IL_028f;
		}
	}
	{
		// onActiveChange.Invoke(vector2Action, inputSource, activeBinding);
		ActiveChangeHandler_tCEE5E6B19BCE1E2EBFF3082655FDA985DEE14EA2 * L_83 = __this->get_onActiveChange_13();
		SteamVR_Action_Vector2_t759E1B2DC99C6B8FA7B9515ADD17B3A9A9454C37 * L_84 = __this->get_vector2Action_26();
		int32_t L_85 = SteamVR_Action_Source_get_inputSource_mAA1928183BB06E5C8CF950F65BA80635C25535D4_inline(__this, /*hidden argument*/NULL);
		bool L_86 = VirtFuncInvoker0< bool >::Invoke(13 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_activeBinding() */, __this);
		NullCheck(L_83);
		ActiveChangeHandler_Invoke_m5A3352BD144AFB3158E26F423D73B6392B2138A5(L_83, L_84, L_85, L_86, /*hidden argument*/NULL);
	}

IL_028f:
	{
		// }
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector2_Source::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_Source__ctor_mA8DA34CDBF8615AE3F8B90FF052847F729723380 (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector2_Source__ctor_mA8DA34CDBF8615AE3F8B90FF052847F729723380_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// public float changeTolerance = Mathf.Epsilon;
		IL2CPP_RUNTIME_CLASS_INIT(Mathf_tFBDE6467D269BFE410605C7D806FD9991D4A89CB_il2cpp_TypeInfo_var);
		float L_0 = ((Mathf_tFBDE6467D269BFE410605C7D806FD9991D4A89CB_StaticFields*)il2cpp_codegen_static_fields_for(Mathf_tFBDE6467D269BFE410605C7D806FD9991D4A89CB_il2cpp_TypeInfo_var))->get_Epsilon_0();
		__this->set_changeTolerance_11(L_0);
		// protected InputAnalogActionData_t actionData = new InputAnalogActionData_t();
		InputAnalogActionData_t_t6C7615BD7F4223A4ADA9268DDF501D09B3C808CA * L_1 = __this->get_address_of_actionData_24();
		il2cpp_codegen_initobj(L_1, sizeof(InputAnalogActionData_t_t6C7615BD7F4223A4ADA9268DDF501D09B3C808CA ));
		// protected InputAnalogActionData_t lastActionData = new InputAnalogActionData_t();
		InputAnalogActionData_t_t6C7615BD7F4223A4ADA9268DDF501D09B3C808CA * L_2 = __this->get_address_of_lastActionData_25();
		il2cpp_codegen_initobj(L_2, sizeof(InputAnalogActionData_t_t6C7615BD7F4223A4ADA9268DDF501D09B3C808CA ));
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB_il2cpp_TypeInfo_var);
		SteamVR_Action_In_Source__ctor_mE238DF9510354C14124DF4D1973356C078DAE3BB(__this, /*hidden argument*/NULL);
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Vector2_Source::.cctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_Source__cctor_m109983A3B5698EF03E84DA7A388D3D5A48234297 (const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Vector2_Source__cctor_m109983A3B5698EF03E84DA7A388D3D5A48234297_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	{
		// protected static uint actionData_size = 0;
		((SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1_il2cpp_TypeInfo_var))->set_actionData_size_10(0);
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR int32_t SteamVR_Action_Source_get_inputSource_mAA1928183BB06E5C8CF950F65BA80635C25535D4_inline (SteamVR_Action_Source_t9D7428CDE39924074518EE6233D9A4FAB0C33CB0 * __this, const RuntimeMethod* method)
{
	{
		// public SteamVR_Input_Sources inputSource { get; protected set; }
		int32_t L_0 = __this->get_U3CinputSourceU3Ek__BackingField_0();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_In_Source_set_changedTime_m68F47645CA38A2261F0694F61E3756788CFAE750_inline (SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB * __this, float ___value0, const RuntimeMethod* method)
{
	{
		// public float changedTime { get; protected set; }
		float L_0 = ___value0;
		__this->set_U3CchangedTimeU3Ek__BackingField_6(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_In_Source_set_updateTime_m7EA8D127664BA76D49BB51254DB17C4428843F9C_inline (SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB * __this, float ___value0, const RuntimeMethod* method)
{
	{
		// public float updateTime { get; protected set; }
		float L_0 = ___value0;
		__this->set_U3CupdateTimeU3Ek__BackingField_5(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR int32_t SteamVR_Action_In_Source_get_lastOriginGetFrame_mA410D02B5711787E38284F5B2434829A4E6C6137_inline (SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB * __this, const RuntimeMethod* method)
{
	{
		// protected int lastOriginGetFrame { get; set; }
		int32_t L_0 = __this->get_U3ClastOriginGetFrameU3Ek__BackingField_7();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_In_Source_set_lastOriginGetFrame_m6F2512AE3F5AB9323BCF82CB31C708955508E897_inline (SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB * __this, int32_t ___value0, const RuntimeMethod* method)
{
	{
		// protected int lastOriginGetFrame { get; set; }
		int32_t L_0 = ___value0;
		__this->set_U3ClastOriginGetFrameU3Ek__BackingField_7(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SteamVR_Action_Pose_Source_get_localPosition_mE065A826D8D1A8CF44D9E7F0D038F24D70985833_inline (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method)
{
	{
		// public Vector3 localPosition { get; protected set; }
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = __this->get_U3ClocalPositionU3Ek__BackingField_23();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_set_lastLocalPosition_m6D0A990E6188F82AC2C5C7BECC5A44EB21F1579D_inline (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method)
{
	{
		// public Vector3 lastLocalPosition { get; protected set; }
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = ___value0;
		__this->set_U3ClastLocalPositionU3Ek__BackingField_25(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  SteamVR_Action_Pose_Source_get_localRotation_m307D9DD92DFFFCC30446A71D9BD15674A797ED2A_inline (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method)
{
	{
		// public Quaternion localRotation { get; protected set; }
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_0 = __this->get_U3ClocalRotationU3Ek__BackingField_24();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_set_lastLocalRotation_mCF887D640B4BF0BBD7D83276C11C921A2CE5F649_inline (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___value0, const RuntimeMethod* method)
{
	{
		// public Quaternion lastLocalRotation { get; protected set; }
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_0 = ___value0;
		__this->set_U3ClastLocalRotationU3Ek__BackingField_26(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SteamVR_Action_Pose_Source_get_velocity_m2B71BB7981006080D113442CB374529602A310BF_inline (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method)
{
	{
		// public Vector3 velocity { get; protected set; }
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = __this->get_U3CvelocityU3Ek__BackingField_27();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_set_lastVelocity_m5DD5D60CAF5672AC910E26BA4131B6192521A874_inline (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method)
{
	{
		// public Vector3 lastVelocity { get; protected set; }
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = ___value0;
		__this->set_U3ClastVelocityU3Ek__BackingField_28(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SteamVR_Action_Pose_Source_get_angularVelocity_mACAA45CB05DB94C9292ED147F3156109DAFA0209_inline (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method)
{
	{
		// public Vector3 angularVelocity { get; protected set; }
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = __this->get_U3CangularVelocityU3Ek__BackingField_29();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_set_lastAngularVelocity_m95C5214943FAA14AD6869D3E7154F5B107C99875_inline (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method)
{
	{
		// public Vector3 lastAngularVelocity { get; protected set; }
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = ___value0;
		__this->set_U3ClastAngularVelocityU3Ek__BackingField_30(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR float SteamVR_Action_In_Source_get_updateTime_mB9F438D749D92356ACC37F9C0BCD3A304506B210_inline (SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB * __this, const RuntimeMethod* method)
{
	{
		// public float updateTime { get; protected set; }
		float L_0 = __this->get_U3CupdateTimeU3Ek__BackingField_5();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_set_localPosition_m38C19E63D633A91EA065A955E770CDC43C4174C0_inline (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method)
{
	{
		// public Vector3 localPosition { get; protected set; }
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = ___value0;
		__this->set_U3ClocalPositionU3Ek__BackingField_23(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_set_localRotation_mC3D82C5E3624F6FC6B4A5CAD6766C69240FC9A37_inline (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___value0, const RuntimeMethod* method)
{
	{
		// public Quaternion localRotation { get; protected set; }
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_0 = ___value0;
		__this->set_U3ClocalRotationU3Ek__BackingField_24(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_set_velocity_m0392A856C5BA77F53831D681C32FC65E8255B168_inline (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method)
{
	{
		// public Vector3 velocity { get; protected set; }
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = ___value0;
		__this->set_U3CvelocityU3Ek__BackingField_27(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_set_angularVelocity_m78C04A085EB6CBA58F8B20629A341DA54B5F92B4_inline (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method)
{
	{
		// public Vector3 angularVelocity { get; protected set; }
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = ___value0;
		__this->set_U3CangularVelocityU3Ek__BackingField_29(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SteamVR_Action_Pose_Source_get_lastLocalPosition_mB748F9D4600498E9BACCEBE5C8F00DED8125C307_inline (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method)
{
	{
		// public Vector3 lastLocalPosition { get; protected set; }
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = __this->get_U3ClastLocalPositionU3Ek__BackingField_25();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  SteamVR_Action_Pose_Source_get_lastLocalRotation_m15622BCE4A3D32548EBFE7DC98F8751352617660_inline (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method)
{
	{
		// public Quaternion lastLocalRotation { get; protected set; }
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_0 = __this->get_U3ClastLocalRotationU3Ek__BackingField_26();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SteamVR_Action_Pose_Source_get_lastVelocity_mB9FD7955140F713C63842433E1E50D498EAD0A21_inline (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method)
{
	{
		// public Vector3 lastVelocity { get; protected set; }
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = __this->get_U3ClastVelocityU3Ek__BackingField_28();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SteamVR_Action_Pose_Source_get_lastAngularVelocity_m3EE729ECF16DA55CFE069E25EB9099A80667C55F_inline (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method)
{
	{
		// public Vector3 lastAngularVelocity { get; protected set; }
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = __this->get_U3ClastAngularVelocityU3Ek__BackingField_30();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* SteamVR_Action_Skeleton_Source_get_bonePositions_mA0C01DDB9EAB9749BBBEDBCFF72582812AB9C195_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	{
		// public Vector3[] bonePositions { get; protected set; }
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_0 = __this->get_U3CbonePositionsU3Ek__BackingField_44();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* SteamVR_Action_Skeleton_Source_get_boneRotations_mCD0B038517CA7A79945AD615082F05B25B0EDA20_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	{
		// public Quaternion[] boneRotations { get; protected set; }
		QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* L_0 = __this->get_U3CboneRotationsU3Ek__BackingField_45();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* SteamVR_Action_Skeleton_Source_get_lastBonePositions_m99D1C7B8A05E646777AC85CFC0ED2FF0953C3AB9_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	{
		// public Vector3[] lastBonePositions { get; protected set; }
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_0 = __this->get_U3ClastBonePositionsU3Ek__BackingField_46();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* SteamVR_Action_Skeleton_Source_get_lastBoneRotations_m14A98028FB99C0404733364FFD3C187D2A53261C_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	{
		// public Quaternion[] lastBoneRotations { get; protected set; }
		QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* L_0 = __this->get_U3ClastBoneRotationsU3Ek__BackingField_47();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR int32_t SteamVR_Action_Skeleton_Source_get_rangeOfMotion_m3698046C051B2375EA956A3BDFE1BB6CA28AAD4E_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	{
		// public EVRSkeletalMotionRange rangeOfMotion { get; set; }
		int32_t L_0 = __this->get_U3CrangeOfMotionU3Ek__BackingField_48();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_set_rangeOfMotion_m91A4B52E877EA5A07574CC4A7FDE89BC4B4594F9_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, int32_t ___value0, const RuntimeMethod* method)
{
	{
		// public EVRSkeletalMotionRange rangeOfMotion { get; set; }
		int32_t L_0 = ___value0;
		__this->set_U3CrangeOfMotionU3Ek__BackingField_48(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR int32_t SteamVR_Action_Skeleton_Source_get_skeletalTransformSpace_m581268DA5BEE1B2F2315A38319F75E7241F5BB21_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	{
		// public EVRSkeletalTransformSpace skeletalTransformSpace { get; set; }
		int32_t L_0 = __this->get_U3CskeletalTransformSpaceU3Ek__BackingField_49();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_set_skeletalTransformSpace_m0A466B97614EB779A0DA19E3F2DBEC0E7E8E162D_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, int32_t ___value0, const RuntimeMethod* method)
{
	{
		// public EVRSkeletalTransformSpace skeletalTransformSpace { get; set; }
		int32_t L_0 = ___value0;
		__this->set_U3CskeletalTransformSpaceU3Ek__BackingField_49(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR int32_t SteamVR_Action_Skeleton_Source_get_summaryDataType_m99C31EEF6D6E87C035887DE8640DC37C07D2CA79_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	{
		// public EVRSummaryType summaryDataType { get; set; }
		int32_t L_0 = __this->get_U3CsummaryDataTypeU3Ek__BackingField_50();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_set_summaryDataType_m772AC48620054C732E34EE86BBADE98C3EFAC365_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, int32_t ___value0, const RuntimeMethod* method)
{
	{
		// public EVRSummaryType summaryDataType { get; set; }
		int32_t L_0 = ___value0;
		__this->set_U3CsummaryDataTypeU3Ek__BackingField_50(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* SteamVR_Action_Skeleton_Source_get_fingerCurls_m6E0B4235B8D2B15E1BBFD7634ECA591CC77A2732_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	{
		// public float[] fingerCurls { get; protected set; }
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_0 = __this->get_U3CfingerCurlsU3Ek__BackingField_51();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* SteamVR_Action_Skeleton_Source_get_fingerSplays_m21D8D0994518AF9B7532A558E5E39A81C29ADE11_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	{
		// public float[] fingerSplays { get; protected set; }
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_0 = __this->get_U3CfingerSplaysU3Ek__BackingField_52();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* SteamVR_Action_Skeleton_Source_get_lastFingerCurls_m46C98882B5CB755BB4ADC367308E91D036E1896E_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	{
		// public float[] lastFingerCurls { get; protected set; }
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_0 = __this->get_U3ClastFingerCurlsU3Ek__BackingField_53();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* SteamVR_Action_Skeleton_Source_get_lastFingerSplays_m9DFC31F484BCD45399E9335EE8679CEC8150D3F4_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	{
		// public float[] lastFingerSplays { get; protected set; }
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_0 = __this->get_U3ClastFingerSplaysU3Ek__BackingField_54();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR bool SteamVR_Action_Skeleton_Source_get_poseChanged_mBBFFCD8FF3AB5998C3B5053499A253E137EB6B01_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	{
		// public bool poseChanged { get; protected set; }
		bool L_0 = __this->get_U3CposeChangedU3Ek__BackingField_55();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR bool SteamVR_Action_Skeleton_Source_get_onlyUpdateSummaryData_m3F489169E6CE022F5E46CB1D3B6EB910564C8A9A_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, const RuntimeMethod* method)
{
	{
		// public bool onlyUpdateSummaryData { get; set; }
		bool L_0 = __this->get_U3ConlyUpdateSummaryDataU3Ek__BackingField_56();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_set_onlyUpdateSummaryData_m02A775C0CAB57C16D4A673019586873F7C0B3CFB_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, bool ___value0, const RuntimeMethod* method)
{
	{
		// public bool onlyUpdateSummaryData { get; set; }
		bool L_0 = ___value0;
		__this->set_U3ConlyUpdateSummaryDataU3Ek__BackingField_56(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_set_bonePositions_m96408532FED1D966DE56612099B679DA8FBBF8D9_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* ___value0, const RuntimeMethod* method)
{
	{
		// public Vector3[] bonePositions { get; protected set; }
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_0 = ___value0;
		__this->set_U3CbonePositionsU3Ek__BackingField_44(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_set_lastBonePositions_m8E63D828A81C99EEA6A4C55BA74D48F7C7F19CBF_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* ___value0, const RuntimeMethod* method)
{
	{
		// public Vector3[] lastBonePositions { get; protected set; }
		Vector3U5BU5D_tB9EC3346CC4A0EA5447D968E84A9AC1F6F372C28* L_0 = ___value0;
		__this->set_U3ClastBonePositionsU3Ek__BackingField_46(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_set_boneRotations_m2B92E87BC6C9E456075204D69BD82CAE759F46E2_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* ___value0, const RuntimeMethod* method)
{
	{
		// public Quaternion[] boneRotations { get; protected set; }
		QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* L_0 = ___value0;
		__this->set_U3CboneRotationsU3Ek__BackingField_45(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_set_lastBoneRotations_mF1526AAAFE4506F1F70D22BED03D04083E75E3F8_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* ___value0, const RuntimeMethod* method)
{
	{
		// public Quaternion[] lastBoneRotations { get; protected set; }
		QuaternionU5BU5D_t26EB10EEE89DD3EF913D52E8797FAB841F6F2AA3* L_0 = ___value0;
		__this->set_U3ClastBoneRotationsU3Ek__BackingField_47(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_set_fingerCurls_m2A1933C7FE83EB6B654B248354B4438B1B15C0BD_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* ___value0, const RuntimeMethod* method)
{
	{
		// public float[] fingerCurls { get; protected set; }
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_0 = ___value0;
		__this->set_U3CfingerCurlsU3Ek__BackingField_51(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_set_fingerSplays_mB8BA373C6A1A65E39FD6D8AF1566A31F18BA7055_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* ___value0, const RuntimeMethod* method)
{
	{
		// public float[] fingerSplays { get; protected set; }
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_0 = ___value0;
		__this->set_U3CfingerSplaysU3Ek__BackingField_52(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_set_lastFingerCurls_mA6CF9BCD46F49F1A95627142A70D9FA3C4F490E5_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* ___value0, const RuntimeMethod* method)
{
	{
		// public float[] lastFingerCurls { get; protected set; }
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_0 = ___value0;
		__this->set_U3ClastFingerCurlsU3Ek__BackingField_53(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_set_lastFingerSplays_m1E2D198E4627EA80F69A67AB26943144BD45DC70_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* ___value0, const RuntimeMethod* method)
{
	{
		// public float[] lastFingerSplays { get; protected set; }
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_0 = ___value0;
		__this->set_U3ClastFingerSplaysU3Ek__BackingField_54(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Skeleton_Source_set_poseChanged_m359037EAC8B53761892E89E13D0A1FCC31A222EC_inline (SteamVR_Action_Skeleton_Source_t54C9D1A9F7E1349F2A3CD0A8CC21C05EA4348C72 * __this, bool ___value0, const RuntimeMethod* method)
{
	{
		// public bool poseChanged { get; protected set; }
		bool L_0 = ___value0;
		__this->set_U3CposeChangedU3Ek__BackingField_55(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Source_set_inputSource_m9871BD4130FD7649FAF628248DCAEAE32B19236E_inline (SteamVR_Action_Source_t9D7428CDE39924074518EE6233D9A4FAB0C33CB0 * __this, int32_t ___value0, const RuntimeMethod* method)
{
	{
		// public SteamVR_Input_Sources inputSource { get; protected set; }
		int32_t L_0 = ___value0;
		__this->set_U3CinputSourceU3Ek__BackingField_0(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Source_Map_set_fullPath_m7532C77C62FC0CE955B4CF3581815398179B33EF_inline (SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17 * __this, String_t* ___value0, const RuntimeMethod* method)
{
	{
		// public string fullPath { get; protected set; }
		String_t* L_0 = ___value0;
		__this->set_U3CfullPathU3Ek__BackingField_0(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Source_Map_set_actionSet_mB40E957F963E0E3755C77F78B2094A06834B366F_inline (SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17 * __this, SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * ___value0, const RuntimeMethod* method)
{
	{
		// public SteamVR_ActionSet actionSet { get; protected set; }
		SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * L_0 = ___value0;
		__this->set_U3CactionSetU3Ek__BackingField_2(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Source_Map_set_direction_m952BA1C44972F3D692FB1E5A53B275A397B86F02_inline (SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17 * __this, int32_t ___value0, const RuntimeMethod* method)
{
	{
		// public SteamVR_ActionDirections direction { get; protected set; }
		int32_t L_0 = ___value0;
		__this->set_U3CdirectionU3Ek__BackingField_3(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR String_t* SteamVR_Action_Source_Map_get_fullPath_m59D22AC4A2ADB2B88085A1B676D686350CE1EE2A_inline (SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17 * __this, const RuntimeMethod* method)
{
	{
		// public string fullPath { get; protected set; }
		String_t* L_0 = __this->get_U3CfullPathU3Ek__BackingField_0();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Source_Map_set_handle_mD2434905F9AA79607DC207C7C7855E0DCDFAF417_inline (SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17 * __this, uint64_t ___value0, const RuntimeMethod* method)
{
	{
		// public ulong handle { get; protected set; }
		uint64_t L_0 = ___value0;
		__this->set_U3ChandleU3Ek__BackingField_1(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  SteamVR_Action_Vector2_Source_get_axis_mCEB6E517ED0E10BE513D22B23A69F1BE3D5DA2BA_inline (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, const RuntimeMethod* method)
{
	{
		// public Vector2 axis { get; protected set; }
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_0 = __this->get_U3CaxisU3Ek__BackingField_17();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  SteamVR_Action_Vector2_Source_get_lastAxis_mD0A1188D33FAD9AAB16CBCC0C073796C76616460_inline (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, const RuntimeMethod* method)
{
	{
		// public Vector2 lastAxis { get; protected set; }
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_0 = __this->get_U3ClastAxisU3Ek__BackingField_18();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  SteamVR_Action_Vector2_Source_get_delta_m19CFFF4B8014BD4ED43D0C5EDDD909A2F1DF1908_inline (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, const RuntimeMethod* method)
{
	{
		// public Vector2 delta { get; protected set; }
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_0 = __this->get_U3CdeltaU3Ek__BackingField_19();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  SteamVR_Action_Vector2_Source_get_lastDelta_mE21D07B848010D30A36B3C7338B5B615B81598AC_inline (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, const RuntimeMethod* method)
{
	{
		// public Vector2 lastDelta { get; protected set; }
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_0 = __this->get_U3ClastDeltaU3Ek__BackingField_20();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_Source_set_lastAxis_m28E7093728C01D3ABBF9871752E734D022101498_inline (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___value0, const RuntimeMethod* method)
{
	{
		// public Vector2 lastAxis { get; protected set; }
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_0 = ___value0;
		__this->set_U3ClastAxisU3Ek__BackingField_18(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_Source_set_lastDelta_m1140772DB3236B7C53E1B0723623DC3F564FC5BE_inline (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___value0, const RuntimeMethod* method)
{
	{
		// public Vector2 lastDelta { get; protected set; }
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_0 = ___value0;
		__this->set_U3ClastDeltaU3Ek__BackingField_20(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_Source_set_axis_m5714B37391AC92E5DB0BB3E1D600280B054A063D_inline (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___value0, const RuntimeMethod* method)
{
	{
		// public Vector2 axis { get; protected set; }
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_0 = ___value0;
		__this->set_U3CaxisU3Ek__BackingField_17(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Vector2_Source_set_delta_mE23EC73FCF0BFAAE785BFED2A3E3DF99A7A0A824_inline (SteamVR_Action_Vector2_Source_tE5EC7DB7562ACB7E65ED62D3321A0317906EB9E1 * __this, Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___value0, const RuntimeMethod* method)
{
	{
		// public Vector2 delta { get; protected set; }
		Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  L_0 = ___value0;
		__this->set_U3CdeltaU3Ek__BackingField_19(L_0);
		return;
	}
}
